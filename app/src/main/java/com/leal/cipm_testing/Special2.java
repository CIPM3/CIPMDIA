package com.leal.cipm_testing;

public class Special2 {

    String verbs[] = {"react ", "anticipate ", "assume ", "engage ", "intend ", "relate ",
            "settle ", "owe ", "confirm ", "shut ", "calculate ", "deliver ", "extend ",
            "investigate ", "qualify ", "celebrate ", "admit ", "adopt ", "announce ",
            "attend ", "commit ", "illustrate ", "pour ", "propose ", "submit ",
            "translate ", "suggest "
    };

    //verbo special base infinitivo esp
    String vsbc[] = {"reaccionar ", "anticipar ", "asumir ", "comprometer ", "intentar ",
            "relacionar ", "resolver ", "deber ", "confirmar ", "cerrar ", "calcular ",
            "entregar ", "extender ", "investigar ", "calificar ", "celebrar ", "admitir ",
            "adoptar ", "anunciar ", "atender ", "cometer ", "ilustrar ", "derramar ",
            "proponer ", "enviar ", "traducir ", "sugerir "
    };

    String verbscont[] = {"reacting ", "anticipating ", "assuming ", "engaging ", "intending ",
            "relating ", "settling ", "owing ", "confirming ", "shutting ", "calculating ",
            "delivering ", "extending ", "investigating ", "qualifying ", "celebrating ",
            "admitting ", "adopting ", "announcing ", "attending ", "committing ", "illustrating ",
            "pouring ", "proposing ", "submitting ", "translating ", "suggesting "
    };

    String verbconti[] = {"reaccionando ", "anticipando ", "asumiendo ", "comprometiendo ", "intentando ",
            "relacionando ", "resolviendo ", "debiendo ", "confirmando ", "cerrando ", "calculando ",
            "entregando ", "extendiendo ", "investigando ", "calificando ", "celebrando ", "admitiendo ",
            "adoptando ", "anunciando ", "atendiendo ", "cometiendo ", "ilustrando ", "derramando ",
            "proponiendo ", "enviando ", "traduciendo ", "sugiriendo "
    };

    // verbos participio esp
    String verbpartsp[] = {"reaccionado ", "anticipado ", "asumido ", "comprometido ", "intentado ",
            "relacionado ", "resuelto ", "debido ", "confirmado ", "cerrado ", "calculado ",
            "entregado ", "extendido ", "investigado ", "calificado ", "celebrado ", "admitido ",
            "adoptado ", "anunciado ", "atendido ", "cometido ", "ilustrado ", "derramado ",
            "propuesto ", "enviado ", "traducido ", "sugerido "
    };

    String verbpartspM[] = {"reaccionado ", "anticipado ", "asumido ", "comprometido ", "intentado ",
            "relacionado ", "resuelto ", "debido ", "confirmado ", "cerrado ", "calculado ",
            "entregado ", "extendido ", "investigado ", "calificado ", "celebrado ", "admitido ",
            "adoptado ", "anunciado ", "atendido ", "cometido ", "ilustrado ", "derramado ",
            "propuesto ", "enviado ", "traducido ", "sugerido "
    };

    String verbpartspF[] = {"reaccionada ", "anticipada ", "asumida ", "comprometida ", "intentada ",
            "relacionada ", "resuelta ", "debida ", "confirmada ", "cerrada ", "calculada ",
            "entregada ", "extendida ", "investigada ", "calificada ", "celebrada ", "admitida ",
            "adoptada ", "anunciada ", "atendida ", "cometida ", "ilustrada ", "derramada ",
            "propuesta ", "enviada ", "traducida ", "sugerida "
    };

    //verbos participio english
    String verbsparteng[] = {"reacted ", "anticipated ", "assumed ", "engaged ", "intended ",
            "related ", "settled ", "owed ", "confirmed ", "shut ", "calculated ", "delivered ",
            "extended ", "investigated ", "qualified ", "celebrated ", "admitted ", "adopted ",
            "announced ", "attended ", "committed ", "illustrated ", "poured ", "proposed ",
            "submitted ", "translated ", "suggested "
    };

    String vpspM[]={"reacted ", "anticipated ", "assumed ", "engaged ", "intended ",
            "related ", "settled ", "owed ", "confirmed ", "shut ", "calculated ", "delivered ",
            "extended ", "investigated ", "qualified ", "celebrated ", "admitted ", "adopted ",
            "announced ", "attended ", "committed ", "illustrated ", "poured ", "proposed ",
            "submitted ", "translated ", "suggested "
    };

    String vpspF[]={"reacted ", "anticipated ", "assumed ", "engaged ", "intended ",
            "related ", "settled ", "owed ", "confirmed ", "shut ", "calculated ", "delivered ",
            "extended ", "investigated ", "qualified ", "celebrated ", "admitted ", "adopted ",
            "announced ", "attended ", "committed ", "illustrated ", "poured ", "proposed ",
            "submitted ", "translated ", "suggested "
    };


    // verbos inglés tercera
    String verbs3[] = {"reacts ", "anticipates ", "assumes ", "engages ", "intends ", "relates ",
            "settles ", "owes ", "confirms ", "shuts ", "calculates ", "delivers ", "extends ",
            "investigates ", "qualifies ", "celebrates ", "admits ", "adopts ",
            "announces ", "attends ", "commits ", "illustrates ", "pours ", "proposes ",
            "submits ", "translates ", "suggests "
    };
   //verbos esp primera persona
    String v1[] = {"reaccione ", "anticipe ", "asuma ", "me comprometa ", "intente ", "me relacione ",
            "resuelva ", "deba ", "confirme ", "cierre ", "calcule ", "entregue ", "extienda ",
            "investigue ", "califique ", "célebre ", "admita ", "adopte ", "anuncie ", "atienda ",
            "cometa ", "ilustre ", "derrame ", "proponga ", "envíe ", "traduzca ", "sugiera "
    };


    //verbos esp segunda persona corregido
    String v2[] = {"reacciones ", "te anticipes ", "asumas ", "te comprometas ", "intentes ",
            "te relaciones ", "resuelvas ", "debas ", "confirmes ", "cierres ", "calcules ", "entregues ",
            "extiendas ", "investigues ", "califiques ", "celebres ", "admitas ", "adoptes ",
            "anuncies ", "atiendas ", "cometas ", "ilustres ", "derrames ", "propongas ", "envies ",
            "traduzcas ", "sugieras "
    };

    //verbos esp tercera persona singular
    String v3[] = {"reaccione ", "se anticipe ", "asuma ", "se comprometa ", "intente ", "se relacione ",
            "resuelva ", "deba ", "confirme ", "cierre ", "calcule ", "entregue ", "extienda ",
            "investigue ", "califique ", "célebre ", "admita ", "adopte ", "anuncie ", "atienda ",
            "cometa ", "ilustre ", "derrame ", "proponga ", "envíe ", "traduzca ", "sugiera "
    };


    //verbos esp cuarta persona
    String v4[] = {"reaccionen ", "se anticipen ", "asuman ", "se comprometan ", "intenten ", "se relacionen ",
            "resuelvan ", "deban ", "confirmen ", "cierren ", "calculen ", "entreguen ", "extiendan ",
            "investiguen ", "califiquen ", "celebren ", "admitan ", "adopten ", "anuncien ", "atiendan ",
            "cometan ", "ilustren ", "derramen ", "propongan ", "envíen ", "traduzcan ", "sugieran ",
    };

    //verbos esp cuarta persona
    String v5nos[] = {"reaccionemos ", "nos anticipemos ", "asumamos ", "nos comprometamos ",
            "intentemos ", "nos relacionemos ", "resolvamos ", "debamos ", "confirmemos ",
            "cerremos ", "calculemos ", "entreguemos ", "extendamos ", "investiguemos ", "califiquemos ",
            "celebremos ", "admitamos ", "adoptemos ", "anunciemos ", "atendamos ", "cometamos ",
            "ilustremos ", "derramemos ", "propongamos ", "enviemos ", "traduzcamos ", "sugerimos ",
    };


    // verbos especiales primera persona futuro
    String vsf1[] = {"reaccionaré ", "me anticiparé ", "asumiré ", "me comprometeré ",
            "intentaré ", "me relacionaré ", "resolveré ", "deberé ", "confirmaré ",
            "cerraré ", "calcularé ", "entregaré ", "extenderé ", "investigaré ", "calificaré ",
            "celebraré ", "admitiré ", "adoptaré ", "anunciaré ", "atenderé ", "cometeré ",
            "ilustraré ", "derramaré ", "proponeré ", "enviaré ", "traduciré ", "sugeriré ",
    };
    // verbos especiales segunda persona futuro
    String vsf2[] = {"reaccionarás ", "te anticiparás ", "asumirás ", "te comprometerás ",
            "intentarás ", "te relacionarás ", "resolverás ", "deberás ", "confirmarás ",
            "cerrarás ", "calcularás ", "entregarás ", "extenderás ", "investigarás ", "calificarás ",
            "celebrarás ", "admitirás ", "adoptarás ", "anunciarás ", "atenderás ", "cometerás ",
            "ilustrarás ", "derramarás ", "proponerás ", "enviarás ", "traducirás ", "sugerirás ",
    };

    // verbos especiales tercera persona futuro
    String vsf3[] = {"reaccionará ", "se anticipará ", "asumirá ", "se comprometerá ",
            "intentará ", "se relacionará ", "resolverá ", "deberá ", "confirmará ",
            "cerrará ", "calculará ", "entregará ", "extenderá ", "investigará ", "calificará ",
            "celebrará ", "admitirá ", "adoptará ", "anunciará ", "atenderá ", "cometerá ",
            "ilustrará ", "derramará ", "propondrá ", "enviará ", "traducirá ", "sugerirá "
    };

    // verbos especiales cuarta persona futuro (nosotros)
    String vsf4[] = {"reaccionaremos ", "nos anticiparemos ", "asumiremos ", "nos comprometeremos ",
            "intentaremos ", "nos relacionaremos ", "resolveremos ", "deberemos ", "confirmaremos ",
            "cerraremos ", "calcularemos ", "entregaremos ", "extenderemos ", "investigaremos ", "calificaremos ",
            "celebraremos ", "admitiremos ", "adoptaremos ", "anunciaremos ", "atenderemos ", "cometeremos ",
            "ilustraremos ", "derramaremos ", "propondremos ", "enviaremos ", "traduciremos ", "sugeriremos "
    };
    // verbos especiales quinta persona futuro (ustedes y ellos)
    String vsf5[] = {"reaccionarán ", "se anticiparán ", "asumirán ", "se comprometerán ",
            "intentarán ", "se relacionarán ", "resolverán ", "deberán ", "confirmarán ",
            "cerrarán ", "calcularán ", "entregarán ", "extenderán ", "investigarán ", "calificarán ",
            "celebrarán ", "admitirán ", "adoptarán ", "anunciarán ", "atenderán ", "cometerán ",
            "ilustrarán ", "derramarán ", "propondrán ", "enviarán ", "traducirán ", "sugerirán "
    };
    //---WOULD

    //verbo especial base would primer persona
    String[] vsb1w = {"reaccionaría ", "me anticiparía ", "asumiría ", "me comprometería ",
            "intentaría ", "me relacionaría ", "resolvería ", "debería ", "confirmaría ",
            "cerraría ", "calcularía ", "entregaría ", "extendería ", "investigaría ", "calificaría ",
            "celebraría ", "admitiría ", "adoptaría ", "anunciaría ", "atendería ", "cometería ",
            "ilustraría ", "derramaría ", "propondría ", "enviaría ", "traduciría ", "sugeriría "

    };

    //verbo especial base would segunda persona
    String vsb2w[] = {"reaccionarías ", "te anticiparías ", "asumirías ", "te comprometerías ",
            "intentarías ", "te relacionarías ", "resolverías ", "deberías ", "confirmarías ",
            "cerrarías ", "calcularías ", "entregarías ", "extenderías ", "investigarías ", "calificarías ",
            "celebrarías ", "admitirías ", "adoptarías ", "anunciarías ", "atenderías ", "cometerías ",
            "ilustrarías ", "derramarías ", "propondrías ", "enviarías ", "traducirías ", "sugerirías "
    };

    //verbo especial base would tercera persona
    String vsb3w[] = {"reaccionaría ", "se anticiparía ", "asumiría ", "se comprometería ",
            "intentaría ", "se relacionaría ", "resolvería ", "debería ", "confirmaría ",
            "cerraría ", "calcularía ", "entregaría ", "extendería ", "investigaría ", "calificaría ",
            "celebraría ", "admitiría ", "adoptaría ", "anunciaría ", "atendería ", "cometería ",
            "ilustraría ", "derramaría ", "propondría ", "enviaría ", "traduciría ", "sugeriría "

    };

    //verbo especial base would cuarta persona (ustedes)
    String vsb4w[] = {"reaccionarían ", "se anticiparían ", "asumirían ", "se comprometerían ",
            "intentarían ", "se relacionarían ", "resolverían ", "deberían ", "confirmarían ",
            "cerrarían ", "calcularían ", "entregarían ", "extenderían ", "investigarían ", "calificarían ",
            "celebrarían ", "admitirían ", "adoptarían ", "anunciarían ", "atenderían ", "cometerían ",
            "ilustrarían ", "derramarían ", "propondrían ", "enviarían ", "traducirían ", "sugerirían "

    };

    //verbo especial base would quinta persona (nosotros)
    String vsb5w[] = {"reaccionaríamos ", "nos anticiparíamos ", "asumiríamos ", "nos comprometeríamos ",
            "intentaríamos ", "nos relacionaríamos ", "resolveríamos ", "deberíamos ", "confirmaríamos ",
            "cerraríamos ", "calcularíamos ", "entregaríamos ", "extenderíamos ", "investigaríamos ", "calificaríamos ",
            "celebraríamos ", "admitiríamos ", "adoptaríamos ", "anunciaríamos ", "atenderíamos ", "cometeríamos ",
            "ilustraríamos ", "derramaríamos ", "propondríamos ", "enviaríamos ", "traduciríamos ", "sugeriríamos "
    };

// PASADOS
    //verbo especial inglés pasado
    String vsp[] ={"reacted ", "anticipated ", "assumed ", "engaged ", "intended ", "related ", "settled ",
            "owed ", "confirmed ", "shutted ", "calculated ", "delivered ", "extended ",
            "investigated ", "qualified ", "celebrated ", "admitted ", "adopted ",
            "announced ", "attended ", "committed ", "illustrated ", "poured ", "proposed ",
            "submitted ", "translated ", "suggested "
    };
    // verbo especial español pasado primera persona
    String vsp1[] ={"reaccioné ", "me anticipé ", "asumí ", "me comprometí ", "intenté ",
            "me relacioné ", "resolví ", "debí ", "confirmé ", "cerré ", "calculé ", "entregué ",
            "extendí ", "investigué ", "califiqué ", "celebré ", "admití ", "adopté ",
            "anuncié ", "atendí ", "cometí ", "ilustré ", "derramé ", "propuse ", "envié ",
            "traduje ", "sugerí "
    };
    // verbo especial español pasado segunda persona
    String vsp2[] ={"reaccionaste ", "te anticipaste ", "asumiste ", "te comprometiste ", "intentaste ",
            "te relacionaste ", "resolviste ", "debiste ", "confirmaste ", "cerraste ", "calculaste ", "entregaste ",
            "extendiste ", "investigaste ", "calificaste ", "celebraste ", "admitiste ", "adoptaste ",
            "anunciaste ", "atendiste ", "cometiste ", "ilustraste ", "derramaste ", "propusiste ", "enviaste ",
            "tradujiste ", "sugeriste "
    };
    // verbo especial español pasado tercera persona
    String vsp3[] ={"reaccionó ", "se anticipó ", "asumió ", "se comprometió ", "intentó ",
            "se relacionó ", "resolvió ", "debió ", "confirmó ", "cerró ", "calculó ", "entregó ",
            "extendió ", "investigó ", "calificó ", "celebró ", "admitió ", "adoptó ",
            "anunció ", "atendió ", "cometió ", "ilustró ", "derramó ", "propuso ", "envió ",
            "tradujo ", "sugirió "
    };
    // verbo especial español pasado cuarta persona (ellos)
    String vsp4[] ={"reaccionaron ", "se anticiparon ", "asumieron ", "se comprometieron ", "intentaron ",
            "se relacionaron ", "resolvieron ", "debieron ", "confirmaron ", "cerraron ", "calcularon ", "entregaron ",
            "extendieron ", "investigaron ", "calificaron ", "celebraron ", "admitieron ", "adoptaron ",
            "anunciaron ", "atendieron ", "cometieron ", "ilustraron ", "derramaron ", "propusieron ", "enviaron ",
            "tradujeron ", "sugirieron "
    };
    // verbo especial español pasado quinta persona (nosotros)
    String vsp5[] ={"reaccionamos ", "nos anticipamos ", "asumimos ", "nos comprometimos ", "intentamos ",
            "nos relacionamos ", "resolvimos ", "debimos ", "confirmamos ", "cerramos ", "calculamos ", "entregamos ",
            "extendimos ", "investigamos ", "calificamos ", "celebramos ", "admitimos ", "adoptamos ",
            "anunciamos ", "atendimos ", "cometimos ", "ilustramos ", "derramamos ", "propusimos ", "enviamos ",
            "tradujimos ", "sugerimos "
    };
    // verbo especial preterito imperfecto (aba, ía) primera persona
    String vsp1i[] ={"reaccionaba ", "me anticipaba ", "asumía ", "me comprometía ", "intentaba ",
            "me relacionaba ", "resolvía ", "debía ", "confirmaba ", "cerraba ", "calculaba ", "entregaba ",
            "extendía ", "investigaba ", "calificaba ", "celebraba ", "admitía ", "adoptaba ",
            "anunciaba ", "atendía ", "cometía ", "ilustraba ", "derramaba ", "proponía ", "enviaba ",
            "traducía ", "sugería "
    };
    // verbo especial preterito imperfecto (aba, ía) segunda persona
    String vsp2i[] ={"reaccionabas ", "te anticipabas ", "asumías ", "te comprometías ", "intentabas ",
            "te relacionabas ", "resolvías ", "debías ", "confirmabas ", "cerrabas ", "calculabas ", "entregabas ",
            "extendías ", "investigabas ", "calificabas ", "celebrabas ", "admitías ", "adoptabas ",
            "anunciabas ", "atendías ", "cometías ", "ilustrabas ", "derramabas ", "proponías ", "enviabas ",
            "traducías ", "sugerías "
    };
    // verbo especial preterito imperfecto (aba, ía) tercera persona
    String vsp3i[] ={"reaccionaba ", "se anticipaba ", "asumía ", "se comprometía ", "intentaba ",
            "se relacionaba ", "resolvía ", "debía ", "confirmaba ", "cerraba ", "calculaba ", "entregaba ",
            "extendía ", "investigaba ", "calificaba ", "celebraba ", "admitía ", "adoptaba ",
            "anunciaba ", "atendía ", "cometía ", "ilustraba ", "derramaba ", "proponía ", "enviaba ",
            "traducía ", "sugería "
    };
    // verbo especial preterito imperfecto (aba, ía) cuarta persona (ellos)
    String vsp4i[] ={"reaccionaban ", "se anticipaban ", "asumían ", "se comprometían ", "intentaban ",
            "se relacionaban ", "resolvían ", "debían ", "confirmaban ", "cerraban ", "calculaban ", "entregaban ",
            "extendían ", "investigaban ", "calificaban ", "celebraban ", "admitían ", "adoptaban ",
            "anunciaban ", "atendían ", "cometían ", "ilustraban ", "derramaban ", "proponían ", "enviaban ",
            "traducían ", "sugerían "
    };
    // verbo especial preterito imperfecto (aba, ía) quinta persona (nosotros)
    String vsp5i[] ={"reaccionabamos ", "nos anticipabamos ", "asumíamos ", "nos comprometíamos ", "intentabamos ",
            "nos relacionabamos ", "resolvíamos ", "debíamos ", "confirmabamos ", "cerrábamos ", "calculabamos ", "entregabamos ",
            "extendíamos ", "investigabamos ", "calificabamos ", "celebrabamos ", "admitíamos ", "adoptabamos ",
            "anunciabamos ", "atendíamos ", "cometíamos ", "ilustrabamos ", "derramabamos ", "proponíamos ", "enviabamos ",
            "traducíamos ", "sugeríamos "
    };

    String sodet[] = {"the disease ", "the event ", "the situation ", "the decision "};
    String sodete[] = {"la enfermedad ", "el evento ", "la situación ", "la decisión "};

    String soappr[] = {"the result ", "to people ", "the outcome "};
    String soacer[] = {"el resultado ", "a la gente ", "a la solución "};
    String sogrow[] = {"the position ", "the responsability "};
    String socrecer[] = {"la posición ", "la responsabilidad "};
    String soimpr[] = {"a conflict ", "the participants ", "the comunities "};
    String somejo[] = {"un conflicto ", "los participantes ", "las comunidades "};
    String sobegin[] = {"something ", "the objective ", "to survive "};
    String socomen[] = {"algo ", "el objetivo ", "sobrevivir "};
    String soconti[] = {"the categories ", "expenses ", "with technology "};
    String socontinu[] = {"las categorías ", "gastos ", "con tecnología "};
    String sowrite[] = {"things ", "the disagreement ", "the situation "};
    String soescri[] = {"cosas ", "el desacuerdo ", "la situación "};
    String soachiv[] = {"the money ", "the success "};
    String sologr[] = {"el dinero ", "el éxito "};
    String sodisc[] = {"the authenticity ", "the information ", "the growth "};
    String sodiscu[] = {"la autenticidad ", "la información ", "el crecimiento "};
    String sosolv[] = {"your mouth ", "the eyes ", "the factory "};
    String soresolv[] = {"tu boca ", "los ojos ", "la fábrica "};
    String soinvst[] = {"the time ", "the distance ", "the result "};
    String soinvert[] = {"el tiempo ", "la distancia ", "el resultado "};
    String soreduce[] = {"the package ", "the idea ", "the benefits "};
    String soreducir[] = {"el paquete ", "la idea ", "los beneficios "};
    String sospeak[] = {"the situation ", "the opinion ", "the territory "};
    String sohablar[] = {"la situación ", "la opinión ", "el territorio "};
    String soapply[] = {"the information ", "the results ", "the law "};
    String soaplic[] = {"la información ", "los resultados ", "la ley "};
    String sorec[] = {"the restaurant ", "to preliminars ", "the food "};
    String sorecom[] = {"el restaurante ", "a las preliminares ", "la comida "};
    String sovar[] = {"the birthday ", "the victory ", "the anniversary "};
    String sovariar[] = {"el cumpleaños ", "la victoria ", "el aniversario "};
    String sogener[] = {"the guilt ", "the verdict ", "the responsability "};
    String sogenerar[] = {"la culpa ", "el veredicto ", "la responsabilidad "};
    String soobtn[] = {"a pet ", "an ideology ", "a posture ", "the attitude "};
    String soobten[] = {"una mascota ", "una ideología ", "una postura ", "la actitud "};
    String soent[] = {"the competition ", "the outcome "};
    String soentra[] = {"la competencia ", "el resultado "};
    String soappre[] = {"the invitation ", "the party ", "the call "};
    String soapre[] = {"la invitación ", "la fiesta ", "el llamado "};
    String soman[] = {"the felony ", "the suicide "};
    String somane[] = {"la fechoría ", "el suicidio "};
    String soearn[] = {"the drawing ", "the idea ", "the wall "};
    String sogan[] = {"el dibujo ", "la idea ", "el muro "};
    String sorefl[] = {"the scotch ", "the water ", "my coffee "};
    String soreflejar[] = {"el escocés ", "el agua ", "mi café "};
    String soinsta[] = {"the marriage ", "the idea ", "the changes "};
    String soinstalar[] = {"el matrimonio ", "la idea ", "los cambios "};
    String soover[] = {"the email ", "the message "};
    String sosobre[] = {"el correo ", "el mensaje "};
    String soadj[] = {"the document ", "the languages ", "the movie "};
    String soaju[] = {"el documento ", "los idioma ", "la película "};
    String sorelieve[] = {"the restaurant ", "to the doctor ", "the school "};
    String soaliv[] = {"el restaurante ", "a el doctor ", "la escuela "};



    String advfrequ[] = {"siempre ", "constantemente ", "frecuentemente ",
            "generalmente ",
            "normalmente ", "ocasionalmente ", "seguido ", "raramente ",
            "regularmente ",
            "regularmente ", "usualmente ", "felizmente ", "temprano ", "tarde ", "diariamente ",
            "perfectamente ", "fácilmente ", "cuidadosamente ", "abiertamente ",
            "finalmente ", "peligrosamente ", "desesperadamente ", "ocasionalmente ",
            "seguido ", "calmadamente "
    };
    String frequadv[] = {
            "always ", "constantly ", "frequently ", "generally ",
            "normally ", "occasionally ", "often ", "rarely ", "regularly ",
            "regularly ",
            "usually ", "happily ", "early ", "late ", "daily ",
            "perfectly ", "easily ", "carefully ",
            "openly ", "finally ", "dangerouslly ", "desperately ",
            "occasionally ", "often ", "calmly "
    };

    // aqui en vez de poner frases preposicionales pusieron objetos
    String reactspecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man ",
                    "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ",
                    "with the woman ",
                    "with the dentist ", "with the mailman ", "with the fireman ", "with people ",
                    "with the people ", "with a nurse ",
                    "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
                    "with my friend ", "with my cousin ", "with the father ", "with the mother "}

    };
    String reaccionarspecial[][] = {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
                    "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
                    "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ",
                    "con gente ", "con la gente ",
                    "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ",
                    "con el maestro ", "con mi amigo ",
                    "con mi primo ", "con el papá ", "con la mamá "}
    };

    String anticipatespecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man ",
                    "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ",
                    "with the woman ",
                    "with the dentist ", "with the mailman ", "with the fireman ", "with people ",
                    "with the people ", "with a nurse ",
                    "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
                    "with my friend ", "with my cousin ", "with the father ", "with the mother "}
    };
    String anticiparspecial[][] = {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
                    "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
                    "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ",
                    "con gente ", "con la gente ",
                    "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ",
                    "con el maestro ", "con mi amigo ",
                    "con mi primo ", "con el papá ", "con la mamá "}
    };

    String assumespecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man ",
                    "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ",
                    "with the woman ",
                    "with the dentist ", "with the mailman ", "with the fireman ", "with people ",
                    "with the people ", "with a nurse ",
                    "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
                    "with my friend ", "with my cousin ", "with the father ", "with the mother "}
    };
    String asumirspecial[][] = {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
                    "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
                    "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ",
                    "con gente ", "con la gente ",
                    "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ",
                    "con el maestro ", "con mi amigo ",
                    "con mi primo ", "con el papá ", "con la mamá "}
    };

    String engagespecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man ",
                    "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ",
                    "with the woman ",
                    "with the dentist ", "with the mailman ", "with the fireman ", "with people ",
                    "with the people ", "with a nurse ",
                    "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
                    "with my friend ", "with my cousin ", "with the father ", "with the mother "}
    };
    String comprometerspecial[][] = {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
                    "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
                    "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ",
                    "con gente ", "con la gente ",
                    "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ",
                    "con el maestro ", "con mi amigo ",
                    "con mi primo ", "con el papá ", "con la mamá "}
    };

    String intendspecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man ",
                    "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ",
                    "with the woman ",
                    "with the dentist ", "with the mailman ", "with the fireman ", "with people ",
                    "with the people ", "with a nurse ",
                    "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
                    "with my friend ", "with my cousin ", "with the father ", "with the mother "}
             };
    String intentarspecial[][] = {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
                    "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
                    "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ",
                    "con gente ", "con la gente ",
                    "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ",
                    "con el maestro ", "con mi amigo ",
                    "con mi primo ", "con el papá ", "con la mamá "}
          };

    String relatespecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man ",
                    "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ",
                    "with the woman ",
                    "with the dentist ", "with the mailman ", "with the fireman ", "with people ",
                    "with the people ", "with a nurse ",
                    "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
                    "with my friend ", "with my cousin ", "with the father ", "with the mother "}
            };
    String relacionarspecial[][] = {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
                    "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
                    "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ",
                    "con gente ", "con la gente ",
                    "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ",
                    "con el maestro ", "con mi amigo ",
                    "con mi primo ", "con el papá ", "con la mamá "}
            };

    String settlespecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man ",
                    "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ",
                    "with the woman ",
                    "with the dentist ", "with the mailman ", "with the fireman ", "with people ",
                    "with the people ", "with a nurse ",
                    "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
                    "with my friend ", "with my cousin ", "with the father ", "with the mother "}
           };
    String resolverspecial[][] = {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
                    "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
                    "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ",
                    "con gente ", "con la gente ",
                    "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ",
                    "con el maestro ", "con mi amigo ",
                    "con mi primo ", "con el papá ", "con la mamá "}
            };

    String owespecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man ",
                    "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ",
                    "with the woman ",
                    "with the dentist ", "with the mailman ", "with the fireman ", "with people ",
                    "with the people ", "with a nurse ",
                    "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
                    "with my friend ", "with my cousin ", "with the father ", "with the mother "}
           };
    String deberspecial[][] = {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
                    "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
                    "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ",
                    "con gente ", "con la gente ",
                    "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ",
                    "con el maestro ", "con mi amigo ",
                    "con mi primo ", "con el papá ", "con la mamá "}
             };

    String confirmspecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man ",
                    "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ",
                    "with the woman ",
                    "with the dentist ", "with the mailman ", "with the fireman ", "with people ",
                    "with the people ", "with a nurse ",
                    "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
                    "with my friend ", "with my cousin ", "with the father ", "with the mother "}
        };
    String confirmarspecial[][] = {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
                    "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
                    "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ",
                    "con gente ", "con la gente ",
                    "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ",
                    "con el maestro ", "con mi amigo ",
                    "con mi primo ", "con el papá ", "con la mamá "}
         };

    String calculatespecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man ",
                    "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ",
                    "with the woman ",
                    "with the dentist ", "with the mailman ", "with the fireman ", "with people ",
                    "with the people ", "with a nurse ",
                    "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
                    "with my friend ", "with my cousin ", "with the father ", "with the mother "}
         };
    String calcularspecial[][] = {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
                    "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
                    "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ",
                    "con gente ", "con la gente ",
                    "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ",
                    "con el maestro ", "con mi amigo ",
                    "con mi primo ", "con el papá ", "con la mamá "}
       };

    String deliverspecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man ",
                    "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ",
                    "with the woman ",
                    "with the dentist ", "with the mailman ", "with the fireman ", "with people ",
                    "with the people ", "with a nurse ",
                    "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
                    "with my friend ", "with my cousin ", "with the father ", "with the mother "}
             };
    String entregarspecial[][] = {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
                    "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
                    "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ",
                    "con gente ", "con la gente ",
                    "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ",
                    "con el maestro ", "con mi amigo ",
                    "con mi primo ", "con el papá ", "con la mamá "}
          };

    String extendspecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man ",
                    "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ",
                    "with the woman ",
                    "with the dentist ", "with the mailman ", "with the fireman ", "with people ",
                    "with the people ", "with a nurse ",
                    "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
                    "with my friend ", "with my cousin ", "with the father ", "with the mother "}
       };
    String extenderspecial[][] = {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
                    "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
                    "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ",
                    "con gente ", "con la gente ",
                    "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ",
                    "con el maestro ", "con mi amigo ",
                    "con mi primo ", "con el papá ", "con la mamá "}
         };

    String investigatespecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man ",
                    "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ",
                    "with the woman ",
                    "with the dentist ", "with the mailman ", "with the fireman ", "with people ",
                    "with the people ", "with a nurse ",
                    "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
                    "with my friend ", "with my cousin ", "with the father ", "with the mother "}
     };
    String investigarspecial[][] = {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
                    "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
                    "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ",
                    "con gente ", "con la gente ",
                    "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ",
                    "con el maestro ", "con mi amigo ",
                    "con mi primo ", "con el papá ", "con la mamá "}
     };

    String qualifyspecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man ",
                    "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ",
                    "with the woman ",
                    "with the dentist ", "with the mailman ", "with the fireman ", "with people ",
                    "with the people ", "with a nurse ",
                    "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
                    "with my friend ", "with my cousin ", "with the father ", "with the mother "}
      };
    String calificarspecial[][] = {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
                    "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
                    "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ",
                    "con gente ", "con la gente ",
                    "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ",
                    "con el maestro ", "con mi amigo ",
                    "con mi primo ", "con el papá ", "con la mamá "}
           };

    String celebratespecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man ",
                    "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ",
                    "with the woman ",
                    "with the dentist ", "with the mailman ", "with the fireman ", "with people ",
                    "with the people ", "with a nurse ",
                    "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
                    "with my friend ", "with my cousin ", "with the father ", "with the mother "}
          };
    String celebrarspecial[][] = {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
                    "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
                    "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ",
                    "con gente ", "con la gente ",
                    "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ",
                    "con el maestro ", "con mi amigo ",
                    "con mi primo ", "con el papá ", "con la mamá "}
      };

    String admitspecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man ",
                    "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ",
                    "with the woman ",
                    "with the dentist ", "with the mailman ", "with the fireman ", "with people ",
                    "with the people ", "with a nurse ",
                    "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
                    "with my friend ", "with my cousin ", "with the father ", "with the mother "}
     };
    String admitirspecial[][] = {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
                    "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
                    "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ",
                    "con gente ", "con la gente ",
                    "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ",
                    "con el maestro ", "con mi amigo ",
                    "con mi primo ", "con el papá ", "con la mamá "}
        };

    String adoptspecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man ",
                    "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ",
                    "with the woman ",
                    "with the dentist ", "with the mailman ", "with the fireman ", "with people ",
                    "with the people ", "with a nurse ",
                    "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
                    "with my friend ", "with my cousin ", "with the father ", "with the mother "}
    };
    String adoptarspecial[][] = {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
                    "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
                    "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ",
                    "con gente ", "con la gente ",
                    "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ",
                    "con el maestro ", "con mi amigo ",
                    "con mi primo ", "con el papá ", "con la mamá "}
    };

    String announcespecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man ",
                    "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ",
                    "with the woman ",
                    "with the dentist ", "with the mailman ", "with the fireman ", "with people ",
                    "with the people ", "with a nurse ",
                    "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
                    "with my friend ", "with my cousin ", "with the father ", "with the mother "}
          };
    String anunciarspecial[][] = {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
                    "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
                    "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ",
                    "con gente ", "con la gente ",
                    "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ",
                    "con el maestro ", "con mi amigo ",
                    "con mi primo ", "con el papá ", "con la mamá "}
       };

    String attendspecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man ",
                    "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ",
                    "with the woman ",
                    "with the dentist ", "with the mailman ", "with the fireman ", "with people ",
                    "with the people ", "with a nurse ",
                    "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
                    "with my friend ", "with my cousin ", "with the father ", "with the mother "}
       };
    String atenderspecial[][] = {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
                    "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
                    "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ",
                    "con gente ", "con la gente ",
                    "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ",
                    "con el maestro ", "con mi amigo ",
                    "con mi primo ", "con el papá ", "con la mamá "}
          };

    String commitspecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man ",
                    "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ",
                    "with the woman ",
                    "with the dentist ", "with the mailman ", "with the fireman ", "with people ",
                    "with the people ", "with a nurse ",
                    "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
                    "with my friend ", "with my cousin ", "with the father ", "with the mother "}
    };
    String cometerspecial[][] = {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
                    "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
                    "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ",
                    "con gente ", "con la gente ",
                    "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ",
                    "con el maestro ", "con mi amigo ",
                    "con mi primo ", "con el papá ", "con la mamá "}
    };

    String illustratespecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man ",
                    "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ",
                    "with the woman ",
                    "with the dentist ", "with the mailman ", "with the fireman ", "with people ",
                    "with the people ", "with a nurse ",
                    "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
                    "with my friend ", "with my cousin ", "with the father ", "with the mother "}
    };
    String ilustrarspecial[][] = {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
                    "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
                    "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ",
                    "con gente ", "con la gente ",
                    "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ",
                    "con el maestro ", "con mi amigo ",
                    "con mi primo ", "con el papá ", "con la mamá "}
    };

    String proposespecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man ",
                    "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ",
                    "with the woman ",
                    "with the dentist ", "with the mailman ", "with the fireman ", "with people ",
                    "with the people ", "with a nurse ",
                    "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
                    "with my friend ", "with my cousin ", "with the father ", "with the mother "}
             };
    String proponerspecial[][] = {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
                    "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
                    "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ",
                    "con gente ", "con la gente ",
                    "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ",
                    "con el maestro ", "con mi amigo ",
                    "con mi primo ", "con el papá ", "con la mamá "}
       };

    String submitspecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man ",
                    "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ",
                    "with the woman ",
                    "with the dentist ", "with the mailman ", "with the fireman ", "with people ",
                    "with the people ", "with a nurse ",
                    "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
                    "with my friend ", "with my cousin ", "with the father ", "with the mother "}
        };
    String enviarspecial[][] = {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
                    "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
                    "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ",
                    "con gente ", "con la gente ",
                    "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ",
                    "con el maestro ", "con mi amigo ",
                    "con mi primo ", "con el papá ", "con la mamá "}
       };

    String translatespecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man ",
                    "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ",
                    "with the woman ",
                    "with the dentist ", "with the mailman ", "with the fireman ", "with people ",
                    "with the people ", "with a nurse ",
                    "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
                    "with my friend ", "with my cousin ", "with the father ", "with the mother "}
    };
    String traducirspecial[][] = {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
                    "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
                    "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ",
                    "con gente ", "con la gente ",
                    "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ",
                    "con el maestro ", "con mi amigo ",
                    "con mi primo ", "con el papá ", "con la mamá "}
    };

    String suggestspecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man ",
                    "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ",
                    "with the woman ",
                    "with the dentist ", "with the mailman ", "with the fireman ", "with people ",
                    "with the people ", "with a nurse ",
                    "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
                    "with my friend ", "with my cousin ", "with the father ", "with the mother "}
        };
    String sugerirspecial[][] = {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
                    "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
                    "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ",
                    "con gente ", "con la gente ",
                    "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ",
                    "con el maestro ", "con mi amigo ",
                    "con mi primo ", "con el papá ", "con la mamá "}
     };

    String shutspecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man ",
                    "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ",
                    "with the woman ",
                    "with the dentist ", "with the mailman ", "with the fireman ", "with people ",
                    "with the people ", "with a nurse ",
                    "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
                    "with my friend ", "with my cousin ", "with the father ", "with the mother "}
      };
    String cerrarspecial[][] = {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
                    "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
                    "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ",
                    "con gente ", "con la gente ",
                    "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ",
                    "con el maestro ", "con mi amigo ",
                    "con mi primo ", "con el papá ", "con la mamá "}
     };

    String pourspecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man ",
                    "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ",
                    "with the woman ",
                    "with the dentist ", "with the mailman ", "with the fireman ", "with people ",
                    "with the people ", "with a nurse ",
                    "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
                    "with my friend ", "with my cousin ", "with the father ", "with the mother "}
    };
    String derramarspecial[][] = {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
                    "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
                    "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ",
                    "con gente ", "con la gente ",
                    "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ",
                    "con el maestro ", "con mi amigo ",
                    "con mi primo ", "con el papá ", "con la mamá "}
    };

    int rand;

    int rand1;
    int rand2;
    int rand3;
    int rand4;
    int rand5;
    int rand6;
    int rand7;
    int rand8;
    int rand9;
    int rand10;
    int rand11;
    int rand12;
    int rand13;
    int rand14;
    int rand15;
    int rand16;
    int rand17;
    int rand18;
    int rand19;
    int rand20;
    int rand21;
    int rand22;
    int rand23;
    int rand24;
    int rand25;
    int rand26;
    int rand27;

    int rd1;
    int rd1s;
    int rd2;
    int rd2s;
    int rd3;
    int rd3s;
    int rd4;
    int rd4s;
    int rd5;
    int rd5s;
    int rd6;
    int rd6s;
    int rd7;
    int rd7s;
    int rd8;
    int rd8s;
    int rd9;
    int rd9s;
    int rd10;
    int rd10s;
    int rd11;
    int rd11s;
    int rd12;
    int rd12s;
    int rd13;
    int rd13s;
    int rd14;
    int rd14s;
    int rd15;
    int rd15s;
    int rd16;
    int rd16s;
    int rd17;
    int rd17s;
    int rd18;
    int rd18s;
    int rd19;
    int rd19s;
    int rd20;
    int rd20s;
    int rd21;
    int rd21s;
    int rd22;
    int rd22s;
    int rd23;
    int rd23s;
    int rd24;
    int rd24s;
    int rd25;
    int rd25s;
    int rd26;
    int rd26s;
    int rd27;
    int rd27s;
    int rd28;
    int rd28s;

    String arraySodEsp;
    String arraySodEng;

    String arrayEsp;
    String arrayEng;

    public void randstarter(){
        rand1 = (int) (Math.random() * sodete.length);
        rand2 = (int) (Math.random() * soappr.length);
        rand3 = (int) (Math.random() * sogrow.length);
        rand4 = (int) (Math.random() * soimpr.length);
        rand5 = (int) (Math.random() * sobegin.length);
        rand6 = (int) (Math.random() * socontinu.length);
        rand7 = (int) (Math.random() * sowrite.length);
        rand8 = (int) (Math.random() * soachiv.length);
        rand9 = (int) (Math.random() * sodisc.length);
        rand10 = (int) (Math.random() * sosolv.length);
        rand11 = (int) (Math.random() * soinvst.length);
        rand12 = (int) (Math.random() * soreduce.length);
        rand13 = (int) (Math.random() * sospeak.length);
        rand14 = (int) (Math.random() * soapply.length);
        rand15 = (int) (Math.random() * sorec.length);
        rand16 = (int) (Math.random() * sovar.length);
        rand17 = (int) (Math.random() * sogener.length);
        rand18 = (int) (Math.random() * soobtn.length);
        rand19 = (int) (Math.random() * soent.length);
        rand20 = (int) (Math.random() * soapre.length);
        rand21 = (int) (Math.random() * soman.length);
        rand22 = (int) (Math.random() * soearn.length);
        rand23 = (int) (Math.random() * sorefl.length);
        rand24 = (int) (Math.random() * soinsta.length);
        rand25 = (int) (Math.random() * soover.length);
        rand26 = (int) (Math.random() * soadj.length);
        rand27 = (int) (Math.random() * sorelieve.length);

        //dif 4
        rd1 = (int) (Math.random() * reactspecial.length);
        rd1s = (int) (Math.random() * reactspecial[rd1].length);
        rd2 = (int) (Math.random() * anticipatespecial.length);
        rd2s = (int) (Math.random() * anticipatespecial[rd2].length);
        rd3 = (int) (Math.random() * assumespecial.length);
        rd3s = (int) (Math.random() * assumespecial[rd3].length);
        rd4 = (int) (Math.random() * engagespecial.length);
        rd4s = (int) (Math.random() * engagespecial[rd4].length);
        rd5 = (int) (Math.random() * intendspecial.length);
        rd5s = (int) (Math.random() * intendspecial[rd5].length);
        rd6 = (int) (Math.random() * relatespecial.length);
        rd6s = (int) (Math.random() * relatespecial[rd6].length);
        rd7 = (int) (Math.random() * settlespecial.length);
        rd7s = (int) (Math.random() * settlespecial[rd7].length);
        rd8 = (int) (Math.random() * owespecial.length);
        rd8s = (int) (Math.random() * owespecial[rd8].length);
        rd9 = (int) (Math.random() * confirmspecial.length);
        rd9s = (int) (Math.random() * confirmspecial[rd9].length);
        rd10 = (int) (Math.random() * calculatespecial.length);
        rd10s = (int) (Math.random() * calculatespecial[rd10].length);
        rd11 = (int) (Math.random() * deliverspecial.length);
        rd11s = (int) (Math.random() * deliverspecial[rd11].length);
        rd12 = (int) (Math.random() * extendspecial.length);
        rd12s = (int) (Math.random() * extendspecial[rd12].length);
        rd13 = (int) (Math.random() * investigatespecial.length);
        rd13s = (int) (Math.random() * investigatespecial[rd13].length);
        rd14 = (int) (Math.random() * qualifyspecial.length);
        rd14s = (int) (Math.random() * qualifyspecial[rd14].length);
        rd15 = (int) (Math.random() * celebratespecial.length);
        rd15s = (int) (Math.random() * celebratespecial[rd15].length);
        rd16 = (int) (Math.random() * admitspecial.length);
        rd16s = (int) (Math.random() * admitspecial[rd16].length);
        rd17 = (int) (Math.random() * adoptspecial.length);
        rd17s = (int) (Math.random() * adoptspecial[rd17].length);
        rd18 = (int) (Math.random() * announcespecial.length);
        rd18s = (int) (Math.random() * announcespecial[rd18].length);
        rd19 = (int) (Math.random() * attendspecial.length);
        rd19s = (int) (Math.random() * attendspecial[rd19].length);
        rd20 = (int) (Math.random() * commitspecial.length);
        rd20s = (int) (Math.random() * commitspecial[rd20].length);
        rd21 = (int) (Math.random() * illustratespecial.length);
        rd21s = (int) (Math.random() * illustratespecial[rd21].length);
        rd22 = (int) (Math.random() * proposespecial.length);
        rd22s = (int) (Math.random() * proposespecial[rd22].length);
        rd23 = (int) (Math.random() * submitspecial.length);
        rd23s = (int) (Math.random() * submitspecial[rd23].length);
        rd24 = (int) (Math.random() * translatespecial.length);
        rd24s = (int) (Math.random() * translatespecial[rd24].length);
        rd25 = (int) (Math.random() * suggestspecial.length);
        rd25s = (int) (Math.random() * suggestspecial[rd25].length);
        rd26 = (int) (Math.random() * shutspecial.length);
        rd26s = (int) (Math.random() * shutspecial[rd26].length);
        rd27 = (int) (Math.random() * pourspecial.length);
        rd27s = (int) (Math.random() * pourspecial[rd27].length);
    }

    public void arraySod(){
        String temp = verbs[rand];

        switch (temp){
            case "react ":
                arraySodEsp = sodete[rand1];
                arraySodEng = sodet[rand1];
                break;

            case "anticipate ":
                arraySodEsp =  soacer[rand2];
                arraySodEng = soappr[rand2];
                break;

            case "assume ":
                arraySodEsp =   socrecer[rand3];
                arraySodEng = sogrow[rand3];
                break;

            case "engage ":
                arraySodEsp = somejo[rand4];
                arraySodEng = soimpr[rand4];
                break;

            case "intend ":
                arraySodEsp = socomen[rand5];
                arraySodEng = sobegin[rand5];
                break;

            case "relate ":
                arraySodEsp = socontinu[rand6];
                arraySodEng = soconti[rand6];
                break;

            case "settle ":
                arraySodEsp = soescri[rand7];
                arraySodEng = sowrite[rand7];
                break;

            case "owe ":
                arraySodEsp = sologr[rand8];
                arraySodEng = soachiv[rand8];
                break;

            case "confirm ":
                arraySodEsp = sodiscu[rand9];
                arraySodEng = sodisc[rand9];
                break;

            case "calculate ":
                arraySodEsp = soresolv[rand10];
                arraySodEng = sosolv[rand10];
                break;

            case "deliver ":
                arraySodEsp = soinvert[rand11];
                arraySodEng = soinvst[rand11];
                break;

            case "extend ":
                arraySodEsp = soreducir[rand12];
                arraySodEng = soreduce[rand12];
                break;

            case "investigate ":
                arraySodEsp = sohablar[rand13];
                arraySodEng = sospeak[rand13];
                break;

            case "qualify ":
                arraySodEsp = soaplic[rand14];
                arraySodEng = soapply[rand14];
                break;

            case "celebrate ":
                arraySodEsp = sorecom[rand15];
                arraySodEng = sorec[rand15];
                break;

            case "admit ":
                arraySodEsp = sovariar[rand16];
                arraySodEng = sovar[rand16];
                break;

            case "adopt ":
                arraySodEsp = sogenerar[rand17];
                arraySodEng = sogener[rand17];
                break;

            case "announce ":
                arraySodEsp = soobten[rand18];
                arraySodEng = soobtn[rand18];
                break;

            case "attend ":
                arraySodEsp = soentra[rand19];
                arraySodEng = soent[rand19];
                break;

            case "commit ":
                arraySodEsp = soapre[rand20];
                arraySodEng = soappre[rand20];
                break;

            case "illustrate ":
                arraySodEsp = somane[rand21];
                arraySodEng = soman[rand21];
                break;

            case "propose ":
                arraySodEsp = sogan[rand22];
                arraySodEng = soearn[rand22];
                break;

            case "submit ":
                arraySodEsp = soreflejar[rand23];
                arraySodEng = sorefl[rand23];
                break;

            case "translate ":
                arraySodEsp = soinstalar[rand24];
                arraySodEng = soinsta[rand24];
                break;

            case "suggest ":
                arraySodEsp = sosobre[rand25];
                arraySodEng = soover[rand25];
                break;

            case "shut ":
                arraySodEsp = soaju[rand26];
                arraySodEng = soadj[rand26];
                break;

            case "pour ":
                arraySodEsp = soaliv[rand27];
                arraySodEng = sorelieve[rand27];
                break;
        }
    }

    public void arraySpe(){
        String temp = verbs[rand];

        switch (temp){
            case "react ":
                arrayEsp = reaccionarspecial[rd1][rd1s];
                arrayEng = reactspecial[rd1][rd1s];
                break;

            case "anticipate ":
                arrayEsp = anticiparspecial[rd2][rd2s];
                arrayEng = anticipatespecial[rd2][rd2s];
                break;

            case "assume ":
                arrayEsp = asumirspecial[rd3][rd3s];
                arrayEng = assumespecial[rd3][rd3s];
                break;

            case "engage ":
                arrayEsp = comprometerspecial[rd4][rd4s];
                arrayEng = engagespecial[rd4][rd4s];
                break;

            case "intend ":
                arrayEsp = intentarspecial[rd5][rd5s];
                arrayEng = intendspecial[rd5][rd5s];
                break;

            case "relate ":
                arrayEsp = relacionarspecial[rd6][rd6s];
                arrayEng = relatespecial[rd6][rd6s];
                break;

            case "settle ":
                arrayEsp = resolverspecial[rd7][rd7s];
                arrayEng = settlespecial[rd7][rd7s];
                break;

            case "owe ":
                arrayEsp = deberspecial[rd8][rd8s];
                arrayEng = owespecial[rd8][rd8s];
                break;

            case "confirm ":
                arrayEsp = confirmarspecial[rd9][rd9s];
                arrayEng = confirmspecial[rd9][rd9s];
                break;

            case "calculate ":
                arrayEsp = calcularspecial[rd10][rd10s];
                arrayEng = calculatespecial[rd10][rd10s];
                break;

            case "deliver ":
                arrayEsp = entregarspecial[rd11][rd11s];
                arrayEng = deliverspecial[rd11][rd11s];
                break;

            case "extend ":
                arrayEsp = extenderspecial[rd12][rd12s];
                arrayEng = extendspecial[rd12][rd12s];
                break;

            case "investigate ":
                arrayEsp = investigarspecial[rd13][rd13s];
                arrayEng = investigatespecial[rd13][rd13s];
                break;

            case "qualify ":
                arrayEsp = calificarspecial[rd14][rd14s];
                arrayEng = qualifyspecial[rd14][rd14s];
                break;

            case "celebrate ":
                arrayEsp = celebrarspecial[rd15][rd15s];
                arrayEng = celebratespecial[rd15][rd15s];
                break;

            case "admit ":
                arrayEsp = admitirspecial[rd16][rd16s];
                arrayEng = admitspecial[rd16][rd16s];
                break;

            case "adopt ":
                arrayEsp = adoptarspecial[rd17][rd17s];
                arrayEng = adoptspecial[rd17][rd17s];
                break;

            case "announce ":
                arrayEsp = anunciarspecial[rd18][rd18s];
                arrayEng = announcespecial[rd18][rd18s];
                break;

            case "attend ":
                arrayEsp = atenderspecial[rd19][rd19s];
                arrayEng = attendspecial[rd19][rd19s];
                break;

            case "commit ":
                arrayEsp = cometerspecial[rd20][rd20s];
                arrayEng = commitspecial[rd20][rd20s];
                break;

            case "illustrate ":
                arrayEsp = ilustrarspecial[rd21][rd21s];
                arrayEng = illustratespecial[rd21][rd21s];
                break;

            case "propose ":
                arrayEsp = proponerspecial[rd22][rd22s];
                arrayEng = proposespecial[rd22][rd22s];
                break;

            case "submit ":
                arrayEsp = enviarspecial[rd23][rd23s];
                arrayEng = submitspecial[rd23][rd23s];
                break;

            case "translate ":
                arrayEsp = traducirspecial[rd24][rd24s];
                arrayEng = translatespecial[rd24][rd24s];
                break;

            case "suggest ":
                arrayEsp = sugerirspecial[rd25][rd25s];
                arrayEng = suggestspecial[rd25][rd25s];
                break;

            case "shut ":
                arrayEsp = cerrarspecial[rd26][rd26s];
                arrayEng = shutspecial[rd26][rd26s];
                break;

            case "pour ":
                arrayEsp = derramarspecial[rd27][rd27s];
                arrayEng = pourspecial[rd27][rd27s];
                break;
        }
    }

    // spanish phrase and english phrase
    String sp1;
    String eng1;
    String sp2;   // spanish phrase segunda persona esp
    String eng2;  // english phrase segunda persona eng
    String sp3;
    String eng3;
    String sp3ella;
    String eng3she;
    String sp3eso;
    String sp3it;
    String sp4;
    String eng4;
    String sp5;
    String eng5;
    String sp6;
    String eng6;
    String sp7;
    String eng7;
    String eng12;
    String eng22;
    String eng32;
    String eng3she2;
    String sp3it2;
    String eng42;
    String eng52;

    //DIFICULTAD 1
    //PRESENTES
    public void GenPresSimp1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo " + v1[rand];
                        eng1 = "I " + verbs[rand];

                        sp2 = "tú " + v2[rand];
                        eng2 = "you " + verbs[rand];

                        sp3 = "él " + v3[rand];
                        eng3 = "he " + verbs3[rand];

                        sp3ella = "ella " + v3[rand];
                        eng3she = "she " + verbs3[rand];

                        sp3eso = "eso " + v3[rand];
                        sp3it = "it " + verbs3[rand];

                        sp4 = "ellos " + v4[rand];
                        eng4 = "they " + verbs[rand];

                        sp5 = "nosotros " + v5nos[rand];
                        eng5 = "we " + verbs[rand];

                        break;
                    case 1:
                        sp1 = "yo " + "no " + v1[rand];
                        eng1 = "I " + "don't " + verbs[rand];

                        sp2 = "tú " + "no " + v2[rand];
                        eng2 = "you " + "don't " + verbs[rand];

                        sp3 = "él " + "no " + v3[rand];
                        eng3 = "he " + "doesn't " + verbs[rand];

                        sp3ella = "ella " + "no " + v3[rand];
                        eng3she = "she " + "doesn't " + verbs[rand];

                        sp3eso = "eso " + "no " + v3[rand];
                        sp3it = "it " + "doesn't " + verbs[rand];

                        sp4 = "ellos " + "no " + v4[rand];
                        eng4 = "they " + "don't " + verbs[rand];

                        sp5 = "nosotros " + "no " + v5nos[rand];
                        eng5 = "we " + "don't " + verbs[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenPresCont1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo estoy " + verbconti[rand];
                        eng1 = "I am " + verbscont[rand];
                        eng12 = "I'm " + verbscont[rand];

                        sp2 = "tú estás " + verbconti[rand];
                        eng2 = "you are " + verbscont[rand];
                        eng22 = "you're " + verbscont[rand];

                        sp3 = "él está " + verbconti[rand];
                        eng3 = "he is " + verbscont[rand];
                        eng32 = "he's " + verbscont[rand];

                        sp3ella = "ella está " + verbconti[rand];
                        eng3she = "she is " + verbscont[rand];
                        eng3she2 = "she's " + verbscont[rand];

                        sp3eso = "eso está " + verbconti[rand];
                        sp3it = "it is " + verbscont[rand];
                        sp3it2 = "it's " + verbscont[rand];

                        sp4 = "ellos están " + verbconti[rand];
                        eng4 = "they are " + verbscont[rand];
                        eng42 = "they're " + verbscont[rand];

                        sp5 = "nosotros estamos " + verbconti[rand];
                        eng5 = "we are " + verbscont[rand];
                        eng52 = "we're " + verbscont[rand];

                        break;
                    case 1:
                        sp1 = "yo " + "no estoy " + verbconti[rand];
                        eng1 = "I " + "am not " + verbscont[rand];
                        eng12 = "I'm not " + verbscont[rand];

                        sp2 = "tú " + "no estás " + verbconti[rand];
                        eng2 = "you're not " + verbscont[rand];
                        eng22 = "you " + "aren't " + verbscont[rand];

                        sp3 = "él " + "no está " + verbconti[rand];
                        eng3 = "he's not " + verbscont[rand];
                        eng32 = "he " + "isn't " + verbscont[rand];

                        sp3ella = "ella " + "no está " + verbconti[rand];
                        eng3she = "she's not " + verbscont[rand];
                        eng3she2 = "she " + "isn't " + verbscont[rand];

                        sp3eso = "eso " + "no está " + verbconti[rand];
                        sp3it = "it's not " + verbscont[rand];
                        sp3it2 = "it " + "isn't " + verbscont[rand];

                        sp4 = "ellos " + "no están " + verbconti[rand];
                        eng4 = "they're not " + verbscont[rand];
                        eng42 = "they " + "aren't " + verbscont[rand];

                        sp5 = "nosotros " + "no están " + verbconti[rand];
                        eng5 = "we're not " + verbscont[rand];
                        eng52 = "we " + "aren't " + verbscont[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenPresPerf1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo he " + verbpartsp[rand];
                        eng1 = "I have " + verbsparteng[rand];
                        eng12 = "I've " + verbsparteng[rand];

                        sp2 = "tú has " + verbpartsp[rand];
                        eng2 = "you have " + verbsparteng[rand];
                        eng22 = "you've " + verbsparteng[rand];

                        sp3 = "él ha " + verbpartsp[rand];
                        eng3 = "he has " + verbsparteng[rand];
                        eng32 = "he's " + verbsparteng[rand];

                        sp3ella = "ella ha " + verbpartsp[rand];
                        eng3she = "she has " + verbsparteng[rand];
                        eng3she2 = "she's " + verbsparteng[rand];

                        sp3eso = "eso ha " + verbpartsp[rand];
                        sp3it = "it has " + verbsparteng[rand];
                        sp3it2 = "it's " + verbsparteng[rand];

                        sp4 = "ellos han " + verbpartsp[rand];
                        eng4 = "they have " + verbsparteng[rand];
                        eng42 = "they've " + verbsparteng[rand];

                        sp5 = "nosotros hemos " + verbpartsp[rand];
                        eng5 = "we have " + verbsparteng[rand];
                        eng52 = "we've " + verbsparteng[rand];
                        break;
                    case 1:
                        sp1 = "yo no he " + verbpartsp[rand];
                        eng1 = "I have not " + verbsparteng[rand];
                        eng12 = "I haven't " + verbsparteng[rand];

                        sp2 = "tú no has " + verbpartsp[rand];
                        eng2 = "you have not " + verbsparteng[rand];
                        eng22 = "you haven't " + verbsparteng[rand];

                        sp3 = "él no ha " + verbpartsp[rand];
                        eng3 = "he has not " + verbsparteng[rand];
                        eng32 = "he hasn't " + verbsparteng[rand];

                        sp3ella = "ella no ha " + verbpartsp[rand];
                        eng3she = "she has not " + verbsparteng[rand];
                        eng3she2 = "she hasn't " + verbsparteng[rand];

                        sp3eso = "eso no ha " + verbpartsp[rand];
                        sp3it = "it has not " + verbsparteng[rand];
                        sp3it2 = "it hasn't " + verbsparteng[rand];

                        sp4 = "ellos no han " + verbpartsp[rand];
                        eng4 = "they have not " + verbsparteng[rand];
                        eng42 = "they haven't " + verbsparteng[rand];

                        sp5 = "nosotros no hemos " + verbpartsp[rand];
                        eng5 = "we have not " + verbsparteng[rand];
                        eng52 = "we haven't " + verbsparteng[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenPresPerfCont1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo he estado " + verbconti[rand];
                        eng1 = "I have been " + verbscont[rand];

                        sp2 = "tú has estado " + verbconti[rand];
                        eng2 = "you have been " + verbscont[rand];

                        sp3 = "él ha estado " + verbconti[rand];
                        eng3 = "he has been " + verbscont[rand];

                        sp3ella = "ella ha estado " + verbconti[rand];
                        eng3she = "she has been " + verbscont[rand];

                        sp3eso = "eso ha estado " + verbconti[rand];
                        sp3it = "it has been " + verbscont[rand];

                        sp4 = "ellos han estado " + verbconti[rand];
                        eng4 = "they have been " + verbscont[rand];

                        sp5 = "nosotros hemos estado " + verbconti[rand];
                        eng5 = "we have been " + verbscont[rand];

                        break;
                    case 1:
                        sp1 = "yo no he estado " + verbconti[rand];
                        eng1 = "I haven't been " + verbscont[rand];

                        sp2 = "tú no has estado " + verbconti[rand];
                        eng2 = "you haven't been " + verbscont[rand];

                        sp3 = "él no ha estado " + verbconti[rand];
                        eng3 = "he hasn't been " + verbscont[rand];

                        sp3ella = "ella no ha estado " + verbconti[rand];
                        eng3she = "she hasn't been " + verbscont[rand];

                        sp3eso = "eso no ha estado " + verbconti[rand];
                        sp3it = "it hasn't been " + verbscont[rand];

                        sp4 = "ellos no han estado " + verbconti[rand];
                        eng4 = "they haven't been " + verbscont[rand];

                        sp5 = "nosotros no hemos estado " + verbconti[rand];
                        eng5 = "we haven't been " + verbscont[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023

    //PASADOS
    public void GenPassSimp1() {
        int neg = (int) (Math.random() * 4);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo " + vsp1[rand];
                        eng1 = "I " + vsp[rand];

                        sp2 = "tú " + vsp2[rand];
                        eng2 = "you " + vsp[rand];

                        sp3 = "él " + vsp3[rand];
                        eng3 = "he " + vsp[rand];

                        sp3ella = "ella " + vsp3[rand];
                        eng3she = "she " + vsp[rand];

                        sp3eso = "eso " + vsp3[rand];
                        sp3it = "it " + vsp[rand];

                        sp4 = "ellos " + vsp4[rand];
                        eng4 = "they " + vsp[rand];

                        sp5 = "nosotros " + vsp5[rand];
                        eng5 = "we " + vsp[rand];

                        break;
                    case 1:
                        sp1 = "yo " + "no " + vsp1[rand];
                        eng1 = "I " + "didn't " + verbs[rand];

                        sp2 = "tú " + "no " + vsp2[rand];
                        eng2 = "you " + "didn't " + verbs[rand];

                        sp3 = "él " + "no " + vsp3[rand];
                        eng3 = "he " + "didn't " + verbs[rand];

                        sp3ella = "ella " + "no " + vsp3[rand];
                        eng3she = "she " + "didn't " + verbs[rand];

                        sp3eso = "eso " + "no " + vsp3[rand];
                        sp3it = "it " + "didn't " + verbs[rand];

                        sp4 = "ellos " + "no " + vsp4[rand];
                        eng4 = "they " + "didn't " + verbs[rand];

                        sp5 = "nosotros " + "no " + vsp5[rand];
                        eng5 = "we " + "didn't " + verbs[rand];
                        break;
                    case 2:
                        sp1 = "yo " + vsp1i[rand];
                        eng1 = "I " + vsp[rand];

                        sp2 = "tú " + vsp2i[rand];
                        eng2 = "you " + vsp[rand];

                        sp3 = "él " + vsp3i[rand];
                        eng3 = "he " + vsp[rand];

                        sp3ella = "ella " + vsp3i[rand];
                        eng3she = "she " + vsp[rand];

                        sp3eso = "eso " + vsp3i[rand];
                        sp3it = "it " + vsp[rand];

                        sp4 = "ellos " + vsp4i[rand];
                        eng4 = "they " + vsp[rand];

                        sp5 = "nosotros " + vsp5i[rand];
                        eng5 = "we " + vsp[rand];

                        break;
                    case 3:
                        sp1 = "yo " + "no " + vsp1i[rand];
                        eng1 = "I " + "didn't " + verbs[rand];

                        sp2 = "tú " + "no " + vsp2i[rand];
                        eng2 = "you " + "didn't " + verbs[rand];

                        sp3 = "él " + "no " + vsp3i[rand];
                        eng3 = "he " + "didn't " + verbs[rand];

                        sp3ella = "ella " + "no " + vsp3i[rand];
                        eng3she = "she " + "didn't " + verbs[rand];

                        sp3eso = "eso " + "no " + vsp3i[rand];
                        sp3it = "it " + "didn't " + verbs[rand];

                        sp4 = "ellos " + "no " + vsp4i[rand];
                        eng4 = "they " + "didn't " + verbs[rand];

                        sp5 = "nosotros " + "no " + vsp5i[rand];
                        eng5 = "we " + "didn't " + verbs[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenPassCont1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo estaba " + verbconti[rand];
                        eng1 = "I was " + verbscont[rand];
                        eng12 = "I was " + verbscont[rand];

                        sp2 = "tú estabas " + verbconti[rand];
                        eng2 = "you were " + verbscont[rand];
                        eng22 = "you were " + verbscont[rand];

                        sp3 = "él estaba " + verbconti[rand];
                        eng3 = "he was " + verbscont[rand];
                        eng32 = "he was " + verbscont[rand];

                        sp3ella = "ella estaba " + verbconti[rand];
                        eng3she = "she was " + verbscont[rand];
                        eng3she2 = "she was " + verbscont[rand];

                        sp3eso = "eso estaba " + verbconti[rand];
                        sp3it = "it was " + verbscont[rand];
                        sp3it2 = "it was " + verbscont[rand];

                        sp4 = "ellos estaban " + verbconti[rand];
                        eng4 = "they were " + verbscont[rand];
                        eng42 = "they were " + verbscont[rand];

                        sp5 = "nosotros estabamos " + verbconti[rand];
                        eng5 = "we were " + verbscont[rand];
                        eng52 = "we were " + verbscont[rand];
                        break;
                    case 1:
                        sp1 = "yo " + "no estaba " + verbconti[rand];
                        eng1 = "I " + "was not " + verbscont[rand];
                        eng12 = "I " + "wasn't " + verbscont[rand];

                        sp2 = "tú " + "no estabas " + verbconti[rand];
                        eng2 = "you " + "were not " + verbscont[rand];
                        eng22 = "you " + "weren't " + verbscont[rand];

                        sp3 = "él " + "no estaba " + verbconti[rand];
                        eng3 = "he " + "was not " + verbscont[rand];
                        eng32 = "he " + "wasn't " + verbscont[rand];

                        sp3ella = "ella " + "no estaba " + verbconti[rand];
                        eng3she = "she " + "was not " + verbscont[rand];
                        eng3she2 = "she " + "wasn't " + verbscont[rand];

                        sp3eso = "eso " + "no estaba " + verbconti[rand];
                        sp3it = "it " + "was not " + verbscont[rand];
                        sp3it2 = "it " + "wasn't " + verbscont[rand];

                        sp4 = "ellos " + "no estaban " + verbconti[rand];
                        eng4 = "they " + "were not " + verbscont[rand];
                        eng42 = "they " + "weren't " + verbscont[rand];

                        sp5 = "nosotros " + "no estabamos " + verbconti[rand];
                        eng5 = "we " + "were not " + verbscont[rand];
                        eng52 = "we " + "weren't " + verbscont[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenPassPerf1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo había " + verbpartsp[rand];
                        eng1 = "I had " + verbsparteng[rand];
                        eng12 = "I'd " + verbsparteng[rand];

                        sp2 = "tú habías " + verbpartsp[rand];
                        eng2 = "you had " + verbsparteng[rand];
                        eng22 = "you'd " + verbsparteng[rand];

                        sp3 = "él había " + verbpartsp[rand];
                        eng3 = "he had " + verbsparteng[rand];
                        eng32 = "he'd " + verbsparteng[rand];

                        sp3ella = "ella había " + verbpartsp[rand];
                        eng3she = "she had " + verbsparteng[rand];
                        eng3she2 = "she'd " + verbsparteng[rand];

                        sp3eso = "eso había " + verbpartsp[rand];
                        sp3it = "it had " + verbsparteng[rand];
                        sp3it2 = "it'd " + verbsparteng[rand];

                        sp4 = "ellos habían " + verbpartsp[rand];
                        eng4 = "they had " + verbsparteng[rand];
                        eng42 = "they'd " + verbsparteng[rand];

                        sp5 = "nosotros habíamos " + verbpartsp[rand];
                        eng5 = "we had " + verbsparteng[rand];
                        eng52 = "we'd " + verbsparteng[rand];

                        break;
                    case 1:
                        sp1 = "yo no había " + verbpartsp[rand];
                        eng1 = "I had not " + verbsparteng[rand];
                        eng12 = "I hadn't " + verbsparteng[rand];

                        sp2 = "tú no habías " + verbpartsp[rand];
                        eng2 = "you had not " + verbsparteng[rand];
                        eng22 = "you hadn't " + verbsparteng[rand];

                        sp3 = "él no había " + verbpartsp[rand];
                        eng3 = "he had not " + verbsparteng[rand];
                        eng32 = "he hadn't " + verbsparteng[rand];

                        sp3ella = "ella no había " + verbpartsp[rand];
                        eng3she = "she had not " + verbsparteng[rand];
                        eng3she2 = "she hadn't " + verbsparteng[rand];

                        sp3eso = "eso no había " + verbpartsp[rand];
                        sp3it = "it had not " + verbsparteng[rand];
                        sp3it2 = "it hadn't " + verbsparteng[rand];

                        sp4 = "ellos no habían " + verbpartsp[rand];
                        eng4 = "they had not " + verbsparteng[rand];
                        eng42 = "they hadn't " + verbsparteng[rand];

                        sp5 = "nosotros no habíamos " + verbpartsp[rand];
                        eng5 = "we had not " + verbsparteng[rand];
                        eng52 = "we hadn't " + verbsparteng[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenPassPerfCont1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo había estado " + verbconti[rand];
                        eng1 = "I had been " + verbscont[rand];

                        sp2 = "tú habías estado " + verbconti[rand];
                        eng2 = "you had been " + verbscont[rand];

                        sp3 = "él había estado " + verbconti[rand];
                        eng3 = "he had been " + verbscont[rand];

                        sp3ella = "ella había estado " + verbconti[rand];
                        eng3she = "she had been " + verbscont[rand];

                        sp3eso = "eso había estado " + verbconti[rand];
                        sp3it = "it had been " + verbscont[rand];

                        sp4 = "ellos habían estado " + verbconti[rand];
                        eng4 = "they had been " + verbscont[rand];

                        sp5 = "nosotros habíamos estado " + verbconti[rand];
                        eng5 = "we had been " + verbscont[rand];

                        break;
                    case 1:
                        sp1 = "yo no había estado " + verbconti[rand];
                        eng1 = "I hadn't been " + verbscont[rand];

                        sp2 = "tú no habías estado " + verbconti[rand];
                        eng2 = "you hadn't been " + verbscont[rand];

                        sp3 = "él no había estado " + verbconti[rand];
                        eng3 = "he hadn't been " + verbscont[rand];

                        sp3ella = "ella no había estado " + verbconti[rand];
                        eng3she = "she hadn't been " + verbscont[rand];

                        sp3eso = "eso no había estado " + verbconti[rand];
                        sp3it = "it hadn't been " + verbscont[rand];

                        sp4 = "ellos no habían estado " + verbconti[rand];
                        eng4 = "they hadn't been " + verbscont[rand];

                        sp5 = "nosotros no habíamos estado " + verbconti[rand];
                        eng5 = "we hadn't been " + verbscont[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023

    //FUTUROS
    public void GenFutSimp1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo " + vsf1[rand];
                        eng1 = "I will " + verbs[rand];

                        sp2 = "tú " + vsf2[rand];
                        eng2 = "you will " + verbs[rand];

                        sp3 = "él " + vsf3[rand];
                        eng3 = "he will " + verbs[rand];

                        sp3ella = "ella " + vsf3[rand];
                        eng3she = "she will " + verbs[rand];

                        sp3eso = "eso " + vsf3[rand];
                        sp3it = "it will " + verbs[rand];

                        sp4 = "ellos " + vsf5[rand];
                        eng4 = "they will " + verbs[rand];

                        sp5 = "nosotros " + vsf4[rand];
                        eng5 = "we will " + verbs[rand];

                        break;
                    case 1:
                        sp1 = "yo " + "no " + vsf1[rand];
                        eng1 = "I " + "won't " + verbs[rand];

                        sp2 = "tú " + "no " + vsf2[rand];
                        eng2 = "you " + "won't " + verbs[rand];

                        sp3 = "él " + "no " + vsf3[rand];
                        eng3 = "he " + "won't " + verbs[rand];

                        sp3ella = "ella " + "no " + vsf3[rand];
                        eng3she = "she " + "won't " + verbs[rand];

                        sp3eso = "eso " + "no " + vsf3[rand];
                        sp3it = "it " + "won't " + verbs[rand];

                        sp4 = "ellos " + "no " + vsf5[rand];
                        eng4 = "they " + "won't " + verbs[rand];

                        sp5 = "nosotros " + "no " + vsf4[rand];
                        eng5 = "we " + "won't " + verbs[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenFutCont1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo estaré " + verbconti[rand];
                        eng1 = "I will be " + verbscont[rand];
                        eng12 = "I'll be " + verbscont[rand];

                        sp2 = "tú estarás " + verbconti[rand];
                        eng2 = "you will be " + verbscont[rand];
                        eng22 = "you'll be " + verbscont[rand];

                        sp3 = "él estará " + verbconti[rand];
                        eng3 = "he will be " + verbscont[rand];
                        eng32 = "he'll be " + verbscont[rand];

                        sp3ella = "ella estará " + verbconti[rand];
                        eng3she = "she will be " + verbscont[rand];
                        eng3she2 = "she'll be " + verbscont[rand];

                        sp3eso = "eso estará " + verbconti[rand];
                        sp3it = "it will be " + verbscont[rand];
                        sp3it2 = "it'll be " + verbscont[rand];

                        sp4 = "ellos estarán " + verbconti[rand];
                        eng4 = "they will be " + verbscont[rand];
                        eng42 = "they'll be " + verbscont[rand];

                        sp5 = "nosotros estaremos " + verbconti[rand];
                        eng5 = "we will be " + verbscont[rand];
                        eng52 = "we'll be " + verbscont[rand];

                        break;
                    case 1:
                        sp1 = "yo " + "no estaré " + verbconti[rand];
                        eng1 = "I " + "will not be " + verbscont[rand];
                        eng12 = "I " + "won't be " + verbscont[rand];

                        sp2 = "tú " + "no estarás " + verbconti[rand];
                        eng2 = "you " + "will not be " + verbscont[rand];
                        eng22 = "you " + "won't be " + verbscont[rand];

                        sp3 = "él " + "no estará " + verbconti[rand];
                        eng3 = "he " + "will not be " + verbscont[rand];
                        eng32 = "he " + "won't be " + verbscont[rand];

                        sp3ella = "ella " + "no estará " + verbconti[rand];
                        eng3she = "she " + "will not be " + verbscont[rand];
                        eng3she2 = "she " + "won't be " + verbscont[rand];

                        sp3eso = "eso " + "no estará " + verbconti[rand];
                        sp3it = "it " + "will not be " + verbscont[rand];
                        sp3it2 = "it " + "won't be " + verbscont[rand];

                        sp4 = "ellos " + "no estarán " + verbconti[rand];
                        eng4 = "they " + "will not be " + verbscont[rand];
                        eng42 = "they " + "won't be " + verbscont[rand];

                        sp5 = "nosotros " + "no estaremos " + verbconti[rand];
                        eng5 = "we " + "will not be " + verbscont[rand];
                        eng52 = "we " + "won't be " + verbscont[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenFutPerf1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo habré " + verbpartsp[rand];
                        eng1 = "I will have " + verbsparteng[rand];
                        eng12 = "I'll have " + verbsparteng[rand];

                        sp2 = "tú habrás " + verbpartsp[rand];
                        eng2 = "you will have " + verbsparteng[rand];
                        eng22 = "you'll have " + verbsparteng[rand];

                        sp3 = "él habrá " + verbpartsp[rand];
                        eng3 = "he will have " + verbsparteng[rand];
                        eng32 = "he'll have " + verbsparteng[rand];

                        sp3ella = "ella habrá " + verbpartsp[rand];
                        eng3she = "she will have " + verbsparteng[rand];
                        eng3she2 = "she'll have " + verbsparteng[rand];

                        sp3eso = "eso habrá " + verbpartsp[rand];
                        sp3it = "it will have " + verbsparteng[rand];
                        sp3it2 = "it'll have " + verbsparteng[rand];

                        sp4 = "ellos habrán " + verbpartsp[rand];
                        eng4 = "they will have " + verbsparteng[rand];
                        eng42 = "they'll have " + verbsparteng[rand];

                        sp5 = "nosotros habremos " + verbpartsp[rand];
                        eng5 = "we will have " + verbsparteng[rand];
                        eng52 = "we'll have " + verbsparteng[rand];
                        break;
                    case 1:
                        sp1 = "yo no habré " + verbpartsp[rand];
                        eng1 = "I will not have " + verbsparteng[rand];
                        eng12 = "I won't have " + verbsparteng[rand];

                        sp2 = "tú no habrás " + verbpartsp[rand];
                        eng2 = "you will not have " + verbsparteng[rand];
                        eng22 = "you won't have " + verbsparteng[rand];

                        sp3 = "él no habrá " + verbpartsp[rand];
                        eng3 = "he will not have " + verbsparteng[rand];
                        eng32 = "he won't have " + verbsparteng[rand];

                        sp3ella = "ella no habrá " + verbpartsp[rand];
                        eng3she = "she will not have " + verbsparteng[rand];
                        eng3she2 = "she won't have " + verbsparteng[rand];

                        sp3eso = "eso no habrá " + verbpartsp[rand];
                        sp3it = "it will not have " + verbsparteng[rand];
                        sp3it2 = "it won't have " + verbsparteng[rand];

                        sp4 = "ellos no habrán " + verbpartsp[rand];
                        eng4 = "they will not have " + verbsparteng[rand];
                        eng42 = "they won't have " + verbsparteng[rand];

                        sp5 = "nosotros no habremos " + verbpartsp[rand];
                        eng5 = "we will not have " + verbsparteng[rand];
                        eng52 = "we won't have " + verbsparteng[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenFutPerfCont1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo habré estado " + verbconti[rand];
                        eng1 = "I will have been " + verbscont[rand];

                        sp2 = "tú habrás estado " + verbconti[rand];
                        eng2 = "you will have been " + verbscont[rand];

                        sp3 = "él habrá estado " + verbconti[rand];
                        eng3 = "he will have been " + verbscont[rand];

                        sp3ella = "ella habrá estado " + verbconti[rand];
                        eng3she = "she will have been " + verbscont[rand];

                        sp3eso = "eso habrá estado " + verbconti[rand];
                        sp3it = "it will have been " + verbscont[rand];

                        sp4 = "ellos habrán estado " + verbconti[rand];
                        eng4 = "they will have been " + verbscont[rand];

                        sp5 = "nosotros habremos estado " + verbconti[rand];
                        eng5 = "we will have been " + verbscont[rand];

                        break;
                    case 1:
                        sp1 = "yo no habré estado " + verbconti[rand];
                        eng1 = "I won't have been " + verbscont[rand];

                        sp2 = "tú no habrás estado " + verbconti[rand];
                        eng2 = "you won't have been " + verbscont[rand];

                        sp3 = "él no habrá estado " + verbconti[rand];
                        eng3 = "he won't have been " + verbscont[rand];

                        sp3ella = "ella no habrá estado " + verbconti[rand];
                        eng3she = "she won't have been " + verbscont[rand];

                        sp3eso = "eso no habrá estado " + verbconti[rand];
                        sp3it = "it won't have been " + verbscont[rand];

                        sp4 = "ellos no habrán estado " + verbconti[rand];
                        eng4 = "they won't have been " + verbscont[rand];

                        sp5 = "nosotros no habremos estado " + verbconti[rand];
                        eng5 = "we won't have been " + verbscont[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023

    // WOULD
    public void GenWouldSimp1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo " + vsb1w[rand];
                        eng1 = "I would " + verbs[rand];

                        sp2 = "tú " + vsb2w[rand];
                        eng2 = "you would " + verbs[rand];

                        sp3 = "él " + vsb3w[rand];
                        eng3 = "he would " + verbs[rand];

                        sp3ella = "ella " + vsb3w[rand];
                        eng3she = "she would " + verbs[rand];

                        sp3eso = "eso " + vsb3w[rand];
                        sp3it = "it would " + verbs[rand];

                        sp4 = "ellos " + vsb4w[rand];
                        eng4 = "they would " + verbs[rand];

                        sp5 = "nosotros " + vsb5w[rand];
                        eng5 = "we would " + verbs[rand];

                        break;
                    case 1:
                        sp1 = "yo " + "no " + vsb1w[rand];
                        eng1 = "I " + "wouldn't " + verbs[rand];

                        sp2 = "tú " + "no " + vsb2w[rand];
                        eng2 = "you " + "wouldn't " + verbs[rand];

                        sp3 = "él " + "no " + vsb3w[rand];
                        eng3 = "he " + "wouldn't " + verbs[rand];

                        sp3ella = "ella " + "no " + vsb3w[rand];
                        eng3she = "she " + "wouldn't " + verbs[rand];

                        sp3eso = "eso " + "no " + vsb3w[rand];
                        sp3it = "it " + "wouldn't " + verbs[rand];

                        sp4 = "ellos " + "no " + vsb4w[rand];
                        eng4 = "they " + "wouldn't " + verbs[rand];

                        sp5 = "nosotros " + "no " + vsb5w[rand];
                        eng5 = "we " + "wouldn't " + verbs[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenWouldCont1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo estaría " + verbconti[rand];
                        eng1 = "I would be " + verbscont[rand];
                        eng12 = "I'd be " + verbscont[rand];

                        sp2 = "tú estarías " + verbconti[rand];
                        eng2 = "you would be " + verbscont[rand];
                        eng22 = "you'd be " + verbscont[rand];

                        sp3 = "él estaría " + verbconti[rand];
                        eng3 = "he would be " + verbscont[rand];
                        eng32 = "he'd be " + verbscont[rand];

                        sp3ella = "ella estaría " + verbconti[rand];
                        eng3she = "she would be " + verbscont[rand];
                        eng3she2 = "she'd be " + verbscont[rand];

                        sp3eso = "eso estaría " + verbconti[rand];
                        sp3it = "it would be " + verbscont[rand];
                        sp3it2 = "it'd be " + verbscont[rand];

                        sp4 = "ellos estarían " + verbconti[rand];
                        eng4 = "they would be " + verbscont[rand];
                        eng42 = "they'd be " + verbscont[rand];

                        sp5 = "nosotros estaríamos " + verbconti[rand];
                        eng5 = "we would be " + verbscont[rand];
                        eng52 = "we'd be " + verbscont[rand];

                        break;
                    case 1:
                        sp1 = "yo " + "no estaría " + verbconti[rand];
                        eng1 = "I " + "would not be " + verbscont[rand];
                        eng12 = "I " + "wouldn't be " + verbscont[rand];

                        sp2 = "tú " + "no estarías " + verbconti[rand];
                        eng2 = "you " + "would not be " + verbscont[rand];
                        eng22 = "you " + "wouldn't be " + verbscont[rand];

                        sp3 = "él " + "no estaría " + verbconti[rand];
                        eng3 = "he " + "would not be " + verbscont[rand];
                        eng32 = "he " + "wouldn't be " + verbscont[rand];

                        sp3ella = "ella " + "no estaría " + verbconti[rand];
                        eng3she = "she " + "would not be " + verbscont[rand];
                        eng3she2 = "she " + "wouldn't be " + verbscont[rand];

                        sp3eso = "eso " + "no estaría " + verbconti[rand];
                        sp3it = "it " + "would not be " + verbscont[rand];
                        sp3it2 = "it " + "wouldn't be " + verbscont[rand];

                        sp4 = "ellos " + "no estarían " + verbconti[rand];
                        eng4 = "they " + "would not be " + verbscont[rand];
                        eng42 = "they " + "wouldn't be " + verbscont[rand];

                        sp5 = "nosotros " + "no estaríamos " + verbconti[rand];
                        eng5 = "we " + "would not be " + verbscont[rand];
                        eng52 = "we " + "wouldn't be " + verbscont[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenWouldPerf1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo habría " + verbpartsp[rand];
                        eng1 = "I would have " + verbsparteng[rand];
                        eng12 = "I'd have " + verbsparteng[rand];

                        sp2 = "tú habrías " + verbpartsp[rand];
                        eng2 = "you would have " + verbsparteng[rand];
                        eng22 = "you'd have " + verbsparteng[rand];

                        sp3 = "él habría " + verbpartsp[rand];
                        eng3 = "he would have " + verbsparteng[rand];
                        eng32 = "he'd have " + verbsparteng[rand];

                        sp3ella = "ella habría " + verbpartsp[rand];
                        eng3she = "she would have " + verbsparteng[rand];
                        eng3she2 = "she'd have " + verbsparteng[rand];

                        sp3eso = "eso habría " + verbpartsp[rand];
                        sp3it = "it would have " + verbsparteng[rand];
                        sp3it2 = "it'd have " + verbsparteng[rand];

                        sp4 = "ellos habrían " + verbpartsp[rand];
                        eng4 = "they would have " + verbsparteng[rand];
                        eng42 = "they'd have " + verbsparteng[rand];

                        sp5 = "nosotros habríamos " + verbpartsp[rand];
                        eng5 = "we would have " + verbsparteng[rand];
                        eng52 = "we'd have " + verbsparteng[rand];
                        break;
                    case 1:
                        sp1 = "yo no habría " + verbpartsp[rand];
                        eng1 = "I would not have " + verbsparteng[rand];
                        eng12 = "I wouldn't have " + verbsparteng[rand];

                        sp2 = "tú no habrías " + verbpartsp[rand];
                        eng2 = "you would not have " + verbsparteng[rand];
                        eng22 = "you wouldn't have " + verbsparteng[rand];

                        sp3 = "él no habría " + verbpartsp[rand];
                        eng3 = "he would not have " + verbsparteng[rand];
                        eng32 = "he wouldn't have " + verbsparteng[rand];

                        sp3ella = "ella no habría " + verbpartsp[rand];
                        eng3she = "she would not have " + verbsparteng[rand];
                        eng3she2 = "she wouldn't have " + verbsparteng[rand];

                        sp3eso = "eso no habría " + verbpartsp[rand];
                        sp3it = "it would not have " + verbsparteng[rand];
                        sp3it2 = "it wouldn't have " + verbsparteng[rand];

                        sp4 = "ellos no habrían " + verbpartsp[rand];
                        eng4 = "they would not have " + verbsparteng[rand];
                        eng42 = "they wouldn't have " + verbsparteng[rand];

                        sp5 = "nosotros no habríamos " + verbpartsp[rand];
                        eng5 = "we would not have " + verbsparteng[rand];
                        eng52 = "we wouldn't have " + verbsparteng[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenWouldPerfCont1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo habría estado " + verbconti[rand];
                        eng1 = "I would have been " + verbscont[rand];

                        sp2 = "tú habrías estado " + verbconti[rand];
                        eng2 = "you would have been " + verbscont[rand];

                        sp3 = "él habría estado " + verbconti[rand];
                        eng3 = "he would have been " + verbscont[rand];

                        sp3ella = "ella habría estado " + verbconti[rand];
                        eng3she = "she would have been " + verbscont[rand];

                        sp3eso = "eso habría estado " + verbconti[rand];
                        sp3it = "it would have been " + verbscont[rand];

                        sp4 = "ellos habrían estado " + verbconti[rand];
                        eng4 = "they would have been " + verbscont[rand];

                        sp5 = "nosotros habríamos estado " + verbconti[rand];
                        eng5 = "we would have been " + verbscont[rand];

                        break;
                    case 1:
                        sp1 = "yo no habría estado " + verbconti[rand];
                        eng1 = "I wouldn't have been " + verbscont[rand];

                        sp2 = "tú no habrías estado " + verbconti[rand];
                        eng2 = "you wouldn't have been " + verbscont[rand];

                        sp3 = "él no habría estado " + verbconti[rand];
                        eng3 = "he wouldn't have been " + verbscont[rand];

                        sp3ella = "ella no habría estado " + verbconti[rand];
                        eng3she = "she wouldn't have been " + verbscont[rand];

                        sp3eso = "eso no habría estado " + verbconti[rand];
                        sp3it = "it wouldn't have been " + verbscont[rand];

                        sp4 = "ellos no habrían estado " + verbconti[rand];
                        eng4 = "they wouldn't have been " + verbscont[rand];

                        sp5 = "nosotros no habríamos estado " + verbconti[rand];
                        eng5 = "we wouldn't have been " + verbscont[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023

    //SHOULD
    public void GenShouldSimp1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo debería " + vsbc[rand];
                        eng1 = "I should " + verbs[rand];

                        sp2 = "tú deberías " + vsbc[rand];
                        eng2 = "you should " + verbs[rand];

                        sp3 = "él debería " + vsbc[rand];
                        eng3 = "he should " + verbs[rand];

                        sp3ella = "ella debería " + vsbc[rand];
                        eng3she = "she should " + verbs[rand];

                        sp3eso = "eso debería " + vsbc[rand];
                        sp3it = "it should " + verbs[rand];

                        sp4 = "ellos deberían " + vsbc[rand];
                        eng4 = "they should " + verbs[rand];

                        sp5 = "nosotros deberíamos " + vsbc[rand];
                        eng5 = "we should " + verbs[rand];

                        break;
                    case 1:
                        sp1 = "yo " + "no debería " + vsbc[rand];
                        eng1 = "I " + "shouldn't " + verbs[rand];

                        sp2 = "tú " + "no deberías " + vsbc[rand];
                        eng2 = "you " + "shouldn't " + verbs[rand];

                        sp3 = "él " + "no debería " + vsbc[rand];
                        eng3 = "he " + "shouldn't " + verbs[rand];

                        sp3ella = "ella " + "no debería " + vsbc[rand];
                        eng3she = "she " + "shouldn't " + verbs[rand];

                        sp3eso = "eso " + "no debería " + vsbc[rand];
                        sp3it = "it " + "shouldn't " + verbs[rand];

                        sp4 = "ellos " + "no deberían " + vsbc[rand];
                        eng4 = "they " + "shouldn't " + verbs[rand];

                        sp5 = "nosotros " + "no deberíamos " + vsbc[rand];
                        eng5 = "we " + "shouldn't " + verbs[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenShouldCont1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo debería estar " + verbconti[rand];
                        eng1 = "I should be " + verbscont[rand];
                        eng12 = "I'd be " + verbscont[rand];

                        sp2 = "tú deberías estar " + verbconti[rand];
                        eng2 = "you should be " + verbscont[rand];
                        eng22 = "you'd be " + verbscont[rand];

                        sp3 = "él debería estar " + verbconti[rand];
                        eng3 = "he should be " + verbscont[rand];
                        eng32 = "he'd be " + verbscont[rand];

                        sp3ella = "ella debería estar " + verbconti[rand];
                        eng3she = "she should be " + verbscont[rand];
                        eng3she2 = "she'd be " + verbscont[rand];

                        sp3eso = "eso debería estar " + verbconti[rand];
                        sp3it = "it should be " + verbscont[rand];
                        sp3it2 = "it'd be " + verbscont[rand];

                        sp4 = "ellos deberían estar " + verbconti[rand];
                        eng4 = "they should be " + verbscont[rand];
                        eng42 = "they'd be " + verbscont[rand];

                        sp5 = "nosotros deberíamos estar " + verbconti[rand];
                        eng5 = "we should be " + verbscont[rand];
                        eng52 = "we'd be " + verbscont[rand];
                        break;
                    case 1:
                        sp1 = "yo " + "no debería estar " + verbconti[rand];
                        eng1 = "I " + "should not be " + verbscont[rand];
                        eng12 = "I " + "shouldn't be " + verbscont[rand];

                        sp2 = "tú " + "no deberías estar " + verbconti[rand];
                        eng2 = "you " + "should not be " + verbscont[rand];
                        eng22 = "you " + "shouldn't be " + verbscont[rand];

                        sp3 = "él " + "no debería estar " + verbconti[rand];
                        eng3 = "he " + "should not be " + verbscont[rand];
                        eng32 = "he " + "shouldn't be " + verbscont[rand];

                        sp3ella = "ella " + "no debería estar " + verbconti[rand];
                        eng3she = "she " + "should not be " + verbscont[rand];
                        eng3she2 = "she " + "shouldn't be " + verbscont[rand];

                        sp3eso = "eso " + "no debería estar " + verbconti[rand];
                        sp3it = "it " + "should not be " + verbscont[rand];
                        sp3it2 = "it " + "shouldn't be " + verbscont[rand];

                        sp4 = "ellos " + "no deberían estar " + verbconti[rand];
                        eng4 = "they " + "should not be " + verbscont[rand];
                        eng42 = "they " + "shouldn't be " + verbscont[rand];

                        sp5 = "nosotros " + "no deberíamos estar " + verbconti[rand];
                        eng5 = "we " + "should not be " + verbscont[rand];
                        eng52 = "we " + "shouldn't be " + verbscont[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenShouldPerf1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo debería haber " + verbpartsp[rand];
                        eng1 = "I should have " + verbsparteng[rand];
                        eng12 = "I'd have " + verbsparteng[rand];

                        sp2 = "tú deberías haber " + verbpartsp[rand];
                        eng2 = "you should have " + verbsparteng[rand];
                        eng22 = "you'd have " + verbsparteng[rand];

                        sp3 = "él debería haber " + verbpartsp[rand];
                        eng3 = "he should have " + verbsparteng[rand];
                        eng32 = "he'd have " + verbsparteng[rand];

                        sp3ella = "ella debería haber " + verbpartsp[rand];
                        eng3she = "she should have " + verbsparteng[rand];
                        eng3she = "she'd have " + verbsparteng[rand];

                        sp3eso = "eso debería haber " + verbpartsp[rand];
                        sp3it = "it should have " + verbsparteng[rand];
                        sp3it2 = "it'd have " + verbsparteng[rand];

                        sp4 = "ellos deberían haber " + verbpartsp[rand];
                        eng4 = "they should have " + verbsparteng[rand];
                        eng42 = "they'd have " + verbsparteng[rand];

                        sp5 = "nosotros deberíamos haber " + verbpartsp[rand];
                        eng5 = "we should have " + verbsparteng[rand];
                        eng52 = "we'd have " + verbsparteng[rand];

                        break;
                    case 1:
                        sp1 = "yo " + "no debería haber " + verbpartsp[rand];
                        eng1 = "I " + "should not have " + verbsparteng[rand];
                        eng12 = "I " + "shouldn't have " + verbsparteng[rand];

                        sp2 = "tú " + "no deberías haber " + verbpartsp[rand];
                        eng2 = "you " + "should not have " + verbsparteng[rand];
                        eng22 = "you " + "shouldn't have " + verbsparteng[rand];

                        sp3 = "él " + "no debería haber " + verbpartsp[rand];
                        eng3 = "he " + "should not have " + verbsparteng[rand];
                        eng32 = "he " + "shouldn't have " + verbsparteng[rand];

                        sp3ella = "ella " + "no debería haber " + verbpartsp[rand];
                        eng3she = "she " + "should not have " + verbsparteng[rand];
                        eng3she2 = "she " + "shouldn't have " + verbsparteng[rand];

                        sp3eso = "eso " + "no debería haber " + verbpartsp[rand];
                        sp3it = "it " + "should not have " + verbsparteng[rand];
                        sp3it2 = "it " + "shouldn't have " + verbsparteng[rand];

                        sp4 = "ellos " + "no deberían haber " + verbpartsp[rand];
                        eng4 = "they " + "should not have " + verbsparteng[rand];
                        eng42 = "they " + "shouldn't have " + verbsparteng[rand];

                        sp5 = "nosotros " + "no deberíamos haber " + verbpartsp[rand];
                        eng5 = "we " + "should not have " + verbsparteng[rand];
                        eng52 = "we " + "shouldn't have " + verbsparteng[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenShouldPerfCont1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo debería haber estado " + verbconti[rand];
                        eng1 = "I should have been " + verbscont[rand];

                        sp2 = "tú deberías haber estado " + verbconti[rand];
                        eng2 = "you should have been " + verbscont[rand];

                        sp3 = "él debería haber estado " + verbconti[rand];
                        eng3 = "he should have been " + verbscont[rand];

                        sp3ella = "ella debería haber estado " + verbconti[rand];
                        eng3she = "she should have been " + verbscont[rand];

                        sp3eso = "eso debería haber estado " + verbconti[rand];
                        sp3it = "it should have been " + verbscont[rand];

                        sp4 = "ellos deberían haber estado " + verbconti[rand];
                        eng4 = "they should have been " + verbscont[rand];

                        sp5 = "nosotros deberíamos haber estado " + verbconti[rand];
                        eng5 = "we should have been " + verbscont[rand];

                        break;
                    case 1:
                        sp1 = "yo " + "no debería haber estado " + verbconti[rand];
                        eng1 = "I " + "shouldn't have been " + verbscont[rand];

                        sp2 = "tú " + "no deberías haber estado " + verbconti[rand];
                        eng2 = "you " + "shouldn't have been " + verbscont[rand];

                        sp3 = "él " + "no debería haber estado " + verbconti[rand];
                        eng3 = "he " + "shouldn't have been " + verbscont[rand];

                        sp3ella = "ella " + "no debería haber estado " + verbconti[rand];
                        eng3she = "she " + "shouldn't have been " + verbscont[rand];

                        sp3eso = "eso " + "no debería haber estado " + verbconti[rand];
                        sp3it = "it " + "shouldn't have been " + verbscont[rand];

                        sp4 = "ellos " + "no deberían haber estado " + verbconti[rand];
                        eng4 = "they " + "shouldn't have been " + verbscont[rand];

                        sp5 = "nosotros " + "no deberíamos haber estado " + verbconti[rand];
                        eng5 = "we " + "shouldn't have been " + verbscont[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023

    // MIGHT
    public void GenMightSimp1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo quizá " + v1[rand];
                        eng1 = "I might " + verbs[rand];

                        sp2 = "tú quizá " + v2[rand];
                        eng2 = "you might " + verbs[rand];

                        sp3 = "él quizá " + v3[rand];
                        eng3 = "he might " + verbs[rand];

                        sp3ella = "ella quizá " + v3[rand];
                        eng3she = "she might " + verbs[rand];

                        sp3eso = "eso quizá" + v3[rand];
                        sp3it = "it might " + verbs[rand];

                        sp4 = "ellos quizá " + v4[rand];
                        eng4 = "they might " + verbs[rand];

                        sp5 = "nosotros quizá " + v5nos[rand];
                        eng5 = "we might " + verbs[rand];

                        break;
                    case 1:
                        sp1 = "yo quizá no " + v1[rand];
                        eng1 = "I might not " + verbs[rand];

                        sp2 = "tú quizá no " + v2[rand];
                        eng2 = "you might not " + verbs[rand];

                        sp3 = "él quizá no " + v3[rand];
                        eng3 = "he might not " + verbs[rand];

                        sp3ella = "ella quizá no " + v3[rand];
                        eng3she = "she might not " + verbs[rand];

                        sp3eso = "eso quizá no " + v3[rand];
                        sp3it = "it might not " + verbs[rand];

                        sp4 = "ellos quizá no " + v4[rand];
                        eng4 = "they might not " + verbs[rand];

                        sp5 = "nosotros quizá no " + v5nos[rand];
                        eng5 = "we might not " + verbs[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenMightCont1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo quizá esté " + verbconti[rand];
                        eng1 = "I might be " + verbscont[rand];
                        eng12 = "I might be " + verbscont[rand];

                        sp2 = "tú quizá estés " + verbconti[rand];
                        eng2 = "you might be " + verbscont[rand];
                        eng22 = "you might be " + verbscont[rand];

                        sp3 = "él quizá esté " + verbconti[rand];
                        eng3 = "he might be " + verbscont[rand];
                        eng32 = "he might be " + verbscont[rand];

                        sp3ella = "ella quizá esté " + verbconti[rand];
                        eng3she = "she might be " + verbscont[rand];
                        eng3she2 = "she might be " + verbscont[rand];

                        sp3eso = "eso quizá esté " + verbconti[rand];
                        sp3it = "it might be " + verbscont[rand];
                        sp3it2 = "it might be " + verbscont[rand];

                        sp4 = "ellos quizá estén " + verbconti[rand];
                        eng4 = "they might be " + verbscont[rand];
                        eng42 = "they might be " + verbscont[rand];

                        sp5 = "nosotros quizá estemos " + verbconti[rand];
                        eng5 = "we might be " + verbscont[rand];
                        eng52 = "we might be " + verbscont[rand];

                        break;
                    case 1:
                        sp1 = "yo " + "quizá no esté " + verbconti[rand];
                        eng1 = "I " + "might not be " + verbscont[rand];
                        eng12 = "I " + "mightn't be " + verbscont[rand];

                        sp2 = "tú " + "quizá no estés " + verbconti[rand];
                        eng2 = "you " + "might not be " + verbscont[rand];
                        eng22 = "you " + "mightn't be " + verbscont[rand];

                        sp3 = "él " + "quizá no esté  " + verbconti[rand];
                        eng3 = "he " + "might not be " + verbscont[rand];
                        eng32 = "he " + "mightn't be " + verbscont[rand];

                        sp3ella = "ella " + "quizá no esté " + verbconti[rand];
                        eng3she = "she " + "might not be " + verbscont[rand];
                        eng3she2 = "she " + "mightn't be " + verbscont[rand];

                        sp3eso = "eso " + "quizá no esté " + verbconti[rand];
                        sp3it = "it " + "might not be " + verbscont[rand];
                        sp3it2 = "it " + "mightn't be " + verbscont[rand];

                        sp4 = "ellos " + "quizá no estén " + verbconti[rand];
                        eng4 = "they " + "might not be " + verbscont[rand];
                        eng42 = "they " + "mightn't be " + verbscont[rand];

                        sp5 = "nosotros " + "quizá no estémos " + verbconti[rand];
                        eng5 = "we " + "might not be " + verbscont[rand];
                        eng52 = "we " + "mightn't be " + verbscont[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenMightPerf1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo quizá haya " + verbpartsp[rand];
                        eng1 = "I might have " + verbsparteng[rand];
                        eng12 = "I might have " + verbsparteng[rand];

                        sp2 = "tú quizá hayas " + verbpartsp[rand];
                        eng2 = "you might have " + verbsparteng[rand];
                        eng22 = "you might have " + verbsparteng[rand];

                        sp3 = "él quizá haya " + verbpartsp[rand];
                        eng3 = "he might have " + verbsparteng[rand];
                        eng32 = "he might have " + verbsparteng[rand];

                        sp3ella = "ella quizá haya " + verbpartsp[rand];
                        eng3she = "she might have " + verbsparteng[rand];
                        eng3she2 = "she might have " + verbsparteng[rand];

                        sp3eso = "eso quizá haya " + verbpartsp[rand];
                        sp3it = "it might have " + verbsparteng[rand];
                        sp3it2 = "it might have " + verbsparteng[rand];

                        sp4 = "ellos quizá hayan " + verbpartsp[rand];
                        eng4 = "they might have " + verbsparteng[rand];
                        eng42 = "they might have " + verbsparteng[rand];

                        sp5 = "nosotros quizá hayamos " + verbpartsp[rand];
                        eng5 = "we might have " + verbsparteng[rand];
                        eng52 = "we might have " + verbsparteng[rand];

                        break;
                    case 1:
                        sp1 = "yo quizá no haya " + verbpartsp[rand];
                        eng1 = "I might not have " + verbsparteng[rand];
                        eng12 = "I mightn't have " + verbsparteng[rand];

                        sp2 = "tú quizá no hayas " + verbpartsp[rand];
                        eng2 = "you might not have " + verbsparteng[rand];
                        eng22 = "you mightn't have " + verbsparteng[rand];

                        sp3 = "él quizá no haya " + verbpartsp[rand];
                        eng3 = "he might not have " + verbsparteng[rand];
                        eng32 = "he mightn't have " + verbsparteng[rand];

                        sp3ella = "ella quizá no haya " + verbpartsp[rand];
                        eng3she = "she might not have " + verbsparteng[rand];
                        eng3she2 = "she mightn't have " + verbsparteng[rand];

                        sp3eso = "eso quizá no haya " + verbpartsp[rand];
                        sp3it = "it might not have " + verbsparteng[rand];
                        sp3it2 = "it might not have " + verbsparteng[rand];

                        sp4 = "ellos quizá no hayan " + verbpartsp[rand];
                        eng4 = "they might not have " + verbsparteng[rand];
                        eng42 = "they mightn't have " + verbsparteng[rand];

                        sp5 = "nosotros quizá no hayamos " + verbpartsp[rand];
                        eng5 = "we might not have " + verbsparteng[rand];
                        eng52 = "we mightn't have " + verbsparteng[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenMightPerfCont1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo quizá haya estado " + verbconti[rand];
                        eng1 = "I might have been " + verbscont[rand];

                        sp2 = "tú quizá hayas estado " + verbconti[rand];
                        eng2 = "you might have been " + verbscont[rand];

                        sp3 = "él quizá haya estado " + verbconti[rand];
                        eng3 = "he might have been " + verbscont[rand];

                        sp3ella = "ella quizá haya estado " + verbconti[rand];
                        eng3she = "she might have been " + verbscont[rand];

                        sp3eso = "eso quizá haya estado " + verbconti[rand];
                        sp3it = "it might have been " + verbscont[rand];

                        sp4 = "ellos quizá hayan estado " + verbconti[rand];
                        eng4 = "they might have been " + verbscont[rand];

                        sp5 = "nosotros quizá hayamos estado " + verbconti[rand];
                        eng5 = "we might have been " + verbscont[rand];

                        break;
                    case 1:
                        sp1 = "yo quizá no haya estado " + verbconti[rand];
                        eng1 = "I might not have been " + verbscont[rand];

                        sp2 = "tú quizá no hayas estado " + verbconti[rand];
                        eng2 = "you might not have been " + verbscont[rand];

                        sp3 = "él quizá no haya estado " + verbconti[rand];
                        eng3 = "he might not have been " + verbscont[rand];

                        sp3ella = "ella quizá no haya estado " + verbconti[rand];
                        eng3she = "she might not have been " + verbscont[rand];

                        sp3eso = "eso quizá no haya estado " + verbconti[rand];
                        sp3it = "it might not have been " + verbscont[rand];

                        sp4 = "ellos quizá no hayan estado " + verbconti[rand];
                        eng4 = "they might not have been " + verbscont[rand];

                        sp5 = "nosotros quizá no hayamos estado " + verbconti[rand];
                        eng5 = "we might not have been " + verbscont[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023

    //COULD
    public void GenCouldSimp1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo podría " + vsbc[rand];
                        eng1 = "I could " + verbs[rand];

                        sp2 = "tú podrías " + vsbc[rand];
                        eng2 = "you could " + verbs[rand];

                        sp3 = "él podría " + vsbc[rand];
                        eng3 = "he could " + verbs[rand];

                        sp3ella = "ella podría " + vsbc[rand];
                        eng3she = "she could " + verbs[rand];

                        sp3eso = "eso podría " + vsbc[rand];
                        sp3it = "it could " + verbs[rand];

                        sp4 = "ellos podrían " + vsbc[rand];
                        eng4 = "they could " + verbs[rand];

                        sp5 = "nosotros podríamos " + vsbc[rand];
                        eng5 = "we could " + verbs[rand];

                        break;
                    case 1:
                        sp1 = "yo " + "no podría " + vsbc[rand];
                        eng1 = "I " + "couldn't " + verbs[rand];

                        sp2 = "tú " + "no podrías " + vsbc[rand];
                        eng2 = "you " + "couldn't " + verbs[rand];

                        sp3 = "él " + "no podría " + vsbc[rand];
                        eng3 = "he " + "couldn't " + verbs[rand];

                        sp3ella = "ella " + "no podría " + vsbc[rand];
                        eng3she = "she " + "couldn't " + verbs[rand];

                        sp3eso = "eso " + "no podría " + vsbc[rand];
                        sp3it = "it " + "couldn't " + verbs[rand];

                        sp4 = "ellos " + "no podrían " + vsbc[rand];
                        eng4 = "they " + "couldn't " + verbs[rand];

                        sp5 = "nosotros " + "no podríamos " + vsbc[rand];
                        eng5 = "we " + "couldn't " + verbs[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenCouldCont1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo podría estar " + verbconti[rand];
                        eng1 = "I could be " + verbscont[rand];
                        eng12 = "I could be " + verbscont[rand];

                        sp2 = "tú podrías estar " + verbconti[rand];
                        eng2 = "you could be " + verbscont[rand];
                        eng22 = "you could be " + verbscont[rand];

                        sp3 = "él podría estar " + verbconti[rand];
                        eng3 = "he could be " + verbscont[rand];
                        eng32 = "he could be " + verbscont[rand];

                        sp3ella = "ella podría estar " + verbconti[rand];
                        eng3she = "she could be " + verbscont[rand];
                        eng3she2 = "she could be " + verbscont[rand];

                        sp3eso = "eso podría estar " + verbconti[rand];
                        sp3it = "it could be " + verbscont[rand];
                        sp3it2 = "it could be " + verbscont[rand];

                        sp4 = "ellos podrían estar " + verbconti[rand];
                        eng4 = "they could be " + verbscont[rand];
                        eng42 = "they could be " + verbscont[rand];

                        sp5 = "nosotros podríamos estar " + verbconti[rand];
                        eng5 = "we could be " + verbscont[rand];
                        eng52 = "we could be " + verbscont[rand];

                        break;
                    case 1:
                        sp1 = "yo " + "no podría estar " + verbconti[rand];
                        eng1 = "I " + "could not be " + verbscont[rand];
                        eng12 = "I " + "couldn't be " + verbscont[rand];

                        sp2 = "tú " + "no podrías estar " + verbconti[rand];
                        eng2 = "you " + "could not be " + verbscont[rand];
                        eng22 = "you " + "couldn't be " + verbscont[rand];

                        sp3 = "él " + "no podría estar " + verbconti[rand];
                        eng3 = "he " + "could not be " + verbscont[rand];
                        eng32 = "he " + "couldn't be " + verbscont[rand];

                        sp3ella = "ella " + "no podría estar " + verbconti[rand];
                        eng3she = "she " + "could not be " + verbscont[rand];
                        eng3she2 = "she " + "couldn't be " + verbscont[rand];

                        sp3eso = "eso " + "no podría estar " + verbconti[rand];
                        sp3it = "it " + "could not be " + verbscont[rand];
                        sp3it2 = "it " + "couldn't be " + verbscont[rand];

                        sp4 = "ellos " + "no podrían estar " + verbconti[rand];
                        eng4 = "they " + "could not be " + verbscont[rand];
                        eng42 = "they " + "couldn't be " + verbscont[rand];

                        sp5 = "nosotros " + "no podríamos estar " + verbconti[rand];
                        eng5 = "we " + "could not be " + verbscont[rand];
                        eng52= "we " + "couldn't be " + verbscont[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenCouldPerf1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo pude haber " + verbpartsp[rand];
                        eng1 = "I could have " + verbsparteng[rand];
                        eng12 = "I could have " + verbsparteng[rand];

                        sp2 = "tú pudiste haber " + verbpartsp[rand];
                        eng2 = "you could have " + verbsparteng[rand];
                        eng22 = "you could have " + verbsparteng[rand];

                        sp3 = "él pudo haber " + verbpartsp[rand];
                        eng3 = "he could have " + verbsparteng[rand];
                        eng32 = "he could have " + verbsparteng[rand];

                        sp3ella = "ella pudiese haber " + verbpartsp[rand];
                        eng3she = "she could have " + verbsparteng[rand];
                        eng3she2 = "she could have " + verbsparteng[rand];

                        sp3eso = "eso pudiese haber " + verbpartsp[rand];
                        sp3it = "it could have " + verbsparteng[rand];
                        sp3it2 = "it could have " + verbsparteng[rand];

                        sp4 = "ellos pudiesen haber " + verbpartsp[rand];
                        eng4 = "they could have " + verbsparteng[rand];
                        eng42 = "they could have " + verbsparteng[rand];

                        sp5 = "nosotros pudiesemos haber " + verbpartsp[rand];
                        eng5 = "we could have " + verbsparteng[rand];
                        eng52 = "we could have " + verbsparteng[rand];

                        break;
                    case 1:
                        sp1 = "yo " + "no pude haber " + verbpartsp[rand];
                        eng1 = "I " + "could not have " + verbsparteng[rand];
                        eng12 = "I " + "couldn't have " + verbsparteng[rand];

                        sp2 = "tú " + "no pudiste haber " + verbpartsp[rand];
                        eng2 = "you " + "could not have " + verbsparteng[rand];
                        eng22 = "you " + "couldn't have " + verbsparteng[rand];

                        sp3 = "él " + "no pudo haber " + verbpartsp[rand];
                        eng3 = "he " + "could not have " + verbsparteng[rand];
                        eng32 = "he " + "couldn't have " + verbsparteng[rand];

                        sp3ella = "ella " + "no pudiese haber " + verbpartsp[rand];
                        eng3she = "she " + "could not have " + verbsparteng[rand];
                        eng3she2 = "she " + "couldn't have " + verbsparteng[rand];

                        sp3eso = "eso " + "no pudiese haber " + verbpartsp[rand];
                        sp3it = "it " + "could not have " + verbsparteng[rand];
                        sp3it2 = "it " + "couldn't have " + verbsparteng[rand];

                        sp4 = "ellos " + "no pudiesen haber " + verbpartsp[rand];
                        eng4 = "they " + "could not have " + verbsparteng[rand];
                        eng42 = "they " + "couldn't have " + verbsparteng[rand];

                        sp5 = "nosotros " + "no pudiesemos haber " + verbpartsp[rand];
                        eng5 = "we " + "could not have " + verbsparteng[rand];
                        eng52 = "we " + "couldn't have " + verbsparteng[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenCouldPerfCont1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo podría haber estado " + verbconti[rand];
                        eng1 = "I could have been " + verbscont[rand];

                        sp2 = "tú podrías haber estado " + verbconti[rand];
                        eng2 = "you could have been " + verbscont[rand];

                        sp3 = "él podría haber estado " + verbconti[rand];
                        eng3 = "he could have been " + verbscont[rand];

                        sp3ella = "ella podría haber estado " + verbconti[rand];
                        eng3she = "she could have been " + verbscont[rand];

                        sp3eso = "eso podría haber estado " + verbconti[rand];
                        sp3it = "it could have been " + verbscont[rand];

                        sp4 = "ellos podrían haber estado " + verbconti[rand];
                        eng4 = "they could have been " + verbscont[rand];

                        sp5 = "nosotros podríamos haber estado " + verbconti[rand];
                        eng5 = "we could have been " + verbscont[rand];

                        break;
                    case 1:
                        sp1 = "yo " + "no podría haber estado " + verbconti[rand];
                        eng1 = "I " + "couldn't have been " + verbscont[rand];

                        sp2 = "tú " + "no podrías haber estado " + verbconti[rand];
                        eng2 = "you " + "couldn't have been " + verbscont[rand];

                        sp3 = "él " + "no podría haber estado " + verbconti[rand];
                        eng3 = "he " + "couldn't have been " + verbscont[rand];

                        sp3ella = "ella " + "no podría haber estado " + verbconti[rand];
                        eng3she = "she " + "couldn't have been " + verbscont[rand];

                        sp3eso = "eso " + "no podría haber estado " + verbconti[rand];
                        sp3it = "it " + "couldn't have been " + verbscont[rand];

                        sp4 = "ellos " + "no podrían haber estado " + verbconti[rand];
                        eng4 = "they " + "couldn't have been " + verbscont[rand];

                        sp5 = "nosotros " + "no podríamos haber estado " + verbconti[rand];
                        eng5 = "we " + "couldn't have been " + verbscont[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023

    //CAN
    public void GenCanSimp1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo puedo " + vsbc[rand];
                        eng1 = "I can " + verbs[rand];

                        sp2 = "tú puedes " + vsbc[rand];
                        eng2 = "you can " + verbs[rand];

                        sp3 = "él puede " + vsbc[rand];
                        eng3 = "he can " + verbs[rand];

                        sp3ella = "ella puede " + vsbc[rand];
                        eng3she = "she can " + verbs[rand];

                        sp3eso = "eso puede " + vsbc[rand];
                        sp3it = "it can " + verbs[rand];

                        sp4 = "ellos pueden " + vsbc[rand];
                        eng4 = "they can " + verbs[rand];

                        sp5 = "nosotros podemos " + vsbc[rand];
                        eng5 = "we can " + verbs[rand];

                        break;
                    case 1:
                        sp1 = "yo " + "no puedo " + vsbc[rand];
                        eng1 = "I " + "can't " + verbs[rand];

                        sp2 = "tú " + "no puedes " + vsbc[rand];
                        eng2 = "you " + "can't " + verbs[rand];

                        sp3 = "él " + "no puede " + vsbc[rand];
                        eng3 = "he " + "can't " + verbs[rand];

                        sp3ella = "ella " + "no puede " + vsbc[rand];
                        eng3she = "she " + "can't " + verbs[rand];

                        sp3eso = "eso " + "no puede " + vsbc[rand];
                        sp3it = "it " + "can't " + verbs[rand];

                        sp4 = "ellos " + "no pueden " + vsbc[rand];
                        eng4 = "they " + "can't " + verbs[rand];

                        sp5 = "nosotros " + "no podemos " + vsbc[rand];
                        eng5 = "we " + "can't " + verbs[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenCanCont1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo puedo estar " + verbconti[rand];
                        eng1 = "I can be " + verbscont[rand];
                        eng12 = "I can be " + verbscont[rand];

                        sp2 = "tú puedes estar " + verbconti[rand];
                        eng2 = "you can be " + verbscont[rand];
                        eng22 = "you can be " + verbscont[rand];

                        sp3 = "él puede estar " + verbconti[rand];
                        eng3 = "he can be " + verbscont[rand];
                        eng32 = "he can be " + verbscont[rand];

                        sp3ella = "ella puede " + verbconti[rand];
                        eng3she = "she can be " + verbscont[rand];
                        eng3she2 = "she can be " + verbscont[rand];

                        sp3eso = "eso puede " + verbconti[rand];
                        sp3it = "it can be " + verbscont[rand];
                        sp3it2 = "it can be " + verbscont[rand];

                        sp4 = "ellos pueden estar " + verbconti[rand];
                        eng4 = "they can be " + verbscont[rand];
                        eng42 = "they can be " + verbscont[rand];

                        sp5 = "nosotros podemos " + verbconti[rand];
                        eng5 = "we can be " + verbscont[rand];
                        eng52 = "we can be " + verbscont[rand];

                        break;
                    case 1:
                        sp1 = "yo " + "no puedo estar " + verbconti[rand];
                        eng1 = "I " + "cannot be " + verbscont[rand];
                        eng12 = "I " + "can't be " + verbscont[rand];

                        sp2 = "tú " + "no puedes estar " + verbconti[rand];
                        eng2 = "you " + "cannot be " + verbscont[rand];
                        eng22 = "you " + "can't be " + verbscont[rand];

                        sp3 = "él " + "no puede estar " + verbconti[rand];
                        eng3 = "he " + "cannot be " + verbscont[rand];
                        eng32 = "he " + "can't be " + verbscont[rand];

                        sp3ella = "ella " + "no puede estar " + verbconti[rand];
                        eng3she = "she " + "cannot be " + verbscont[rand];
                        eng3she2 = "she " + "can't be " + verbscont[rand];

                        sp3eso = "eso " + "no puede estar " + verbconti[rand];
                        sp3it = "it " + "cannot be " + verbscont[rand];
                        sp3it2 = "it " + "can't be " + verbscont[rand];

                        sp4 = "ellos " + "no pueden estar " + verbconti[rand];
                        eng4 = "they " + "cannot be " + verbscont[rand];
                        eng42 = "they " + "can't be " + verbscont[rand];

                        sp5 = "nosotros " + "no podemos estar " + verbconti[rand];
                        eng5 = "we " + "cannot be " + verbscont[rand];
                        eng52 = "we " + "can't be " + verbscont[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023

    //MUST
    public void GenMustSimp1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo debo " + vsbc[rand];
                        eng1 = "I must " + verbs[rand];

                        sp2 = "tú debés " + vsbc[rand];
                        eng2 = "you must " + verbs[rand];

                        sp3 = "él debe " + vsbc[rand];
                        eng3 = "he must " + verbs[rand];

                        sp3ella = "ella debe " + vsbc[rand];
                        eng3she = "she must " + verbs[rand];

                        sp3eso = "eso debe " + vsbc[rand];
                        sp3it = "it must " + verbs[rand];

                        sp4 = "ellos deben " + vsbc[rand];
                        eng4 = "they must " + verbs[rand];

                        sp5 = "nosotros debemos " + vsbc[rand];
                        eng5 = "we must " + verbs[rand];

                        break;
                    case 1:
                        sp1 = "yo " + "no debo " + vsbc[rand];
                        eng1 = "I " + "mustn't " + verbs[rand];

                        sp2 = "tú " + "no debés " + vsbc[rand];
                        eng2 = "you " + "mustn't " + verbs[rand];

                        sp3 = "él " + "no debe " + vsbc[rand];
                        eng3 = "he " + "mustn't " + verbs[rand];

                        sp3ella = "ella " + "no debe " + vsbc[rand];
                        eng3she = "she " + "mustn't " + verbs[rand];

                        sp3eso = "eso " + "no debe " + vsbc[rand];
                        sp3it = "it " + "mustn't " + verbs[rand];

                        sp4 = "ellos " + "no deben " + vsbc[rand];
                        eng4 = "they " + "mustn't " + verbs[rand];

                        sp5 = "nosotros " + "no debemos " + vsbc[rand];
                        eng5 = "we " + "mustn't " + verbs[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenMustCont1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo debo estar " + verbconti[rand];
                        eng1 = "I must be " + verbscont[rand];
                        eng12 = "I must be " + verbscont[rand];

                        sp2 = "tú debés estar " + verbconti[rand];
                        eng2 = "you must be " + verbscont[rand];
                        eng22 = "you must be " + verbscont[rand];

                        sp3 = "él debe estar " + verbconti[rand];
                        eng3 = "he must be " + verbscont[rand];
                        eng32 = "he must be " + verbscont[rand];

                        sp3ella = "ella debe estar " + verbconti[rand];
                        eng3she = "she must be " + verbscont[rand];
                        eng3she2 = "she must be " + verbscont[rand];

                        sp3eso = "eso debe estar " + verbconti[rand];
                        sp3it = "it must be " + verbscont[rand];
                        sp3it2 = "it must be " + verbscont[rand];

                        sp4 = "ellos deben estar " + verbconti[rand];
                        eng4 = "they must be " + verbscont[rand];
                        eng42 = "they must be " + verbscont[rand];

                        sp5 = "nosotros debemos estar " + verbconti[rand];
                        eng5 = "we must be " + verbscont[rand];
                        eng52 = "we must be " + verbscont[rand];

                        break;
                    case 1:
                        sp1 = "yo " + "no debo estar " + verbconti[rand];
                        eng1 = "I " + "must not be " + verbscont[rand];
                        eng12 = "I " + "mustn't be " + verbscont[rand];

                        sp2 = "tú " + "no debés estar " + verbconti[rand];
                        eng2 = "you " + "must not be " + verbscont[rand];
                        eng22 = "you " + "mustn't be " + verbscont[rand];

                        sp3 = "él " + "no debe estar " + verbconti[rand];
                        eng3 = "he " + "must not be " + verbscont[rand];
                        eng32 = "he " + "mustn't be " + verbscont[rand];

                        sp3ella = "ella " + "no debe estar " + verbconti[rand];
                        eng3she = "she " + "must not be " + verbscont[rand];
                        eng3she2 = "she " + "mustn't be " + verbscont[rand];

                        sp3eso = "eso " + "no debe estar " + verbconti[rand];
                        sp3it = "it " + "must not be " + verbscont[rand];
                        sp3it2 = "it " + "mustn't be " + verbscont[rand];

                        sp4 = "ellos " + "no deben estar " + verbconti[rand];
                        eng4 = "they " + "must not be " + verbscont[rand];
                        eng42 = "they " + "mustn't be " + verbscont[rand];

                        sp5 = "nosotros " + "no debemos estar " + verbconti[rand];
                        eng5 = "we " + "must not be " + verbscont[rand];
                        eng52 = "we " + "mustn't be " + verbscont[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023

    public void GenAbleTo1(){
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo " + "soy capaz de " + vsbc[rand];
                        eng1 = "I am " + "able to " + verbs[rand];
                        eng12 = "I'm " + "able to " + verbs[rand];

                        sp2 = "tú " + "eres capaz de " + vsbc[rand];
                        eng2 = "you are " + "able to " + verbs[rand];
                        eng22 = "you're " + "able to " + verbs[rand];

                        sp3 = "él " + "es capaz de " + vsbc[rand];
                        eng3 = "he is " + "able to " + verbs[rand];
                        eng32 = "he's " + "able to " + verbs[rand];

                        sp3ella = "ella " + "es capaz de " + vsbc[rand];
                        eng3she = "she is " + "able to " + verbs[rand];
                        eng3she2 = "she's " + "able to " + verbs[rand];

                        sp3eso = "eso " + "es capaz de " + vsbc[rand];
                        sp3it = "it is " + "able to " + verbs[rand];
                        sp3it2 = "it's " + "able to " + verbs[rand];

                        sp4 = "ellos " + "son capaz de " + vsbc[rand];
                        eng4 = "they are " + "able to " + verbs[rand];
                        eng42 = "they're " + "able to " + verbs[rand];

                        sp5 = "nosotros " + "somos capaz de " + vsbc[rand];
                        eng5 = "we are " + "able to " + verbs[rand];
                        eng52 = "we're " + "able to " + verbs[rand];
                        break;
                    case 1:
                        sp1 = "yo no " + "soy capaz de " + vsbc[rand];
                        eng1 = "I am not " + "able to " + verbs[rand];
                        eng12 = "I'm not " + "able to " + verbs[rand];

                        sp2 = "tú no " + "eres capaz de " + vsbc[rand];
                        eng2 = "you are not " + "able to " + verbs[rand];
                        eng22 = "you're not " + "able to " + verbs[rand];

                        sp3 = "él no " + "es capaz de " + vsbc[rand];
                        eng3 = "he is not " + "able to " + verbs[rand];
                        eng32 = "he's not " + "able to " + verbs[rand];

                        sp3ella = "ella no " + "es capaz de " + vsbc[rand];
                        eng3she = "she is not " + "able to " + verbs[rand];
                        eng3she2 = "she's not " + "able to " + verbs[rand];

                        sp3eso = "eso no " + "es capaz de " + vsbc[rand];
                        sp3it = "it is not " + "able to " + verbs[rand];
                        sp3it2 = "it's not " + "able to " + verbs[rand];

                        sp4 = "ellos no " + "son capaz de " + vsbc[rand];
                        eng4 = "they are not " + "able to " + verbs[rand];
                        eng42 = "they're not " + "able to " + verbs[rand];

                        sp5 = "nosotros no " + "somos capaz de " + vsbc[rand];
                        eng5 = "we are not " + "able to " + verbs[rand];
                        eng52 = "we're not " + "able to " + verbs[rand];
                        break;

                }
            }
        }
    }//PD FEB 2023

    //for to dificultad 1
    public void forSubTo1() {
        int rand = (int) (Math.random() * verbs.length);
        Pasts pas = new Pasts();

        int rn1 = (int) (Math.random() * 6);
        int rn2 = (int) (Math.random() * 5);
        int neg = (int) (Math.random() * 2);

        //subject in eng
        String ftsj[] = {
                "for me to ", "for you to ", "for him to ", "for her to ", "for it to ",
                "for them to ", "for us to "
        };

        //subject in spanish
        String ftsjs[] = {
                "para que yo ", "para que tú ", "para que él ", "para que ella ",
                "para que eso ", "para que ellos ", "para que nosotros "
        };

        //subject in eng negative
        String ftsjn[] = {
                "for me not to ", "for you not to ", "for him not to ", "for her not to ",
                "for it not to ", "for them not to ", "for us not to "
        };

        //subject in spanish negative
        String ftsjsn[] = {
                "para que yo no ", "para que tú no ", "para que él no ", "para que ella no ",
                "para que eso no ", "para que ellos no ", "para que nosotros no "
        };

        switch (neg) {
            case 0:
                sp1 = ftsjs[0] + v1[rand];
                eng1 = ftsj[0] + verbs[rand];

                sp2 = ftsjs[1] + v2[rand];
                eng2 = ftsj[1] + verbs[rand];

                sp3 = ftsjs[2] + v3[rand];
                eng3 = ftsj[2] + verbs[rand];

                sp3ella = ftsjs[3] + v3[rand];
                eng3she = ftsj[3] + verbs[rand];

                sp3eso = ftsjs[4] + v3[rand];
                sp3it = ftsj[4] + verbs[rand];

                sp4 = ftsjs[5] + v4[rand];
                eng4 = ftsj[5] + verbs[rand];

                sp5 = ftsjs[6] + v5nos[rand];
                eng5 = ftsj[6] + verbs[rand];

                break;
            case 1:
                sp1 = ftsjsn[0] + v1[rand];
                eng1 = ftsjn[0] + verbs[rand];

                sp2 = ftsjsn[1] + v2[rand];
                eng2 = ftsjn[1] + verbs[rand];

                sp3 = ftsjsn[2] + v3[rand];
                eng3 = ftsjn[2] + verbs[rand];

                sp3ella = ftsjsn[3] + v3[rand];
                eng3she = ftsjn[3] + verbs[rand];

                sp3eso = ftsjsn[4] + v3[rand];
                sp3it = ftsjn[4] + verbs[rand];

                sp4 = ftsjsn[5] + v4[rand];
                eng4 = ftsjn[5] + verbs[rand];

                sp5 = ftsjsn[6] + v5nos[rand];
                eng5 = ftsjn[6] + verbs[rand];
                break;
        }
    }//PD 16/06/2022
    //want to dificultad 1
    public void wantyouto1() {
        int rand = (int) (Math.random() * verbs.length);
        Pasts pas = new Pasts();
        String temp = verbs[rand];
        int rn1 = (int) (Math.random() * 6);
        int rn2 = (int) (Math.random() * 5);
        int neg = (int) (Math.random() * 2);

        //want to subject
        String wtsj[] = {"I want ", "you want ", "he want ", "she want ", "it want ", "we want ", "they want "};
        //want to subject negative
        String wtsjn[] = {"I don't want ", "you doesn't want ", "he doesn't want ", "she doesn't want ", "it doesn't want "
                , "we doesn't want ", "they doesn't want "};
        //sujetos want to en sp
        String wtsjs[] = {"yo quiero ", "tú quieres ", "él quiere ", "ella quiere ", "eso quiere ", "nosotros queremos ", "ellos quieren "};
        //sujetos want to en sp negativo
        String wtsjsn[] = {"yo no quiero ", "tú no quieres ", "él no quiere ", "eso no quiere ", "ella no quiere ", "nosotros no queremos ", "ellos no quieren "};

        String wtobj1[] = {"you to " + verbs[rand], "him to " + verbs[rand], "her to " + verbs[rand],
                "it to " + verbs[rand], "us to " + verbs[rand], "them to " + verbs[rand]};
        String wtobj2[] = {"me to " + verbs[rand], "him to " + verbs[rand], "her to " + verbs[rand],
                "it to " + verbs[rand], "us to " + verbs[rand], "them to " + verbs[rand]};
        String wtobj3[] = {"you to " + verbs[rand], "me to " + verbs[rand], "her to " + verbs[rand],
                "it to " + verbs[rand], "us to " + verbs[rand], "them to " + verbs[rand]};
        String wtobj4[] = {"you to " + verbs[rand], "him to " + verbs[rand], "me to " + verbs[rand],
                "it to " + verbs[rand], "us to " + verbs[rand], "them to " + verbs[rand]};
        String wtobj5[] = {"you to " + verbs[rand], "him to " + verbs[rand], "her to " + verbs[rand],
                "me to " + verbs[rand], "us to " + verbs[rand], "them to " + verbs[rand]};
        String wtobj6[] = {"you to " + verbs[rand], "him to " + verbs[rand], "her to " + verbs[rand],
                "it to " + verbs[rand], "them to " + verbs[rand]};
        String wtobj7[] = {"you to " + verbs[rand], "him to " + verbs[rand], "her to " + verbs[rand],
                "it to " + verbs[rand], "us to " + verbs[rand], "me to " + verbs[rand]};

        // objetos wt en sp
        String wtobj1s[] = {"que tú " + v2[rand], "que él " + v3[rand], "que ella " + v3[rand],
                "que eso " + v3[rand], "que nosotros " + v5nos[rand], "que ellos " + v4[rand]};
        String wtobj2s[] = {"que yo " + v1[rand], "que él " + v3[rand], "que ella " + v3[rand],
                "que eso " + v3[rand], "que nosotros " + v3[rand], "que ellos " + v3[rand]};
        String wtobj3s[] = {"que tú " + v2[rand], "que yo " + v1[rand], "que ella " + v3[rand],
                "que eso " + v3[rand], "que nosotros " + v5nos[rand], "que ellos " + v4[rand]};
        String wtobj4s[] = {"que tú " + v2[rand], "que él " + v3[rand], "que yo " + v1[rand],
                "que eso " + v3[rand], "que nosotros " + v5nos[rand], "que ellos " + v4[rand]};
        String wtobj5s[] = {"que tú " + v2[rand], "que él " + v3[rand], "que ella " + v3[rand],
                "que yo " + v1[rand], "que nosotros " + v5nos[rand], "que ellos " + v4[rand]};
        String wtobj6s[] = {"que tú " + v2[rand], "que él " + v3[rand], "que ella " + v3[rand],
                "que eso " + v3[rand], "que ellos " + v4[rand]};
        String wtobj7s[] = {"que tú " + v2[rand], "que él " + v3[rand], "que ella " + v3[rand],
                "que eso " + v3[rand], "que nosotros " + v5nos[rand], "que yo " + v1[rand]};

        switch (temp) {
            case "determine ":
                int rand1 = (int) (Math.random() * sodete.length);
                //aqui van a ir todas las convinaciones de pronombre en Presente simple, después en generate solo se agarra el string que se ocupe
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1];
                        eng1 = wtsj[0] + wtobj1[rn1];

                        sp2 = wtsjs[1] + wtobj2s[rn1];
                        eng2 = wtsj[1] + wtobj2[rn1];

                        sp3 = wtsjs[2] + wtobj3s[rn1];
                        eng3 = wtsj[2] + wtobj3[rn1];

                        sp3ella = wtsjs[3] + wtobj4s[rn1];
                        eng3she = wtsj[3] + wtobj4[rn1];

                        sp3eso = wtsjs[4] + wtobj5s[rn1];
                        sp3it = wtsj[4] + wtobj5[rn1];

                        sp4 = wtsjs[5] + wtobj6s[rn2];
                        eng4 = wtsj[5] + wtobj6[rn2];

                        sp5 = wtsjs[6] + wtobj7s[rn1];
                        eng5 = wtsj[6] + wtobj7[rn1];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1];
                        eng1 = wtsjn[0] + wtobj1[rn1];

                        sp2 = wtsjsn[1] + wtobj2s[rn1];
                        eng2 = wtsjn[1] + wtobj2[rn1];

                        sp3 = wtsjsn[2] + wtobj3s[rn1];
                        eng3 = wtsjn[2] + wtobj3[rn1];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1];
                        eng3she = wtsjn[3] + wtobj4[rn1];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1];
                        sp3it = wtsjn[4] + wtobj5[rn1];

                        sp4 = wtsjsn[5] + wtobj6s[rn2];
                        eng4 = wtsjn[5] + wtobj6[rn2];

                        sp5 = wtsjsn[6] + wtobj7s[rn1];
                        eng5 = wtsjn[6] + wtobj7[rn1];
                        break;
                }
                break;

            case "approach ":
                int rand2 = (int) (Math.random() * soappr.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soacer[rand2];
                        eng1 = wtsj[0] + wtobj1[rn1] + soappr[rand2];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soacer[rand2];
                        eng2 = wtsj[1] + wtobj2[rn1] + soappr[rand2];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soacer[rand2];
                        eng3 = wtsj[2] + wtobj3[rn1] + soappr[rand2];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soacer[rand2];
                        eng3she = wtsj[3] + wtobj4[rn1] + soappr[rand2];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soacer[rand2];
                        sp3it = wtsj[4] + wtobj5[rn1] + soappr[rand2];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soacer[rand2];
                        eng4 = wtsj[5] + wtobj6[rn2] + soappr[rand2];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soacer[rand2];
                        eng5 = wtsj[6] + wtobj7[rn1] + soappr[rand2];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soacer[rand2];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soappr[rand2];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soacer[rand2];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soappr[rand2];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soacer[rand2];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soappr[rand2];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soacer[rand2];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soappr[rand2];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soacer[rand2];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soappr[rand2];

                        sp4 = wtsjsn[5] + wtobj1s[rn1] + soacer[rand2];
                        eng4 = wtsjn[5] + wtobj6[rn2] + soappr[rand2];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soacer[rand2];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soappr[rand2];
                        break;
                }
                break;

            case "grow ":
                int rand3 = (int) (Math.random() * sogrow.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + socrecer[rand3];
                        eng1 = wtsj[0] + wtobj1[rn1] + sogrow[rand3];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + socrecer[rand3];
                        eng2 = wtsj[1] + wtobj2[rn1] + sogrow[rand3];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + socrecer[rand3];
                        eng3 = wtsj[2] + wtobj3[rn1] + sogrow[rand3];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + socrecer[rand3];
                        eng3she = wtsj[3] + wtobj4[rn1] + sogrow[rand3];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + socrecer[rand3];
                        sp3it = wtsj[4] + wtobj5[rn1] + sogrow[rand3];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + socrecer[rand3];
                        eng4 = wtsj[5] + wtobj6[rn2] + sogrow[rand3];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + socrecer[rand3];
                        eng5 = wtsj[6] + wtobj7[rn1] + sogrow[rand3];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + socrecer[rand3];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sogrow[rand3];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + socrecer[rand3];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sogrow[rand3];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + socrecer[rand3];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sogrow[rand3];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + socrecer[rand3];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sogrow[rand3];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + socrecer[rand3];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sogrow[rand3];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + socrecer[rand3];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sogrow[rand3];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + socrecer[rand3];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sogrow[rand3];
                        break;
                }
                break;

            case "improve ":
                int rand4 = (int) (Math.random() * soimpr.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + somejo[rand4];
                        eng1 = wtsj[0] + wtobj1[rn1] + soimpr[rand4];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + somejo[rand4];
                        eng2 = wtsj[1] + wtobj2[rn1] + soimpr[rand4];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + somejo[rand4];
                        eng3 = wtsj[2] + wtobj3[rn1] + soimpr[rand4];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + somejo[rand4];
                        eng3she = wtsj[3] + wtobj4[rn1] + soimpr[rand4];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + somejo[rand4];
                        sp3it = wtsj[4] + wtobj5[rn1] + soimpr[rand4];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + somejo[rand4];
                        eng4 = wtsj[5] + wtobj6[rn2] + soimpr[rand4];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + somejo[rand4];
                        eng5 = wtsj[6] + wtobj7[rn1] + soimpr[rand4];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + somejo[rand4];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soimpr[rand4];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + somejo[rand4];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soimpr[rand4];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + somejo[rand4];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soimpr[rand4];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + somejo[rand4];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soimpr[rand4];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + somejo[rand4];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soimpr[rand4];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + somejo[rand4];
                        eng4 = wtsjn[5] + wtobj6[rn2] + soimpr[rand4];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + somejo[rand4];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soimpr[rand4];
                        break;
                }
                break;

            case "begin ":
                int rand5 = (int) (Math.random() * sobegin.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + socomen[rand5];
                        eng1 = wtsj[0] + wtobj1[rn1] + sobegin[rand5];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + socomen[rand5];
                        eng2 = wtsj[1] + wtobj2[rn1] + sobegin[rand5];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + socomen[rand5];
                        eng3 = wtsj[2] + wtobj3[rn1] + sobegin[rand5];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + socomen[rand5];
                        eng3she = wtsj[3] + wtobj4[rn1] + sobegin[rand5];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + socomen[rand5];
                        sp3it = wtsj[4] + wtobj5[rn1] + sobegin[rand5];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + socomen[rand5];
                        eng4 = wtsj[5] + wtobj6[rn2] + sobegin[rand5];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + socomen[rand5];
                        eng5 = wtsj[6] + wtobj7[rn1] + sobegin[rand5];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + socomen[rand5];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sobegin[rand5];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + socomen[rand5];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sobegin[rand5];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + socomen[rand5];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sobegin[rand5];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + socomen[rand5];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sobegin[rand5];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + socomen[rand5];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sobegin[rand5];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + socomen[rand5];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sobegin[rand5];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + socomen[rand5];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sobegin[rand5];
                        break;
                }
                break;

            case "continue ":
                int rand6 = (int) (Math.random() * socontinu.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + socontinu[rand6];
                        eng1 = wtsj[0] + wtobj1[rn1] + soconti[rand6];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + socontinu[rand6];
                        eng2 = wtsj[1] + wtobj2[rn1] + soconti[rand6];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + socontinu[rand6];
                        eng3 = wtsj[2] + wtobj3[rn1] + soconti[rand6];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + socontinu[rand6];
                        eng3she = wtsj[3] + wtobj4[rn1] + soconti[rand6];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + socontinu[rand6];
                        sp3it = wtsj[4] + wtobj5[rn1] + soconti[rand6];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + socontinu[rand6];
                        eng4 = wtsj[5] + wtobj6[rn2] + soconti[rand6];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + socontinu[rand6];
                        eng5 = wtsj[6] + wtobj7[rn1] + soconti[rand6];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + socontinu[rand6];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soconti[rand6];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + socontinu[rand6];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soconti[rand6];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + socontinu[rand6];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soconti[rand6];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + socontinu[rand6];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soconti[rand6];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + socontinu[rand6];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soconti[rand6];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + socontinu[rand6];
                        eng4 = wtsjn[5] + wtobj6[rn2] + soconti[rand6];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + socontinu[rand6];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soconti[rand6];
                        break;
                }
                break;

            case "write ":
                int rand7 = (int) (Math.random() * sowrite.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soescri[rand7];
                        eng1 = wtsj[0] + wtobj1[rn1] + sowrite[rand7];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soescri[rand7];
                        eng2 = wtsj[1] + wtobj2[rn1] + sowrite[rand7];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soescri[rand7];
                        eng3 = wtsj[2] + wtobj3[rn1] + sowrite[rand7];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soescri[rand7];
                        eng3she = wtsj[3] + wtobj4[rn1] + sowrite[rand7];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soescri[rand7];
                        sp3it = wtsj[4] + wtobj5[rn1] + sowrite[rand7];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soescri[rand7];
                        eng4 = wtsj[5] + wtobj6[rn2] + sowrite[rand7];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soescri[rand7];
                        eng5 = wtsj[6] + wtobj7[rn1] + sowrite[rand7];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soescri[rand7];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sowrite[rand7];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soescri[rand7];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sowrite[rand7];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soescri[rand7];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sowrite[rand7];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soescri[rand7];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sowrite[rand7];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soescri[rand7];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sowrite[rand7];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soescri[rand7];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sowrite[rand7];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soescri[rand7];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sowrite[rand7];
                        break;
                }
                break;

            case "achieve ":
                int rand8 = (int) (Math.random() * soachiv.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sologr[rand8];
                        eng1 = wtsj[0] + wtobj1[rn1] + soachiv[rand8];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sologr[rand8];
                        eng2 = wtsj[1] + wtobj2[rn1] + soachiv[rand8];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sologr[rand8];
                        eng3 = wtsj[2] + wtobj3[rn1] + soachiv[rand8];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sologr[rand8];
                        eng3she = wtsj[3] + wtobj4[rn1] + soachiv[rand8];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sologr[rand8];
                        sp3it = wtsj[4] + wtobj5[rn1] + soachiv[rand8];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sologr[rand8];
                        eng4 = wtsj[5] + wtobj6[rn2] + soachiv[rand8];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sologr[rand8];
                        eng5 = wtsj[6] + wtobj7[rn1] + soachiv[rand8];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sologr[rand8];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soachiv[rand8];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sologr[rand8];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soachiv[rand8];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sologr[rand8];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soachiv[rand8];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sologr[rand8];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soachiv[rand8];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sologr[rand8];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soachiv[rand8];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sologr[rand8];
                        eng4 = wtsjn[5] + wtobj6[rn2] + soachiv[rand8];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sologr[rand8];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soachiv[rand8];
                        break;
                }
                break;

            case "discuss ":
                int rand9 = (int) (Math.random() * sodisc.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sodiscu[rand9];
                        eng1 = wtsj[0] + wtobj1[rn1] + sodisc[rand9];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sodiscu[rand9];
                        eng2 = wtsj[1] + wtobj2[rn1] + sodisc[rand9];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sodiscu[rand9];
                        eng3 = wtsj[2] + wtobj3[rn1] + sodisc[rand9];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sodiscu[rand9];
                        eng3she = wtsj[3] + wtobj4[rn1] + sodisc[rand9];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sodiscu[rand9];
                        sp3it = wtsj[4] + wtobj5[rn1] + sodisc[rand9];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sodiscu[rand9];
                        eng4 = wtsj[5] + wtobj6[rn2] + sodisc[rand9];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sodiscu[rand9];
                        eng5 = wtsj[6] + wtobj7[rn1] + sodisc[rand9];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sodiscu[rand9];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sodisc[rand9];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sodiscu[rand9];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sodisc[rand9];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sodiscu[rand9];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sodisc[rand9];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sodiscu[rand9];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sodisc[rand9];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sodiscu[rand9];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sodisc[rand9];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sodiscu[rand9];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sodisc[rand9];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sodiscu[rand9];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sodisc[rand9];
                        break;
                }
                break;

            case "solve ":
                int rand10 = (int) (Math.random() * sosolv.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soresolv[rand10];
                        eng1 = wtsj[0] + wtobj1[rn1] + sosolv[rand10];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soresolv[rand10];
                        eng2 = wtsj[1] + wtobj2[rn1] + sosolv[rand10];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soresolv[rand10];
                        eng3 = wtsj[2] + wtobj3[rn1] + sosolv[rand10];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soresolv[rand10];
                        eng3she = wtsj[3] + wtobj4[rn1] + sosolv[rand10];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soresolv[rand10];
                        sp3it = wtsj[4] + wtobj5[rn1] + sosolv[rand10];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soresolv[rand10];
                        eng4 = wtsj[5] + wtobj6[rn2] + sosolv[rand10];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soresolv[rand10];
                        eng5 = wtsj[6] + wtobj7[rn1] + sosolv[rand10];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soresolv[rand10];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sosolv[rand10];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soresolv[rand10];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sosolv[rand10];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soresolv[rand10];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sosolv[rand10];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soresolv[rand10];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sosolv[rand10];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soresolv[rand10];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sosolv[rand10];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soresolv[rand10];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sosolv[rand10];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soresolv[rand10];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sosolv[rand10];
                        break;
                }
                break;

            case "invest ":
                int rand11 = (int) (Math.random() * soinvst.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soinvert[rand11];
                        eng1 = wtsj[0] + wtobj1[rn1] + soinvst[rand11];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soinvert[rand11];
                        eng2 = wtsj[1] + wtobj2[rn1] + soinvst[rand11];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soinvert[rand11];
                        eng3 = wtsj[2] + wtobj3[rn1] + soinvst[rand11];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soinvert[rand11];
                        eng3she = wtsj[3] + wtobj4[rn1] + soinvst[rand11];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soinvert[rand11];
                        sp3it = wtsj[4] + wtobj5[rn1] + soinvst[rand11];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soinvert[rand11];
                        eng4 = wtsj[5] + wtobj6[rn2] + soinvst[rand11];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soinvert[rand11];
                        eng5 = wtsj[6] + wtobj7[rn1] + soinvst[rand11];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soinvert[rand11];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soinvst[rand11];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soinvert[rand11];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soinvst[rand11];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soinvert[rand11];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soinvst[rand11];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soinvert[rand11];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soinvst[rand11];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soinvert[rand11];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soinvst[rand11];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soinvert[rand11];
                        eng4 = wtsjn[5] + wtobj6[rn2] + soinvst[rand11];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soinvert[rand11];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soinvst[rand11];
                        break;
                }
                break;

            case "reduce ":
                int rand12 = (int) (Math.random() * soreduce.length);

                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soreducir[rand12];
                        eng1 = wtsj[0] + wtobj1[rn1] + soreduce[rand12];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soreducir[rand12];
                        eng2 = wtsj[1] + wtobj2[rn1] + soreduce[rand12];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soreducir[rand12];
                        eng3 = wtsj[2] + wtobj3[rn1] + soreduce[rand12];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soreducir[rand12];
                        eng3she = wtsj[3] + wtobj4[rn1] + soreduce[rand12];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soreducir[rand12];
                        sp3it = wtsj[4] + wtobj5[rn1] + soreduce[rand12];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soreducir[rand12];
                        eng4 = wtsj[5] + wtobj6[rn2] + soreduce[rand12];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soreducir[rand12];
                        eng5 = wtsj[6] + wtobj7[rn1] + soreduce[rand12];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soreducir[rand12];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soreduce[rand12];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soreducir[rand12];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soreduce[rand12];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soreducir[rand12];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soreduce[rand12];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soreducir[rand12];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soreduce[rand12];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soreducir[rand12];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soreduce[rand12];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soreducir[rand12];
                        eng4 = wtsjn[5] + wtobj6[rn2] + soreduce[rand12];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soreducir[rand12];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soreduce[rand12];
                        break;
                }
                break;

            case "speak ":
                int rand13 = (int) (Math.random() * sospeak.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sohablar[rand13];
                        eng1 = wtsj[0] + wtobj1[rn1] + sospeak[rand13];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sohablar[rand13];
                        eng2 = wtsj[1] + wtobj2[rn1] + sospeak[rand13];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sohablar[rand13];
                        eng3 = wtsj[2] + wtobj3[rn1] + sospeak[rand13];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sohablar[rand13];
                        eng3she = wtsj[3] + wtobj4[rn1] + sospeak[rand13];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sohablar[rand13];
                        sp3it = wtsj[4] + wtobj5[rn1] + sospeak[rand13];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sohablar[rand13];
                        eng4 = wtsj[5] + wtobj6[rn2] + sospeak[rand13];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sohablar[rand13];
                        eng5 = wtsj[6] + wtobj7[rn1] + sospeak[rand13];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sohablar[rand13];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sospeak[rand13];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sohablar[rand13];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sospeak[rand13];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sohablar[rand13];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sospeak[rand13];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sohablar[rand13];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sospeak[rand13];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sohablar[rand13];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sospeak[rand13];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sohablar[rand13];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sospeak[rand13];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sohablar[rand13];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sospeak[rand13];
                        break;
                }
                break;

            case "apply ":
                int rand14 = (int) (Math.random() * soapply.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soaplic[rand14];
                        eng1 = wtsj[0] + wtobj1[rn1] + soapply[rand14];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soaplic[rand14];
                        eng2 = wtsj[1] + wtobj2[rn1] + soapply[rand14];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soaplic[rand14];
                        eng3 = wtsj[2] + wtobj3[rn1] + soapply[rand14];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soaplic[rand14];
                        eng3she = wtsj[3] + wtobj4[rn1] + soapply[rand14];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soaplic[rand14];
                        sp3it = wtsj[4] + wtobj5[rn1] + soapply[rand14];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soaplic[rand14];
                        eng4 = wtsj[5] + wtobj6[rn2] + soapply[rand14];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soaplic[rand14];
                        eng5 = wtsj[6] + wtobj7[rn1] + soapply[rand14];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soaplic[rand14];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soapply[rand14];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soaplic[rand14];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soapply[rand14];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soaplic[rand14];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soapply[rand14];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soaplic[rand14];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soapply[rand14];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soaplic[rand14];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soapply[rand14];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soaplic[rand14];
                        eng4 = wtsjn[5] + wtobj6[rn2] + soapply[rand14];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soaplic[rand14];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soapply[rand14];
                        break;
                }
                break;

            case "recommend ":
                int rand15 = (int) (Math.random() * sorec.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sorecom[rand15];
                        eng1 = wtsj[0] + wtobj1[rn1] + sorec[rand15];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sorecom[rand15];
                        eng2 = wtsj[1] + wtobj2[rn1] + sorec[rand15];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sorecom[rand15];
                        eng3 = wtsj[2] + wtobj3[rn1] + sorec[rand15];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sorecom[rand15];
                        eng3she = wtsj[3] + wtobj4[rn1] + sorec[rand15];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sorecom[rand15];
                        sp3it = wtsj[4] + wtobj5[rn1] + sorec[rand15];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sorecom[rand15];
                        eng4 = wtsj[5] + wtobj6[rn2] + sorec[rand15];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sorecom[rand15];
                        eng5 = wtsj[6] + wtobj7[rn1] + sorec[rand15];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sorecom[rand15];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sorec[rand15];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sorecom[rand15];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sorec[rand15];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sorecom[rand15];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sorec[rand15];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sorecom[rand15];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sorec[rand15];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sorecom[rand15];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sorec[rand15];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sorecom[rand15];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sorec[rand15];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sorecom[rand15];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sorec[rand15];
                        break;
                }
                break;

            case "vary ":
                int rand16 = (int) (Math.random() * sovar.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sovariar[rand16];
                        eng1 = wtsj[0] + wtobj1[rn1] + sovar[rand16];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sovariar[rand16];
                        eng2 = wtsj[1] + wtobj2[rn1] + sovar[rand16];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sovariar[rand16];
                        eng3 = wtsj[2] + wtobj3[rn1] + sovar[rand16];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sovariar[rand16];
                        eng3she = wtsj[3] + wtobj4[rn1] + sovar[rand16];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sovariar[rand16];
                        sp3it = wtsj[4] + wtobj5[rn1] + sovar[rand16];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sovariar[rand16];
                        eng4 = wtsj[5] + wtobj6[rn2] + sovar[rand16];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sovariar[rand16];
                        eng5 = wtsj[6] + wtobj7[rn1] + sovar[rand16];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sovariar[rand16];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sovar[rand16];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sovariar[rand16];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sovar[rand16];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sovariar[rand16];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sovar[rand16];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sovariar[rand16];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sovar[rand16];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sovariar[rand16];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sovar[rand16];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sovariar[rand16];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sovar[rand16];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sovariar[rand16];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sovar[rand16];
                        break;
                }
                break;

            case "generate ":
                int rand17 = (int) (Math.random() * sogener.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sogenerar[rand17];
                        eng1 = wtsj[0] + wtobj1[rn1] + sogener[rand17];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sogenerar[rand17];
                        eng2 = wtsj[1] + wtobj2[rn1] + sogener[rand17];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sogenerar[rand17];
                        eng3 = wtsj[2] + wtobj3[rn1] + sogener[rand17];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sogenerar[rand17];
                        eng3she = wtsj[3] + wtobj4[rn1] + sogener[rand17];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sogenerar[rand17];
                        sp3it = wtsj[4] + wtobj5[rn1] + sogener[rand17];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sogenerar[rand17];
                        eng4 = wtsj[5] + wtobj6[rn2] + sogener[rand17];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sogenerar[rand17];
                        eng5 = wtsj[6] + wtobj7[rn1] + sogener[rand17];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sogenerar[rand17];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sogener[rand17];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sogenerar[rand17];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sogener[rand17];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sogenerar[rand17];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sogener[rand17];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sogenerar[rand17];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sogener[rand17];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sogenerar[rand17];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sogener[rand17];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sogenerar[rand17];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sogener[rand17];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sogenerar[rand17];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sogener[rand17];
                        break;
                }
                break;

            case "obtain ":
                int rand18 = (int) (Math.random() * soobtn.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soobten[rand18];
                        eng1 = wtsj[0] + wtobj1[rn1] + soobtn[rand18];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soobten[rand18];
                        eng2 = wtsj[1] + wtobj2[rn1] + soobtn[rand18];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soobten[rand18];
                        eng3 = wtsj[2] + wtobj3[rn1] + soobtn[rand18];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soobten[rand18];
                        eng3she = wtsj[3] + wtobj4[rn1] + soobtn[rand18];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soobten[rand18];
                        sp3it = wtsj[4] + wtobj5[rn1] + soobtn[rand18];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soobten[rand18];
                        eng4 = wtsj[5] + wtobj6[rn2] + soobtn[rand18];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soobten[rand18];
                        eng5 = wtsj[6] + wtobj7[rn1] + soobtn[rand18];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soobten[rand18];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soobtn[rand18];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soobten[rand18];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soobtn[rand18];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soobten[rand18];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soobtn[rand18];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soobten[rand18];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soobtn[rand18];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soobten[rand18];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soobtn[rand18];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soobten[rand18];
                        eng4 = wtsjn[5] + wtobj6[rn2] + soobtn[rand18];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soobten[rand18];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soobtn[rand18];
                        break;
                }
                break;

            case "enter ":
                int rand19 = (int) (Math.random() * soent.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soentra[rand19];
                        eng1 = wtsj[0] + wtobj1[rn1] + soent[rand19];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soentra[rand19];
                        eng2 = wtsj[1] + wtobj2[rn1] + soent[rand19];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soentra[rand19];
                        eng3 = wtsj[2] + wtobj3[rn1] + soent[rand19];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soentra[rand19];
                        eng3she = wtsj[3] + wtobj4[rn1] + soent[rand19];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soentra[rand19];
                        sp3it = wtsj[4] + wtobj5[rn1] + soent[rand19];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soentra[rand19];
                        eng4 = wtsj[5] + wtobj6[rn2] + soent[rand19];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soentra[rand19];
                        eng5 = wtsj[6] + wtobj7[rn1] + soent[rand19];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soentra[rand19];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soent[rand19];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soentra[rand19];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soent[rand19];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soentra[rand19];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soent[rand19];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soentra[rand19];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soent[rand19];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soentra[rand19];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soent[rand19];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soentra[rand19];
                        eng4 = wtsjn[5] + wtobj6[rn2] + soent[rand19];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soentra[rand19];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soent[rand19];
                        break;
                }
                break;

            case "appreciate ":
                int rand20 = (int) (Math.random() * soapre.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soapre[rand20];
                        eng1 = wtsj[0] + wtobj1[rn1] + soappre[rand20];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soapre[rand20];
                        eng2 = wtsj[1] + wtobj2[rn1] + soappre[rand20];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soapre[rand20];
                        eng3 = wtsj[2] + wtobj3[rn1] + soappre[rand20];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soapre[rand20];
                        eng3she = wtsj[3] + wtobj4[rn1] + soappre[rand20];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soapre[rand20];
                        sp3it = wtsj[4] + wtobj5[rn1] + soappre[rand20];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soapre[rand20];
                        eng4 = wtsj[5] + wtobj6[rn2] + soappre[rand20];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soapre[rand20];
                        eng5 = wtsj[6] + wtobj7[rn1] + soappre[rand20];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soapre[rand20];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soappre[rand20];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soapre[rand20];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soappre[rand20];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soapre[rand20];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soappre[rand20];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soapre[rand20];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soappre[rand20];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soapre[rand20];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soappre[rand20];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soapre[rand20];
                        eng4 = wtsjn[5] + wtobj6[rn2] + soappre[rand20];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soapre[rand20];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soappre[rand20];
                        break;
                }
                break;

            case "manage ":
                int rand21 = (int) (Math.random() * soman.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + somane[rand21];
                        eng1 = wtsj[0] + wtobj1[rn1] + soman[rand21];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + somane[rand21];
                        eng2 = wtsj[1] + wtobj2[rn1] + soman[rand21];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + somane[rand21];
                        eng3 = wtsj[2] + wtobj3[rn1] + soman[rand21];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + somane[rand21];
                        eng3she = wtsj[3] + wtobj4[rn1] + soman[rand21];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + somane[rand21];
                        sp3it = wtsj[4] + wtobj5[rn1] + soman[rand21];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + somane[rand21];
                        eng4 = wtsj[5] + wtobj6[rn2] + soman[rand21];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + somane[rand21];
                        eng5 = wtsj[6] + wtobj7[rn1] + soman[rand21];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + somane[rand21];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soman[rand21];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + somane[rand21];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soman[rand21];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + somane[rand21];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soman[rand21];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + somane[rand21];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soman[rand21];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + somane[rand21];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soman[rand21];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + somane[rand21];
                        eng4 = wtsjn[5] + wtobj6[rn2] + soman[rand21];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + somane[rand21];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soman[rand21];
                        break;
                }
                break;

            case "earn ":
                int rand22 = (int) (Math.random() * soearn.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sogan[rand22];
                        eng1 = wtsj[0] + wtobj1[rn1] + soearn[rand22];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sogan[rand22];
                        eng2 = wtsj[1] + wtobj2[rn1] + soearn[rand22];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sogan[rand22];
                        eng3 = wtsj[2] + wtobj3[rn1] + soearn[rand22];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sogan[rand22];
                        eng3she = wtsj[3] + wtobj4[rn1] + soearn[rand22];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sogan[rand22];
                        sp3it = wtsj[4] + wtobj5[rn1] + soearn[rand22];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sogan[rand22];
                        eng4 = wtsj[5] + wtobj6[rn2] + soearn[rand22];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sogan[rand22];
                        eng5 = wtsj[6] + wtobj7[rn1] + soearn[rand22];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sogan[rand22];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soearn[rand22];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sogan[rand22];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soearn[rand22];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sogan[rand22];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soearn[rand22];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sogan[rand22];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soearn[rand22];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sogan[rand22];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soearn[rand22];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sogan[rand22];
                        eng4 = wtsjn[5] + wtobj6[rn2] + soearn[rand22];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sogan[rand22];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soearn[rand22];
                        break;
                }
                break;


            case "reflect ":
                int rand23 = (int) (Math.random() * sorefl.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soreflejar[rand23];
                        eng1 = wtsj[0] + wtobj1[rn1] + sorefl[rand23];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soreflejar[rand23];
                        eng2 = wtsj[1] + wtobj2[rn1] + sorefl[rand23];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soreflejar[rand23];
                        eng3 = wtsj[2] + wtobj3[rn1] + sorefl[rand23];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soreflejar[rand23];
                        eng3she = wtsj[3] + wtobj4[rn1] + sorefl[rand23];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soreflejar[rand23];
                        sp3it = wtsj[4] + wtobj5[rn1] + sorefl[rand23];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soreflejar[rand23];
                        eng4 = wtsj[5] + wtobj6[rn2] + sorefl[rand23];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soreflejar[rand23];
                        eng5 = wtsj[6] + wtobj7[rn1] + sorefl[rand23];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soreflejar[rand23];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sorefl[rand23];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soreflejar[rand23];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sorefl[rand23];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soreflejar[rand23];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sorefl[rand23];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soreflejar[rand23];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sorefl[rand23];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soreflejar[rand23];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sorefl[rand23];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soreflejar[rand23];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sorefl[rand23];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soreflejar[rand23];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sorefl[rand23];
                        break;
                }
                break;

            case "install ":
                int rand24 = (int) (Math.random() * soinsta.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soinstalar[rand24];
                        eng1 = wtsj[0] + wtobj1[rn1] + soinsta[rand24];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soinstalar[rand24];
                        eng2 = wtsj[1] + wtobj2[rn1] + soinsta[rand24];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soinstalar[rand24];
                        eng3 = wtsj[2] + wtobj3[rn1] + soinsta[rand24];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soinstalar[rand24];
                        eng3she = wtsj[3] + wtobj4[rn1] + soinsta[rand24];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soinstalar[rand24];
                        sp3it = wtsj[4] + wtobj5[rn1] + soinsta[rand24];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soinstalar[rand24];
                        eng4 = wtsj[5] + wtobj6[rn2] + soinsta[rand24];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soinstalar[rand24];
                        eng5 = wtsj[6] + wtobj7[rn1] + soinsta[rand24];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soinstalar[rand24];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soinsta[rand24];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soinstalar[rand24];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soinsta[rand24];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soinstalar[rand24];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soinsta[rand24];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soinstalar[rand24];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soinsta[rand24];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soinstalar[rand24];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soinsta[rand24];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soinstalar[rand24];
                        eng4 = wtsjn[5] + wtobj6[rn2] + soinsta[rand24];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soinstalar[rand24];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soinsta[rand24];
                        break;
                }
                break;

            case "overcome ":
                int rand25 = (int) (Math.random() * soover.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sosobre[rand25];
                        eng1 = wtsj[0] + wtobj1[rn1] + soover[rand25];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sosobre[rand25];
                        eng2 = wtsj[1] + wtobj2[rn1] + soover[rand25];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sosobre[rand25];
                        eng3 = wtsj[2] + wtobj3[rn1] + soover[rand25];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sosobre[rand25];
                        eng3she = wtsj[3] + wtobj4[rn1] + soover[rand25];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sosobre[rand25];
                        sp3it = wtsj[4] + wtobj5[rn1] + soover[rand25];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sosobre[rand25];
                        eng4 = wtsj[5] + wtobj6[rn2] + soover[rand25];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sosobre[rand25];
                        eng5 = wtsj[6] + wtobj7[rn1] + soover[rand25];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sosobre[rand25];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soover[rand25];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sosobre[rand25];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soover[rand25];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sosobre[rand25];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soover[rand25];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sosobre[rand25];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soover[rand25];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sosobre[rand25];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soover[rand25];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sosobre[rand25];
                        eng4 = wtsjn[5] + wtobj6[rn2] + soover[rand25];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sosobre[rand25];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soover[rand25];
                        break;
                }
                break;

            case "adjust ":
                int rand26 = (int) (Math.random() * soadj.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soaju[rand26];
                        eng1 = wtsj[0] + wtobj1[rn1] + soadj[rand26];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soaju[rand26];
                        eng2 = wtsj[1] + wtobj2[rn1] + soadj[rand26];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soaju[rand26];
                        eng3 = wtsj[2] + wtobj3[rn1] + soadj[rand26];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soaju[rand26];
                        eng3she = wtsj[3] + wtobj4[rn1] + soadj[rand26];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soaju[rand26];
                        sp3it = wtsj[4] + wtobj5[rn1] + soadj[rand26];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soaju[rand26];
                        eng4 = wtsj[5] + wtobj6[rn2] + soadj[rand26];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soaju[rand26];
                        eng5 = wtsj[6] + wtobj7[rn1] + soadj[rand26];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soaju[rand26];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soadj[rand26];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soaju[rand26];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soadj[rand26];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soaju[rand26];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soadj[rand26];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soaju[rand26];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soadj[rand26];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soaju[rand26];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soadj[rand26];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soaju[rand26];
                        eng4 = wtsjn[5] + wtobj6[rn2] + soadj[rand26];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soaju[rand26];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soadj[rand26];
                        break;
                }
                break;

            case "relieve ":
                int rand27 = (int) (Math.random() * sorelieve.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soaliv[rand27];
                        eng1 = wtsj[0] + wtobj1[rn1] + sorelieve[rand27];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soaliv[rand27];
                        eng2 = wtsj[1] + wtobj2[rn1] + sorelieve[rand27];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soaliv[rand27];
                        eng3 = wtsj[2] + wtobj3[rn1] + sorelieve[rand27];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soaliv[rand27];
                        eng3she = wtsj[3] + wtobj4[rn1] + sorelieve[rand27];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soaliv[rand27];
                        sp3it = wtsj[4] + wtobj5[rn1] + sorelieve[rand27];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soaliv[rand27];
                        eng4 = wtsj[5] + wtobj6[rn2] + sorelieve[rand27];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soaliv[rand27];
                        eng5 = wtsj[6] + wtobj7[rn1] + sorelieve[rand27];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soaliv[rand27];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sorelieve[rand27];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soaliv[rand27];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sorelieve[rand27];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soaliv[rand27];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sorelieve[rand27];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soaliv[rand27];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sorelieve[rand27];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soaliv[rand27];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sorelieve[rand27];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soaliv[rand27];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sorelieve[rand27];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soaliv[rand27];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sorelieve[rand27];
                        break;
                }
                break;

        }


    }//PD 16/06/2022



    //DIFICULTAD 2
    //DIFICULTAD 2
    public void GenPresSimp2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo " + v1[rand] + arraySodEsp;
                        eng1 = "I " + verbs[rand] + arraySodEng;

                        sp2 = "tú " + v2[rand] + arraySodEsp;
                        eng2 = "you " + verbs[rand] + arraySodEng;

                        sp3 = "él " + v3[rand] + arraySodEsp;
                        eng3 = "he " + verbs3[rand] + arraySodEng;

                        sp3ella = "ella " + v3[rand] + arraySodEsp;
                        eng3she = "she " + verbs3[rand] + arraySodEng;

                        sp3eso = "eso " + v3[rand] + arraySodEsp;
                        sp3it = "it " + verbs3[rand] + arraySodEng;

                        sp4 = "ellos " + v4[rand] + arraySodEsp;
                        eng4 = "they " + verbs[rand] + arraySodEng;

                        sp5 = "nosotros " + v5nos[rand] + arraySodEsp;
                        eng5 = "we " + verbs[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo " + "no " + v1[rand] + arraySodEsp;
                        eng1 = "I " + "don't " + verbs[rand] + arraySodEng;

                        sp2 = "tú " + "no " + v2[rand] + arraySodEsp;
                        eng2 = "you " + "don't " + verbs[rand] + arraySodEng;

                        sp3 = "él " + "no " + v3[rand] + arraySodEsp;
                        eng3 = "he " + "doesn't " + verbs[rand] + arraySodEng;

                        sp3ella = "ella " + "no " + v3[rand] + arraySodEsp;
                        eng3she = "she " + "doesn't " + verbs[rand] + arraySodEng;

                        sp3eso = "eso " + "no " + v3[rand] + arraySodEsp;
                        sp3it = "it " + "doesn't " + verbs[rand] + arraySodEng;

                        sp4 = "ellos " + "no " + v4[rand] + arraySodEsp;
                        eng4 = "they " + "don't " + verbs[rand] + arraySodEng;

                        sp5 = "nosotros " + "no " + v5nos[rand] + arraySodEsp;
                        eng5 = "we " + "don't " + verbs[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenPresCont2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo estoy " + verbconti[rand] + arraySodEsp;
                        eng1 = "I am " + verbscont[rand] + arraySodEng;
                        eng12 = "I'm " + verbscont[rand] + arraySodEng;

                        sp2 = "tú estás " + verbconti[rand] + arraySodEsp;
                        eng2 = "you are " + verbscont[rand] + arraySodEng;
                        eng22 = "you're " + verbscont[rand] + arraySodEng;

                        sp3 = "él está " + verbconti[rand] + arraySodEsp;
                        eng3 = "he is " + verbscont[rand] + arraySodEng;
                        eng32 = "he's " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella está " + verbconti[rand] + arraySodEsp;
                        eng3she = "she is " + verbscont[rand] + arraySodEng;
                        eng3she2 = "she's " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso está " + verbconti[rand] + arraySodEsp;
                        sp3it = "it is " + verbscont[rand] + arraySodEng;
                        sp3it2 = "it's " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos están " + verbconti[rand] + arraySodEsp;
                        eng4 = "they are " + verbscont[rand] + arraySodEng;
                        eng42 = "they're " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros estamos " + verbconti[rand] + arraySodEsp;
                        eng5 = "we are " + verbscont[rand] + arraySodEng;
                        eng52 = "we're " + verbscont[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo " + "no estoy " + verbconti[rand] + arraySodEsp;
                        eng1 = "I " + "am not " + verbscont[rand] + arraySodEng;
                        eng12 = "I'm not " + verbscont[rand] + arraySodEng;

                        sp2 = "tú " + "no estás " + verbconti[rand] + arraySodEsp;
                        eng2 = "you're not " + verbscont[rand] + arraySodEng;
                        eng22 = "you " + "aren't " + verbscont[rand] + arraySodEng;

                        sp3 = "él " + "no está " + verbconti[rand] + arraySodEsp;
                        eng3 = "he's not " + verbscont[rand] + arraySodEng;
                        eng32 = "he " + "isn't " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella " + "no está " + verbconti[rand] + arraySodEsp;
                        eng3she = "she's not " + verbscont[rand] + arraySodEng;
                        eng3she2 = "she " + "isn't " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso " + "no está " + verbconti[rand] + arraySodEsp;
                        sp3it = "it's not " + verbscont[rand] + arraySodEng;
                        sp3it2 = "it " + "isn't " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos " + "no están " + verbconti[rand] + arraySodEsp;
                        eng4 = "they're not " + verbscont[rand] + arraySodEng;
                        eng42 = "they " + "aren't " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros " + "no están " + verbconti[rand] + arraySodEsp;
                        eng5 = "we're not " + verbscont[rand] + arraySodEng;
                        eng52 = "we " + "aren't " + verbscont[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenPresPerf2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo he " + verbpartsp[rand] + arraySodEsp;
                        eng1 = "I have " + verbsparteng[rand] + arraySodEng;
                        eng12 = "I've " + verbsparteng[rand] + arraySodEng;

                        sp2 = "tú has " + verbpartsp[rand] + arraySodEsp;
                        eng2 = "you have " + verbsparteng[rand] + arraySodEng;
                        eng22 = "you've " + verbsparteng[rand] + arraySodEng;

                        sp3 = "él ha " + verbpartsp[rand] + arraySodEsp;
                        eng3 = "he has " + verbsparteng[rand] + arraySodEng;
                        eng32 = "he's " + verbsparteng[rand] + arraySodEng;

                        sp3ella = "ella ha " + verbpartsp[rand] + arraySodEsp;
                        eng3she = "she has " + verbsparteng[rand] + arraySodEng;
                        eng3she2 = "she's " + verbsparteng[rand] + arraySodEng;

                        sp3eso = "eso ha " + verbpartsp[rand] + arraySodEsp;
                        sp3it = "it has " + verbsparteng[rand] + arraySodEng;
                        sp3it2 = "it's " + verbsparteng[rand] + arraySodEng;

                        sp4 = "ellos han " + verbpartsp[rand] + arraySodEsp;
                        eng4 = "they have " + verbsparteng[rand] + arraySodEng;
                        eng42 = "they've " + verbsparteng[rand] + arraySodEng;

                        sp5 = "nosotros hemos " + verbpartsp[rand] + arraySodEsp;
                        eng5 = "we have " + verbsparteng[rand] + arraySodEng;
                        eng52 = "we've " + verbsparteng[rand] + arraySodEng;
                        break;
                    case 1:
                        sp1 = "yo no he " + verbpartsp[rand] + arraySodEsp;
                        eng1 = "I have not " + verbsparteng[rand] + arraySodEng;
                        eng12 = "I haven't " + verbsparteng[rand] + arraySodEng;

                        sp2 = "tú no has " + verbpartsp[rand] + arraySodEsp;
                        eng2 = "you have not " + verbsparteng[rand] + arraySodEng;
                        eng22 = "you haven't " + verbsparteng[rand] + arraySodEng;

                        sp3 = "él no ha " + verbpartsp[rand] + arraySodEsp;
                        eng3 = "he has not " + verbsparteng[rand] + arraySodEng;
                        eng32 = "he hasn't " + verbsparteng[rand] + arraySodEng;

                        sp3ella = "ella no ha " + verbpartsp[rand] + arraySodEsp;
                        eng3she = "she has not " + verbsparteng[rand] + arraySodEng;
                        eng3she2 = "she hasn't " + verbsparteng[rand] + arraySodEng;

                        sp3eso = "eso no ha " + verbpartsp[rand] + arraySodEsp;
                        sp3it = "it has not " + verbsparteng[rand] + arraySodEng;
                        sp3it2 = "it hasn't " + verbsparteng[rand] + arraySodEng;

                        sp4 = "ellos no han " + verbpartsp[rand] + arraySodEsp;
                        eng4 = "they have not " + verbsparteng[rand] + arraySodEng;
                        eng42 = "they haven't " + verbsparteng[rand] + arraySodEng;

                        sp5 = "nosotros no hemos " + verbpartsp[rand] + arraySodEsp;
                        eng5 = "we have not " + verbsparteng[rand] + arraySodEng;
                        eng52 = "we haven't " + verbsparteng[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenPresPerfCont2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo he estado " + verbconti[rand] + arraySodEsp;
                        eng1 = "I have been " + verbscont[rand] + arraySodEng;

                        sp2 = "tú has estado " + verbconti[rand] + arraySodEsp;
                        eng2 = "you have been " + verbscont[rand] + arraySodEng;

                        sp3 = "él ha estado " + verbconti[rand] + arraySodEsp;
                        eng3 = "he has been " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella ha estado " + verbconti[rand] + arraySodEsp;
                        eng3she = "she has been " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso ha estado " + verbconti[rand] + arraySodEsp;
                        sp3it = "it has been " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos han estado " + verbconti[rand] + arraySodEsp;
                        eng4 = "they have been " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros hemos estado " + verbconti[rand] + arraySodEsp;
                        eng5 = "we have been " + verbscont[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo no he estado " + verbconti[rand] + arraySodEsp;
                        eng1 = "I haven't been " + verbscont[rand] + arraySodEng;

                        sp2 = "tú no has estado " + verbconti[rand] + arraySodEsp;
                        eng2 = "you haven't been " + verbscont[rand] + arraySodEng;

                        sp3 = "él no ha estado " + verbconti[rand] + arraySodEsp;
                        eng3 = "he hasn't been " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella no ha estado " + verbconti[rand] + arraySodEsp;
                        eng3she = "she hasn't been " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso no ha estado " + verbconti[rand] + arraySodEsp;
                        sp3it = "it hasn't been " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos no han estado " + verbconti[rand] + arraySodEsp;
                        eng4 = "they haven't been " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros no hemos estado " + verbconti[rand] + arraySodEsp;
                        eng5 = "we haven't been " + verbscont[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023

    // falta past simple, imp, preterito
    public void GenPastSimp2() {
        int neg = (int) (Math.random() * 4);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo " + vsp1[rand] + arraySodEsp;
                        eng1 = "I " + vsp[rand] + arraySodEng;

                        sp2 = "tú " + vsp2[rand] + arraySodEsp;
                        eng2 = "you " + vsp[rand] + arraySodEng;

                        sp3 = "él " + vsp3[rand] + arraySodEsp;
                        eng3 = "he " + vsp[rand] + arraySodEng;

                        sp3ella = "ella " + vsp3[rand] + arraySodEsp;
                        eng3she = "she " + vsp[rand] + arraySodEng;

                        sp3eso = "eso " + vsp3[rand] + arraySodEsp;
                        sp3it = "it " + vsp[rand] + arraySodEng;

                        sp4 = "ellos " + vsp4[rand] + arraySodEsp;
                        eng4 = "they " + vsp[rand] + arraySodEng;

                        sp5 = "nosotros " + vsp5[rand] + arraySodEsp;
                        eng5 = "we " + vsp[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo " + "no " + vsp1[rand] + arraySodEsp;
                        eng1 = "I " + "didn't " + verbs[rand] + arraySodEng;

                        sp2 = "tú " + "no " + vsp2[rand] + arraySodEsp;
                        eng2 = "you " + "didn't " + verbs[rand] + arraySodEng;

                        sp3 = "él " + "no " + vsp3[rand] + arraySodEsp;
                        eng3 = "he " + "didn't " + verbs[rand] + arraySodEng;

                        sp3ella = "ella " + "no " + vsp3[rand] + arraySodEsp;
                        eng3she = "she " + "didn't " + verbs[rand] + arraySodEng;

                        sp3eso = "eso " + "no " + vsp3[rand] + arraySodEsp;
                        sp3it = "it " + "didn't " + verbs[rand] + arraySodEng;

                        sp4 = "ellos " + "no " + vsp4[rand] + arraySodEsp;
                        eng4 = "they " + "didn't " + verbs[rand] + arraySodEng;

                        sp5 = "nosotros " + "no " + vsp5[rand] + arraySodEsp;
                        eng5 = "we " + "didn't " + verbs[rand] + arraySodEng;
                        break;
                    case 2:
                        sp1 = "yo " + vsp1i[rand] + arraySodEsp;
                        eng1 = "I " + vsp[rand] + arraySodEng;

                        sp2 = "tú " + vsp2i[rand] + arraySodEsp;
                        eng2 = "you " + vsp[rand] + arraySodEng;

                        sp3 = "él " + vsp3i[rand] + arraySodEsp;
                        eng3 = "he " + vsp[rand] + arraySodEng;

                        sp3ella = "ella " + vsp3i[rand] + arraySodEsp;
                        eng3she = "she " + vsp[rand] + arraySodEng;

                        sp3eso = "eso " + vsp3i[rand] + arraySodEsp;
                        sp3it = "it " + vsp[rand] + arraySodEng;

                        sp4 = "ellos " + vsp4i[rand] + arraySodEsp;
                        eng4 = "they " + vsp[rand] + arraySodEng;

                        sp5 = "nosotros " + vsp5i[rand] + arraySodEsp;
                        eng5 = "we " + vsp[rand] + arraySodEng;

                        break;
                    case 3:
                        sp1 = "yo " + "no " + vsp1i[rand] + arraySodEsp;
                        eng1 = "I " + "didn't " + verbs[rand] + arraySodEng;

                        sp2 = "tú " + "no " + vsp2i[rand] + arraySodEsp;
                        eng2 = "you " + "didn't " + verbs[rand] + arraySodEng;

                        sp3 = "él " + "no " + vsp3i[rand] + arraySodEsp;
                        eng3 = "he " + "didn't " + verbs[rand] + arraySodEng;

                        sp3ella = "ella " + "no " + vsp3i[rand] + arraySodEsp;
                        eng3she = "she " + "didn't " + verbs[rand] + arraySodEng;

                        sp3eso = "eso " + "no " + vsp3i[rand] + arraySodEsp;
                        sp3it = "it " + "didn't " + verbs[rand] + arraySodEng;

                        sp4 = "ellos " + "no " + vsp4i[rand] + arraySodEsp;
                        eng4 = "they " + "didn't " + verbs[rand] + arraySodEng;

                        sp5 = "nosotros " + "no " + vsp5i[rand] + arraySodEsp;
                        eng5 = "we " + "didn't " + verbs[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenPastCont2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo estaba " + verbconti[rand] + arraySodEsp;
                        eng1 = "I was " + verbscont[rand] + arraySodEng;
                        eng12 = "I was " + verbscont[rand] + arraySodEng;

                        sp2 = "tú estabas " + verbconti[rand] + arraySodEsp;
                        eng2 = "you were " + verbscont[rand] + arraySodEng;
                        eng22 = "you were " + verbscont[rand] + arraySodEng;

                        sp3 = "él estaba " + verbconti[rand] + arraySodEsp;
                        eng3 = "he was " + verbscont[rand] + arraySodEng;
                        eng32 = "he was " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella estaba " + verbconti[rand] + arraySodEsp;
                        eng3she = "she was " + verbscont[rand] + arraySodEng;
                        eng3she2 = "she was " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso estaba " + verbconti[rand] + arraySodEsp;
                        sp3it = "it was " + verbscont[rand] + arraySodEng;
                        sp3it2 = "it was " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos estaban " + verbconti[rand] + arraySodEsp;
                        eng4 = "they were " + verbscont[rand] + arraySodEng;
                        eng42 = "they were " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros estabamos " + verbconti[rand] + arraySodEsp;
                        eng5 = "we were " + verbscont[rand] + arraySodEng;
                        eng52 = "we were " + verbscont[rand] + arraySodEng;
                        break;
                    case 1:
                        sp1 = "yo " + "no estaba " + verbconti[rand] + arraySodEsp;
                        eng1 = "I " + "was not " + verbscont[rand] + arraySodEng;
                        eng12 = "I " + "wasn't " + verbscont[rand] + arraySodEng;

                        sp2 = "tú " + "no estabas " + verbconti[rand] + arraySodEsp;
                        eng2 = "you " + "were not " + verbscont[rand] + arraySodEng;
                        eng22 = "you " + "weren't " + verbscont[rand] + arraySodEng;

                        sp3 = "él " + "no estaba " + verbconti[rand] + arraySodEsp;
                        eng3 = "he " + "was not " + verbscont[rand] + arraySodEng;
                        eng32 = "he " + "wasn't " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella " + "no estaba " + verbconti[rand] + arraySodEsp;
                        eng3she = "she " + "was not " + verbscont[rand] + arraySodEng;
                        eng3she2 = "she " + "wasn't " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso " + "no estaba " + verbconti[rand] + arraySodEsp;
                        sp3it = "it " + "was not " + verbscont[rand] + arraySodEng;
                        sp3it2 = "it " + "wasn't " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos " + "no estaban " + verbconti[rand] + arraySodEsp;
                        eng4 = "they " + "were not " + verbscont[rand] + arraySodEng;
                        eng42 = "they " + "weren't " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros " + "no estabamos " + verbconti[rand] + arraySodEsp;
                        eng5 = "we " + "were not " + verbscont[rand] + arraySodEng;
                        eng52 = "we " + "weren't " + verbscont[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenPastPerf2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo había " + verbpartsp[rand] + arraySodEsp;
                        eng1 = "I had " + verbsparteng[rand] + arraySodEng;
                        eng12 = "I'd " + verbsparteng[rand] + arraySodEng;

                        sp2 = "tú habías " + verbpartsp[rand] + arraySodEsp;
                        eng2 = "you had " + verbsparteng[rand] + arraySodEng;
                        eng22 = "you'd " + verbsparteng[rand] + arraySodEng;

                        sp3 = "él había " + verbpartsp[rand] + arraySodEsp;
                        eng3 = "he had " + verbsparteng[rand] + arraySodEng;
                        eng32 = "he'd " + verbsparteng[rand] + arraySodEng;

                        sp3ella = "ella había " + verbpartsp[rand] + arraySodEsp;
                        eng3she = "she had " + verbsparteng[rand] + arraySodEng;
                        eng3she2 = "she'd " + verbsparteng[rand] + arraySodEng;

                        sp3eso = "eso había " + verbpartsp[rand] + arraySodEsp;
                        sp3it = "it had " + verbsparteng[rand] + arraySodEng;
                        sp3it2 = "it'd " + verbsparteng[rand] + arraySodEng;

                        sp4 = "ellos habían " + verbpartsp[rand] + arraySodEsp;
                        eng4 = "they had " + verbsparteng[rand] + arraySodEng;
                        eng42 = "they'd " + verbsparteng[rand] + arraySodEng;

                        sp5 = "nosotros habíamos " + verbpartsp[rand] + arraySodEsp;
                        eng5 = "we had " + verbsparteng[rand] + arraySodEng;
                        eng52 = "we'd " + verbsparteng[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo no había " + verbpartsp[rand] + arraySodEsp;
                        eng1 = "I had not " + verbsparteng[rand] + arraySodEng;
                        eng12 = "I hadn't " + verbsparteng[rand] + arraySodEng;

                        sp2 = "tú no habías " + verbpartsp[rand] + arraySodEsp;
                        eng2 = "you had not " + verbsparteng[rand] + arraySodEng;
                        eng22 = "you hadn't " + verbsparteng[rand] + arraySodEng;

                        sp3 = "él no había " + verbpartsp[rand] + arraySodEsp;
                        eng3 = "he had not " + verbsparteng[rand] + arraySodEng;
                        eng32 = "he hadn't " + verbsparteng[rand] + arraySodEng;

                        sp3ella = "ella no había " + verbpartsp[rand] + arraySodEsp;
                        eng3she = "she had not " + verbsparteng[rand] + arraySodEng;
                        eng3she2 = "she hadn't " + verbsparteng[rand] + arraySodEng;

                        sp3eso = "eso no había " + verbpartsp[rand] + arraySodEsp;
                        sp3it = "it had not " + verbsparteng[rand] + arraySodEng;
                        sp3it2 = "it hadn't " + verbsparteng[rand] + arraySodEng;

                        sp4 = "ellos no habían " + verbpartsp[rand] + arraySodEsp;
                        eng4 = "they had not " + verbsparteng[rand] + arraySodEng;
                        eng42 = "they hadn't " + verbsparteng[rand] + arraySodEng;

                        sp5 = "nosotros no habíamos " + verbpartsp[rand] + arraySodEsp;
                        eng5 = "we had not " + verbsparteng[rand] + arraySodEng;
                        eng52 = "we hadn't " + verbsparteng[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenPastPerfCont2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo había estado " + verbconti[rand] + arraySodEsp;
                        eng1 = "I had been " + verbscont[rand] + arraySodEng;

                        sp2 = "tú habías estado " + verbconti[rand] + arraySodEsp;
                        eng2 = "you had been " + verbscont[rand] + arraySodEng;

                        sp3 = "él había estado " + verbconti[rand] + arraySodEsp;
                        eng3 = "he had been " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella había estado " + verbconti[rand] + arraySodEsp;
                        eng3she = "she had been " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso había estado " + verbconti[rand] + arraySodEsp;
                        sp3it = "it had been " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos habían estado " + verbconti[rand] + arraySodEsp;
                        eng4 = "they had been " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros habíamos estado " + verbconti[rand] + arraySodEsp;
                        eng5 = "we had been " + verbscont[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo no había estado " + verbconti[rand] + arraySodEsp;
                        eng1 = "I hadn't been " + verbscont[rand] + arraySodEng;

                        sp2 = "tú no habías estado " + verbconti[rand] + arraySodEsp;
                        eng2 = "you hadn't been " + verbscont[rand] + arraySodEng;

                        sp3 = "él no había estado " + verbconti[rand] + arraySodEsp;
                        eng3 = "he hadn't been " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella no había estado " + verbconti[rand] + arraySodEsp;
                        eng3she = "she hadn't been " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso no había estado " + verbconti[rand] + arraySodEsp;
                        sp3it = "it hadn't been " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos no habían estado " + verbconti[rand] + arraySodEsp;
                        eng4 = "they hadn't been " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros no habíamos estado " + verbconti[rand] + arraySodEsp;
                        eng5 = "we hadn't been " + verbscont[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023

    // futuros
    public void GenFutSimp2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo " + vsf1[rand] + arraySodEsp;
                        eng1 = "I will " + verbs[rand] + arraySodEng;

                        sp2 = "tú " + vsf2[rand] + arraySodEsp;
                        eng2 = "you will " + verbs[rand] + arraySodEng;

                        sp3 = "él " + vsf3[rand] + arraySodEsp;
                        eng3 = "he will " + verbs[rand] + arraySodEng;

                        sp3ella = "ella " + vsf3[rand] + arraySodEsp;
                        eng3she = "she will " + verbs[rand] + arraySodEng;

                        sp3eso = "eso " + vsf3[rand] + arraySodEsp;
                        sp3it = "it will " + verbs[rand] + arraySodEng;

                        sp4 = "ellos " + vsf5[rand] + arraySodEsp;
                        eng4 = "they will " + verbs[rand] + arraySodEng;

                        sp5 = "nosotros " + vsf4[rand] + arraySodEsp;
                        eng5 = "we will " + verbs[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo " + "no " + vsf1[rand] + arraySodEsp;
                        eng1 = "I " + "won't " + verbs[rand] + arraySodEng;

                        sp2 = "tú " + "no " + vsf2[rand] + arraySodEsp;
                        eng2 = "you " + "won't " + verbs[rand] + arraySodEng;

                        sp3 = "él " + "no " + vsf3[rand] + arraySodEsp;
                        eng3 = "he " + "won't " + verbs[rand] + arraySodEng;

                        sp3ella = "ella " + "no " + vsf3[rand] + arraySodEsp;
                        eng3she = "she " + "won't " + verbs[rand] + arraySodEng;

                        sp3eso = "eso " + "no " + vsf3[rand] + arraySodEsp;
                        sp3it = "it " + "won't " + verbs[rand] + arraySodEng;

                        sp4 = "ellos " + "no " + vsf5[rand] + arraySodEsp;
                        eng4 = "they " + "won't " + verbs[rand] + arraySodEng;

                        sp5 = "nosotros " + "no " + vsf4[rand] + arraySodEsp;
                        eng5 = "we " + "won't " + verbs[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenFutCont2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo estaré " + verbconti[rand] + arraySodEsp;
                        eng1 = "I will be " + verbscont[rand] + arraySodEng;
                        eng12 = "I'll be " + verbscont[rand] + arraySodEng;

                        sp2 = "tú estarás " + verbconti[rand] + arraySodEsp;
                        eng2 = "you will be " + verbscont[rand] + arraySodEng;
                        eng22 = "you'll be " + verbscont[rand] + arraySodEng;

                        sp3 = "él estará " + verbconti[rand] + arraySodEsp;
                        eng3 = "he will be " + verbscont[rand] + arraySodEng;
                        eng32 = "he'll be " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella estará " + verbconti[rand] + arraySodEsp;
                        eng3she = "she will be " + verbscont[rand] + arraySodEng;
                        eng3she2 = "she'll be " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso estará " + verbconti[rand] + arraySodEsp;
                        sp3it = "it will be " + verbscont[rand] + arraySodEng;
                        sp3it2 = "it'll be " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos estarán " + verbconti[rand] + arraySodEsp;
                        eng4 = "they will be " + verbscont[rand] + arraySodEng;
                        eng42 = "they'll be " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros estaremos " + verbconti[rand] + arraySodEsp;
                        eng5 = "we will be " + verbscont[rand] + arraySodEng;
                        eng52 = "we'll be " + verbscont[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo " + "no estaré " + verbconti[rand] + arraySodEsp;
                        eng1 = "I " + "will not be " + verbscont[rand] + arraySodEng;
                        eng12 = "I " + "won't be " + verbscont[rand] + arraySodEng;

                        sp2 = "tú " + "no estarás " + verbconti[rand] + arraySodEsp;
                        eng2 = "you " + "will not be " + verbscont[rand] + arraySodEng;
                        eng22 = "you " + "won't be " + verbscont[rand] + arraySodEng;

                        sp3 = "él " + "no estará " + verbconti[rand] + arraySodEsp;
                        eng3 = "he " + "will not be " + verbscont[rand] + arraySodEng;
                        eng32 = "he " + "won't be " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella " + "no estará " + verbconti[rand] + arraySodEsp;
                        eng3she = "she " + "will not be " + verbscont[rand] + arraySodEng;
                        eng3she2 = "she " + "won't be " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso " + "no estará " + verbconti[rand] + arraySodEsp;
                        sp3it = "it " + "will not be " + verbscont[rand] + arraySodEng;
                        sp3it2 = "it " + "won't be " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos " + "no estarán " + verbconti[rand] + arraySodEsp;
                        eng4 = "they " + "will not be " + verbscont[rand] + arraySodEng;
                        eng42 = "they " + "won't be " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros " + "no estaremos " + verbconti[rand] + arraySodEsp;
                        eng5 = "we " + "will not be " + verbscont[rand] + arraySodEng;
                        eng52 = "we " + "won't be " + verbscont[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenFutPerf2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo habré " + verbpartsp[rand] + arraySodEsp;
                        eng1 = "I will have " + verbsparteng[rand] + arraySodEng;
                        eng12 = "I'll have " + verbsparteng[rand] + arraySodEng;

                        sp2 = "tú habrás " + verbpartsp[rand] + arraySodEsp;
                        eng2 = "you will have " + verbsparteng[rand] + arraySodEng;
                        eng22 = "you'll have " + verbsparteng[rand] + arraySodEng;

                        sp3 = "él habrá " + verbpartsp[rand] + arraySodEsp;
                        eng3 = "he will have " + verbsparteng[rand] + arraySodEng;
                        eng32 = "he'll have " + verbsparteng[rand] + arraySodEng;

                        sp3ella = "ella habrá " + verbpartsp[rand] + arraySodEsp;
                        eng3she = "she will have " + verbsparteng[rand] + arraySodEng;
                        eng3she2 = "she'll have " + verbsparteng[rand] + arraySodEng;

                        sp3eso = "eso habrá " + verbpartsp[rand] + arraySodEsp;
                        sp3it = "it will have " + verbsparteng[rand] + arraySodEng;
                        sp3it2 = "it'll have " + verbsparteng[rand] + arraySodEng;

                        sp4 = "ellos habrán " + verbpartsp[rand] + arraySodEsp;
                        eng4 = "they will have " + verbsparteng[rand] + arraySodEng;
                        eng42 = "they'll have " + verbsparteng[rand] + arraySodEng;

                        sp5 = "nosotros habremos " + verbpartsp[rand] + arraySodEsp;
                        eng5 = "we will have " + verbsparteng[rand] + arraySodEng;
                        eng52 = "we'll have " + verbsparteng[rand] + arraySodEng;
                        break;
                    case 1:
                        sp1 = "yo no habré " + verbpartsp[rand] + arraySodEsp;
                        eng1 = "I will not have " + verbsparteng[rand] + arraySodEng;
                        eng12 = "I won't have " + verbsparteng[rand] + arraySodEng;

                        sp2 = "tú no habrás " + verbpartsp[rand] + arraySodEsp;
                        eng2 = "you will not have " + verbsparteng[rand] + arraySodEng;
                        eng22 = "you won't have " + verbsparteng[rand] + arraySodEng;

                        sp3 = "él no habrá " + verbpartsp[rand] + arraySodEsp;
                        eng3 = "he will not have " + verbsparteng[rand] + arraySodEng;
                        eng32 = "he won't have " + verbsparteng[rand] + arraySodEng;

                        sp3ella = "ella no habrá " + verbpartsp[rand] + arraySodEsp;
                        eng3she = "she will not have " + verbsparteng[rand] + arraySodEng;
                        eng3she2 = "she won't have " + verbsparteng[rand] + arraySodEng;

                        sp3eso = "eso no habrá " + verbpartsp[rand] + arraySodEsp;
                        sp3it = "it will not have " + verbsparteng[rand] + arraySodEng;
                        sp3it2 = "it won't have " + verbsparteng[rand] + arraySodEng;

                        sp4 = "ellos no habrán " + verbpartsp[rand] + arraySodEsp;
                        eng4 = "they will not have " + verbsparteng[rand] + arraySodEng;
                        eng42 = "they won't have " + verbsparteng[rand] + arraySodEng;

                        sp5 = "nosotros no habremos " + verbpartsp[rand] + arraySodEsp;
                        eng5 = "we will not have " + verbsparteng[rand] + arraySodEng;
                        eng52 = "we won't have " + verbsparteng[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenFutPerfCont2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo habré estado " + verbconti[rand] + arraySodEsp;
                        eng1 = "I will have been " + verbscont[rand] + arraySodEng;

                        sp2 = "tú habrás estado " + verbconti[rand] + arraySodEsp;
                        eng2 = "you will have been " + verbscont[rand] + arraySodEng;

                        sp3 = "él habrá estado " + verbconti[rand] + arraySodEsp;
                        eng3 = "he will have been " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella habrá estado " + verbconti[rand] + arraySodEsp;
                        eng3she = "she will have been " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso habrá estado " + verbconti[rand] + arraySodEsp;
                        sp3it = "it will have been " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos habrán estado " + verbconti[rand] + arraySodEsp;
                        eng4 = "they will have been " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros habremos estado " + verbconti[rand] + arraySodEsp;
                        eng5 = "we will have been " + verbscont[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo no habré estado " + verbconti[rand] + arraySodEsp;
                        eng1 = "I won't have been " + verbscont[rand] + arraySodEng;

                        sp2 = "tú no habrás estado " + verbconti[rand] + arraySodEsp;
                        eng2 = "you won't have been " + verbscont[rand] + arraySodEng;

                        sp3 = "él no habrá estado " + verbconti[rand] + arraySodEsp;
                        eng3 = "he won't have been " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella no habrá estado " + verbconti[rand] + arraySodEsp;
                        eng3she = "she won't have been " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso no habrá estado " + verbconti[rand] + arraySodEsp;
                        sp3it = "it won't have been " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos no habrán estado " + verbconti[rand] + arraySodEsp;
                        eng4 = "they won't have been " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros no habremos estado " + verbconti[rand] + arraySodEsp;
                        eng5 = "we won't have been " + verbscont[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023

    // WOULD
    public void GenWouldSimp2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo " + vsb1w[rand] + arraySodEsp;
                        eng1 = "I would " + verbs[rand] + arraySodEng;

                        sp2 = "tú " + vsb2w[rand] + arraySodEsp;
                        eng2 = "you would " + verbs[rand] + arraySodEng;

                        sp3 = "él " + vsb3w[rand] + arraySodEsp;
                        eng3 = "he would " + verbs[rand] + arraySodEng;

                        sp3ella = "ella " + vsb3w[rand] + arraySodEsp;
                        eng3she = "she would " + verbs[rand] + arraySodEng;

                        sp3eso = "eso " + vsb3w[rand] + arraySodEsp;
                        sp3it = "it would " + verbs[rand] + arraySodEng;

                        sp4 = "ellos " + vsb4w[rand] + arraySodEsp;
                        eng4 = "they would " + verbs[rand] + arraySodEng;

                        sp5 = "nosotros " + vsb5w[rand] + arraySodEsp;
                        eng5 = "we would " + verbs[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo " + "no " + vsb1w[rand] + arraySodEsp;
                        eng1 = "I " + "wouldn't " + verbs[rand] + arraySodEng;

                        sp2 = "tú " + "no " + vsb2w[rand] + arraySodEsp;
                        eng2 = "you " + "wouldn't " + verbs[rand] + arraySodEng;

                        sp3 = "él " + "no " + vsb3w[rand] + arraySodEsp;
                        eng3 = "he " + "wouldn't " + verbs[rand] + arraySodEng;

                        sp3ella = "ella " + "no " + vsb3w[rand] + arraySodEsp;
                        eng3she = "she " + "wouldn't " + verbs[rand] + arraySodEng;

                        sp3eso = "eso " + "no " + vsb3w[rand] + arraySodEsp;
                        sp3it = "it " + "wouldn't " + verbs[rand] + arraySodEng;

                        sp4 = "ellos " + "no " + vsb4w[rand] + arraySodEsp;
                        eng4 = "they " + "wouldn't " + verbs[rand] + arraySodEng;

                        sp5 = "nosotros " + "no " + vsb5w[rand] + arraySodEsp;
                        eng5 = "we " + "wouldn't " + verbs[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenWouldCont2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo estaría " + verbconti[rand] + arraySodEsp;
                        eng1 = "I would be " + verbscont[rand] + arraySodEng;
                        eng12 = "I'd be " + verbscont[rand] + arraySodEng;

                        sp2 = "tú estarías " + verbconti[rand] + arraySodEsp;
                        eng2 = "you would be " + verbscont[rand] + arraySodEng;
                        eng22 = "you'd be " + verbscont[rand] + arraySodEng;

                        sp3 = "él estaría " + verbconti[rand] + arraySodEsp;
                        eng3 = "he would be " + verbscont[rand] + arraySodEng;
                        eng32 = "he'd be " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella estaría " + verbconti[rand] + arraySodEsp;
                        eng3she = "she would be " + verbscont[rand] + arraySodEng;
                        eng3she2 = "she'd be " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso estaría " + verbconti[rand] + arraySodEsp;
                        sp3it = "it would be " + verbscont[rand] + arraySodEng;
                        sp3it2 = "it'd be " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos estarían " + verbconti[rand] + arraySodEsp;
                        eng4 = "they would be " + verbscont[rand] + arraySodEng;
                        eng42 = "they'd be " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros estaríamos " + verbconti[rand] + arraySodEsp;
                        eng5 = "we would be " + verbscont[rand] + arraySodEng;
                        eng52 = "we'd be " + verbscont[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo " + "no estaría " + verbconti[rand] + arraySodEsp;
                        eng1 = "I " + "would not be " + verbscont[rand] + arraySodEng;
                        eng12 = "I " + "wouldn't be " + verbscont[rand] + arraySodEng;

                        sp2 = "tú " + "no estarías " + verbconti[rand] + arraySodEsp;
                        eng2 = "you " + "would not be " + verbscont[rand] + arraySodEng;
                        eng22 = "you " + "wouldn't be " + verbscont[rand] + arraySodEng;

                        sp3 = "él " + "no estaría " + verbconti[rand] + arraySodEsp;
                        eng3 = "he " + "would not be " + verbscont[rand] + arraySodEng;
                        eng32 = "he " + "wouldn't be " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella " + "no estaría " + verbconti[rand] + arraySodEsp;
                        eng3she = "she " + "would not be " + verbscont[rand] + arraySodEng;
                        eng3she2 = "she " + "wouldn't be " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso " + "no estaría " + verbconti[rand] + arraySodEsp;
                        sp3it = "it " + "would not be " + verbscont[rand] + arraySodEng;
                        sp3it2 = "it " + "wouldn't be " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos " + "no estarían " + verbconti[rand] + arraySodEsp;
                        eng4 = "they " + "would not be " + verbscont[rand] + arraySodEng;
                        eng42 = "they " + "wouldn't be " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros " + "no estaríamos " + verbconti[rand] + arraySodEsp;
                        eng5 = "we " + "would not be " + verbscont[rand] + arraySodEng;
                        eng52 = "we " + "wouldn't be " + verbscont[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenWouldPerf2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo habría " + verbpartsp[rand] + arraySodEsp;
                        eng1 = "I would have " + verbsparteng[rand] + arraySodEng;
                        eng12 = "I'd have " + verbsparteng[rand] + arraySodEng;

                        sp2 = "tú habrías " + verbpartsp[rand] + arraySodEsp;
                        eng2 = "you would have " + verbsparteng[rand] + arraySodEng;
                        eng22 = "you'd have " + verbsparteng[rand] + arraySodEng;

                        sp3 = "él habría " + verbpartsp[rand] + arraySodEsp;
                        eng3 = "he would have " + verbsparteng[rand] + arraySodEng;
                        eng32 = "he'd have " + verbsparteng[rand] + arraySodEng;

                        sp3ella = "ella habría " + verbpartsp[rand] + arraySodEsp;
                        eng3she = "she would have " + verbsparteng[rand] + arraySodEng;
                        eng3she2 = "she'd have " + verbsparteng[rand] + arraySodEng;

                        sp3eso = "eso habría " + verbpartsp[rand] + arraySodEsp;
                        sp3it = "it would have " + verbsparteng[rand] + arraySodEng;
                        sp3it2 = "it'd have " + verbsparteng[rand] + arraySodEng;

                        sp4 = "ellos habrían " + verbpartsp[rand] + arraySodEsp;
                        eng4 = "they would have " + verbsparteng[rand] + arraySodEng;
                        eng42 = "they'd have " + verbsparteng[rand] + arraySodEng;

                        sp5 = "nosotros habríamos " + verbpartsp[rand] + arraySodEsp;
                        eng5 = "we would have " + verbsparteng[rand] + arraySodEng;
                        eng52 = "we'd have " + verbsparteng[rand] + arraySodEng;
                        break;
                    case 1:
                        sp1 = "yo no habría " + verbpartsp[rand] + arraySodEsp;
                        eng1 = "I would not have " + verbsparteng[rand] + arraySodEng;
                        eng12 = "I wouldn't have " + verbsparteng[rand] + arraySodEng;

                        sp2 = "tú no habrías " + verbpartsp[rand] + arraySodEsp;
                        eng2 = "you would not have " + verbsparteng[rand] + arraySodEng;
                        eng22 = "you wouldn't have " + verbsparteng[rand] + arraySodEng;

                        sp3 = "él no habría " + verbpartsp[rand] + arraySodEsp;
                        eng3 = "he would not have " + verbsparteng[rand] + arraySodEng;
                        eng32 = "he wouldn't have " + verbsparteng[rand] + arraySodEng;

                        sp3ella = "ella no habría " + verbpartsp[rand] + arraySodEsp;
                        eng3she = "she would not have " + verbsparteng[rand] + arraySodEng;
                        eng3she2 = "she wouldn't have " + verbsparteng[rand] + arraySodEng;

                        sp3eso = "eso no habría " + verbpartsp[rand] + arraySodEsp;
                        sp3it = "it would not have " + verbsparteng[rand] + arraySodEng;
                        sp3it2 = "it wouldn't have " + verbsparteng[rand] + arraySodEng;

                        sp4 = "ellos no habrían " + verbpartsp[rand] + arraySodEsp;
                        eng4 = "they would not have " + verbsparteng[rand] + arraySodEng;
                        eng42 = "they wouldn't have " + verbsparteng[rand] + arraySodEng;

                        sp5 = "nosotros no habríamos " + verbpartsp[rand] + arraySodEsp;
                        eng5 = "we would not have " + verbsparteng[rand] + arraySodEng;
                        eng52 = "we wouldn't have " + verbsparteng[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenWouldPerfCont2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo habría estado " + verbconti[rand] + arraySodEsp;
                        eng1 = "I would have been " + verbscont[rand] + arraySodEng;

                        sp2 = "tú habrías estado " + verbconti[rand] + arraySodEsp;
                        eng2 = "you would have been " + verbscont[rand] + arraySodEng;

                        sp3 = "él habría estado " + verbconti[rand] + arraySodEsp;
                        eng3 = "he would have been " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella habría estado " + verbconti[rand] + arraySodEsp;
                        eng3she = "she would have been " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso habría estado " + verbconti[rand] + arraySodEsp;
                        sp3it = "it would have been " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos habrían estado " + verbconti[rand] + arraySodEsp;
                        eng4 = "they would have been " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros habríamos estado " + verbconti[rand] + arraySodEsp;
                        eng5 = "we would have been " + verbscont[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo no habría estado " + verbconti[rand] + arraySodEsp;
                        eng1 = "I wouldn't have been " + verbscont[rand] + arraySodEng;

                        sp2 = "tú no habrías estado " + verbconti[rand] + arraySodEsp;
                        eng2 = "you wouldn't have been " + verbscont[rand] + arraySodEng;

                        sp3 = "él no habría estado " + verbconti[rand] + arraySodEsp;
                        eng3 = "he wouldn't have been " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella no habría estado " + verbconti[rand] + arraySodEsp;
                        eng3she = "she wouldn't have been " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso no habría estado " + verbconti[rand] + arraySodEsp;
                        sp3it = "it wouldn't have been " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos no habrían estado " + verbconti[rand] + arraySodEsp;
                        eng4 = "they wouldn't have been " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros no habríamos estado " + verbconti[rand] + arraySodEsp;
                        eng5 = "we wouldn't have been " + verbscont[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023

    // MIGHT
    public void GenMightSimp2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo quizá " + v1[rand] + arraySodEsp;
                        eng1 = "I might " + verbs[rand] + arraySodEng;

                        sp2 = "tú quizá " + v2[rand] + arraySodEsp;
                        eng2 = "you might " + verbs[rand] + arraySodEng;

                        sp3 = "él quizá " + v3[rand] + arraySodEsp;
                        eng3 = "he might " + verbs[rand] + arraySodEng;

                        sp3ella = "ella quizá " + v3[rand] + arraySodEsp;
                        eng3she = "she might " + verbs[rand] + arraySodEng;

                        sp3eso = "eso quizá" + v3[rand] + arraySodEsp;
                        sp3it = "it might " + verbs[rand] + arraySodEng;

                        sp4 = "ellos quizá " + v4[rand] + arraySodEsp;
                        eng4 = "they might " + verbs[rand] + arraySodEng;

                        sp5 = "nosotros quizá " + v5nos[rand] + arraySodEsp;
                        eng5 = "we might " + verbs[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo quizá no " + v1[rand] + arraySodEsp;
                        eng1 = "I might not " + verbs[rand] + arraySodEng;

                        sp2 = "tú quizá no " + v2[rand] + arraySodEsp;
                        eng2 = "you might not " + verbs[rand] + arraySodEng;

                        sp3 = "él quizá no " + v3[rand] + arraySodEsp;
                        eng3 = "he might not " + verbs[rand] + arraySodEng;

                        sp3ella = "ella quizá no " + v3[rand] + arraySodEsp;
                        eng3she = "she might not " + verbs[rand] + arraySodEng;

                        sp3eso = "eso quizá no " + v3[rand] + arraySodEsp;
                        sp3it = "it might not " + verbs[rand] + arraySodEng;

                        sp4 = "ellos quizá no " + v4[rand] + arraySodEsp;
                        eng4 = "they might not " + verbs[rand] + arraySodEng;

                        sp5 = "nosotros quizá no " + v5nos[rand] + arraySodEsp;
                        eng5 = "we might not " + verbs[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenMightCont2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo quizá esté " + verbconti[rand] + arraySodEsp;
                        eng1 = "I might be " + verbscont[rand] + arraySodEng;
                        eng12 = "I might be " + verbscont[rand] + arraySodEng;

                        sp2 = "tú quizá estés " + verbconti[rand] + arraySodEsp;
                        eng2 = "you might be " + verbscont[rand] + arraySodEng;
                        eng22 = "you might be " + verbscont[rand] + arraySodEng;

                        sp3 = "él quizá esté " + verbconti[rand] + arraySodEsp;
                        eng3 = "he might be " + verbscont[rand] + arraySodEng;
                        eng32 = "he might be " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella quizá esté " + verbconti[rand] + arraySodEsp;
                        eng3she = "she might be " + verbscont[rand] + arraySodEng;
                        eng3she2 = "she might be " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso quizá esté " + verbconti[rand] + arraySodEsp;
                        sp3it = "it might be " + verbscont[rand] + arraySodEng;
                        sp3it2 = "it might be " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos quizá estén " + verbconti[rand] + arraySodEsp;
                        eng4 = "they might be " + verbscont[rand] + arraySodEng;
                        eng42 = "they might be " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros quizá estemos " + verbconti[rand] + arraySodEsp;
                        eng5 = "we might be " + verbscont[rand] + arraySodEng;
                        eng52 = "we might be " + verbscont[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo " + "quizá no esté " + verbconti[rand] + arraySodEsp;
                        eng1 = "I " + "might not be " + verbscont[rand] + arraySodEng;
                        eng12 = "I " + "mightn't be " + verbscont[rand] + arraySodEng;

                        sp2 = "tú " + "quizá no estés " + verbconti[rand] + arraySodEsp;
                        eng2 = "you " + "might not be " + verbscont[rand] + arraySodEng;
                        eng22 = "you " + "mightn't be " + verbscont[rand] + arraySodEng;

                        sp3 = "él " + "quizá no esté  " + verbconti[rand] + arraySodEsp;
                        eng3 = "he " + "might not be " + verbscont[rand] + arraySodEng;
                        eng32 = "he " + "mightn't be " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella " + "quizá no esté " + verbconti[rand] + arraySodEsp;
                        eng3she = "she " + "might not be " + verbscont[rand] + arraySodEng;
                        eng3she2 = "she " + "mightn't be " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso " + "quizá no esté " + verbconti[rand] + arraySodEsp;
                        sp3it = "it " + "might not be " + verbscont[rand] + arraySodEng;
                        sp3it2 = "it " + "mightn't be " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos " + "quizá no estén " + verbconti[rand] + arraySodEsp;
                        eng4 = "they " + "might not be " + verbscont[rand] + arraySodEng;
                        eng42 = "they " + "mightn't be " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros " + "quizá no estémos " + verbconti[rand] + arraySodEsp;
                        eng5 = "we " + "might not be " + verbscont[rand] + arraySodEng;
                        eng52 = "we " + "mightn't be " + verbscont[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenMightPerf2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo quizá haya " + verbpartsp[rand] + arraySodEsp;
                        eng1 = "I might have " + verbsparteng[rand] + arraySodEng;
                        eng12 = "I might have " + verbsparteng[rand] + arraySodEng;

                        sp2 = "tú quizá hayas " + verbpartsp[rand] + arraySodEsp;
                        eng2 = "you might have " + verbsparteng[rand] + arraySodEng;
                        eng22 = "you might have " + verbsparteng[rand] + arraySodEng;

                        sp3 = "él quizá haya " + verbpartsp[rand] + arraySodEsp;
                        eng3 = "he might have " + verbsparteng[rand] + arraySodEng;
                        eng32 = "he might have " + verbsparteng[rand] + arraySodEng;

                        sp3ella = "ella quizá haya " + verbpartsp[rand] + arraySodEsp;
                        eng3she = "she might have " + verbsparteng[rand] + arraySodEng;
                        eng3she2 = "she might have " + verbsparteng[rand] + arraySodEng;

                        sp3eso = "eso quizá haya " + verbpartsp[rand] + arraySodEsp;
                        sp3it = "it might have " + verbsparteng[rand] + arraySodEng;
                        sp3it2 = "it might have " + verbsparteng[rand] + arraySodEng;

                        sp4 = "ellos quizá hayan " + verbpartsp[rand] + arraySodEsp;
                        eng4 = "they might have " + verbsparteng[rand] + arraySodEng;
                        eng42 = "they might have " + verbsparteng[rand] + arraySodEng;

                        sp5 = "nosotros quizá hayamos " + verbpartsp[rand] + arraySodEsp;
                        eng5 = "we might have " + verbsparteng[rand] + arraySodEng;
                        eng52 = "we might have " + verbsparteng[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo quizá no haya " + verbpartsp[rand] + arraySodEsp;
                        eng1 = "I might not have " + verbsparteng[rand] + arraySodEng;
                        eng12 = "I mightn't have " + verbsparteng[rand] + arraySodEng;

                        sp2 = "tú quizá no hayas " + verbpartsp[rand] + arraySodEsp;
                        eng2 = "you might not have " + verbsparteng[rand] + arraySodEng;
                        eng22 = "you mightn't have " + verbsparteng[rand] + arraySodEng;

                        sp3 = "él quizá no haya " + verbpartsp[rand] + arraySodEsp;
                        eng3 = "he might not have " + verbsparteng[rand] + arraySodEng;
                        eng32 = "he mightn't have " + verbsparteng[rand] + arraySodEng;

                        sp3ella = "ella quizá no haya " + verbpartsp[rand] + arraySodEsp;
                        eng3she = "she might not have " + verbsparteng[rand] + arraySodEng;
                        eng3she2 = "she mightn't have " + verbsparteng[rand] + arraySodEng;

                        sp3eso = "eso quizá no haya " + verbpartsp[rand] + arraySodEsp;
                        sp3it = "it might not have " + verbsparteng[rand] + arraySodEng;
                        sp3it2 = "it might not have " + verbsparteng[rand] + arraySodEng;

                        sp4 = "ellos quizá no hayan " + verbpartsp[rand] + arraySodEsp;
                        eng4 = "they might not have " + verbsparteng[rand] + arraySodEng;
                        eng42 = "they mightn't have " + verbsparteng[rand] + arraySodEng;

                        sp5 = "nosotros quizá no hayamos " + verbpartsp[rand] + arraySodEsp;
                        eng5 = "we might not have " + verbsparteng[rand] + arraySodEng;
                        eng52 = "we mightn't have " + verbsparteng[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenMightPerfCont2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo quizá haya estado " + verbconti[rand] + arraySodEsp;
                        eng1 = "I might have been " + verbscont[rand] + arraySodEng;

                        sp2 = "tú quizá hayas estado " + verbconti[rand] + arraySodEsp;
                        eng2 = "you might have been " + verbscont[rand] + arraySodEng;

                        sp3 = "él quizá haya estado " + verbconti[rand] + arraySodEsp;
                        eng3 = "he might have been " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella quizá haya estado " + verbconti[rand] + arraySodEsp;
                        eng3she = "she might have been " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso quizá haya estado " + verbconti[rand] + arraySodEsp;
                        sp3it = "it might have been " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos quizá hayan estado " + verbconti[rand] + arraySodEsp;
                        eng4 = "they might have been " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros quizá hayamos estado " + verbconti[rand] + arraySodEsp;
                        eng5 = "we might have been " + verbscont[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo quizá no haya estado " + verbconti[rand] + arraySodEsp;
                        eng1 = "I might not have been " + verbscont[rand] + arraySodEng;

                        sp2 = "tú quizá no hayas estado " + verbconti[rand] + arraySodEsp;
                        eng2 = "you might not have been " + verbscont[rand] + arraySodEng;

                        sp3 = "él quizá no haya estado " + verbconti[rand] + arraySodEsp;
                        eng3 = "he might not have been " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella quizá no haya estado " + verbconti[rand] + arraySodEsp;
                        eng3she = "she might not have been " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso quizá no haya estado " + verbconti[rand] + arraySodEsp;
                        sp3it = "it might not have been " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos quizá no hayan estado " + verbconti[rand] + arraySodEsp;
                        eng4 = "they might not have been " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros quizá no hayamos estado " + verbconti[rand] + arraySodEsp;
                        eng5 = "we might not have been " + verbscont[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023

    //COULD
    public void GenCouldSimp2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo podría " + vsbc[rand] + arraySodEsp;
                        eng1 = "I could " + verbs[rand] + arraySodEng;

                        sp2 = "tú podrías " + vsbc[rand] + arraySodEsp;
                        eng2 = "you could " + verbs[rand] + arraySodEng;

                        sp3 = "él podría " + vsbc[rand] + arraySodEsp;
                        eng3 = "he could " + verbs[rand] + arraySodEng;

                        sp3ella = "ella podría " + vsbc[rand] + arraySodEsp;
                        eng3she = "she could " + verbs[rand] + arraySodEng;

                        sp3eso = "eso podría " + vsbc[rand] + arraySodEsp;
                        sp3it = "it could " + verbs[rand] + arraySodEng;

                        sp4 = "ellos podrían " + vsbc[rand] + arraySodEsp;
                        eng4 = "they could " + verbs[rand] + arraySodEng;

                        sp5 = "nosotros podríamos " + vsbc[rand] + arraySodEsp;
                        eng5 = "we could " + verbs[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo " + "no podría " + vsbc[rand] + arraySodEsp;
                        eng1 = "I " + "couldn't " + verbs[rand] + arraySodEng;

                        sp2 = "tú " + "no podrías " + vsbc[rand] + arraySodEsp;
                        eng2 = "you " + "couldn't " + verbs[rand] + arraySodEng;

                        sp3 = "él " + "no podría " + vsbc[rand] + arraySodEsp;
                        eng3 = "he " + "couldn't " + verbs[rand] + arraySodEng;

                        sp3ella = "ella " + "no podría " + vsbc[rand] + arraySodEsp;
                        eng3she = "she " + "couldn't " + verbs[rand] + arraySodEng;

                        sp3eso = "eso " + "no podría " + vsbc[rand] + arraySodEsp;
                        sp3it = "it " + "couldn't " + verbs[rand] + arraySodEng;

                        sp4 = "ellos " + "no podrían " + vsbc[rand] + arraySodEsp;
                        eng4 = "they " + "couldn't " + verbs[rand] + arraySodEng;

                        sp5 = "nosotros " + "no podríamos " + vsbc[rand] + arraySodEsp;
                        eng5 = "we " + "couldn't " + verbs[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenCouldCont2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo podría estar " + verbconti[rand] + arraySodEsp;
                        eng1 = "I could be " + verbscont[rand] + arraySodEng;
                        eng12 = "I could be " + verbscont[rand] + arraySodEng;

                        sp2 = "tú podrías estar " + verbconti[rand] + arraySodEsp;
                        eng2 = "you could be " + verbscont[rand] + arraySodEng;
                        eng22 = "you could be " + verbscont[rand] + arraySodEng;

                        sp3 = "él podría estar " + verbconti[rand] + arraySodEsp;
                        eng3 = "he could be " + verbscont[rand] + arraySodEng;
                        eng32 = "he could be " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella podría estar " + verbconti[rand] + arraySodEsp;
                        eng3she = "she could be " + verbscont[rand] + arraySodEng;
                        eng3she2 = "she could be " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso podría estar " + verbconti[rand] + arraySodEsp;
                        sp3it = "it could be " + verbscont[rand] + arraySodEng;
                        sp3it2 = "it could be " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos podrían estar " + verbconti[rand] + arraySodEsp;
                        eng4 = "they could be " + verbscont[rand] + arraySodEng;
                        eng42 = "they could be " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros podríamos estar " + verbconti[rand] + arraySodEsp;
                        eng5 = "we could be " + verbscont[rand] + arraySodEng;
                        eng52 = "we could be " + verbscont[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo " + "no podría estar " + verbconti[rand] + arraySodEsp;
                        eng1 = "I " + "could not be " + verbscont[rand] + arraySodEng;
                        eng12 = "I " + "couldn't be " + verbscont[rand] + arraySodEng;

                        sp2 = "tú " + "no podrías estar " + verbconti[rand] + arraySodEsp;
                        eng2 = "you " + "could not be " + verbscont[rand] + arraySodEng;
                        eng22 = "you " + "couldn't be " + verbscont[rand] + arraySodEng;

                        sp3 = "él " + "no podría estar " + verbconti[rand] + arraySodEsp;
                        eng3 = "he " + "could not be " + verbscont[rand] + arraySodEng;
                        eng32 = "he " + "couldn't be " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella " + "no podría estar " + verbconti[rand] + arraySodEsp;
                        eng3she = "she " + "could not be " + verbscont[rand] + arraySodEng;
                        eng3she2 = "she " + "couldn't be " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso " + "no podría estar " + verbconti[rand] + arraySodEsp;
                        sp3it = "it " + "could not be " + verbscont[rand] + arraySodEng;
                        sp3it2 = "it " + "couldn't be " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos " + "no podrían estar " + verbconti[rand] + arraySodEsp;
                        eng4 = "they " + "could not be " + verbscont[rand] + arraySodEng;
                        eng42 = "they " + "couldn't be " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros " + "no podríamos estar " + verbconti[rand] + arraySodEsp;
                        eng5 = "we " + "could not be " + verbscont[rand] + arraySodEng;
                        eng52= "we " + "couldn't be " + verbscont[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenCouldPerf2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo pude haber " + verbpartsp[rand] + arraySodEsp;
                        eng1 = "I could have " + verbsparteng[rand] + arraySodEng;
                        eng12 = "I could have " + verbsparteng[rand] + arraySodEng;

                        sp2 = "tú pudiste haber " + verbpartsp[rand] + arraySodEsp;
                        eng2 = "you could have " + verbsparteng[rand] + arraySodEng;
                        eng22 = "you could have " + verbsparteng[rand] + arraySodEng;

                        sp3 = "él pudo haber " + verbpartsp[rand] + arraySodEsp;
                        eng3 = "he could have " + verbsparteng[rand] + arraySodEng;
                        eng32 = "he could have " + verbsparteng[rand] + arraySodEng;

                        sp3ella = "ella pudiese haber " + verbpartsp[rand] + arraySodEsp;
                        eng3she = "she could have " + verbsparteng[rand] + arraySodEng;
                        eng3she2 = "she could have " + verbsparteng[rand] + arraySodEng;

                        sp3eso = "eso pudiese haber " + verbpartsp[rand] + arraySodEsp;
                        sp3it = "it could have " + verbsparteng[rand] + arraySodEng;
                        sp3it2 = "it could have " + verbsparteng[rand] + arraySodEng;

                        sp4 = "ellos pudiesen haber " + verbpartsp[rand] + arraySodEsp;
                        eng4 = "they could have " + verbsparteng[rand] + arraySodEng;
                        eng42 = "they could have " + verbsparteng[rand] + arraySodEng;

                        sp5 = "nosotros pudiesemos haber " + verbpartsp[rand] + arraySodEsp;
                        eng5 = "we could have " + verbsparteng[rand] + arraySodEng;
                        eng52 = "we could have " + verbsparteng[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo " + "no pude haber " + verbpartsp[rand] + arraySodEsp;
                        eng1 = "I " + "could not have " + verbsparteng[rand] + arraySodEng;
                        eng12 = "I " + "couldn't have " + verbsparteng[rand] + arraySodEng;

                        sp2 = "tú " + "no pudiste haber " + verbpartsp[rand] + arraySodEsp;
                        eng2 = "you " + "could not have " + verbsparteng[rand] + arraySodEng;
                        eng22 = "you " + "couldn't have " + verbsparteng[rand] + arraySodEng;

                        sp3 = "él " + "no pudo haber " + verbpartsp[rand] + arraySodEsp;
                        eng3 = "he " + "could not have " + verbsparteng[rand] + arraySodEng;
                        eng32 = "he " + "couldn't have " + verbsparteng[rand] + arraySodEng;

                        sp3ella = "ella " + "no pudiese haber " + verbpartsp[rand] + arraySodEsp;
                        eng3she = "she " + "could not have " + verbsparteng[rand] + arraySodEng;
                        eng3she2 = "she " + "couldn't have " + verbsparteng[rand] + arraySodEng;

                        sp3eso = "eso " + "no pudiese haber " + verbpartsp[rand] + arraySodEsp;
                        sp3it = "it " + "could not have " + verbsparteng[rand] + arraySodEng;
                        sp3it2 = "it " + "couldn't have " + verbsparteng[rand] + arraySodEng;

                        sp4 = "ellos " + "no pudiesen haber " + verbpartsp[rand] + arraySodEsp;
                        eng4 = "they " + "could not have " + verbsparteng[rand] + arraySodEng;
                        eng42 = "they " + "couldn't have " + verbsparteng[rand] + arraySodEng;

                        sp5 = "nosotros " + "no pudiesemos haber " + verbpartsp[rand] + arraySodEsp;
                        eng5 = "we " + "could not have " + verbsparteng[rand] + arraySodEng;
                        eng52 = "we " + "couldn't have " + verbsparteng[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenCouldPerfCont2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo podría haber estado " + verbconti[rand] + arraySodEsp;
                        eng1 = "I could have been " + verbscont[rand] + arraySodEng;

                        sp2 = "tú podrías haber estado " + verbconti[rand] + arraySodEsp;
                        eng2 = "you could have been " + verbscont[rand] + arraySodEng;

                        sp3 = "él podría haber estado " + verbconti[rand] + arraySodEsp;
                        eng3 = "he could have been " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella podría haber estado " + verbconti[rand] + arraySodEsp;
                        eng3she = "she could have been " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso podría haber estado " + verbconti[rand] + arraySodEsp;
                        sp3it = "it could have been " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos podrían haber estado " + verbconti[rand] + arraySodEsp;
                        eng4 = "they could have been " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros podríamos haber estado " + verbconti[rand] + arraySodEsp;
                        eng5 = "we could have been " + verbscont[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo " + "no podría haber estado " + verbconti[rand] + arraySodEsp;
                        eng1 = "I " + "couldn't have been " + verbscont[rand] + arraySodEng;

                        sp2 = "tú " + "no podrías haber estado " + verbconti[rand] + arraySodEsp;
                        eng2 = "you " + "couldn't have been " + verbscont[rand] + arraySodEng;

                        sp3 = "él " + "no podría haber estado " + verbconti[rand] + arraySodEsp;
                        eng3 = "he " + "couldn't have been " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella " + "no podría haber estado " + verbconti[rand] + arraySodEsp;
                        eng3she = "she " + "couldn't have been " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso " + "no podría haber estado " + verbconti[rand] + arraySodEsp;
                        sp3it = "it " + "couldn't have been " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos " + "no podrían haber estado " + verbconti[rand] + arraySodEsp;
                        eng4 = "they " + "couldn't have been " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros " + "no podríamos haber estado " + verbconti[rand] + arraySodEsp;
                        eng5 = "we " + "couldn't have been " + verbscont[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023

    //CAN
    public void GenCanSimp2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo puedo " + vsbc[rand] + arraySodEsp;
                        eng1 = "I can " + verbs[rand] + arraySodEng;

                        sp2 = "tú puedes " + vsbc[rand] + arraySodEsp;
                        eng2 = "you can " + verbs[rand] + arraySodEng;

                        sp3 = "él puede " + vsbc[rand] + arraySodEsp;
                        eng3 = "he can " + verbs[rand] + arraySodEng;

                        sp3ella = "ella puede " + vsbc[rand] + arraySodEsp;
                        eng3she = "she can " + verbs[rand] + arraySodEng;

                        sp3eso = "eso puede " + vsbc[rand] + arraySodEsp;
                        sp3it = "it can " + verbs[rand] + arraySodEng;

                        sp4 = "ellos pueden " + vsbc[rand] + arraySodEsp;
                        eng4 = "they can " + verbs[rand] + arraySodEng;

                        sp5 = "nosotros podemos " + vsbc[rand] + arraySodEsp;
                        eng5 = "we can " + verbs[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo " + "no puedo " + vsbc[rand] + arraySodEsp;
                        eng1 = "I " + "can't " + verbs[rand] + arraySodEng;

                        sp2 = "tú " + "no puedes " + vsbc[rand] + arraySodEsp;
                        eng2 = "you " + "can't " + verbs[rand] + arraySodEng;

                        sp3 = "él " + "no puede " + vsbc[rand] + arraySodEsp;
                        eng3 = "he " + "can't " + verbs[rand] + arraySodEng;

                        sp3ella = "ella " + "no puede " + vsbc[rand] + arraySodEsp;
                        eng3she = "she " + "can't " + verbs[rand] + arraySodEng;

                        sp3eso = "eso " + "no puede " + vsbc[rand] + arraySodEsp;
                        sp3it = "it " + "can't " + verbs[rand] + arraySodEng;

                        sp4 = "ellos " + "no pueden " + vsbc[rand] + arraySodEsp;
                        eng4 = "they " + "can't " + verbs[rand] + arraySodEng;

                        sp5 = "nosotros " + "no podemos " + vsbc[rand] + arraySodEsp;
                        eng5 = "we " + "can't " + verbs[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenCanCont2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo puedo estar " + verbconti[rand] + arraySodEsp;
                        eng1 = "I can be " + verbscont[rand] + arraySodEng;
                        eng12 = "I can be " + verbscont[rand] + arraySodEng;

                        sp2 = "tú puedes estar " + verbconti[rand] + arraySodEsp;
                        eng2 = "you can be " + verbscont[rand] + arraySodEng;
                        eng22 = "you can be " + verbscont[rand] + arraySodEng;

                        sp3 = "él puede estar " + verbconti[rand] + arraySodEsp;
                        eng3 = "he can be " + verbscont[rand] + arraySodEng;
                        eng32 = "he can be " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella puede " + verbconti[rand] + arraySodEsp;
                        eng3she = "she can be " + verbscont[rand] + arraySodEng;
                        eng3she2 = "she can be " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso puede " + verbconti[rand] + arraySodEsp;
                        sp3it = "it can be " + verbscont[rand] + arraySodEng;
                        sp3it2 = "it can be " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos pueden estar " + verbconti[rand] + arraySodEsp;
                        eng4 = "they can be " + verbscont[rand] + arraySodEng;
                        eng42 = "they can be " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros podemos " + verbconti[rand] + arraySodEsp;
                        eng5 = "we can be " + verbscont[rand] + arraySodEng;
                        eng52 = "we can be " + verbscont[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo " + "no puedo estar " + verbconti[rand] + arraySodEsp;
                        eng1 = "I " + "cannot be " + verbscont[rand] + arraySodEng;
                        eng12 = "I " + "can't be " + verbscont[rand] + arraySodEng;

                        sp2 = "tú " + "no puedes estar " + verbconti[rand] + arraySodEsp;
                        eng2 = "you " + "cannot be " + verbscont[rand] + arraySodEng;
                        eng22 = "you " + "can't be " + verbscont[rand] + arraySodEng;

                        sp3 = "él " + "no puede estar " + verbconti[rand] + arraySodEsp;
                        eng3 = "he " + "cannot be " + verbscont[rand] + arraySodEng;
                        eng32 = "he " + "can't be " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella " + "no puede estar " + verbconti[rand] + arraySodEsp;
                        eng3she = "she " + "cannot be " + verbscont[rand] + arraySodEng;
                        eng3she2 = "she " + "can't be " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso " + "no puede estar " + verbconti[rand] + arraySodEsp;
                        sp3it = "it " + "cannot be " + verbscont[rand] + arraySodEng;
                        sp3it2 = "it " + "can't be " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos " + "no pueden estar " + verbconti[rand] + arraySodEsp;
                        eng4 = "they " + "cannot be " + verbscont[rand] + arraySodEng;
                        eng42 = "they " + "can't be " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros " + "no podemos estar " + verbconti[rand] + arraySodEsp;
                        eng5 = "we " + "cannot be " + verbscont[rand] + arraySodEng;
                        eng52 = "we " + "can't be " + verbscont[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023

    //MUST
    public void GenMustSimp2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo debo " + vsbc[rand] + arraySodEsp;
                        eng1 = "I must " + verbs[rand] + arraySodEng;

                        sp2 = "tú debés " + vsbc[rand] + arraySodEsp;
                        eng2 = "you must " + verbs[rand] + arraySodEng;

                        sp3 = "él debe " + vsbc[rand] + arraySodEsp;
                        eng3 = "he must " + verbs[rand] + arraySodEng;

                        sp3ella = "ella debe " + vsbc[rand] + arraySodEsp;
                        eng3she = "she must " + verbs[rand] + arraySodEng;

                        sp3eso = "eso debe " + vsbc[rand] + arraySodEsp;
                        sp3it = "it must " + verbs[rand] + arraySodEng;

                        sp4 = "ellos deben " + vsbc[rand] + arraySodEsp;
                        eng4 = "they must " + verbs[rand] + arraySodEng;

                        sp5 = "nosotros debemos " + vsbc[rand] + arraySodEsp;
                        eng5 = "we must " + verbs[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo " + "no debo " + vsbc[rand] + arraySodEsp;
                        eng1 = "I " + "mustn't " + verbs[rand] + arraySodEng;

                        sp2 = "tú " + "no debés " + vsbc[rand] + arraySodEsp;
                        eng2 = "you " + "mustn't " + verbs[rand] + arraySodEng;

                        sp3 = "él " + "no debe " + vsbc[rand] + arraySodEsp;
                        eng3 = "he " + "mustn't " + verbs[rand] + arraySodEng;

                        sp3ella = "ella " + "no debe " + vsbc[rand] + arraySodEsp;
                        eng3she = "she " + "mustn't " + verbs[rand] + arraySodEng;

                        sp3eso = "eso " + "no debe " + vsbc[rand] + arraySodEsp;
                        sp3it = "it " + "mustn't " + verbs[rand] + arraySodEng;

                        sp4 = "ellos " + "no deben " + vsbc[rand] + arraySodEsp;
                        eng4 = "they " + "mustn't " + verbs[rand] + arraySodEng;

                        sp5 = "nosotros " + "no debemos " + vsbc[rand] + arraySodEsp;
                        eng5 = "we " + "mustn't " + verbs[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenMustCont2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo debo estar " + verbconti[rand] + arraySodEsp;
                        eng1 = "I must be " + verbscont[rand] + arraySodEng;
                        eng12 = "I must be " + verbscont[rand] + arraySodEng;

                        sp2 = "tú debés estar " + verbconti[rand] + arraySodEsp;
                        eng2 = "you must be " + verbscont[rand] + arraySodEng;
                        eng22 = "you must be " + verbscont[rand] + arraySodEng;

                        sp3 = "él debe estar " + verbconti[rand] + arraySodEsp;
                        eng3 = "he must be " + verbscont[rand] + arraySodEng;
                        eng32 = "he must be " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella debe estar " + verbconti[rand] + arraySodEsp;
                        eng3she = "she must be " + verbscont[rand] + arraySodEng;
                        eng3she2 = "she must be " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso debe estar " + verbconti[rand] + arraySodEsp;
                        sp3it = "it must be " + verbscont[rand] + arraySodEng;
                        sp3it2 = "it must be " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos deben estar " + verbconti[rand] + arraySodEsp;
                        eng4 = "they must be " + verbscont[rand] + arraySodEng;
                        eng42 = "they must be " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros debemos estar " + verbconti[rand] + arraySodEsp;
                        eng5 = "we must be " + verbscont[rand] + arraySodEng;
                        eng52 = "we must be " + verbscont[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo " + "no debo estar " + verbconti[rand] + arraySodEsp;
                        eng1 = "I " + "must not be " + verbscont[rand] + arraySodEng;
                        eng12 = "I " + "mustn't be " + verbscont[rand] + arraySodEng;

                        sp2 = "tú " + "no debés estar " + verbconti[rand] + arraySodEsp;
                        eng2 = "you " + "must not be " + verbscont[rand] + arraySodEng;
                        eng22 = "you " + "mustn't be " + verbscont[rand] + arraySodEng;

                        sp3 = "él " + "no debe estar " + verbconti[rand] + arraySodEsp;
                        eng3 = "he " + "must not be " + verbscont[rand] + arraySodEng;
                        eng32 = "he " + "mustn't be " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella " + "no debe estar " + verbconti[rand] + arraySodEsp;
                        eng3she = "she " + "must not be " + verbscont[rand] + arraySodEng;
                        eng3she2 = "she " + "mustn't be " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso " + "no debe estar " + verbconti[rand] + arraySodEsp;
                        sp3it = "it " + "must not be " + verbscont[rand] + arraySodEng;
                        sp3it2 = "it " + "mustn't be " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos " + "no deben estar " + verbconti[rand] + arraySodEsp;
                        eng4 = "they " + "must not be " + verbscont[rand] + arraySodEng;
                        eng42 = "they " + "mustn't be " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros " + "no debemos estar " + verbconti[rand] + arraySodEsp;
                        eng5 = "we " + "must not be " + verbscont[rand] + arraySodEng;
                        eng52 = "we " + "mustn't be " + verbscont[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023

    public void GenAbleTo2(){
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo " + "soy capaz de " + vsbc[rand] + arraySodEsp;
                        eng1 = "I am " + "able to " + verbs[rand] + arraySodEng;
                        eng12 = "I'm " + "able to " + verbs[rand] + arraySodEng;

                        sp2 = "tú " + "eres capaz de " + vsbc[rand] + arraySodEsp;
                        eng2 = "you are " + "able to " + verbs[rand] + arraySodEng;
                        eng22 = "you're " + "able to " + verbs[rand] + arraySodEng;

                        sp3 = "él " + "es capaz de " + vsbc[rand] + arraySodEsp;
                        eng3 = "he is " + "able to " + verbs[rand] + arraySodEng;
                        eng32 = "he's " + "able to " + verbs[rand] + arraySodEng;

                        sp3ella = "ella " + "es capaz de " + vsbc[rand] + arraySodEsp;
                        eng3she = "she is " + "able to " + verbs[rand] + arraySodEng;
                        eng3she2 = "she's " + "able to " + verbs[rand] + arraySodEng;

                        sp3eso = "eso " + "es capaz de " + vsbc[rand] + arraySodEsp;
                        sp3it = "it is " + "able to " + verbs[rand] + arraySodEng;
                        sp3it2 = "it's " + "able to " + verbs[rand] + arraySodEng;

                        sp4 = "ellos " + "son capaz de " + vsbc[rand] + arraySodEsp;
                        eng4 = "they are " + "able to " + verbs[rand] + arraySodEng;
                        eng42 = "they're " + "able to " + verbs[rand] + arraySodEng;

                        sp5 = "nosotros " + "somos capaz de " + vsbc[rand] + arraySodEsp;
                        eng5 = "we are " + "able to " + verbs[rand] + arraySodEng;
                        eng52 = "we're " + "able to " + verbs[rand] + arraySodEng;
                        break;
                    case 1:
                        sp1 = "yo no " + "soy capaz de " + vsbc[rand] + arraySodEsp;
                        eng1 = "I am not " + "able to " + verbs[rand] + arraySodEng;
                        eng12 = "I'm not " + "able to " + verbs[rand] + arraySodEng;

                        sp2 = "tú no " + "eres capaz de " + vsbc[rand] + arraySodEsp;
                        eng2 = "you are not " + "able to " + verbs[rand] + arraySodEng;
                        eng22 = "you're not " + "able to " + verbs[rand] + arraySodEng;

                        sp3 = "él no " + "es capaz de " + vsbc[rand] + arraySodEsp;
                        eng3 = "he is not " + "able to " + verbs[rand] + arraySodEng;
                        eng32 = "he's not " + "able to " + verbs[rand] + arraySodEng;

                        sp3ella = "ella no " + "es capaz de " + vsbc[rand] + arraySodEsp;
                        eng3she = "she is not " + "able to " + verbs[rand] + arraySodEng;
                        eng3she2 = "she's not " + "able to " + verbs[rand] + arraySodEng;

                        sp3eso = "eso no " + "es capaz de " + vsbc[rand] + arraySodEsp;
                        sp3it = "it is not " + "able to " + verbs[rand] + arraySodEng;
                        sp3it2 = "it's not " + "able to " + verbs[rand] + arraySodEng;

                        sp4 = "ellos no " + "son capaz de " + vsbc[rand] + arraySodEsp;
                        eng4 = "they are not " + "able to " + verbs[rand] + arraySodEng;
                        eng42 = "they're not " + "able to " + verbs[rand] + arraySodEng;

                        sp5 = "nosotros no " + "somos capaz de " + vsbc[rand] + arraySodEsp;
                        eng5 = "we are not " + "able to " + verbs[rand] + arraySodEng;
                        eng52 = "we're not " + "able to " + verbs[rand] + arraySodEng;
                        break;

                }
            }
        }
    }//PD FEB 2023

    //SHOULD
    public void GenShouldSimp2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo debería " + vsbc[rand] + arraySodEsp;
                        eng1 = "I should " + verbs[rand] + arraySodEng;

                        sp2 = "tú deberías " + vsbc[rand] + arraySodEsp;
                        eng2 = "you should " + verbs[rand] + arraySodEng;

                        sp3 = "él debería " + vsbc[rand] + arraySodEsp;
                        eng3 = "he should " + verbs[rand] + arraySodEng;

                        sp3ella = "ella debería " + vsbc[rand] + arraySodEsp;
                        eng3she = "she should " + verbs[rand] + arraySodEng;

                        sp3eso = "eso debería " + vsbc[rand] + arraySodEsp;
                        sp3it = "it should " + verbs[rand] + arraySodEng;

                        sp4 = "ellos deberían " + vsbc[rand] + arraySodEsp;
                        eng4 = "they should " + verbs[rand] + arraySodEng;

                        sp5 = "nosotros deberíamos " + vsbc[rand] + arraySodEsp;
                        eng5 = "we should " + verbs[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo " + "no debería " + vsbc[rand] + arraySodEsp;
                        eng1 = "I " + "shouldn't " + verbs[rand] + arraySodEng;

                        sp2 = "tú " + "no deberías " + vsbc[rand] + arraySodEsp;
                        eng2 = "you " + "shouldn't " + verbs[rand] + arraySodEng;

                        sp3 = "él " + "no debería " + vsbc[rand] + arraySodEsp;
                        eng3 = "he " + "shouldn't " + verbs[rand] + arraySodEng;

                        sp3ella = "ella " + "no debería " + vsbc[rand] + arraySodEsp;
                        eng3she = "she " + "shouldn't " + verbs[rand] + arraySodEng;

                        sp3eso = "eso " + "no debería " + vsbc[rand] + arraySodEsp;
                        sp3it = "it " + "shouldn't " + verbs[rand] + arraySodEng;

                        sp4 = "ellos " + "no deberían " + vsbc[rand] + arraySodEsp;
                        eng4 = "they " + "shouldn't " + verbs[rand] + arraySodEng;

                        sp5 = "nosotros " + "no deberíamos " + vsbc[rand] + arraySodEsp;
                        eng5 = "we " + "shouldn't " + verbs[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenShouldCont2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo debería estar " + verbconti[rand] + arraySodEsp;
                        eng1 = "I should be " + verbscont[rand] + arraySodEng;
                        eng12 = "I'd be " + verbscont[rand] + arraySodEng;

                        sp2 = "tú deberías estar " + verbconti[rand] + arraySodEsp;
                        eng2 = "you should be " + verbscont[rand] + arraySodEng;
                        eng22 = "you'd be " + verbscont[rand] + arraySodEng;

                        sp3 = "él debería estar " + verbconti[rand] + arraySodEsp;
                        eng3 = "he should be " + verbscont[rand] + arraySodEng;
                        eng32 = "he'd be " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella debería estar " + verbconti[rand] + arraySodEsp;
                        eng3she = "she should be " + verbscont[rand] + arraySodEng;
                        eng3she2 = "she'd be " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso debería estar " + verbconti[rand] + arraySodEsp;
                        sp3it = "it should be " + verbscont[rand] + arraySodEng;
                        sp3it2 = "it'd be " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos deberían estar " + verbconti[rand] + arraySodEsp;
                        eng4 = "they should be " + verbscont[rand] + arraySodEng;
                        eng42 = "they'd be " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros deberíamos estar " + verbconti[rand] + arraySodEsp;
                        eng5 = "we should be " + verbscont[rand] + arraySodEng;
                        eng52 = "we'd be " + verbscont[rand] + arraySodEng;
                        break;
                    case 1:
                        sp1 = "yo " + "no debería estar " + verbconti[rand] + arraySodEsp;
                        eng1 = "I " + "should not be " + verbscont[rand] + arraySodEng;
                        eng12 = "I " + "shouldn't be " + verbscont[rand] + arraySodEng;

                        sp2 = "tú " + "no deberías estar " + verbconti[rand] + arraySodEsp;
                        eng2 = "you " + "should not be " + verbscont[rand] + arraySodEng;
                        eng22 = "you " + "shouldn't be " + verbscont[rand] + arraySodEng;

                        sp3 = "él " + "no debería estar " + verbconti[rand] + arraySodEsp;
                        eng3 = "he " + "should not be " + verbscont[rand] + arraySodEng;
                        eng32 = "he " + "shouldn't be " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella " + "no debería estar " + verbconti[rand] + arraySodEsp;
                        eng3she = "she " + "should not be " + verbscont[rand] + arraySodEng;
                        eng3she2 = "she " + "shouldn't be " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso " + "no debería estar " + verbconti[rand] + arraySodEsp;
                        sp3it = "it " + "should not be " + verbscont[rand] + arraySodEng;
                        sp3it2 = "it " + "shouldn't be " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos " + "no deberían estar " + verbconti[rand] + arraySodEsp;
                        eng4 = "they " + "should not be " + verbscont[rand] + arraySodEng;
                        eng42 = "they " + "shouldn't be " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros " + "no deberíamos estar " + verbconti[rand] + arraySodEsp;
                        eng5 = "we " + "should not be " + verbscont[rand] + arraySodEng;
                        eng52 = "we " + "shouldn't be " + verbscont[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenShouldPerf2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo debería haber " + verbpartsp[rand] + arraySodEsp;
                        eng1 = "I should have " + verbsparteng[rand] + arraySodEng;
                        eng12 = "I'd have " + verbsparteng[rand] + arraySodEng;

                        sp2 = "tú deberías haber " + verbpartsp[rand] + arraySodEsp;
                        eng2 = "you should have " + verbsparteng[rand] + arraySodEng;
                        eng22 = "you'd have " + verbsparteng[rand] + arraySodEng;

                        sp3 = "él debería haber " + verbpartsp[rand] + arraySodEsp;
                        eng3 = "he should have " + verbsparteng[rand] + arraySodEng;
                        eng32 = "he'd have " + verbsparteng[rand] + arraySodEng;

                        sp3ella = "ella debería haber " + verbpartsp[rand] + arraySodEsp;
                        eng3she = "she should have " + verbsparteng[rand] + arraySodEng;
                        eng3she = "she'd have " + verbsparteng[rand] + arraySodEng;

                        sp3eso = "eso debería haber " + verbpartsp[rand] + arraySodEsp;
                        sp3it = "it should have " + verbsparteng[rand] + arraySodEng;
                        sp3it2 = "it'd have " + verbsparteng[rand] + arraySodEng;

                        sp4 = "ellos deberían haber " + verbpartsp[rand] + arraySodEsp;
                        eng4 = "they should have " + verbsparteng[rand] + arraySodEng;
                        eng42 = "they'd have " + verbsparteng[rand] + arraySodEng;

                        sp5 = "nosotros deberíamos haber " + verbpartsp[rand] + arraySodEsp;
                        eng5 = "we should have " + verbsparteng[rand] + arraySodEng;
                        eng52 = "we'd have " + verbsparteng[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo " + "no debería haber " + verbpartsp[rand] + arraySodEsp;
                        eng1 = "I " + "should not have " + verbsparteng[rand] + arraySodEng;
                        eng12 = "I " + "shouldn't have " + verbsparteng[rand] + arraySodEng;

                        sp2 = "tú " + "no deberías haber " + verbpartsp[rand] + arraySodEsp;
                        eng2 = "you " + "should not have " + verbsparteng[rand] + arraySodEng;
                        eng22 = "you " + "shouldn't have " + verbsparteng[rand] + arraySodEng;

                        sp3 = "él " + "no debería haber " + verbpartsp[rand] + arraySodEsp;
                        eng3 = "he " + "should not have " + verbsparteng[rand] + arraySodEng;
                        eng32 = "he " + "shouldn't have " + verbsparteng[rand] + arraySodEng;

                        sp3ella = "ella " + "no debería haber " + verbpartsp[rand] + arraySodEsp;
                        eng3she = "she " + "should not have " + verbsparteng[rand] + arraySodEng;
                        eng3she2 = "she " + "shouldn't have " + verbsparteng[rand] + arraySodEng;

                        sp3eso = "eso " + "no debería haber " + verbpartsp[rand] + arraySodEsp;
                        sp3it = "it " + "should not have " + verbsparteng[rand] + arraySodEng;
                        sp3it2 = "it " + "shouldn't have " + verbsparteng[rand] + arraySodEng;

                        sp4 = "ellos " + "no deberían haber " + verbpartsp[rand] + arraySodEsp;
                        eng4 = "they " + "should not have " + verbsparteng[rand] + arraySodEng;
                        eng42 = "they " + "shouldn't have " + verbsparteng[rand] + arraySodEng;

                        sp5 = "nosotros " + "no deberíamos haber " + verbpartsp[rand] + arraySodEsp;
                        eng5 = "we " + "should not have " + verbsparteng[rand] + arraySodEng;
                        eng52 = "we " + "shouldn't have " + verbsparteng[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenShouldPerfCont2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo debería haber estado " + verbconti[rand] + arraySodEsp;
                        eng1 = "I should have been " + verbscont[rand] + arraySodEng;

                        sp2 = "tú deberías haber estado " + verbconti[rand] + arraySodEsp;
                        eng2 = "you should have been " + verbscont[rand] + arraySodEng;

                        sp3 = "él debería haber estado " + verbconti[rand] + arraySodEsp;
                        eng3 = "he should have been " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella debería haber estado " + verbconti[rand] + arraySodEsp;
                        eng3she = "she should have been " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso debería haber estado " + verbconti[rand] + arraySodEsp;
                        sp3it = "it should have been " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos deberían haber estado " + verbconti[rand] + arraySodEsp;
                        eng4 = "they should have been " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros deberíamos haber estado " + verbconti[rand] + arraySodEsp;
                        eng5 = "we should have been " + verbscont[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo " + "no debería haber estado " + verbconti[rand] + arraySodEsp;
                        eng1 = "I " + "shouldn't have been " + verbscont[rand] + arraySodEng;

                        sp2 = "tú " + "no deberías haber estado " + verbconti[rand] + arraySodEsp;
                        eng2 = "you " + "shouldn't have been " + verbscont[rand] + arraySodEng;

                        sp3 = "él " + "no debería haber estado " + verbconti[rand] + arraySodEsp;
                        eng3 = "he " + "shouldn't have been " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella " + "no debería haber estado " + verbconti[rand] + arraySodEsp;
                        eng3she = "she " + "shouldn't have been " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso " + "no debería haber estado " + verbconti[rand] + arraySodEsp;
                        sp3it = "it " + "shouldn't have been " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos " + "no deberían haber estado " + verbconti[rand] + arraySodEsp;
                        eng4 = "they " + "shouldn't have been " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros " + "no deberíamos haber estado " + verbconti[rand] + arraySodEsp;
                        eng5 = "we " + "shouldn't have been " + verbscont[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023

    //for to dificultad 2 SOlO SPECIAL
    public void forSubTo2() {
        int rand = (int) (Math.random() * verbs.length);
        String temp = verbs[rand];
        int neg = (int) (Math.random() * 2);

        //subject in eng
        String ftsj[] = {
                "for me to ", "for you to ", "for him to ", "for her to ", "for it to ",
                "for them to ", "for us to "
        };

        //subject in spanish
        String ftsjs[] = {
                "para que yo ", "para que tú ", "para que él ", "para que ella ",
                "para que eso ", "para que ellos ", "para que nosotros "
        };

        //subject in eng negative
        String ftsjn[] = {
                "for me not to ", "for you not to ", "for him not to ", "for her not to ",
                "for it not to ", "for them not to ", "for us not to "
        };

        //subject in spanish negative
        String ftsjsn[] = {
                "para que yo no ", "para que tú no ", "para que él no ", "para que ella no ",
                "para que eso no ", "para que ellos no ", "para que nosotros no "
        };

        switch (temp) {
            case "react ":
                int rand1 = (int) (Math.random() * sodete.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + sodete[rand1];
                        eng1 = ftsj[0] + verbs[rand] + sodet[rand1];

                        sp2 = ftsjs[1] + v2[rand] + sodete[rand1];
                        eng2 = ftsj[1] + verbs[rand] + sodet[rand1];

                        sp3 = ftsjs[2] + v3[rand] + sodete[rand1];
                        eng3 = ftsj[2] + verbs[rand] + sodet[rand1];

                        sp3ella = ftsjs[3] + v3[rand] + sodete[rand1];
                        eng3she = ftsj[3] + verbs[rand] + sodet[rand1];

                        sp3eso = ftsjs[4] + v3[rand] + sodete[rand1];
                        sp3it = ftsj[4] + verbs[rand] + sodet[rand1];

                        sp4 = ftsjs[5] + v4[rand] + sodete[rand1];
                        eng4 = ftsj[5] + verbs[rand] + sodet[rand1];

                        sp5 = ftsjs[6] + v5nos[rand] + sodete[rand1];
                        eng5 = ftsj[6] + verbs[rand] + sodet[rand1];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + sodete[rand1];
                        eng1 = ftsj[0] + verbs[rand] + sodet[rand1];

                        sp2 = ftsjsn[1] + v2[rand] + sodete[rand1];
                        eng2 = ftsj[1] + verbs[rand] + sodet[rand1];

                        sp3 = ftsjsn[2] + v3[rand] + sodete[rand1];
                        eng3 = ftsj[2] + verbs[rand] + sodet[rand1];

                        sp3ella = ftsjsn[3] + v3[rand] + sodete[rand1];
                        eng3she = ftsj[3] + verbs[rand] + sodet[rand1];

                        sp3eso = ftsjsn[4] + v3[rand] + sodete[rand1];
                        sp3it = ftsj[4] + verbs[rand] + sodet[rand1];

                        sp4 = ftsjsn[5] + v4[rand] + sodete[rand1];
                        eng4 = ftsj[5] + verbs[rand] + sodet[rand1];

                        sp5 = ftsjsn[6] + v5nos[rand] + sodete[rand1];
                        eng5 = ftsj[6] + verbs[rand] + sodet[rand1];
                        break;
                }
                break;
            case "anticipate ":
                int rand2 = (int) (Math.random() * soappr.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + soacer[rand2];
                        eng1 = ftsj[0] + verbs[rand] + soappr[rand2];

                        sp2 = ftsjs[1] + v2[rand] + soacer[rand2];
                        eng2 = ftsj[1] + verbs[rand] + soappr[rand2];

                        sp3 = ftsjs[2] + v3[rand] + soacer[rand2];
                        eng3 = ftsj[2] + verbs[rand] + soappr[rand2];

                        sp3ella = ftsjs[3] + v3[rand] + soacer[rand2];
                        eng3she = ftsj[3] + verbs[rand] + soappr[rand2];

                        sp3eso = ftsjs[4] + v3[rand] + soacer[rand2];
                        sp3it = ftsj[4] + verbs[rand] + soappr[rand2];

                        sp4 = ftsjs[5] + v4[rand] + soacer[rand2];
                        eng4 = ftsj[5] + verbs[rand] + soappr[rand2];

                        sp5 = ftsjs[6] + v5nos[rand] + soacer[rand2];
                        eng5 = ftsj[6] + verbs[rand] + soappr[rand2];


                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + soacer[rand2];
                        eng1 = ftsj[0] + verbs[rand] + soappr[rand2];

                        sp2 = ftsjsn[1] + v2[rand] + soacer[rand2];
                        eng2 = ftsj[1] + verbs[rand] + soappr[rand2];

                        sp3 = ftsjsn[2] + v3[rand] + soacer[rand2];
                        eng3 = ftsj[2] + verbs[rand] + soappr[rand2];

                        sp3ella = ftsjsn[3] + v3[rand] + soacer[rand2];
                        eng3she = ftsj[3] + verbs[rand] + soappr[rand2];

                        sp3eso = ftsjsn[4] + v3[rand] + soacer[rand2];
                        sp3it = ftsj[4] + verbs[rand] + soappr[rand2];

                        sp4 = ftsjsn[5] + v4[rand] + soacer[rand2];
                        eng4 = ftsj[5] + verbs[rand] + soappr[rand2];

                        sp5 = ftsjsn[6] + v5nos[rand] + soacer[rand2];
                        eng5 = ftsj[6] + verbs[rand] + soappr[rand2];

                }
                break;
            case "assume ":
                int rand3 = (int) (Math.random() * sogrow.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + socrecer[rand3];
                        eng1 = ftsj[0] + verbs[rand] + sogrow[rand3];

                        sp2 = ftsjs[1] + v2[rand] + socrecer[rand3];
                        eng2 = ftsj[1] + verbs[rand] + sogrow[rand3];

                        sp3 = ftsjs[2] + v3[rand] + socrecer[rand3];
                        eng3 = ftsj[2] + verbs[rand] + sogrow[rand3];

                        sp3ella = ftsjs[3] + v3[rand] + socrecer[rand3];
                        eng3she = ftsj[3] + verbs[rand] + sogrow[rand3];

                        sp3eso = ftsjs[4] + v3[rand] + socrecer[rand3];
                        sp3it = ftsj[4] + verbs[rand] + sogrow[rand3];

                        sp4 = ftsjs[5] + v4[rand] + socrecer[rand3];
                        eng4 = ftsj[5] + verbs[rand] + sogrow[rand3];

                        sp5 = ftsjs[6] + v5nos[rand] + socrecer[rand3];
                        eng5 = ftsj[6] + verbs[rand] + sogrow[rand3];


                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + socrecer[rand3];
                        eng1 = ftsj[0] + verbs[rand] + sogrow[rand3];

                        sp2 = ftsjsn[1] + v2[rand] + socrecer[rand3];
                        eng2 = ftsj[1] + verbs[rand] + sogrow[rand3];

                        sp3 = ftsjsn[2] + v3[rand] + socrecer[rand3];
                        eng3 = ftsj[2] + verbs[rand] + sogrow[rand3];

                        sp3ella = ftsjsn[3] + v3[rand] + socrecer[rand3];
                        eng3she = ftsj[3] + verbs[rand] + sogrow[rand3];

                        sp3eso = ftsjsn[4] + v3[rand] + socrecer[rand3];
                        sp3it = ftsj[4] + verbs[rand] + sogrow[rand3];

                        sp4 = ftsjsn[5] + v4[rand] + socrecer[rand3];
                        eng4 = ftsj[5] + verbs[rand] + sogrow[rand3];

                        sp5 = ftsjsn[6] + v5nos[rand] + socrecer[rand3];
                        eng5 = ftsj[6] + verbs[rand] + sogrow[rand3];

                }
                break;
            case "engage ":
                int rand4 = (int) (Math.random() * soimpr.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + somejo[rand4];
                        eng1 = ftsj[0] + verbs[rand] + soimpr[rand4];

                        sp2 = ftsjs[1] + v2[rand] + somejo[rand4];
                        eng2 = ftsj[1] + verbs[rand] + soimpr[rand4];

                        sp3 = ftsjs[2] + v3[rand] + somejo[rand4];
                        eng3 = ftsj[2] + verbs[rand] + soimpr[rand4];

                        sp3ella = ftsjs[3] + v3[rand] + somejo[rand4];
                        eng3she = ftsj[3] + verbs[rand] + soimpr[rand4];

                        sp3eso = ftsjs[4] + v3[rand] + somejo[rand4];
                        sp3it = ftsj[4] + verbs[rand] + soimpr[rand4];

                        sp4 = ftsjs[5] + v4[rand] + somejo[rand4];
                        eng4 = ftsj[5] + verbs[rand] + soimpr[rand4];

                        sp5 = ftsjs[6] + v5nos[rand] + somejo[rand4];
                        eng5 = ftsj[6] + verbs[rand] + soimpr[rand4];


                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + somejo[rand4];
                        eng1 = ftsj[0] + verbs[rand] + soimpr[rand4];

                        sp2 = ftsjsn[1] + v2[rand] + somejo[rand4];
                        eng2 = ftsj[1] + verbs[rand] + soimpr[rand4];

                        sp3 = ftsjsn[2] + v3[rand] + somejo[rand4];
                        eng3 = ftsj[2] + verbs[rand] + soimpr[rand4];

                        sp3ella = ftsjsn[3] + v3[rand] + somejo[rand4];
                        eng3she = ftsj[3] + verbs[rand] + soimpr[rand4];

                        sp3eso = ftsjsn[4] + v3[rand] + somejo[rand4];
                        sp3it = ftsj[4] + verbs[rand] + soimpr[rand4];

                        sp4 = ftsjsn[5] + v4[rand] + somejo[rand4];
                        eng4 = ftsj[5] + verbs[rand] + soimpr[rand4];

                        sp5 = ftsjsn[6] + v5nos[rand] + somejo[rand4];
                        eng5 = ftsj[6] + verbs[rand] + soimpr[rand4];

                }
                break;
            case "intend ":
                int rand5 = (int) (Math.random() * sobegin.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + socomen[rand5];
                        eng1 = ftsj[0] + verbs[rand] + sobegin[rand5];

                        sp2 = ftsjs[1] + v2[rand] + socomen[rand5];
                        eng2 = ftsj[1] + verbs[rand] + sobegin[rand5];

                        sp3 = ftsjs[2] + v3[rand] + socomen[rand5];
                        eng3 = ftsj[2] + verbs[rand] + sobegin[rand5];

                        sp3ella = ftsjs[3] + v3[rand] + socomen[rand5];
                        eng3she = ftsj[3] + verbs[rand] + sobegin[rand5];

                        sp3eso = ftsjs[4] + v3[rand] + socomen[rand5];
                        sp3it = ftsj[4] + verbs[rand] + sobegin[rand5];

                        sp4 = ftsjs[5] + v4[rand] + socomen[rand5];
                        eng4 = ftsj[5] + verbs[rand] + sobegin[rand5];

                        sp5 = ftsjs[6] + v5nos[rand] + socomen[rand5];
                        eng5 = ftsj[6] + verbs[rand] + sobegin[rand5];


                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + socomen[rand5];
                        eng1 = ftsj[0] + verbs[rand] + sobegin[rand5];

                        sp2 = ftsjsn[1] + v2[rand] + socomen[rand5];
                        eng2 = ftsj[1] + verbs[rand] + sobegin[rand5];

                        sp3 = ftsjsn[2] + v3[rand] + socomen[rand5];
                        eng3 = ftsj[2] + verbs[rand] + sobegin[rand5];

                        sp3ella = ftsjsn[3] + v3[rand] + socomen[rand5];
                        eng3she = ftsj[3] + verbs[rand] + sobegin[rand5];

                        sp3eso = ftsjsn[4] + v3[rand] + socomen[rand5];
                        sp3it = ftsj[4] + verbs[rand] + sobegin[rand5];

                        sp4 = ftsjsn[5] + v4[rand] + socomen[rand5];
                        eng4 = ftsj[5] + verbs[rand] + sobegin[rand5];

                        sp5 = ftsjsn[6] + v5nos[rand] + socomen[rand5];
                        eng5 = ftsj[6] + verbs[rand] + sobegin[rand5];

                }
                break;
            case "relate ":
                int rand6 = (int) (Math.random() * socontinu.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + socontinu[rand6];
                        eng1 = ftsj[0] + verbs[rand] + soconti[rand6];

                        sp2 = ftsjs[1] + v2[rand] + socontinu[rand6];
                        eng2 = ftsj[1] + verbs[rand] + soconti[rand6];

                        sp3 = ftsjs[2] + v3[rand] + socontinu[rand6];
                        eng3 = ftsj[2] + verbs[rand] + soconti[rand6];

                        sp3ella = ftsjs[3] + v3[rand] + socontinu[rand6];
                        eng3she = ftsj[3] + verbs[rand] + soconti[rand6];

                        sp3eso = ftsjs[4] + v3[rand] + socontinu[rand6];
                        sp3it = ftsj[4] + verbs[rand] + soconti[rand6];

                        sp4 = ftsjs[5] + v4[rand] + socontinu[rand6];
                        eng4 = ftsj[5] + verbs[rand] + soconti[rand6];

                        sp5 = ftsjs[6] + v5nos[rand] + socontinu[rand6];
                        eng5 = ftsj[6] + verbs[rand] + soconti[rand6];


                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + socontinu[rand6];
                        eng1 = ftsj[0] + verbs[rand] + soconti[rand6];

                        sp2 = ftsjsn[1] + v2[rand] + socontinu[rand6];
                        eng2 = ftsj[1] + verbs[rand] + soconti[rand6];

                        sp3 = ftsjsn[2] + v3[rand] + socontinu[rand6];
                        eng3 = ftsj[2] + verbs[rand] + soconti[rand6];

                        sp3ella = ftsjsn[3] + v3[rand] + socontinu[rand6];
                        eng3she = ftsj[3] + verbs[rand] + soconti[rand6];

                        sp3eso = ftsjsn[4] + v3[rand] + socontinu[rand6];
                        sp3it = ftsj[4] + verbs[rand] + soconti[rand6];

                        sp4 = ftsjsn[5] + v4[rand] + socontinu[rand6];
                        eng4 = ftsj[5] + verbs[rand] + soconti[rand6];

                        sp5 = ftsjsn[6] + v5nos[rand] + socontinu[rand6];
                        eng5 = ftsj[6] + verbs[rand] + soconti[rand6];

                }
                break;
            case "settle ":
                int rand7 = (int) (Math.random() * sowrite.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + soescri[rand7];
                        eng1 = ftsj[0] + verbs[rand] + sowrite[rand7];

                        sp2 = ftsjs[1] + v2[rand] + soescri[rand7];
                        eng2 = ftsj[1] + verbs[rand] + sowrite[rand7];

                        sp3 = ftsjs[2] + v3[rand] + soescri[rand7];
                        eng3 = ftsj[2] + verbs[rand] + sowrite[rand7];

                        sp3ella = ftsjs[3] + v3[rand] + soescri[rand7];
                        eng3she = ftsj[3] + verbs[rand] + sowrite[rand7];

                        sp3eso = ftsjs[4] + v3[rand] + soescri[rand7];
                        sp3it = ftsj[4] + verbs[rand] + sowrite[rand7];

                        sp4 = ftsjs[5] + v4[rand] + soescri[rand7];
                        eng4 = ftsj[5] + verbs[rand] + sowrite[rand7];

                        sp5 = ftsjs[6] + v5nos[rand] + soescri[rand7];
                        eng5 = ftsj[6] + verbs[rand] + sowrite[rand7];


                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + soescri[rand7];
                        eng1 = ftsj[0] + verbs[rand] + sowrite[rand7];

                        sp2 = ftsjsn[1] + v2[rand] + soescri[rand7];
                        eng2 = ftsj[1] + verbs[rand] + sowrite[rand7];

                        sp3 = ftsjsn[2] + v3[rand] + soescri[rand7];
                        eng3 = ftsj[2] + verbs[rand] + sowrite[rand7];

                        sp3ella = ftsjsn[3] + v3[rand] + soescri[rand7];
                        eng3she = ftsj[3] + verbs[rand] + sowrite[rand7];

                        sp3eso = ftsjsn[4] + v3[rand] + soescri[rand7];
                        sp3it = ftsj[4] + verbs[rand] + sowrite[rand7];

                        sp4 = ftsjsn[5] + v4[rand] + soescri[rand7];
                        eng4 = ftsj[5] + verbs[rand] + sowrite[rand7];

                        sp5 = ftsjsn[6] + v5nos[rand] + soescri[rand7];
                        eng5 = ftsj[6] + verbs[rand] + sowrite[rand7];

                }
                break;
            case "owe ":
                int rand8 = (int) (Math.random() * soachiv.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + sologr[rand8];
                        eng1 = ftsj[0] + verbs[rand] + soachiv[rand8];

                        sp2 = ftsjs[1] + v2[rand] + sologr[rand8];
                        eng2 = ftsj[1] + verbs[rand] + soachiv[rand8];

                        sp3 = ftsjs[2] + v3[rand] + sologr[rand8];
                        eng3 = ftsj[2] + verbs[rand] + soachiv[rand8];

                        sp3ella = ftsjs[3] + v3[rand] + sologr[rand8];
                        eng3she = ftsj[3] + verbs[rand] + soachiv[rand8];

                        sp3eso = ftsjs[4] + v3[rand] + sologr[rand8];
                        sp3it = ftsj[4] + verbs[rand] + soachiv[rand8];

                        sp4 = ftsjs[5] + v4[rand] + sologr[rand8];
                        eng4 = ftsj[5] + verbs[rand] + soachiv[rand8];

                        sp5 = ftsjs[6] + v5nos[rand] + sologr[rand8];
                        eng5 = ftsj[6] + verbs[rand] + soachiv[rand8];


                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + sologr[rand8];
                        eng1 = ftsj[0] + verbs[rand] + soachiv[rand8];

                        sp2 = ftsjsn[1] + v2[rand] + sologr[rand8];
                        eng2 = ftsj[1] + verbs[rand] + soachiv[rand8];

                        sp3 = ftsjsn[2] + v3[rand] + sologr[rand8];
                        eng3 = ftsj[2] + verbs[rand] + soachiv[rand8];

                        sp3ella = ftsjsn[3] + v3[rand] + sologr[rand8];
                        eng3she = ftsj[3] + verbs[rand] + soachiv[rand8];

                        sp3eso = ftsjsn[4] + v3[rand] + sologr[rand8];
                        sp3it = ftsj[4] + verbs[rand] + soachiv[rand8];

                        sp4 = ftsjsn[5] + v4[rand] + sologr[rand8];
                        eng4 = ftsj[5] + verbs[rand] + soachiv[rand8];

                        sp5 = ftsjsn[6] + v5nos[rand] + sologr[rand8];
                        eng5 = ftsj[6] + verbs[rand] + soachiv[rand8];

                }
                break;
            case "confirm ":
                int rand9 = (int) (Math.random() * sodisc.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + sodiscu[rand9];
                        eng1 = ftsj[0] + verbs[rand] + sodisc[rand9];

                        sp2 = ftsjs[1] + v2[rand] + sodiscu[rand9];
                        eng2 = ftsj[1] + verbs[rand] + sodisc[rand9];

                        sp3 = ftsjs[2] + v3[rand] + sodiscu[rand9];
                        eng3 = ftsj[2] + verbs[rand] + sodisc[rand9];

                        sp3ella = ftsjs[3] + v3[rand] + sodiscu[rand9];
                        eng3she = ftsj[3] + verbs[rand] + sodisc[rand9];

                        sp3eso = ftsjs[4] + v3[rand] + sodiscu[rand9];
                        sp3it = ftsj[4] + verbs[rand] + sodisc[rand9];

                        sp4 = ftsjs[5] + v4[rand] + sodiscu[rand9];
                        eng4 = ftsj[5] + verbs[rand] + sodisc[rand9];

                        sp5 = ftsjs[6] + v5nos[rand] + sodiscu[rand9];
                        eng5 = ftsj[6] + verbs[rand] + sodisc[rand9];


                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + sodiscu[rand9];
                        eng1 = ftsj[0] + verbs[rand] + sodisc[rand9];

                        sp2 = ftsjsn[1] + v2[rand] + sodiscu[rand9];
                        eng2 = ftsj[1] + verbs[rand] + sodisc[rand9];

                        sp3 = ftsjsn[2] + v3[rand] + sodiscu[rand9];
                        eng3 = ftsj[2] + verbs[rand] + sodisc[rand9];

                        sp3ella = ftsjsn[3] + v3[rand] + sodiscu[rand9];
                        eng3she = ftsj[3] + verbs[rand] + sodisc[rand9];

                        sp3eso = ftsjsn[4] + v3[rand] + sodiscu[rand9];
                        sp3it = ftsj[4] + verbs[rand] + sodisc[rand9];

                        sp4 = ftsjsn[5] + v4[rand] + sodiscu[rand9];
                        eng4 = ftsj[5] + verbs[rand] + sodisc[rand9];

                        sp5 = ftsjsn[6] + v5nos[rand] + sodiscu[rand9];
                        eng5 = ftsj[6] + verbs[rand] + sodisc[rand9];

                }
                break;
            case "shut ":
                int rand10 = (int) (Math.random() * sosolv.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + soresolv[rand10];
                        eng1 = ftsj[0] + verbs[rand] + sosolv[rand10];

                        sp2 = ftsjs[1] + v2[rand] + soresolv[rand10];
                        eng2 = ftsj[1] + verbs[rand] + sosolv[rand10];

                        sp3 = ftsjs[2] + v3[rand] + soresolv[rand10];
                        eng3 = ftsj[2] + verbs[rand] + sosolv[rand10];

                        sp3ella = ftsjs[3] + v3[rand] + soresolv[rand10];
                        eng3she = ftsj[3] + verbs[rand] + sosolv[rand10];

                        sp3eso = ftsjs[4] + v3[rand] + soresolv[rand10];
                        sp3it = ftsj[4] + verbs[rand] + sosolv[rand10];

                        sp4 = ftsjs[5] + v4[rand] + soresolv[rand10];
                        eng4 = ftsj[5] + verbs[rand] + sosolv[rand10];

                        sp5 = ftsjs[6] + v5nos[rand] + soresolv[rand10];
                        eng5 = ftsj[6] + verbs[rand] + sosolv[rand10];


                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + soresolv[rand10];
                        eng1 = ftsj[0] + verbs[rand] + sosolv[rand10];

                        sp2 = ftsjsn[1] + v2[rand] + soresolv[rand10];
                        eng2 = ftsj[1] + verbs[rand] + sosolv[rand10];

                        sp3 = ftsjsn[2] + v3[rand] + soresolv[rand10];
                        eng3 = ftsj[2] + verbs[rand] + sosolv[rand10];

                        sp3ella = ftsjsn[3] + v3[rand] + soresolv[rand10];
                        eng3she = ftsj[3] + verbs[rand] + sosolv[rand10];

                        sp3eso = ftsjsn[4] + v3[rand] + soresolv[rand10];
                        sp3it = ftsj[4] + verbs[rand] + sosolv[rand10];

                        sp4 = ftsjsn[5] + v4[rand] + soresolv[rand10];
                        eng4 = ftsj[5] + verbs[rand] + sosolv[rand10];

                        sp5 = ftsjsn[6] + v5nos[rand] + soresolv[rand10];
                        eng5 = ftsj[6] + verbs[rand] + sosolv[rand10];

                }
                break;
            case "calculate ":
                int rand11 = (int) (Math.random() * soinvst.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + soinvert[rand11];
                        eng1 = ftsj[0] + verbs[rand] + soinvst[rand11];

                        sp2 = ftsjs[1] + v2[rand] + soinvert[rand11];
                        eng2 = ftsj[1] + verbs[rand] + soinvst[rand11];

                        sp3 = ftsjs[2] + v3[rand] + soinvert[rand11];
                        eng3 = ftsj[2] + verbs[rand] + soinvst[rand11];

                        sp3ella = ftsjs[3] + v3[rand] + soinvert[rand11];
                        eng3she = ftsj[3] + verbs[rand] + soinvst[rand11];

                        sp3eso = ftsjs[4] + v3[rand] + soinvert[rand11];
                        sp3it = ftsj[4] + verbs[rand] + soinvst[rand11];

                        sp4 = ftsjs[5] + v4[rand] + soinvert[rand11];
                        eng4 = ftsj[5] + verbs[rand] + soinvst[rand11];

                        sp5 = ftsjs[6] + v5nos[rand] + soinvert[rand11];
                        eng5 = ftsj[6] + verbs[rand] + soinvst[rand11];


                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + soinvert[rand11];
                        eng1 = ftsj[0] + verbs[rand] + soinvst[rand11];

                        sp2 = ftsjsn[1] + v2[rand] + soinvert[rand11];
                        eng2 = ftsj[1] + verbs[rand] + soinvst[rand11];

                        sp3 = ftsjsn[2] + v3[rand] + soinvert[rand11];
                        eng3 = ftsj[2] + verbs[rand] + soinvst[rand11];

                        sp3ella = ftsjsn[3] + v3[rand] + soinvert[rand11];
                        eng3she = ftsj[3] + verbs[rand] + soinvst[rand11];

                        sp3eso = ftsjsn[4] + v3[rand] + soinvert[rand11];
                        sp3it = ftsj[4] + verbs[rand] + soinvst[rand11];

                        sp4 = ftsjsn[5] + v4[rand] + soinvert[rand11];
                        eng4 = ftsj[5] + verbs[rand] + soinvst[rand11];

                        sp5 = ftsjsn[6] + v5nos[rand] + soinvert[rand11];
                        eng5 = ftsj[6] + verbs[rand] + soinvst[rand11];

                }
                break;
            case "deliver ":
                int rand12 = (int) (Math.random() * soreduce.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + soreducir[rand12];
                        eng1 = ftsj[0] + verbs[rand] + soreduce[rand12];

                        sp2 = ftsjs[1] + v2[rand] + soreducir[rand12];
                        eng2 = ftsj[1] + verbs[rand] + soreduce[rand12];

                        sp3 = ftsjs[2] + v3[rand] + soreducir[rand12];
                        eng3 = ftsj[2] + verbs[rand] + soreduce[rand12];

                        sp3ella = ftsjs[3] + v3[rand] + soreducir[rand12];
                        eng3she = ftsj[3] + verbs[rand] + soreduce[rand12];

                        sp3eso = ftsjs[4] + v3[rand] + soreducir[rand12];
                        sp3it = ftsj[4] + verbs[rand] + soreduce[rand12];

                        sp4 = ftsjs[5] + v4[rand] + soreducir[rand12];
                        eng4 = ftsj[5] + verbs[rand] + soreduce[rand12];

                        sp5 = ftsjs[6] + v5nos[rand] + soreducir[rand12];
                        eng5 = ftsj[6] + verbs[rand] + soreduce[rand12];


                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + soreducir[rand12];
                        eng1 = ftsj[0] + verbs[rand] + soreduce[rand12];

                        sp2 = ftsjsn[1] + v2[rand] + soreducir[rand12];
                        eng2 = ftsj[1] + verbs[rand] + soreduce[rand12];

                        sp3 = ftsjsn[2] + v3[rand] + soreducir[rand12];
                        eng3 = ftsj[2] + verbs[rand] + soreduce[rand12];

                        sp3ella = ftsjsn[3] + v3[rand] + soreducir[rand12];
                        eng3she = ftsj[3] + verbs[rand] + soreduce[rand12];

                        sp3eso = ftsjsn[4] + v3[rand] + soreducir[rand12];
                        sp3it = ftsj[4] + verbs[rand] + soreduce[rand12];

                        sp4 = ftsjsn[5] + v4[rand] + soreducir[rand12];
                        eng4 = ftsj[5] + verbs[rand] + soreduce[rand12];

                        sp5 = ftsjsn[6] + v5nos[rand] + soreducir[rand12];
                        eng5 = ftsj[6] + verbs[rand] + soreduce[rand12];

                }
                break;
            case "extend ":
                int rand13 = (int) (Math.random() * sospeak.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + sohablar[rand13];
                        eng1 = ftsj[0] + verbs[rand] + sospeak[rand13];

                        sp2 = ftsjs[1] + v2[rand] + sohablar[rand13];
                        eng2 = ftsj[1] + verbs[rand] + sospeak[rand13];

                        sp3 = ftsjs[2] + v3[rand] + sohablar[rand13];
                        eng3 = ftsj[2] + verbs[rand] + sospeak[rand13];

                        sp3ella = ftsjs[3] + v3[rand] + sohablar[rand13];
                        eng3she = ftsj[3] + verbs[rand] + sospeak[rand13];

                        sp3eso = ftsjs[4] + v3[rand] + sohablar[rand13];
                        sp3it = ftsj[4] + verbs[rand] + sospeak[rand13];

                        sp4 = ftsjs[5] + v4[rand] + sohablar[rand13];
                        eng4 = ftsj[5] + verbs[rand] + sospeak[rand13];

                        sp5 = ftsjs[6] + v5nos[rand] + sohablar[rand13];
                        eng5 = ftsj[6] + verbs[rand] + sospeak[rand13];


                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + sohablar[rand13];
                        eng1 = ftsj[0] + verbs[rand] + sospeak[rand13];

                        sp2 = ftsjsn[1] + v2[rand] + sohablar[rand13];
                        eng2 = ftsj[1] + verbs[rand] + sospeak[rand13];

                        sp3 = ftsjsn[2] + v3[rand] + sohablar[rand13];
                        eng3 = ftsj[2] + verbs[rand] + sospeak[rand13];

                        sp3ella = ftsjsn[3] + v3[rand] + sohablar[rand13];
                        eng3she = ftsj[3] + verbs[rand] + sospeak[rand13];

                        sp3eso = ftsjsn[4] + v3[rand] + sohablar[rand13];
                        sp3it = ftsj[4] + verbs[rand] + sospeak[rand13];

                        sp4 = ftsjsn[5] + v4[rand] + sohablar[rand13];
                        eng4 = ftsj[5] + verbs[rand] + sospeak[rand13];

                        sp5 = ftsjsn[6] + v5nos[rand] + sohablar[rand13];
                        eng5 = ftsj[6] + verbs[rand] + sospeak[rand13];

                }
                break;
            case "investigate ":
                int rand14 = (int) (Math.random() * soapply.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + soaplic[rand14];
                        eng1 = ftsj[0] + verbs[rand] + soapply[rand14];

                        sp2 = ftsjs[1] + v2[rand] + soaplic[rand14];
                        eng2 = ftsj[1] + verbs[rand] + soapply[rand14];

                        sp3 = ftsjs[2] + v3[rand] + soaplic[rand14];
                        eng3 = ftsj[2] + verbs[rand] + soapply[rand14];

                        sp3ella = ftsjs[3] + v3[rand] + soaplic[rand14];
                        eng3she = ftsj[3] + verbs[rand] + soapply[rand14];

                        sp3eso = ftsjs[4] + v3[rand] + soaplic[rand14];
                        sp3it = ftsj[4] + verbs[rand] + soapply[rand14];

                        sp4 = ftsjs[5] + v4[rand] + soaplic[rand14];
                        eng4 = ftsj[5] + verbs[rand] + soapply[rand14];

                        sp5 = ftsjs[6] + v5nos[rand] + soaplic[rand14];
                        eng5 = ftsj[6] + verbs[rand] + soapply[rand14];


                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + soaplic[rand14];
                        eng1 = ftsj[0] + verbs[rand] + soapply[rand14];

                        sp2 = ftsjsn[1] + v2[rand] + soaplic[rand14];
                        eng2 = ftsj[1] + verbs[rand] + soapply[rand14];

                        sp3 = ftsjsn[2] + v3[rand] + soaplic[rand14];
                        eng3 = ftsj[2] + verbs[rand] + soapply[rand14];

                        sp3ella = ftsjsn[3] + v3[rand] + soaplic[rand14];
                        eng3she = ftsj[3] + verbs[rand] + soapply[rand14];

                        sp3eso = ftsjsn[4] + v3[rand] + soaplic[rand14];
                        sp3it = ftsj[4] + verbs[rand] + soapply[rand14];

                        sp4 = ftsjsn[5] + v4[rand] + soaplic[rand14];
                        eng4 = ftsj[5] + verbs[rand] + soapply[rand14];

                        sp5 = ftsjsn[6] + v5nos[rand] + soaplic[rand14];
                        eng5 = ftsj[6] + verbs[rand] + soapply[rand14];

                }
                break;
            case "qualify ":
                int rand15 = (int) (Math.random() * sorec.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + sorecom[rand15];
                        eng1 = ftsj[0] + verbs[rand] + sorec[rand15];

                        sp2 = ftsjs[1] + v2[rand] + sorecom[rand15];
                        eng2 = ftsj[1] + verbs[rand] + sorec[rand15];

                        sp3 = ftsjs[2] + v3[rand] + sorecom[rand15];
                        eng3 = ftsj[2] + verbs[rand] + sorec[rand15];

                        sp3ella = ftsjs[3] + v3[rand] + sorecom[rand15];
                        eng3she = ftsj[3] + verbs[rand] + sorec[rand15];

                        sp3eso = ftsjs[4] + v3[rand] + sorecom[rand15];
                        sp3it = ftsj[4] + verbs[rand] + sorec[rand15];

                        sp4 = ftsjs[5] + v4[rand] + sorecom[rand15];
                        eng4 = ftsj[5] + verbs[rand] + sorec[rand15];

                        sp5 = ftsjs[6] + v5nos[rand] + sorecom[rand15];
                        eng5 = ftsj[6] + verbs[rand] + sorec[rand15];


                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + sorecom[rand15];
                        eng1 = ftsj[0] + verbs[rand] + sorec[rand15];

                        sp2 = ftsjsn[1] + v2[rand] + sorecom[rand15];
                        eng2 = ftsj[1] + verbs[rand] + sorec[rand15];

                        sp3 = ftsjsn[2] + v3[rand] + sorecom[rand15];
                        eng3 = ftsj[2] + verbs[rand] + sorec[rand15];

                        sp3ella = ftsjsn[3] + v3[rand] + sorecom[rand15];
                        eng3she = ftsj[3] + verbs[rand] + sorec[rand15];

                        sp3eso = ftsjsn[4] + v3[rand] + sorecom[rand15];
                        sp3it = ftsj[4] + verbs[rand] + sorec[rand15];

                        sp4 = ftsjsn[5] + v4[rand] + sorecom[rand15];
                        eng4 = ftsj[5] + verbs[rand] + sorec[rand15];

                        sp5 = ftsjsn[6] + v5nos[rand] + sorecom[rand15];
                        eng5 = ftsj[6] + verbs[rand] + sorec[rand15];

                }
                break;
            case "celebrate ":
                int rand16 = (int) (Math.random() * sovar.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + sovariar[rand16];
                        eng1 = ftsj[0] + verbs[rand] + sovar[rand16];

                        sp2 = ftsjs[1] + v2[rand] + sovariar[rand16];
                        eng2 = ftsj[1] + verbs[rand] + sovar[rand16];

                        sp3 = ftsjs[2] + v3[rand] + sovariar[rand16];
                        eng3 = ftsj[2] + verbs[rand] + sovar[rand16];

                        sp3ella = ftsjs[3] + v3[rand] + sovariar[rand16];
                        eng3she = ftsj[3] + verbs[rand] + sovar[rand16];

                        sp3eso = ftsjs[4] + v3[rand] + sovariar[rand16];
                        sp3it = ftsj[4] + verbs[rand] + sovar[rand16];

                        sp4 = ftsjs[5] + v4[rand] + sovariar[rand16];
                        eng4 = ftsj[5] + verbs[rand] + sovar[rand16];

                        sp5 = ftsjs[6] + v5nos[rand] + sovariar[rand16];
                        eng5 = ftsj[6] + verbs[rand] + sovar[rand16];


                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + sovariar[rand16];
                        eng1 = ftsj[0] + verbs[rand] + sovar[rand16];

                        sp2 = ftsjsn[1] + v2[rand] + sovariar[rand16];
                        eng2 = ftsj[1] + verbs[rand] + sovar[rand16];

                        sp3 = ftsjsn[2] + v3[rand] + sovariar[rand16];
                        eng3 = ftsj[2] + verbs[rand] + sovar[rand16];

                        sp3ella = ftsjsn[3] + v3[rand] + sovariar[rand16];
                        eng3she = ftsj[3] + verbs[rand] + sovar[rand16];

                        sp3eso = ftsjsn[4] + v3[rand] + sovariar[rand16];
                        sp3it = ftsj[4] + verbs[rand] + sovar[rand16];

                        sp4 = ftsjsn[5] + v4[rand] + sovariar[rand16];
                        eng4 = ftsj[5] + verbs[rand] + sovar[rand16];

                        sp5 = ftsjsn[6] + v5nos[rand] + sovariar[rand16];
                        eng5 = ftsj[6] + verbs[rand] + sovar[rand16];

                }
                break;
            case "admit ":
                int rand17 = (int) (Math.random() * sogener.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + sogenerar[rand17];
                        eng1 = ftsj[0] + verbs[rand] + sogener[rand17];

                        sp2 = ftsjs[1] + v2[rand] + sogenerar[rand17];
                        eng2 = ftsj[1] + verbs[rand] + sogener[rand17];

                        sp3 = ftsjs[2] + v3[rand] + sogenerar[rand17];
                        eng3 = ftsj[2] + verbs[rand] + sogener[rand17];

                        sp3ella = ftsjs[3] + v3[rand] + sogenerar[rand17];
                        eng3she = ftsj[3] + verbs[rand] + sogener[rand17];

                        sp3eso = ftsjs[4] + v3[rand] + sogenerar[rand17];
                        sp3it = ftsj[4] + verbs[rand] + sogener[rand17];

                        sp4 = ftsjs[5] + v4[rand] + sogenerar[rand17];
                        eng4 = ftsj[5] + verbs[rand] + sogener[rand17];

                        sp5 = ftsjs[6] + v5nos[rand] + sogenerar[rand17];
                        eng5 = ftsj[6] + verbs[rand] + sogener[rand17];


                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + sogenerar[rand17];
                        eng1 = ftsj[0] + verbs[rand] + sogener[rand17];

                        sp2 = ftsjsn[1] + v2[rand] + sogenerar[rand17];
                        eng2 = ftsj[1] + verbs[rand] + sogener[rand17];

                        sp3 = ftsjsn[2] + v3[rand] + sogenerar[rand17];
                        eng3 = ftsj[2] + verbs[rand] + sogener[rand17];

                        sp3ella = ftsjsn[3] + v3[rand] + sogenerar[rand17];
                        eng3she = ftsj[3] + verbs[rand] + sogener[rand17];

                        sp3eso = ftsjsn[4] + v3[rand] + sogenerar[rand17];
                        sp3it = ftsj[4] + verbs[rand] + sogener[rand17];

                        sp4 = ftsjsn[5] + v4[rand] + sogenerar[rand17];
                        eng4 = ftsj[5] + verbs[rand] + sogener[rand17];

                        sp5 = ftsjsn[6] + v5nos[rand] + sogenerar[rand17];
                        eng5 = ftsj[6] + verbs[rand] + sogener[rand17];

                }
                break;
            case "adopt ":
                int rand18 = (int) (Math.random() * soobtn.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + soobten[rand18];
                        eng1 = ftsj[0] + verbs[rand] + soobtn[rand18];

                        sp2 = ftsjs[1] + v2[rand] + soobten[rand18];
                        eng2 = ftsj[1] + verbs[rand] + soobtn[rand18];

                        sp3 = ftsjs[2] + v3[rand] + soobten[rand18];
                        eng3 = ftsj[2] + verbs[rand] + soobtn[rand18];

                        sp3ella = ftsjs[3] + v3[rand] + soobten[rand18];
                        eng3she = ftsj[3] + verbs[rand] + soobtn[rand18];

                        sp3eso = ftsjs[4] + v3[rand] + soobten[rand18];
                        sp3it = ftsj[4] + verbs[rand] + soobtn[rand18];

                        sp4 = ftsjs[5] + v4[rand] + soobten[rand18];
                        eng4 = ftsj[5] + verbs[rand] + soobtn[rand18];

                        sp5 = ftsjs[6] + v5nos[rand] + soobten[rand18];
                        eng5 = ftsj[6] + verbs[rand] + soobtn[rand18];


                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + soobten[rand18];
                        eng1 = ftsj[0] + verbs[rand] + soobtn[rand18];

                        sp2 = ftsjsn[1] + v2[rand] + soobten[rand18];
                        eng2 = ftsj[1] + verbs[rand] + soobtn[rand18];

                        sp3 = ftsjsn[2] + v3[rand] + soobten[rand18];
                        eng3 = ftsj[2] + verbs[rand] + soobtn[rand18];

                        sp3ella = ftsjsn[3] + v3[rand] + soobten[rand18];
                        eng3she = ftsj[3] + verbs[rand] + soobtn[rand18];

                        sp3eso = ftsjsn[4] + v3[rand] + soobten[rand18];
                        sp3it = ftsj[4] + verbs[rand] + soobtn[rand18];

                        sp4 = ftsjsn[5] + v4[rand] + soobten[rand18];
                        eng4 = ftsj[5] + verbs[rand] + soobtn[rand18];

                        sp5 = ftsjsn[6] + v5nos[rand] + soobten[rand18];
                        eng5 = ftsj[6] + verbs[rand] + soobtn[rand18];

                }
                break;
            case "announce ":
                int rand19 = (int) (Math.random() * soent.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + soentra[rand19];
                        eng1 = ftsj[0] + verbs[rand] + soent[rand19];

                        sp2 = ftsjs[1] + v2[rand] + soentra[rand19];
                        eng2 = ftsj[1] + verbs[rand] + soent[rand19];

                        sp3 = ftsjs[2] + v3[rand] + soentra[rand19];
                        eng3 = ftsj[2] + verbs[rand] + soent[rand19];

                        sp3ella = ftsjs[3] + v3[rand] + soentra[rand19];
                        eng3she = ftsj[3] + verbs[rand] + soent[rand19];

                        sp3eso = ftsjs[4] + v3[rand] + soentra[rand19];
                        sp3it = ftsj[4] + verbs[rand] + soent[rand19];

                        sp4 = ftsjs[5] + v4[rand] + soentra[rand19];
                        eng4 = ftsj[5] + verbs[rand] + soent[rand19];

                        sp5 = ftsjs[6] + v5nos[rand] + soentra[rand19];
                        eng5 = ftsj[6] + verbs[rand] + soent[rand19];


                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + soentra[rand19];
                        eng1 = ftsj[0] + verbs[rand] + soent[rand19];

                        sp2 = ftsjsn[1] + v2[rand] + soentra[rand19];
                        eng2 = ftsj[1] + verbs[rand] + soent[rand19];

                        sp3 = ftsjsn[2] + v3[rand] + soentra[rand19];
                        eng3 = ftsj[2] + verbs[rand] + soent[rand19];

                        sp3ella = ftsjsn[3] + v3[rand] + soentra[rand19];
                        eng3she = ftsj[3] + verbs[rand] + soent[rand19];

                        sp3eso = ftsjsn[4] + v3[rand] + soentra[rand19];
                        sp3it = ftsj[4] + verbs[rand] + soent[rand19];

                        sp4 = ftsjsn[5] + v4[rand] + soentra[rand19];
                        eng4 = ftsj[5] + verbs[rand] + soent[rand19];

                        sp5 = ftsjsn[6] + v5nos[rand] + soentra[rand19];
                        eng5 = ftsj[6] + verbs[rand] + soent[rand19];

                }
                break;
            case "attend ":
                int rand20 = (int) (Math.random() * soapre.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + soapre[rand20];
                        eng1 = ftsj[0] + verbs[rand] + soappre[rand20];

                        sp2 = ftsjs[1] + v2[rand] + soapre[rand20];
                        eng2 = ftsj[1] + verbs[rand] + soappre[rand20];

                        sp3 = ftsjs[2] + v3[rand] + soapre[rand20];
                        eng3 = ftsj[2] + verbs[rand] + soappre[rand20];

                        sp3ella = ftsjs[3] + v3[rand] + soapre[rand20];
                        eng3she = ftsj[3] + verbs[rand] + soappre[rand20];

                        sp3eso = ftsjs[4] + v3[rand] + soapre[rand20];
                        sp3it = ftsj[4] + verbs[rand] + soappre[rand20];

                        sp4 = ftsjs[5] + v4[rand] + soapre[rand20];
                        eng4 = ftsj[5] + verbs[rand] + soappre[rand20];

                        sp5 = ftsjs[6] + v5nos[rand] + soapre[rand20];
                        eng5 = ftsj[6] + verbs[rand] + soappre[rand20];


                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + soapre[rand20];
                        eng1 = ftsj[0] + verbs[rand] + soappre[rand20];

                        sp2 = ftsjsn[1] + v2[rand] + soapre[rand20];
                        eng2 = ftsj[1] + verbs[rand] + soappre[rand20];

                        sp3 = ftsjsn[2] + v3[rand] + soapre[rand20];
                        eng3 = ftsj[2] + verbs[rand] + soappre[rand20];

                        sp3ella = ftsjsn[3] + v3[rand] + soapre[rand20];
                        eng3she = ftsj[3] + verbs[rand] + soappre[rand20];

                        sp3eso = ftsjsn[4] + v3[rand] + soapre[rand20];
                        sp3it = ftsj[4] + verbs[rand] + soappre[rand20];

                        sp4 = ftsjsn[5] + v4[rand] + soapre[rand20];
                        eng4 = ftsj[5] + verbs[rand] + soappre[rand20];

                        sp5 = ftsjsn[6] + v5nos[rand] + soapre[rand20];
                        eng5 = ftsj[6] + verbs[rand] + soappre[rand20];

                }
                break;
            case "commit ":
                int rand21 = (int) (Math.random() * soman.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + somane[rand21];
                        eng1 = ftsj[0] + verbs[rand] + soman[rand21];

                        sp2 = ftsjs[1] + v2[rand] + somane[rand21];
                        eng2 = ftsj[1] + verbs[rand] + soman[rand21];

                        sp3 = ftsjs[2] + v3[rand] + somane[rand21];
                        eng3 = ftsj[2] + verbs[rand] + soman[rand21];

                        sp3ella = ftsjs[3] + v3[rand] + somane[rand21];
                        eng3she = ftsj[3] + verbs[rand] + soman[rand21];

                        sp3eso = ftsjs[4] + v3[rand] + somane[rand21];
                        sp3it = ftsj[4] + verbs[rand] + soman[rand21];

                        sp4 = ftsjs[5] + v4[rand] + somane[rand21];
                        eng4 = ftsj[5] + verbs[rand] + soman[rand21];

                        sp5 = ftsjs[6] + v5nos[rand] + somane[rand21];
                        eng5 = ftsj[6] + verbs[rand] + soman[rand21];


                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + somane[rand21];
                        eng1 = ftsj[0] + verbs[rand] + soman[rand21];

                        sp2 = ftsjsn[1] + v2[rand] + somane[rand21];
                        eng2 = ftsj[1] + verbs[rand] + soman[rand21];

                        sp3 = ftsjsn[2] + v3[rand] + somane[rand21];
                        eng3 = ftsj[2] + verbs[rand] + soman[rand21];

                        sp3ella = ftsjsn[3] + v3[rand] + somane[rand21];
                        eng3she = ftsj[3] + verbs[rand] + soman[rand21];

                        sp3eso = ftsjsn[4] + v3[rand] + somane[rand21];
                        sp3it = ftsj[4] + verbs[rand] + soman[rand21];

                        sp4 = ftsjsn[5] + v4[rand] + somane[rand21];
                        eng4 = ftsj[5] + verbs[rand] + soman[rand21];

                        sp5 = ftsjsn[6] + v5nos[rand] + somane[rand21];
                        eng5 = ftsj[6] + verbs[rand] + soman[rand21];

                }
                break;
            case "illustrate ":
                int rand22 = (int) (Math.random() * soearn.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + sogan[rand22];
                        eng1 = ftsj[0] + verbs[rand] + soearn[rand22];

                        sp2 = ftsjs[1] + v2[rand] + sogan[rand22];
                        eng2 = ftsj[1] + verbs[rand] + soearn[rand22];

                        sp3 = ftsjs[2] + v3[rand] + sogan[rand22];
                        eng3 = ftsj[2] + verbs[rand] + soearn[rand22];

                        sp3ella = ftsjs[3] + v3[rand] + sogan[rand22];
                        eng3she = ftsj[3] + verbs[rand] + soearn[rand22];

                        sp3eso = ftsjs[4] + v3[rand] + sogan[rand22];
                        sp3it = ftsj[4] + verbs[rand] + soearn[rand22];

                        sp4 = ftsjs[5] + v4[rand] + sogan[rand22];
                        eng4 = ftsj[5] + verbs[rand] + soearn[rand22];

                        sp5 = ftsjs[6] + v5nos[rand] + sogan[rand22];
                        eng5 = ftsj[6] + verbs[rand] + soearn[rand22];


                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + sogan[rand22];
                        eng1 = ftsj[0] + verbs[rand] + soearn[rand22];

                        sp2 = ftsjsn[1] + v2[rand] + sogan[rand22];
                        eng2 = ftsj[1] + verbs[rand] + soearn[rand22];

                        sp3 = ftsjsn[2] + v3[rand] + sogan[rand22];
                        eng3 = ftsj[2] + verbs[rand] + soearn[rand22];

                        sp3ella = ftsjsn[3] + v3[rand] + sogan[rand22];
                        eng3she = ftsj[3] + verbs[rand] + soearn[rand22];

                        sp3eso = ftsjsn[4] + v3[rand] + sogan[rand22];
                        sp3it = ftsj[4] + verbs[rand] + soearn[rand22];

                        sp4 = ftsjsn[5] + v4[rand] + sogan[rand22];
                        eng4 = ftsj[5] + verbs[rand] + soearn[rand22];

                        sp5 = ftsjsn[6] + v5nos[rand] + sogan[rand22];
                        eng5 = ftsj[6] + verbs[rand] + soearn[rand22];

                }
                break;
            case "pour ":
                int rand23 = (int) (Math.random() * sorefl.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + soreflejar[rand23];
                        eng1 = ftsj[0] + verbs[rand] + sorefl[rand23];

                        sp2 = ftsjs[1] + v2[rand] + soreflejar[rand23];
                        eng2 = ftsj[1] + verbs[rand] + sorefl[rand23];

                        sp3 = ftsjs[2] + v3[rand] + soreflejar[rand23];
                        eng3 = ftsj[2] + verbs[rand] + sorefl[rand23];

                        sp3ella = ftsjs[3] + v3[rand] + soreflejar[rand23];
                        eng3she = ftsj[3] + verbs[rand] + sorefl[rand23];

                        sp3eso = ftsjs[4] + v3[rand] + soreflejar[rand23];
                        sp3it = ftsj[4] + verbs[rand] + sorefl[rand23];

                        sp4 = ftsjs[5] + v4[rand] + soreflejar[rand23];
                        eng4 = ftsj[5] + verbs[rand] + sorefl[rand23];

                        sp5 = ftsjs[6] + v5nos[rand] + soreflejar[rand23];
                        eng5 = ftsj[6] + verbs[rand] + sorefl[rand23];


                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + soreflejar[rand23];
                        eng1 = ftsj[0] + verbs[rand] + sorefl[rand23];

                        sp2 = ftsjsn[1] + v2[rand] + soreflejar[rand23];
                        eng2 = ftsj[1] + verbs[rand] + sorefl[rand23];

                        sp3 = ftsjsn[2] + v3[rand] + soreflejar[rand23];
                        eng3 = ftsj[2] + verbs[rand] + sorefl[rand23];

                        sp3ella = ftsjsn[3] + v3[rand] + soreflejar[rand23];
                        eng3she = ftsj[3] + verbs[rand] + sorefl[rand23];

                        sp3eso = ftsjsn[4] + v3[rand] + soreflejar[rand23];
                        sp3it = ftsj[4] + verbs[rand] + sorefl[rand23];

                        sp4 = ftsjsn[5] + v4[rand] + soreflejar[rand23];
                        eng4 = ftsj[5] + verbs[rand] + sorefl[rand23];

                        sp5 = ftsjsn[6] + v5nos[rand] + soreflejar[rand23];
                        eng5 = ftsj[6] + verbs[rand] + sorefl[rand23];

                }
                break;
            case "propose ":
                int rand24 = (int) (Math.random() * soinsta.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + soinstalar[rand24];
                        eng1 = ftsj[0] + verbs[rand] + soinsta[rand24];

                        sp2 = ftsjs[1] + v2[rand] + soinstalar[rand24];
                        eng2 = ftsj[1] + verbs[rand] + soinsta[rand24];

                        sp3 = ftsjs[2] + v3[rand] + soinstalar[rand24];
                        eng3 = ftsj[2] + verbs[rand] + soinsta[rand24];

                        sp3ella = ftsjs[3] + v3[rand] + soinstalar[rand24];
                        eng3she = ftsj[3] + verbs[rand] + soinsta[rand24];

                        sp3eso = ftsjs[4] + v3[rand] + soinstalar[rand24];
                        sp3it = ftsj[4] + verbs[rand] + soinsta[rand24];

                        sp4 = ftsjs[5] + v4[rand] + soinstalar[rand24];
                        eng4 = ftsj[5] + verbs[rand] + soinsta[rand24];

                        sp5 = ftsjs[6] + v5nos[rand] + soinstalar[rand24];
                        eng5 = ftsj[6] + verbs[rand] + soinsta[rand24];


                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + soinstalar[rand24];
                        eng1 = ftsj[0] + verbs[rand] + soinsta[rand24];

                        sp2 = ftsjsn[1] + v2[rand] + soinstalar[rand24];
                        eng2 = ftsj[1] + verbs[rand] + soinsta[rand24];

                        sp3 = ftsjsn[2] + v3[rand] + soinstalar[rand24];
                        eng3 = ftsj[2] + verbs[rand] + soinsta[rand24];

                        sp3ella = ftsjsn[3] + v3[rand] + soinstalar[rand24];
                        eng3she = ftsj[3] + verbs[rand] + soinsta[rand24];

                        sp3eso = ftsjsn[4] + v3[rand] + soinstalar[rand24];
                        sp3it = ftsj[4] + verbs[rand] + soinsta[rand24];

                        sp4 = ftsjsn[5] + v4[rand] + soinstalar[rand24];
                        eng4 = ftsj[5] + verbs[rand] + soinsta[rand24];

                        sp5 = ftsjsn[6] + v5nos[rand] + soinstalar[rand24];
                        eng5 = ftsj[6] + verbs[rand] + soinsta[rand24];

                }
                break;
            case "submit ":
                int rand25 = (int) (Math.random() * soover.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + sosobre[rand25];
                        eng1 = ftsj[0] + verbs[rand] + soover[rand25];

                        sp2 = ftsjs[1] + v2[rand] + sosobre[rand25];
                        eng2 = ftsj[1] + verbs[rand] + soover[rand25];

                        sp3 = ftsjs[2] + v3[rand] + sosobre[rand25];
                        eng3 = ftsj[2] + verbs[rand] + soover[rand25];

                        sp3ella = ftsjs[3] + v3[rand] + sosobre[rand25];
                        eng3she = ftsj[3] + verbs[rand] + soover[rand25];

                        sp3eso = ftsjs[4] + v3[rand] + sosobre[rand25];
                        sp3it = ftsj[4] + verbs[rand] + soover[rand25];

                        sp4 = ftsjs[5] + v4[rand] + sosobre[rand25];
                        eng4 = ftsj[5] + verbs[rand] + soover[rand25];

                        sp5 = ftsjs[6] + v5nos[rand] + sosobre[rand25];
                        eng5 = ftsj[6] + verbs[rand] + soover[rand25];


                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + sosobre[rand25];
                        eng1 = ftsj[0] + verbs[rand] + soover[rand25];

                        sp2 = ftsjsn[1] + v2[rand] + sosobre[rand25];
                        eng2 = ftsj[1] + verbs[rand] + soover[rand25];

                        sp3 = ftsjsn[2] + v3[rand] + sosobre[rand25];
                        eng3 = ftsj[2] + verbs[rand] + soover[rand25];

                        sp3ella = ftsjsn[3] + v3[rand] + sosobre[rand25];
                        eng3she = ftsj[3] + verbs[rand] + soover[rand25];

                        sp3eso = ftsjsn[4] + v3[rand] + sosobre[rand25];
                        sp3it = ftsj[4] + verbs[rand] + soover[rand25];

                        sp4 = ftsjsn[5] + v4[rand] + sosobre[rand25];
                        eng4 = ftsj[5] + verbs[rand] + soover[rand25];

                        sp5 = ftsjsn[6] + v5nos[rand] + sosobre[rand25];
                        eng5 = ftsj[6] + verbs[rand] + soover[rand25];

                }
                break;
            case "translate ":
                int rand26 = (int) (Math.random() * soadj.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + soaju[rand26];
                        eng1 = ftsj[0] + verbs[rand] + soadj[rand26];

                        sp2 = ftsjs[1] + v2[rand] + soaju[rand26];
                        eng2 = ftsj[1] + verbs[rand] + soadj[rand26];

                        sp3 = ftsjs[2] + v3[rand] + soaju[rand26];
                        eng3 = ftsj[2] + verbs[rand] + soadj[rand26];

                        sp3ella = ftsjs[3] + v3[rand] + soaju[rand26];
                        eng3she = ftsj[3] + verbs[rand] + soadj[rand26];

                        sp3eso = ftsjs[4] + v3[rand] + soaju[rand26];
                        sp3it = ftsj[4] + verbs[rand] + soadj[rand26];

                        sp4 = ftsjs[5] + v4[rand] + soaju[rand26];
                        eng4 = ftsj[5] + verbs[rand] + soadj[rand26];

                        sp5 = ftsjs[6] + v5nos[rand] + soaju[rand26];
                        eng5 = ftsj[6] + verbs[rand] + soadj[rand26];


                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + soaju[rand26];
                        eng1 = ftsj[0] + verbs[rand] + soadj[rand26];

                        sp2 = ftsjsn[1] + v2[rand] + soaju[rand26];
                        eng2 = ftsj[1] + verbs[rand] + soadj[rand26];

                        sp3 = ftsjsn[2] + v3[rand] + soaju[rand26];
                        eng3 = ftsj[2] + verbs[rand] + soadj[rand26];

                        sp3ella = ftsjsn[3] + v3[rand] + soaju[rand26];
                        eng3she = ftsj[3] + verbs[rand] + soadj[rand26];

                        sp3eso = ftsjsn[4] + v3[rand] + soaju[rand26];
                        sp3it = ftsj[4] + verbs[rand] + soadj[rand26];

                        sp4 = ftsjsn[5] + v4[rand] + soaju[rand26];
                        eng4 = ftsj[5] + verbs[rand] + soadj[rand26];

                        sp5 = ftsjsn[6] + v5nos[rand] + soaju[rand26];
                        eng5 = ftsj[6] + verbs[rand] + soadj[rand26];

                }
                break;
            case "suggest ":
                int rand27 = (int) (Math.random() * sorelieve.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + soaliv[rand27];
                        eng1 = ftsj[0] + verbs[rand] + sorelieve[rand27];

                        sp2 = ftsjs[1] + v2[rand] + soaliv[rand27];
                        eng2 = ftsj[1] + verbs[rand] + sorelieve[rand27];

                        sp3 = ftsjs[2] + v3[rand] + soaliv[rand27];
                        eng3 = ftsj[2] + verbs[rand] + sorelieve[rand27];

                        sp3ella = ftsjs[3] + v3[rand] + soaliv[rand27];
                        eng3she = ftsj[3] + verbs[rand] + sorelieve[rand27];

                        sp3eso = ftsjs[4] + v3[rand] + soaliv[rand27];
                        sp3it = ftsj[4] + verbs[rand] + sorelieve[rand27];

                        sp4 = ftsjs[5] + v4[rand] + soaliv[rand27];
                        eng4 = ftsj[5] + verbs[rand] + sorelieve[rand27];

                        sp5 = ftsjs[6] + v5nos[rand] + soaliv[rand27];
                        eng5 = ftsj[6] + verbs[rand] + sorelieve[rand27];


                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + soaliv[rand27];
                        eng1 = ftsj[0] + verbs[rand] + sorelieve[rand27];

                        sp2 = ftsjsn[1] + v2[rand] + soaliv[rand27];
                        eng2 = ftsj[1] + verbs[rand] + sorelieve[rand27];

                        sp3 = ftsjsn[2] + v3[rand] + soaliv[rand27];
                        eng3 = ftsj[2] + verbs[rand] + sorelieve[rand27];

                        sp3ella = ftsjsn[3] + v3[rand] + soaliv[rand27];
                        eng3she = ftsj[3] + verbs[rand] + sorelieve[rand27];

                        sp3eso = ftsjsn[4] + v3[rand] + soaliv[rand27];
                        sp3it = ftsj[4] + verbs[rand] + sorelieve[rand27];

                        sp4 = ftsjsn[5] + v4[rand] + soaliv[rand27];
                        eng4 = ftsj[5] + verbs[rand] + sorelieve[rand27];

                        sp5 = ftsjsn[6] + v5nos[rand] + soaliv[rand27];
                        eng5 = ftsj[6] + verbs[rand] + sorelieve[rand27];

                }
                break;
        }

    }//PD 22/03/2022

    //want to dificultad 2 SOLO SPECIAL
    public void wantyouto2() {
        int rand = (int) (Math.random() * verbs.length);
        String temp = verbs[rand];
        int rn1 = (int) (Math.random() * 6);
        int rn2 = (int) (Math.random() * 5);
        int neg = (int) (Math.random() * 2);

        //want to subject
        String wtsj[] = {"I want ", "you want ", "he want ", "she want ", "it want ", "we want ", "they want "};
        //want to subject negative
        String wtsjn[] = {"I don't want ", "you doesn't want ", "he doesn't want ", "she doesn't want ", "it doesn't want "
                , "we doesn't want ", "they doesn't want "};
        //sujetos want to en sp
        String wtsjs[] = {"yo quiero ", "tú quieres ", "él quiere ", "ella quiere ", "eso quiere ", "nosotros queremos ", "ellos quieren "};
        //sujetos want to en sp negativo
        String wtsjsn[] = {"yo no quiero ", "tú no quieres ", "él no quiere ", "eso no quiere ", "ella no quiere ", "nosotros no queremos ", "ellos no quieren "};

        String wtobj1[] = {"you to " + verbs[rand], "him to " + verbs[rand], "her to " + verbs[rand],
                "it to " + verbs[rand], "us to " + verbs[rand], "them to " + verbs[rand]};
        String wtobj2[] = {"me to " + verbs[rand], "him to " + verbs[rand], "her to " + verbs[rand],
                "it to " + verbs[rand], "us to " + verbs[rand], "them to " + verbs[rand]};
        String wtobj3[] = {"you to " + verbs[rand], "me to " + verbs[rand], "her to " + verbs[rand],
                "it to " + verbs[rand], "us to " + verbs[rand], "them to " + verbs[rand]};
        String wtobj4[] = {"you to " + verbs[rand], "him to " + verbs[rand], "me to " + verbs[rand],
                "it to " + verbs[rand], "us to " + verbs[rand], "them to " + verbs[rand]};
        String wtobj5[] = {"you to " + verbs[rand], "him to " + verbs[rand], "her to " + verbs[rand],
                "me to " + verbs[rand], "us to " + verbs[rand], "them to " + verbs[rand]};
        String wtobj6[] = {"you to " + verbs[rand], "him to " + verbs[rand], "her to " + verbs[rand],
                "it to " + verbs[rand], "them to " + verbs[rand]};
        String wtobj7[] = {"you to " + verbs[rand], "him to " + verbs[rand], "her to " + verbs[rand],
                "it to " + verbs[rand], "us to " + verbs[rand], "me to " + verbs[rand]};

        // objetos wt en sp
        String wtobj1s[] = {"que tú " + v2[rand], "que él " + v3[rand], "que ella " + v3[rand],
                "que eso " + v3[rand], "que nosotros " + v5nos[rand], "que ellos " + v4[rand]};
        String wtobj2s[] = {"que yo " + v1[rand], "que él " + v3[rand], "que ella " + v3[rand],
                "que eso " + v3[rand], "que nosotros " + v3[rand], "que ellos " + v3[rand]};
        String wtobj3s[] = {"que tú " + v2[rand], "que yo " + v1[rand], "que ella " + v3[rand],
                "que eso " + v3[rand], "que nosotros " + v5nos[rand], "que ellos " + v4[rand]};
        String wtobj4s[] = {"que tú " + v2[rand], "que él " + v3[rand], "que yo " + v1[rand],
                "que eso " + v3[rand], "que nosotros " + v5nos[rand], "que ellos " + v4[rand]};
        String wtobj5s[] = {"que tú " + v2[rand], "que él " + v3[rand], "que ella " + v3[rand],
                "que yo " + v1[rand], "que nosotros " + v5nos[rand], "que ellos " + v4[rand]};
        String wtobj6s[] = {"que tú " + v2[rand], "que él " + v3[rand], "que ella " + v3[rand],
                "que eso " + v3[rand], "que ellos " + v4[rand]};
        String wtobj7s[] = {"que tú " + v2[rand], "que él " + v3[rand], "que ella " + v3[rand],
                "que eso " + v3[rand], "que nosotros " + v5nos[rand], "que yo " + v1[rand]};

        switch (temp) {
            case "react ":
                int rand1 = (int) (Math.random() * sodete.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sodete[rand1];
                        eng1 = wtsj[0] + verbs[rand] + sodet[rand1];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sodete[rand1];
                        eng2 = wtsj[1] + verbs[rand] + sodet[rand1];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sodete[rand1];
                        eng3 = wtsj[2] + verbs[rand] + sodet[rand1];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sodete[rand1];
                        eng3she = wtsj[3] + verbs[rand] + sodet[rand1];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sodete[rand1];
                        sp3it = wtsj[4] + verbs[rand] + sodet[rand1];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sodete[rand1];
                        eng4 = wtsj[5] + verbs[rand] + sodet[rand1];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sodete[rand1];
                        eng5 = wtsj[6] + verbs[rand] + sodet[rand1];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sodete[rand1];
                        eng1 = wtsj[0] + verbs[rand] + sodet[rand1];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sodete[rand1];
                        eng2 = wtsj[1] + verbs[rand] + sodet[rand1];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sodete[rand1];
                        eng3 = wtsj[2] + verbs[rand] + sodet[rand1];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sodete[rand1];
                        eng3she = wtsj[3] + verbs[rand] + sodet[rand1];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sodete[rand1];
                        sp3it = wtsj[4] + verbs[rand] + sodet[rand1];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sodete[rand1];
                        eng4 = wtsj[5] + verbs[rand] + sodet[rand1];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sodete[rand1];
                        eng5 = wtsj[6] + verbs[rand] + sodet[rand1];
                        break;
                }
                break;
            case "anticipate ":
                int rand2 = (int) (Math.random() * soappr.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soacer[rand2];
                        eng1 = wtsj[0] + verbs[rand] + soappr[rand2];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soacer[rand2];
                        eng2 = wtsj[1] + verbs[rand] + soappr[rand2];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soacer[rand2];
                        eng3 = wtsj[2] + verbs[rand] + soappr[rand2];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soacer[rand2];
                        eng3she = wtsj[3] + verbs[rand] + soappr[rand2];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soacer[rand2];
                        sp3it = wtsj[4] + verbs[rand] + soappr[rand2];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soacer[rand2];
                        eng4 = wtsj[5] + verbs[rand] + soappr[rand2];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soacer[rand2];
                        eng5 = wtsj[6] + verbs[rand] + soappr[rand2];


                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soacer[rand2];
                        eng1 = wtsj[0] + verbs[rand] + soappr[rand2];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soacer[rand2];
                        eng2 = wtsj[1] + verbs[rand] + soappr[rand2];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soacer[rand2];
                        eng3 = wtsj[2] + verbs[rand] + soappr[rand2];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soacer[rand2];
                        eng3she = wtsj[3] + verbs[rand] + soappr[rand2];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soacer[rand2];
                        sp3it = wtsj[4] + verbs[rand] + soappr[rand2];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soacer[rand2];
                        eng4 = wtsj[5] + verbs[rand] + soappr[rand2];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soacer[rand2];
                        eng5 = wtsj[6] + verbs[rand] + soappr[rand2];

                }
                break;
            case "assume ":
                int rand3 = (int) (Math.random() * sogrow.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + socrecer[rand3];
                        eng1 = wtsj[0] + verbs[rand] + sogrow[rand3];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + socrecer[rand3];
                        eng2 = wtsj[1] + verbs[rand] + sogrow[rand3];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + socrecer[rand3];
                        eng3 = wtsj[2] + verbs[rand] + sogrow[rand3];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + socrecer[rand3];
                        eng3she = wtsj[3] + verbs[rand] + sogrow[rand3];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + socrecer[rand3];
                        sp3it = wtsj[4] + verbs[rand] + sogrow[rand3];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + socrecer[rand3];
                        eng4 = wtsj[5] + verbs[rand] + sogrow[rand3];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + socrecer[rand3];
                        eng5 = wtsj[6] + verbs[rand] + sogrow[rand3];


                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + socrecer[rand3];
                        eng1 = wtsj[0] + verbs[rand] + sogrow[rand3];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + socrecer[rand3];
                        eng2 = wtsj[1] + verbs[rand] + sogrow[rand3];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + socrecer[rand3];
                        eng3 = wtsj[2] + verbs[rand] + sogrow[rand3];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + socrecer[rand3];
                        eng3she = wtsj[3] + verbs[rand] + sogrow[rand3];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + socrecer[rand3];
                        sp3it = wtsj[4] + verbs[rand] + sogrow[rand3];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + socrecer[rand3];
                        eng4 = wtsj[5] + verbs[rand] + sogrow[rand3];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + socrecer[rand3];
                        eng5 = wtsj[6] + verbs[rand] + sogrow[rand3];

                }
                break;
            case "engage ":
                int rand4 = (int) (Math.random() * soimpr.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + somejo[rand4];
                        eng1 = wtsj[0] + verbs[rand] + soimpr[rand4];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + somejo[rand4];
                        eng2 = wtsj[1] + verbs[rand] + soimpr[rand4];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + somejo[rand4];
                        eng3 = wtsj[2] + verbs[rand] + soimpr[rand4];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + somejo[rand4];
                        eng3she = wtsj[3] + verbs[rand] + soimpr[rand4];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + somejo[rand4];
                        sp3it = wtsj[4] + verbs[rand] + soimpr[rand4];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + somejo[rand4];
                        eng4 = wtsj[5] + verbs[rand] + soimpr[rand4];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + somejo[rand4];
                        eng5 = wtsj[6] + verbs[rand] + soimpr[rand4];


                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + somejo[rand4];
                        eng1 = wtsj[0] + verbs[rand] + soimpr[rand4];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + somejo[rand4];
                        eng2 = wtsj[1] + verbs[rand] + soimpr[rand4];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + somejo[rand4];
                        eng3 = wtsj[2] + verbs[rand] + soimpr[rand4];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + somejo[rand4];
                        eng3she = wtsj[3] + verbs[rand] + soimpr[rand4];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + somejo[rand4];
                        sp3it = wtsj[4] + verbs[rand] + soimpr[rand4];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + somejo[rand4];
                        eng4 = wtsj[5] + verbs[rand] + soimpr[rand4];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + somejo[rand4];
                        eng5 = wtsj[6] + verbs[rand] + soimpr[rand4];

                }
                break;
            case "intend ":
                int rand5 = (int) (Math.random() * sobegin.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + socomen[rand5];
                        eng1 = wtsj[0] + verbs[rand] + sobegin[rand5];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + socomen[rand5];
                        eng2 = wtsj[1] + verbs[rand] + sobegin[rand5];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + socomen[rand5];
                        eng3 = wtsj[2] + verbs[rand] + sobegin[rand5];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + socomen[rand5];
                        eng3she = wtsj[3] + verbs[rand] + sobegin[rand5];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + socomen[rand5];
                        sp3it = wtsj[4] + verbs[rand] + sobegin[rand5];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + socomen[rand5];
                        eng4 = wtsj[5] + verbs[rand] + sobegin[rand5];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + socomen[rand5];
                        eng5 = wtsj[6] + verbs[rand] + sobegin[rand5];


                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + socomen[rand5];
                        eng1 = wtsj[0] + verbs[rand] + sobegin[rand5];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + socomen[rand5];
                        eng2 = wtsj[1] + verbs[rand] + sobegin[rand5];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + socomen[rand5];
                        eng3 = wtsj[2] + verbs[rand] + sobegin[rand5];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + socomen[rand5];
                        eng3she = wtsj[3] + verbs[rand] + sobegin[rand5];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + socomen[rand5];
                        sp3it = wtsj[4] + verbs[rand] + sobegin[rand5];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + socomen[rand5];
                        eng4 = wtsj[5] + verbs[rand] + sobegin[rand5];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + socomen[rand5];
                        eng5 = wtsj[6] + verbs[rand] + sobegin[rand5];

                }
                break;
            case "relate ":
                int rand6 = (int) (Math.random() * socontinu.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + socontinu[rand6];
                        eng1 = wtsj[0] + verbs[rand] + soconti[rand6];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + socontinu[rand6];
                        eng2 = wtsj[1] + verbs[rand] + soconti[rand6];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + socontinu[rand6];
                        eng3 = wtsj[2] + verbs[rand] + soconti[rand6];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + socontinu[rand6];
                        eng3she = wtsj[3] + verbs[rand] + soconti[rand6];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + socontinu[rand6];
                        sp3it = wtsj[4] + verbs[rand] + soconti[rand6];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + socontinu[rand6];
                        eng4 = wtsj[5] + verbs[rand] + soconti[rand6];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + socontinu[rand6];
                        eng5 = wtsj[6] + verbs[rand] + soconti[rand6];


                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + socontinu[rand6];
                        eng1 = wtsj[0] + verbs[rand] + soconti[rand6];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + socontinu[rand6];
                        eng2 = wtsj[1] + verbs[rand] + soconti[rand6];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + socontinu[rand6];
                        eng3 = wtsj[2] + verbs[rand] + soconti[rand6];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + socontinu[rand6];
                        eng3she = wtsj[3] + verbs[rand] + soconti[rand6];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + socontinu[rand6];
                        sp3it = wtsj[4] + verbs[rand] + soconti[rand6];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + socontinu[rand6];
                        eng4 = wtsj[5] + verbs[rand] + soconti[rand6];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + socontinu[rand6];
                        eng5 = wtsj[6] + verbs[rand] + soconti[rand6];

                }
                break;
            case "settle ":
                int rand7 = (int) (Math.random() * sowrite.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soescri[rand7];
                        eng1 = wtsj[0] + verbs[rand] + sowrite[rand7];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soescri[rand7];
                        eng2 = wtsj[1] + verbs[rand] + sowrite[rand7];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soescri[rand7];
                        eng3 = wtsj[2] + verbs[rand] + sowrite[rand7];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soescri[rand7];
                        eng3she = wtsj[3] + verbs[rand] + sowrite[rand7];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soescri[rand7];
                        sp3it = wtsj[4] + verbs[rand] + sowrite[rand7];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soescri[rand7];
                        eng4 = wtsj[5] + verbs[rand] + sowrite[rand7];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soescri[rand7];
                        eng5 = wtsj[6] + verbs[rand] + sowrite[rand7];


                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soescri[rand7];
                        eng1 = wtsj[0] + verbs[rand] + sowrite[rand7];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soescri[rand7];
                        eng2 = wtsj[1] + verbs[rand] + sowrite[rand7];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soescri[rand7];
                        eng3 = wtsj[2] + verbs[rand] + sowrite[rand7];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soescri[rand7];
                        eng3she = wtsj[3] + verbs[rand] + sowrite[rand7];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soescri[rand7];
                        sp3it = wtsj[4] + verbs[rand] + sowrite[rand7];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soescri[rand7];
                        eng4 = wtsj[5] + verbs[rand] + sowrite[rand7];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soescri[rand7];
                        eng5 = wtsj[6] + verbs[rand] + sowrite[rand7];

                }
                break;
            case "owe ":
                int rand8 = (int) (Math.random() * soachiv.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sologr[rand8];
                        eng1 = wtsj[0] + verbs[rand] + soachiv[rand8];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sologr[rand8];
                        eng2 = wtsj[1] + verbs[rand] + soachiv[rand8];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sologr[rand8];
                        eng3 = wtsj[2] + verbs[rand] + soachiv[rand8];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sologr[rand8];
                        eng3she = wtsj[3] + verbs[rand] + soachiv[rand8];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sologr[rand8];
                        sp3it = wtsj[4] + verbs[rand] + soachiv[rand8];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sologr[rand8];
                        eng4 = wtsj[5] + verbs[rand] + soachiv[rand8];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sologr[rand8];
                        eng5 = wtsj[6] + verbs[rand] + soachiv[rand8];


                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sologr[rand8];
                        eng1 = wtsj[0] + verbs[rand] + soachiv[rand8];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sologr[rand8];
                        eng2 = wtsj[1] + verbs[rand] + soachiv[rand8];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sologr[rand8];
                        eng3 = wtsj[2] + verbs[rand] + soachiv[rand8];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sologr[rand8];
                        eng3she = wtsj[3] + verbs[rand] + soachiv[rand8];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sologr[rand8];
                        sp3it = wtsj[4] + verbs[rand] + soachiv[rand8];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sologr[rand8];
                        eng4 = wtsj[5] + verbs[rand] + soachiv[rand8];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sologr[rand8];
                        eng5 = wtsj[6] + verbs[rand] + soachiv[rand8];

                }
                break;
            case "confirm ":
                int rand9 = (int) (Math.random() * sodisc.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sodiscu[rand9];
                        eng1 = wtsj[0] + verbs[rand] + sodisc[rand9];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sodiscu[rand9];
                        eng2 = wtsj[1] + verbs[rand] + sodisc[rand9];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sodiscu[rand9];
                        eng3 = wtsj[2] + verbs[rand] + sodisc[rand9];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sodiscu[rand9];
                        eng3she = wtsj[3] + verbs[rand] + sodisc[rand9];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sodiscu[rand9];
                        sp3it = wtsj[4] + verbs[rand] + sodisc[rand9];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sodiscu[rand9];
                        eng4 = wtsj[5] + verbs[rand] + sodisc[rand9];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sodiscu[rand9];
                        eng5 = wtsj[6] + verbs[rand] + sodisc[rand9];


                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sodiscu[rand9];
                        eng1 = wtsj[0] + verbs[rand] + sodisc[rand9];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sodiscu[rand9];
                        eng2 = wtsj[1] + verbs[rand] + sodisc[rand9];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sodiscu[rand9];
                        eng3 = wtsj[2] + verbs[rand] + sodisc[rand9];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sodiscu[rand9];
                        eng3she = wtsj[3] + verbs[rand] + sodisc[rand9];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sodiscu[rand9];
                        sp3it = wtsj[4] + verbs[rand] + sodisc[rand9];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sodiscu[rand9];
                        eng4 = wtsj[5] + verbs[rand] + sodisc[rand9];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sodiscu[rand9];
                        eng5 = wtsj[6] + verbs[rand] + sodisc[rand9];

                }
                break;
            case "shut ":
                int rand10 = (int) (Math.random() * sosolv.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soresolv[rand10];
                        eng1 = wtsj[0] + verbs[rand] + sosolv[rand10];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soresolv[rand10];
                        eng2 = wtsj[1] + verbs[rand] + sosolv[rand10];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soresolv[rand10];
                        eng3 = wtsj[2] + verbs[rand] + sosolv[rand10];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soresolv[rand10];
                        eng3she = wtsj[3] + verbs[rand] + sosolv[rand10];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soresolv[rand10];
                        sp3it = wtsj[4] + verbs[rand] + sosolv[rand10];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soresolv[rand10];
                        eng4 = wtsj[5] + verbs[rand] + sosolv[rand10];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soresolv[rand10];
                        eng5 = wtsj[6] + verbs[rand] + sosolv[rand10];


                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soresolv[rand10];
                        eng1 = wtsj[0] + verbs[rand] + sosolv[rand10];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soresolv[rand10];
                        eng2 = wtsj[1] + verbs[rand] + sosolv[rand10];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soresolv[rand10];
                        eng3 = wtsj[2] + verbs[rand] + sosolv[rand10];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soresolv[rand10];
                        eng3she = wtsj[3] + verbs[rand] + sosolv[rand10];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soresolv[rand10];
                        sp3it = wtsj[4] + verbs[rand] + sosolv[rand10];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soresolv[rand10];
                        eng4 = wtsj[5] + verbs[rand] + sosolv[rand10];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soresolv[rand10];
                        eng5 = wtsj[6] + verbs[rand] + sosolv[rand10];

                }
                break;
            case "calculate ":
                int rand11 = (int) (Math.random() * soinvst.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soinvert[rand11];
                        eng1 = wtsj[0] + verbs[rand] + soinvst[rand11];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soinvert[rand11];
                        eng2 = wtsj[1] + verbs[rand] + soinvst[rand11];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soinvert[rand11];
                        eng3 = wtsj[2] + verbs[rand] + soinvst[rand11];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soinvert[rand11];
                        eng3she = wtsj[3] + verbs[rand] + soinvst[rand11];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soinvert[rand11];
                        sp3it = wtsj[4] + verbs[rand] + soinvst[rand11];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soinvert[rand11];
                        eng4 = wtsj[5] + verbs[rand] + soinvst[rand11];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soinvert[rand11];
                        eng5 = wtsj[6] + verbs[rand] + soinvst[rand11];


                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soinvert[rand11];
                        eng1 = wtsj[0] + verbs[rand] + soinvst[rand11];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soinvert[rand11];
                        eng2 = wtsj[1] + verbs[rand] + soinvst[rand11];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soinvert[rand11];
                        eng3 = wtsj[2] + verbs[rand] + soinvst[rand11];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soinvert[rand11];
                        eng3she = wtsj[3] + verbs[rand] + soinvst[rand11];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soinvert[rand11];
                        sp3it = wtsj[4] + verbs[rand] + soinvst[rand11];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soinvert[rand11];
                        eng4 = wtsj[5] + verbs[rand] + soinvst[rand11];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soinvert[rand11];
                        eng5 = wtsj[6] + verbs[rand] + soinvst[rand11];

                }
                break;
            case "deliver ":
                int rand12 = (int) (Math.random() * soreduce.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soreducir[rand12];
                        eng1 = wtsj[0] + verbs[rand] + soreduce[rand12];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soreducir[rand12];
                        eng2 = wtsj[1] + verbs[rand] + soreduce[rand12];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soreducir[rand12];
                        eng3 = wtsj[2] + verbs[rand] + soreduce[rand12];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soreducir[rand12];
                        eng3she = wtsj[3] + verbs[rand] + soreduce[rand12];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soreducir[rand12];
                        sp3it = wtsj[4] + verbs[rand] + soreduce[rand12];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soreducir[rand12];
                        eng4 = wtsj[5] + verbs[rand] + soreduce[rand12];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soreducir[rand12];
                        eng5 = wtsj[6] + verbs[rand] + soreduce[rand12];


                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soreducir[rand12];
                        eng1 = wtsj[0] + verbs[rand] + soreduce[rand12];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soreducir[rand12];
                        eng2 = wtsj[1] + verbs[rand] + soreduce[rand12];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soreducir[rand12];
                        eng3 = wtsj[2] + verbs[rand] + soreduce[rand12];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soreducir[rand12];
                        eng3she = wtsj[3] + verbs[rand] + soreduce[rand12];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soreducir[rand12];
                        sp3it = wtsj[4] + verbs[rand] + soreduce[rand12];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soreducir[rand12];
                        eng4 = wtsj[5] + verbs[rand] + soreduce[rand12];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soreducir[rand12];
                        eng5 = wtsj[6] + verbs[rand] + soreduce[rand12];

                }
                break;
            case "extend ":
                int rand13 = (int) (Math.random() * sospeak.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sohablar[rand13];
                        eng1 = wtsj[0] + verbs[rand] + sospeak[rand13];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sohablar[rand13];
                        eng2 = wtsj[1] + verbs[rand] + sospeak[rand13];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sohablar[rand13];
                        eng3 = wtsj[2] + verbs[rand] + sospeak[rand13];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sohablar[rand13];
                        eng3she = wtsj[3] + verbs[rand] + sospeak[rand13];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sohablar[rand13];
                        sp3it = wtsj[4] + verbs[rand] + sospeak[rand13];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sohablar[rand13];
                        eng4 = wtsj[5] + verbs[rand] + sospeak[rand13];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sohablar[rand13];
                        eng5 = wtsj[6] + verbs[rand] + sospeak[rand13];


                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sohablar[rand13];
                        eng1 = wtsj[0] + verbs[rand] + sospeak[rand13];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sohablar[rand13];
                        eng2 = wtsj[1] + verbs[rand] + sospeak[rand13];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sohablar[rand13];
                        eng3 = wtsj[2] + verbs[rand] + sospeak[rand13];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sohablar[rand13];
                        eng3she = wtsj[3] + verbs[rand] + sospeak[rand13];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sohablar[rand13];
                        sp3it = wtsj[4] + verbs[rand] + sospeak[rand13];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sohablar[rand13];
                        eng4 = wtsj[5] + verbs[rand] + sospeak[rand13];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sohablar[rand13];
                        eng5 = wtsj[6] + verbs[rand] + sospeak[rand13];

                }
                break;
            case "investigate ":
                int rand14 = (int) (Math.random() * soapply.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soaplic[rand14];
                        eng1 = wtsj[0] + verbs[rand] + soapply[rand14];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soaplic[rand14];
                        eng2 = wtsj[1] + verbs[rand] + soapply[rand14];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soaplic[rand14];
                        eng3 = wtsj[2] + verbs[rand] + soapply[rand14];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soaplic[rand14];
                        eng3she = wtsj[3] + verbs[rand] + soapply[rand14];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soaplic[rand14];
                        sp3it = wtsj[4] + verbs[rand] + soapply[rand14];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soaplic[rand14];
                        eng4 = wtsj[5] + verbs[rand] + soapply[rand14];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soaplic[rand14];
                        eng5 = wtsj[6] + verbs[rand] + soapply[rand14];


                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soaplic[rand14];
                        eng1 = wtsj[0] + verbs[rand] + soapply[rand14];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soaplic[rand14];
                        eng2 = wtsj[1] + verbs[rand] + soapply[rand14];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soaplic[rand14];
                        eng3 = wtsj[2] + verbs[rand] + soapply[rand14];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soaplic[rand14];
                        eng3she = wtsj[3] + verbs[rand] + soapply[rand14];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soaplic[rand14];
                        sp3it = wtsj[4] + verbs[rand] + soapply[rand14];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soaplic[rand14];
                        eng4 = wtsj[5] + verbs[rand] + soapply[rand14];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soaplic[rand14];
                        eng5 = wtsj[6] + verbs[rand] + soapply[rand14];

                }
                break;
            case "qualify ":
                int rand15 = (int) (Math.random() * sorec.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sorecom[rand15];
                        eng1 = wtsj[0] + verbs[rand] + sorec[rand15];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sorecom[rand15];
                        eng2 = wtsj[1] + verbs[rand] + sorec[rand15];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sorecom[rand15];
                        eng3 = wtsj[2] + verbs[rand] + sorec[rand15];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sorecom[rand15];
                        eng3she = wtsj[3] + verbs[rand] + sorec[rand15];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sorecom[rand15];
                        sp3it = wtsj[4] + verbs[rand] + sorec[rand15];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sorecom[rand15];
                        eng4 = wtsj[5] + verbs[rand] + sorec[rand15];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sorecom[rand15];
                        eng5 = wtsj[6] + verbs[rand] + sorec[rand15];


                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sorecom[rand15];
                        eng1 = wtsj[0] + verbs[rand] + sorec[rand15];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sorecom[rand15];
                        eng2 = wtsj[1] + verbs[rand] + sorec[rand15];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sorecom[rand15];
                        eng3 = wtsj[2] + verbs[rand] + sorec[rand15];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sorecom[rand15];
                        eng3she = wtsj[3] + verbs[rand] + sorec[rand15];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sorecom[rand15];
                        sp3it = wtsj[4] + verbs[rand] + sorec[rand15];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sorecom[rand15];
                        eng4 = wtsj[5] + verbs[rand] + sorec[rand15];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sorecom[rand15];
                        eng5 = wtsj[6] + verbs[rand] + sorec[rand15];

                }
                break;
            case "celebrate ":
                int rand16 = (int) (Math.random() * sovar.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sovariar[rand16];
                        eng1 = wtsj[0] + verbs[rand] + sovar[rand16];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sovariar[rand16];
                        eng2 = wtsj[1] + verbs[rand] + sovar[rand16];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sovariar[rand16];
                        eng3 = wtsj[2] + verbs[rand] + sovar[rand16];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sovariar[rand16];
                        eng3she = wtsj[3] + verbs[rand] + sovar[rand16];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sovariar[rand16];
                        sp3it = wtsj[4] + verbs[rand] + sovar[rand16];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sovariar[rand16];
                        eng4 = wtsj[5] + verbs[rand] + sovar[rand16];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sovariar[rand16];
                        eng5 = wtsj[6] + verbs[rand] + sovar[rand16];


                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sovariar[rand16];
                        eng1 = wtsj[0] + verbs[rand] + sovar[rand16];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sovariar[rand16];
                        eng2 = wtsj[1] + verbs[rand] + sovar[rand16];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sovariar[rand16];
                        eng3 = wtsj[2] + verbs[rand] + sovar[rand16];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sovariar[rand16];
                        eng3she = wtsj[3] + verbs[rand] + sovar[rand16];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sovariar[rand16];
                        sp3it = wtsj[4] + verbs[rand] + sovar[rand16];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sovariar[rand16];
                        eng4 = wtsj[5] + verbs[rand] + sovar[rand16];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sovariar[rand16];
                        eng5 = wtsj[6] + verbs[rand] + sovar[rand16];

                }
                break;
            case "admit ":
                int rand17 = (int) (Math.random() * sogener.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sogenerar[rand17];
                        eng1 = wtsj[0] + verbs[rand] + sogener[rand17];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sogenerar[rand17];
                        eng2 = wtsj[1] + verbs[rand] + sogener[rand17];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sogenerar[rand17];
                        eng3 = wtsj[2] + verbs[rand] + sogener[rand17];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sogenerar[rand17];
                        eng3she = wtsj[3] + verbs[rand] + sogener[rand17];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sogenerar[rand17];
                        sp3it = wtsj[4] + verbs[rand] + sogener[rand17];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sogenerar[rand17];
                        eng4 = wtsj[5] + verbs[rand] + sogener[rand17];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sogenerar[rand17];
                        eng5 = wtsj[6] + verbs[rand] + sogener[rand17];


                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sogenerar[rand17];
                        eng1 = wtsj[0] + verbs[rand] + sogener[rand17];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sogenerar[rand17];
                        eng2 = wtsj[1] + verbs[rand] + sogener[rand17];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sogenerar[rand17];
                        eng3 = wtsj[2] + verbs[rand] + sogener[rand17];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sogenerar[rand17];
                        eng3she = wtsj[3] + verbs[rand] + sogener[rand17];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sogenerar[rand17];
                        sp3it = wtsj[4] + verbs[rand] + sogener[rand17];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sogenerar[rand17];
                        eng4 = wtsj[5] + verbs[rand] + sogener[rand17];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sogenerar[rand17];
                        eng5 = wtsj[6] + verbs[rand] + sogener[rand17];

                }
                break;
            case "adopt ":
                int rand18 = (int) (Math.random() * soobtn.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soobten[rand18];
                        eng1 = wtsj[0] + verbs[rand] + soobtn[rand18];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soobten[rand18];
                        eng2 = wtsj[1] + verbs[rand] + soobtn[rand18];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soobten[rand18];
                        eng3 = wtsj[2] + verbs[rand] + soobtn[rand18];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soobten[rand18];
                        eng3she = wtsj[3] + verbs[rand] + soobtn[rand18];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soobten[rand18];
                        sp3it = wtsj[4] + verbs[rand] + soobtn[rand18];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soobten[rand18];
                        eng4 = wtsj[5] + verbs[rand] + soobtn[rand18];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soobten[rand18];
                        eng5 = wtsj[6] + verbs[rand] + soobtn[rand18];


                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soobten[rand18];
                        eng1 = wtsj[0] + verbs[rand] + soobtn[rand18];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soobten[rand18];
                        eng2 = wtsj[1] + verbs[rand] + soobtn[rand18];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soobten[rand18];
                        eng3 = wtsj[2] + verbs[rand] + soobtn[rand18];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soobten[rand18];
                        eng3she = wtsj[3] + verbs[rand] + soobtn[rand18];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soobten[rand18];
                        sp3it = wtsj[4] + verbs[rand] + soobtn[rand18];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soobten[rand18];
                        eng4 = wtsj[5] + verbs[rand] + soobtn[rand18];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soobten[rand18];
                        eng5 = wtsj[6] + verbs[rand] + soobtn[rand18];

                }
                break;
            case "announce ":
                int rand19 = (int) (Math.random() * soent.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soentra[rand19];
                        eng1 = wtsj[0] + verbs[rand] + soent[rand19];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soentra[rand19];
                        eng2 = wtsj[1] + verbs[rand] + soent[rand19];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soentra[rand19];
                        eng3 = wtsj[2] + verbs[rand] + soent[rand19];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soentra[rand19];
                        eng3she = wtsj[3] + verbs[rand] + soent[rand19];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soentra[rand19];
                        sp3it = wtsj[4] + verbs[rand] + soent[rand19];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soentra[rand19];
                        eng4 = wtsj[5] + verbs[rand] + soent[rand19];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soentra[rand19];
                        eng5 = wtsj[6] + verbs[rand] + soent[rand19];


                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soentra[rand19];
                        eng1 = wtsj[0] + verbs[rand] + soent[rand19];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soentra[rand19];
                        eng2 = wtsj[1] + verbs[rand] + soent[rand19];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soentra[rand19];
                        eng3 = wtsj[2] + verbs[rand] + soent[rand19];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soentra[rand19];
                        eng3she = wtsj[3] + verbs[rand] + soent[rand19];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soentra[rand19];
                        sp3it = wtsj[4] + verbs[rand] + soent[rand19];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soentra[rand19];
                        eng4 = wtsj[5] + verbs[rand] + soent[rand19];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soentra[rand19];
                        eng5 = wtsj[6] + verbs[rand] + soent[rand19];

                }
                break;
            case "attend ":
                int rand20 = (int) (Math.random() * soapre.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soapre[rand20];
                        eng1 = wtsj[0] + verbs[rand] + soappre[rand20];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soapre[rand20];
                        eng2 = wtsj[1] + verbs[rand] + soappre[rand20];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soapre[rand20];
                        eng3 = wtsj[2] + verbs[rand] + soappre[rand20];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soapre[rand20];
                        eng3she = wtsj[3] + verbs[rand] + soappre[rand20];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soapre[rand20];
                        sp3it = wtsj[4] + verbs[rand] + soappre[rand20];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soapre[rand20];
                        eng4 = wtsj[5] + verbs[rand] + soappre[rand20];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soapre[rand20];
                        eng5 = wtsj[6] + verbs[rand] + soappre[rand20];


                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soapre[rand20];
                        eng1 = wtsj[0] + verbs[rand] + soappre[rand20];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soapre[rand20];
                        eng2 = wtsj[1] + verbs[rand] + soappre[rand20];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soapre[rand20];
                        eng3 = wtsj[2] + verbs[rand] + soappre[rand20];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soapre[rand20];
                        eng3she = wtsj[3] + verbs[rand] + soappre[rand20];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soapre[rand20];
                        sp3it = wtsj[4] + verbs[rand] + soappre[rand20];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soapre[rand20];
                        eng4 = wtsj[5] + verbs[rand] + soappre[rand20];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soapre[rand20];
                        eng5 = wtsj[6] + verbs[rand] + soappre[rand20];

                }
                break;
            case "commit ":
                int rand21 = (int) (Math.random() * soman.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + somane[rand21];
                        eng1 = wtsj[0] + verbs[rand] + soman[rand21];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + somane[rand21];
                        eng2 = wtsj[1] + verbs[rand] + soman[rand21];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + somane[rand21];
                        eng3 = wtsj[2] + verbs[rand] + soman[rand21];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + somane[rand21];
                        eng3she = wtsj[3] + verbs[rand] + soman[rand21];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + somane[rand21];
                        sp3it = wtsj[4] + verbs[rand] + soman[rand21];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + somane[rand21];
                        eng4 = wtsj[5] + verbs[rand] + soman[rand21];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + somane[rand21];
                        eng5 = wtsj[6] + verbs[rand] + soman[rand21];


                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + somane[rand21];
                        eng1 = wtsj[0] + verbs[rand] + soman[rand21];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + somane[rand21];
                        eng2 = wtsj[1] + verbs[rand] + soman[rand21];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + somane[rand21];
                        eng3 = wtsj[2] + verbs[rand] + soman[rand21];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + somane[rand21];
                        eng3she = wtsj[3] + verbs[rand] + soman[rand21];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + somane[rand21];
                        sp3it = wtsj[4] + verbs[rand] + soman[rand21];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + somane[rand21];
                        eng4 = wtsj[5] + verbs[rand] + soman[rand21];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + somane[rand21];
                        eng5 = wtsj[6] + verbs[rand] + soman[rand21];

                }
                break;
            case "illustrate ":
                int rand22 = (int) (Math.random() * soearn.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sogan[rand22];
                        eng1 = wtsj[0] + verbs[rand] + soearn[rand22];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sogan[rand22];
                        eng2 = wtsj[1] + verbs[rand] + soearn[rand22];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sogan[rand22];
                        eng3 = wtsj[2] + verbs[rand] + soearn[rand22];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sogan[rand22];
                        eng3she = wtsj[3] + verbs[rand] + soearn[rand22];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sogan[rand22];
                        sp3it = wtsj[4] + verbs[rand] + soearn[rand22];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sogan[rand22];
                        eng4 = wtsj[5] + verbs[rand] + soearn[rand22];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sogan[rand22];
                        eng5 = wtsj[6] + verbs[rand] + soearn[rand22];


                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sogan[rand22];
                        eng1 = wtsj[0] + verbs[rand] + soearn[rand22];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sogan[rand22];
                        eng2 = wtsj[1] + verbs[rand] + soearn[rand22];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sogan[rand22];
                        eng3 = wtsj[2] + verbs[rand] + soearn[rand22];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sogan[rand22];
                        eng3she = wtsj[3] + verbs[rand] + soearn[rand22];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sogan[rand22];
                        sp3it = wtsj[4] + verbs[rand] + soearn[rand22];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sogan[rand22];
                        eng4 = wtsj[5] + verbs[rand] + soearn[rand22];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sogan[rand22];
                        eng5 = wtsj[6] + verbs[rand] + soearn[rand22];

                }
                break;
            case "pour ":
                int rand23 = (int) (Math.random() * sorefl.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soreflejar[rand23];
                        eng1 = wtsj[0] + verbs[rand] + sorefl[rand23];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soreflejar[rand23];
                        eng2 = wtsj[1] + verbs[rand] + sorefl[rand23];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soreflejar[rand23];
                        eng3 = wtsj[2] + verbs[rand] + sorefl[rand23];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soreflejar[rand23];
                        eng3she = wtsj[3] + verbs[rand] + sorefl[rand23];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soreflejar[rand23];
                        sp3it = wtsj[4] + verbs[rand] + sorefl[rand23];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soreflejar[rand23];
                        eng4 = wtsj[5] + verbs[rand] + sorefl[rand23];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soreflejar[rand23];
                        eng5 = wtsj[6] + verbs[rand] + sorefl[rand23];


                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soreflejar[rand23];
                        eng1 = wtsj[0] + verbs[rand] + sorefl[rand23];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soreflejar[rand23];
                        eng2 = wtsj[1] + verbs[rand] + sorefl[rand23];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soreflejar[rand23];
                        eng3 = wtsj[2] + verbs[rand] + sorefl[rand23];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soreflejar[rand23];
                        eng3she = wtsj[3] + verbs[rand] + sorefl[rand23];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soreflejar[rand23];
                        sp3it = wtsj[4] + verbs[rand] + sorefl[rand23];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soreflejar[rand23];
                        eng4 = wtsj[5] + verbs[rand] + sorefl[rand23];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soreflejar[rand23];
                        eng5 = wtsj[6] + verbs[rand] + sorefl[rand23];

                }
                break;
            case "propose ":
                int rand24 = (int) (Math.random() * soinsta.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soinstalar[rand24];
                        eng1 = wtsj[0] + verbs[rand] + soinsta[rand24];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soinstalar[rand24];
                        eng2 = wtsj[1] + verbs[rand] + soinsta[rand24];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soinstalar[rand24];
                        eng3 = wtsj[2] + verbs[rand] + soinsta[rand24];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soinstalar[rand24];
                        eng3she = wtsj[3] + verbs[rand] + soinsta[rand24];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soinstalar[rand24];
                        sp3it = wtsj[4] + verbs[rand] + soinsta[rand24];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soinstalar[rand24];
                        eng4 = wtsj[5] + verbs[rand] + soinsta[rand24];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soinstalar[rand24];
                        eng5 = wtsj[6] + verbs[rand] + soinsta[rand24];


                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soinstalar[rand24];
                        eng1 = wtsj[0] + verbs[rand] + soinsta[rand24];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soinstalar[rand24];
                        eng2 = wtsj[1] + verbs[rand] + soinsta[rand24];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soinstalar[rand24];
                        eng3 = wtsj[2] + verbs[rand] + soinsta[rand24];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soinstalar[rand24];
                        eng3she = wtsj[3] + verbs[rand] + soinsta[rand24];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soinstalar[rand24];
                        sp3it = wtsj[4] + verbs[rand] + soinsta[rand24];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soinstalar[rand24];
                        eng4 = wtsj[5] + verbs[rand] + soinsta[rand24];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soinstalar[rand24];
                        eng5 = wtsj[6] + verbs[rand] + soinsta[rand24];

                }
                break;
            case "submit ":
                int rand25 = (int) (Math.random() * soover.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sosobre[rand25];
                        eng1 = wtsj[0] + verbs[rand] + soover[rand25];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sosobre[rand25];
                        eng2 = wtsj[1] + verbs[rand] + soover[rand25];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sosobre[rand25];
                        eng3 = wtsj[2] + verbs[rand] + soover[rand25];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sosobre[rand25];
                        eng3she = wtsj[3] + verbs[rand] + soover[rand25];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sosobre[rand25];
                        sp3it = wtsj[4] + verbs[rand] + soover[rand25];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sosobre[rand25];
                        eng4 = wtsj[5] + verbs[rand] + soover[rand25];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sosobre[rand25];
                        eng5 = wtsj[6] + verbs[rand] + soover[rand25];


                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sosobre[rand25];
                        eng1 = wtsj[0] + verbs[rand] + soover[rand25];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sosobre[rand25];
                        eng2 = wtsj[1] + verbs[rand] + soover[rand25];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sosobre[rand25];
                        eng3 = wtsj[2] + verbs[rand] + soover[rand25];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sosobre[rand25];
                        eng3she = wtsj[3] + verbs[rand] + soover[rand25];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sosobre[rand25];
                        sp3it = wtsj[4] + verbs[rand] + soover[rand25];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sosobre[rand25];
                        eng4 = wtsj[5] + verbs[rand] + soover[rand25];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sosobre[rand25];
                        eng5 = wtsj[6] + verbs[rand] + soover[rand25];

                }
                break;
            case "translate ":
                int rand26 = (int) (Math.random() * soadj.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soaju[rand26];
                        eng1 = wtsj[0] + verbs[rand] + soadj[rand26];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soaju[rand26];
                        eng2 = wtsj[1] + verbs[rand] + soadj[rand26];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soaju[rand26];
                        eng3 = wtsj[2] + verbs[rand] + soadj[rand26];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soaju[rand26];
                        eng3she = wtsj[3] + verbs[rand] + soadj[rand26];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soaju[rand26];
                        sp3it = wtsj[4] + verbs[rand] + soadj[rand26];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soaju[rand26];
                        eng4 = wtsj[5] + verbs[rand] + soadj[rand26];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soaju[rand26];
                        eng5 = wtsj[6] + verbs[rand] + soadj[rand26];


                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soaju[rand26];
                        eng1 = wtsj[0] + verbs[rand] + soadj[rand26];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soaju[rand26];
                        eng2 = wtsj[1] + verbs[rand] + soadj[rand26];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soaju[rand26];
                        eng3 = wtsj[2] + verbs[rand] + soadj[rand26];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soaju[rand26];
                        eng3she = wtsj[3] + verbs[rand] + soadj[rand26];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soaju[rand26];
                        sp3it = wtsj[4] + verbs[rand] + soadj[rand26];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soaju[rand26];
                        eng4 = wtsj[5] + verbs[rand] + soadj[rand26];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soaju[rand26];
                        eng5 = wtsj[6] + verbs[rand] + soadj[rand26];

                }
                break;
            case "suggest ":
                int rand27 = (int) (Math.random() * sorelieve.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soaliv[rand27];
                        eng1 = wtsj[0] + verbs[rand] + sorelieve[rand27];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soaliv[rand27];
                        eng2 = wtsj[1] + verbs[rand] + sorelieve[rand27];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soaliv[rand27];
                        eng3 = wtsj[2] + verbs[rand] + sorelieve[rand27];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soaliv[rand27];
                        eng3she = wtsj[3] + verbs[rand] + sorelieve[rand27];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soaliv[rand27];
                        sp3it = wtsj[4] + verbs[rand] + sorelieve[rand27];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soaliv[rand27];
                        eng4 = wtsj[5] + verbs[rand] + sorelieve[rand27];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soaliv[rand27];
                        eng5 = wtsj[6] + verbs[rand] + sorelieve[rand27];


                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soaliv[rand27];
                        eng1 = wtsj[0] + verbs[rand] + sorelieve[rand27];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soaliv[rand27];
                        eng2 = wtsj[1] + verbs[rand] + sorelieve[rand27];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soaliv[rand27];
                        eng3 = wtsj[2] + verbs[rand] + sorelieve[rand27];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soaliv[rand27];
                        eng3she = wtsj[3] + verbs[rand] + sorelieve[rand27];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soaliv[rand27];
                        sp3it = wtsj[4] + verbs[rand] + sorelieve[rand27];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soaliv[rand27];
                        eng4 = wtsj[5] + verbs[rand] + sorelieve[rand27];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soaliv[rand27];
                        eng5 = wtsj[6] + verbs[rand] + sorelieve[rand27];

                }
                break;
        }


    }//PD 22/03/2022



    //DIFICULTAD 3

    //Presentes
    public void GenPresSimp3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo " + v1[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + v2[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + v3[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he " + verbs3[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + v3[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she " + verbs3[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + v3[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it " + verbs3[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + v4[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + v5nos[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we " + verbs[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no " + v1[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I " + "don't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + "no " + v2[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you " + "don't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + "no " + v3[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he " + "doesn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + "no " + v3[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she " + "doesn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + "no " + v3[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it " + "doesn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + "no " + v4[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they " + "don't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + "no " + v5nos[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we " + "don't " + verbs[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenPresCont3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo estoy " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I am " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I'm " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú estás " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you are " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you're " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él está " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he is " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he's " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella está " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she is " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she's " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso está " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it is " + verbscont[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it's " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos están " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they are " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they're " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros estamos " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we are " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we're " + verbscont[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no estoy " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I " + "am not " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I'm not " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + "no estás " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you're not " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you " + "aren't " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + "no está " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he's not " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he " + "isn't " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + "no está " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she's not " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she " + "isn't " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + "no está " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it's not " + verbscont[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it " + "isn't " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + "no están " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they're not " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they " + "aren't " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + "no están " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we're not " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we " + "aren't " + verbscont[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenPresPerf3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo he " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I've " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú has " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you've " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él ha " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he has " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he's " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella ha " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she has " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she's " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso ha " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it has " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it's " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos han " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they've " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros hemos " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we've " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        break;
                    case 1:
                        sp1 = "yo no he " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I have not " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I haven't " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú no has " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you have not " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you haven't " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él no ha " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he has not " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he hasn't " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella no ha " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she has not " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she hasn't " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso no ha " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it has not " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it hasn't " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos no han " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they have not " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they haven't " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros no hemos " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we have not " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we haven't " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenPresPerfCont3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo he estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú has estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él ha estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he has been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella ha estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she has been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso ha estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it has been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos han estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros hemos estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo no he estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I haven't been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú no has estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you haven't been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él no ha estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he hasn't been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella no ha estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she hasn't been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso no ha estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it hasn't been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos no han estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they haven't been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros no hemos estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we haven't been " + verbscont[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023

    //Pasados
    public void GenPastSimp3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 4);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo " + vsp1[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I " + vsp[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + vsp2[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you " + vsp[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + vsp3[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he " + vsp[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + vsp3[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she " + vsp[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + vsp3[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it " + vsp[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + vsp4[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they " + vsp[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + vsp5[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we " + vsp[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no " + vsp1[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I " + "didn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + "no " + vsp2[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you " + "didn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + "no " + vsp3[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he " + "didn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + "no " + vsp3[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she " + "didn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + "no " + vsp3[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it " + "didn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + "no " + vsp4[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they " + "didn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + "no " + vsp5[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we " + "didn't " + verbs[rand] + arraySodEng + frequadv[radv];
                        break;
                    case 2:
                        sp1 = "yo " + vsp1i[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I " + vsp[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + vsp2i[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you " + vsp[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + vsp3i[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he " + vsp[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + vsp3i[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she " + vsp[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + vsp3i[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it " + vsp[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + vsp4i[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they " + vsp[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + vsp5i[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we " + vsp[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 3:
                        sp1 = "yo " + "no " + vsp1i[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I " + "didn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + "no " + vsp2i[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you " + "didn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + "no " + vsp3i[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he " + "didn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + "no " + vsp3i[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she " + "didn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + "no " + vsp3i[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it " + "didn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + "no " + vsp4i[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they " + "didn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + "no " + vsp5i[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we " + "didn't " + verbs[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenPastCont3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo estaba " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I was " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I was " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú estabas " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you were " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you were " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él estaba " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he was " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he was " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella estaba " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she was " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she was " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso estaba " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it was " + verbscont[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it was " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos estaban " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they were " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they were " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros estabamos " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we were " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we were " + verbscont[rand] + arraySodEng + frequadv[radv];
                        break;
                    case 1:
                        sp1 = "yo " + "no estaba " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I " + "was not " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I " + "wasn't " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + "no estabas " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you " + "were not " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you " + "weren't " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + "no estaba " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he " + "was not " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he " + "wasn't " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + "no estaba " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she " + "was not " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she " + "wasn't " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + "no estaba " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it " + "was not " + verbscont[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it " + "wasn't " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + "no estaban " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they " + "were not " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they " + "weren't " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + "no estabamos " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we " + "were not " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we " + "weren't " + verbscont[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenPastPerf3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo había " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I had " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I'd " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú habías " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you had " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you'd " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él había " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he had " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he'd " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella había " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she had " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she'd " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso había " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it had " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it'd " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos habían " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they had " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they'd " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros habíamos " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we had " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we'd " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo no había " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I had not " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I hadn't " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú no habías " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you had not " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you hadn't " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él no había " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he had not " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he hadn't " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella no había " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she had not " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she hadn't " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso no había " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it had not " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it hadn't " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos no habían " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they had not " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they hadn't " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros no habíamos " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we had not " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we hadn't " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenPastPerfCont3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo había estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I had been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú habías estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you had been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él había estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he had been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella había estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she had been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso había estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it had been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos habían estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they had been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros habíamos estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we had been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo no había estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I hadn't been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú no habías estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you hadn't been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él no había estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he hadn't been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella no había estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she hadn't been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso no había estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it hadn't been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos no habían estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they hadn't been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros no habíamos estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we hadn't been " + verbscont[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023

    //Futuros
    public void GenFutSimp3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo " + vsf1[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I will " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + vsf2[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you will " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + vsf3[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he will " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + vsf3[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she will " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + vsf3[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it will " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + vsf5[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they will " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + vsf4[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we will " + verbs[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no " + vsf1[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I " + "won't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + "no " + vsf2[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you " + "won't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + "no " + vsf3[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he " + "won't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + "no " + vsf3[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she " + "won't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + "no " + vsf3[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it " + "won't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + "no " + vsf5[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they " + "won't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + "no " + vsf4[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we " + "won't " + verbs[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenFutCont3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo estaré " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I will be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I'll be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú estarás " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you will be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you'll be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él estará " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he will be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he'll be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella estará " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she will be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she'll be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso estará " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it will be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it'll be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos estarán " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they will be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they'll be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros estaremos " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we will be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we'll be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no estaré " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I " + "will not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I " + "won't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + "no estarás " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you " + "will not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you " + "won't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + "no estará " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he " + "will not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he " + "won't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + "no estará " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she " + "will not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she " + "won't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + "no estará " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it " + "will not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it " + "won't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + "no estarán " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they " + "will not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they " + "won't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + "no estaremos " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we " + "will not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we " + "won't be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenFutPerf3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo habré " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I will have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I'll have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú habrás " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you will have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you'll have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él habrá " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he will have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he'll have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella habrá " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she will have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she'll have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso habrá " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it will have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it'll have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos habrán " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they will have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they'll have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros habremos " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we will have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we'll have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        break;
                    case 1:
                        sp1 = "yo no habré " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I will not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I won't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú no habrás " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you will not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you won't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él no habrá " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he will not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he won't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella no habrá " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she will not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she won't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso no habrá " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it will not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it won't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos no habrán " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they will not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they won't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros no habremos " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we will not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we won't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenFutPerfCont3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo habré estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I will have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú habrás estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you will have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él habrá estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he will have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella habrá estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she will have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso habrá estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it will have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos habrán estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they will have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros habremos estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we will have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo no habré estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I won't have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú no habrás estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you won't have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él no habrá estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he won't have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella no habrá estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she won't have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso no habrá estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it won't have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos no habrán estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they won't have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros no habremos estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we won't have been " + verbscont[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023

    // WOULD
    public void GenWouldSimp3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo " + vsb1w[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I would " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + vsb2w[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you would " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + vsb3w[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he would " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + vsb3w[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she would " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + vsb3w[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it would " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + vsb4w[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they would " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + vsb5w[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we would " + verbs[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no " + vsb1w[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I " + "wouldn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + "no " + vsb2w[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you " + "wouldn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + "no " + vsb3w[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he " + "wouldn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + "no " + vsb3w[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she " + "wouldn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + "no " + vsb3w[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it " + "wouldn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + "no " + vsb4w[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they " + "wouldn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + "no " + vsb5w[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we " + "wouldn't " + verbs[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenWouldCont3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo estaría " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I would be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I'd be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú estarías " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you would be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you'd be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él estaría " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he would be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he'd be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella estaría " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she would be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she'd be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso estaría " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it would be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it'd be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos estarían " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they would be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they'd be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros estaríamos " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we would be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we'd be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no estaría " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I " + "would not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I " + "wouldn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + "no estarías " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you " + "would not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you " + "wouldn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + "no estaría " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he " + "would not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he " + "wouldn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + "no estaría " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she " + "would not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she " + "wouldn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + "no estaría " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it " + "would not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it " + "wouldn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + "no estarían " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they " + "would not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they " + "wouldn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + "no estaríamos " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we " + "would not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we " + "wouldn't be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenWouldPerf3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo habría " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I would have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I'd have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú habrías " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you would have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you'd have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él habría " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he would have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he'd have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella habría " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she would have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she'd have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso habría " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it would have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it'd have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos habrían " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they would have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they'd have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros habríamos " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we would have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we'd have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        break;
                    case 1:
                        sp1 = "yo no habría " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I would not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I wouldn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú no habrías " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you would not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you wouldn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él no habría " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he would not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he wouldn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella no habría " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she would not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she wouldn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso no habría " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it would not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it wouldn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos no habrían " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they would not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they wouldn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros no habríamos " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we would not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we wouldn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenWouldPerfCont3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo habría estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I would have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú habrías estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you would have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él habría estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he would have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella habría estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she would have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso habría estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it would have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos habrían estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they would have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros habríamos estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we would have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo no habría estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I wouldn't have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú no habrías estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you wouldn't have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él no habría estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he wouldn't have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella no habría estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she wouldn't have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso no habría estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it wouldn't have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos no habrían estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they wouldn't have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros no habríamos estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we wouldn't have been " + verbscont[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023

    //COULD
    public void GenCouldSimp3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo podría " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I could " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú podrías " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you could " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él podría " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he could " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella podría " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she could " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso podría " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it could " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos podrían " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they could " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros podríamos " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we could " + verbs[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no podría " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I " + "couldn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + "no podrías " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you " + "couldn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + "no podría " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he " + "couldn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + "no podría " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she " + "couldn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + "no podría " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it " + "couldn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + "no podrían " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they " + "couldn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + "no podríamos " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we " + "couldn't " + verbs[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenCouldCont3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo podría estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I could be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I could be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú podrías estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you could be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you could be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él podría estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he could be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he could be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella podría estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she could be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she could be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso podría estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it could be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it could be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos podrían estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they could be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they could be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros podríamos estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we could be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we could be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no podría estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I " + "could not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I " + "couldn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + "no podrías estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you " + "could not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you " + "couldn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + "no podría estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he " + "could not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he " + "couldn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + "no podría estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she " + "could not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she " + "couldn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + "no podría estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it " + "could not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it " + "couldn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + "no podrían estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they " + "could not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they " + "couldn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + "no podríamos estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we " + "could not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng52= "we " + "couldn't be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenCouldPerf3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo pude haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I could have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I could have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú pudiste haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you could have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you could have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él pudo haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he could have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he could have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella pudiese haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she could have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she could have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso pudiese haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it could have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it could have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos pudiesen haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they could have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they could have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros pudiesemos haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we could have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we could have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no pude haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I " + "could not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I " + "couldn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + "no pudiste haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you " + "could not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you " + "couldn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + "no pudo haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he " + "could not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he " + "couldn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + "no pudiese haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she " + "could not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she " + "couldn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + "no pudiese haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it " + "could not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it " + "couldn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + "no pudiesen haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they " + "could not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they " + "couldn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + "no pudiesemos haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we " + "could not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we " + "couldn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenCouldPerfCont3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo podría haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I could have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú podrías haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you could have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él podría haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he could have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella podría haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she could have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso podría haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it could have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos podrían haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they could have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros podríamos haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we could have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no podría haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I " + "couldn't have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + "no podrías haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you " + "couldn't have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + "no podría haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he " + "couldn't have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + "no podría haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she " + "couldn't have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + "no podría haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it " + "couldn't have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + "no podrían haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they " + "couldn't have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + "no podríamos haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we " + "couldn't have been " + verbscont[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023

    // MIGHT
    public void GenMightSimp3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo quizá " + v1[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I might " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú quizá " + v2[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you might " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él quizá " + v3[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he might " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella quizá " + v3[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she might " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso quizá" + v3[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it might " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos quizá " + v4[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they might " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros quizá " + v5nos[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we might " + verbs[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo quizá no " + v1[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I might not " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú quizá no " + v2[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you might not " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él quizá no " + v3[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he might not " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella quizá no " + v3[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she might not " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso quizá no " + v3[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it might not " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos quizá no " + v4[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they might not " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros quizá no " + v5nos[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we might not " + verbs[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenMightCont3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo quizá esté " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I might be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I might be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú quizá estés " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you might be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you might be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él quizá esté " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he might be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he might be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella quizá esté " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she might be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she might be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso quizá esté " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it might be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it might be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos quizá estén " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they might be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they might be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros quizá estemos " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we might be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we might be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "quizá no esté " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I " + "might not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I " + "mightn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + "quizá no estés " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you " + "might not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you " + "mightn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + "quizá no esté  " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he " + "might not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he " + "mightn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + "quizá no esté " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she " + "might not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she " + "mightn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + "quizá no esté " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it " + "might not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it " + "mightn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + "quizá no estén " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they " + "might not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they " + "mightn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + "quizá no estémos " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we " + "might not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we " + "mightn't be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenMightPerf3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo quizá haya " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I might have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I might have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú quizá hayas " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you might have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you might have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él quizá haya " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he might have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he might have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella quizá haya " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she might have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she might have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso quizá haya " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it might have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it might have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos quizá hayan " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they might have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they might have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros quizá hayamos " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we might have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we might have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo quizá no haya " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I might not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I mightn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú quizá no hayas " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you might not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you mightn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él quizá no haya " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he might not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he mightn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella quizá no haya " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she might not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she mightn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso quizá no haya " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it might not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it might not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos quizá no hayan " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they might not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they mightn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros quizá no hayamos " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we might not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we mightn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenMightPerfCont3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo quizá haya estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I might have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú quizá hayas estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you might have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él quizá haya estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he might have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella quizá haya estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she might have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso quizá haya estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it might have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos quizá hayan estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they might have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros quizá hayamos estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we might have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo quizá no haya estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I might not have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú quizá no hayas estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you might not have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él quizá no haya estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he might not have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella quizá no haya estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she might not have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso quizá no haya estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it might not have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos quizá no hayan estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they might not have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros quizá no hayamos estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we might not have been " + verbscont[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023

    //SHOULD
    public void GenShouldSimp3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo debería " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I should " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú deberías " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you should " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él debería " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he should " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella debería " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she should " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso debería " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it should " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos deberían " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they should " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros deberíamos " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we should " + verbs[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no debería " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I " + "shouldn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + "no deberías " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you " + "shouldn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + "no debería " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he " + "shouldn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + "no debería " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she " + "shouldn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + "no debería " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it " + "shouldn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + "no deberían " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they " + "shouldn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + "no deberíamos " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we " + "shouldn't " + verbs[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenShouldCont3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo debería estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I should be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I'd be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú deberías estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you should be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you'd be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él debería estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he should be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he'd be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella debería estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she should be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she'd be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso debería estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it should be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it'd be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos deberían estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they should be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they'd be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros deberíamos estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we should be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we'd be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        break;
                    case 1:
                        sp1 = "yo " + "no debería estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I " + "should not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I " + "shouldn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + "no deberías estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you " + "should not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you " + "shouldn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + "no debería estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he " + "should not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he " + "shouldn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + "no debería estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she " + "should not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she " + "shouldn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + "no debería estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it " + "should not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it " + "shouldn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + "no deberían estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they " + "should not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they " + "shouldn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + "no deberíamos estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we " + "should not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we " + "shouldn't be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenShouldPerf3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo debería haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I should have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I'd have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú deberías haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you should have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you'd have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él debería haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he should have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he'd have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella debería haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she should have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng3she = "she'd have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso debería haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it should have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it'd have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos deberían haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they should have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they'd have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros deberíamos haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we should have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we'd have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no debería haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I " + "should not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I " + "shouldn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + "no deberías haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you " + "should not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you " + "shouldn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + "no debería haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he " + "should not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he " + "shouldn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + "no debería haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she " + "should not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she " + "shouldn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + "no debería haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it " + "should not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it " + "shouldn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + "no deberían haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they " + "should not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they " + "shouldn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + "no deberíamos haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we " + "should not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we " + "shouldn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenShouldPerfCont3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo debería haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I should have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú deberías haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you should have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él debería haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he should have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella debería haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she should have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso debería haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it should have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos deberían haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they should have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros deberíamos haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we should have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no debería haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I " + "shouldn't have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + "no deberías haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you " + "shouldn't have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + "no debería haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he " + "shouldn't have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + "no debería haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she " + "shouldn't have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + "no debería haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it " + "shouldn't have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + "no deberían haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they " + "shouldn't have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + "no deberíamos haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we " + "shouldn't have been " + verbscont[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023

    //Can
    public void GenCanSimp3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo puedo " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I can " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú puedes " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you can " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él puede " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he can " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella puede " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she can " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso puede " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it can " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos pueden " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they can " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros podemos " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we can " + verbs[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no puedo " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I " + "can't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + "no puedes " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you " + "can't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + "no puede " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he " + "can't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + "no puede " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she " + "can't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + "no puede " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it " + "can't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + "no pueden " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they " + "can't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + "no podemos " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we " + "can't " + verbs[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenCanCont3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo puedo estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I can be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I can be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú puedes estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you can be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you can be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él puede estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he can be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he can be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella puede " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she can be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she can be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso puede " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it can be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it can be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos pueden estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they can be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they can be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros podemos " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we can be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we can be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no puedo estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I " + "cannot be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I " + "can't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + "no puedes estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you " + "cannot be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you " + "can't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + "no puede estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he " + "cannot be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he " + "can't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + "no puede estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she " + "cannot be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she " + "can't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + "no puede estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it " + "cannot be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it " + "can't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + "no pueden estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they " + "cannot be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they " + "can't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + "no podemos estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we " + "cannot be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we " + "can't be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023

    //Must
    public void GenMustSimp3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo debo " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I must " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú debés " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you must " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él debe " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he must " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella debe " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she must " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso debe " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it must " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos deben " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they must " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros debemos " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we must " + verbs[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no debo " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I " + "mustn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + "no debés " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you " + "mustn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + "no debe " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he " + "mustn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + "no debe " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she " + "mustn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + "no debe " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it " + "mustn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + "no deben " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they " + "mustn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + "no debemos " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we " + "mustn't " + verbs[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenMustCont3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo debo estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I must be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I must be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú debés estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you must be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you must be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él debe estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he must be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he must be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella debe estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she must be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she must be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso debe estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it must be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it must be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos deben estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they must be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they must be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros debemos estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we must be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we must be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no debo estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I " + "must not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I " + "mustn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + "no debés estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you " + "must not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you " + "mustn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + "no debe estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he " + "must not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he " + "mustn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + "no debe estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she " + "must not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she " + "mustn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + "no debe estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it " + "must not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it " + "mustn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + "no deben estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they " + "must not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they " + "mustn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + "no debemos estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we " + "must not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we " + "mustn't be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023

    public void GenAbleTo3(){
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo " + "soy capaz de " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I am " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I'm " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + "eres capaz de " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you are " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you're " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + "es capaz de " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he is " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he's " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + "es capaz de " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she is " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she's " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + "es capaz de " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it is " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it's " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + "son capaz de " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they are " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they're " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + "somos capaz de " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we are " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we're " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];
                        break;
                    case 1:
                        sp1 = "yo no " + "soy capaz de " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I am not " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I'm not " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú no " + "eres capaz de " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you are not " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you're not " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él no " + "es capaz de " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he is not " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he's not " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella no " + "es capaz de " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she is not " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she's not " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso no " + "es capaz de " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it is not " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it's not " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos no " + "son capaz de " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they are not " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they're not " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros no " + "somos capaz de " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we are not " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we're not " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];
                        break;

                }
            }
        }
    }//PD FEB 2023

    //for to dificultad 3 SOlO SPECIAL
    public void forSubTo3() {
        int rand = (int) (Math.random() * verbs.length);
        Pasts2 pas = new Pasts2();
        String temp = verbs[rand];
        int rn1 = (int) (Math.random() * 6);
        int rn2 = (int) (Math.random() * 5);
        int neg = (int) (Math.random() * 2);
        randstarter();
        int radv = (int) (Math.random() * frequadv.length);

        //subject in eng
        String ftsj[] = {
                "for me to ", "for you to ", "for him to ", "for her to ", "for it to ",
                "for them to ", "for us to "
        };

        //subject in spanish
        String ftsjs[] = {
                "para que yo ", "para que tú ", "para que él ", "para que ella ",
                "para que eso ", "para que ellos ", "para que nosotros "
        };

        //subject in eng negative
        String ftsjn[] = {
                "for me not to ", "for you not to ", "for him not to ", "for her not to ",
                "for it not to ", "for them not to ", "for us not to "
        };

        //subject in spanish negative
        String ftsjsn[] = {
                "para que yo no ", "para que tú no ", "para que él no ", "para que ella no ",
                "para que eso no ", "para que ellos no ", "para que nosotros no "
        };

        switch (temp) {
            case "react ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + sodete[rand1] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + sodet[rand1] + frequadv[radv];

                        sp2 = ftsjs[1] + v2[rand]  + sodete[rand1] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + sodet[rand1] + frequadv[radv];

                        sp3 = ftsjs[2] + v3[rand]  + sodete[rand1] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + sodet[rand1] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3[rand]  + sodete[rand1] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + sodet[rand1] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3[rand]  + sodete[rand1] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + sodet[rand1] + frequadv[radv];

                        sp4 = ftsjs[5] + v4[rand] + sodete[rand1] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + sodet[rand1] + frequadv[radv];

                        sp5 = ftsjs[6] + v5nos[rand] + sodete[rand1] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + sodet[rand1] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + sodete[rand1] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + sodet[rand1] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2[rand] + sodete[rand1] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + sodet[rand1] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3[rand] + sodete[rand1] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + sodet[rand1] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3[rand] + sodete[rand1] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + sodet[rand1] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3[rand] + sodete[rand1] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + sodet[rand1] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4[rand] + sodete[rand1] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + sodet[rand1] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5nos[rand] + sodete[rand1] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + sodet[rand1] + frequadv[radv];
                        break;
                }
                break;

            case "anticipate ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + soacer[rand2] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + soappr[rand2] + frequadv[radv];

                        sp2 = ftsjs[1] + v2[rand]  + soacer[rand2] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + soappr[rand2] + frequadv[radv];

                        sp3 = ftsjs[2] + v3[rand]  + soacer[rand2] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + soappr[rand2] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3[rand]  + soacer[rand2] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + soappr[rand2] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3[rand]  + soacer[rand2] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + soappr[rand2] + frequadv[radv];

                        sp4 = ftsjs[5] + v4[rand] + soacer[rand2] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + soappr[rand2] + frequadv[radv];

                        sp5 = ftsjs[6] + v5nos[rand] + soacer[rand2] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + soappr[rand2] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + soacer[rand2] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + soappr[rand2] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2[rand] + soacer[rand2] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + soappr[rand2] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3[rand] + soacer[rand2] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + soappr[rand2] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3[rand] + soacer[rand2] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + soappr[rand2] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3[rand] + soacer[rand2] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + soappr[rand2] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4[rand] + soacer[rand2] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + soappr[rand2] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5nos[rand] + soacer[rand2] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + soappr[rand2] + frequadv[radv];
                        break;
                }
                break;

            case "assume ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + socrecer[rand3] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + sogrow[rand3] + frequadv[radv];

                        sp2 = ftsjs[1] + v2[rand]  + socrecer[rand3] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + sogrow[rand3] + frequadv[radv];

                        sp3 = ftsjs[2] + v3[rand]  + socrecer[rand3] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + sogrow[rand3] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3[rand]  + socrecer[rand3] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + sogrow[rand3] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3[rand]  + socrecer[rand3] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + sogrow[rand3] + frequadv[radv];

                        sp4 = ftsjs[5] + v4[rand] + socrecer[rand3] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + sogrow[rand3] + frequadv[radv];

                        sp5 = ftsjs[6] + v5nos[rand] + socrecer[rand3] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + sogrow[rand3] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + socrecer[rand3] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + sogrow[rand3] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2[rand] + socrecer[rand3] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + sogrow[rand3] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3[rand] + socrecer[rand3] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + sogrow[rand3] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3[rand] + socrecer[rand3] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + sogrow[rand3] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3[rand] + socrecer[rand3] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + sogrow[rand3] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4[rand] + socrecer[rand3] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + sogrow[rand3] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5nos[rand] + socrecer[rand3] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + sogrow[rand3] + frequadv[radv];
                        break;
                }
                break;

            case "engage ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + somejo[rand4] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + soimpr[rand4] + frequadv[radv];

                        sp2 = ftsjs[1] + v2[rand]  + somejo[rand4] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + soimpr[rand4] + frequadv[radv];

                        sp3 = ftsjs[2] + v3[rand]  + somejo[rand4] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + soimpr[rand4] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3[rand]  + somejo[rand4] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + soimpr[rand4] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3[rand]  + somejo[rand4] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + soimpr[rand4] + frequadv[radv];

                        sp4 = ftsjs[5] + v4[rand] + somejo[rand4] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + soimpr[rand4] + frequadv[radv];

                        sp5 = ftsjs[6] + v5nos[rand] + somejo[rand4] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + soimpr[rand4] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + somejo[rand4] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + soimpr[rand4] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2[rand] + somejo[rand4] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + soimpr[rand4] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3[rand] + somejo[rand4] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + soimpr[rand4] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3[rand] + somejo[rand4] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + soimpr[rand4] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3[rand] + somejo[rand4] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + soimpr[rand4] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4[rand] + somejo[rand4] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + soimpr[rand4] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5nos[rand] + somejo[rand4] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + soimpr[rand4] + frequadv[radv];
                        break;
                }
                break;

            case "intend ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + socomen[rand5] + advfrequ[radv];;
                        eng1 = ftsj[0] + verbs[rand] + sobegin[rand5] + frequadv[radv];;

                        sp2 = ftsjs[1] + v2[rand]  + socomen[rand5] + advfrequ[radv];;
                        eng2 = ftsj[1] + verbs[rand] + sobegin[rand5] + frequadv[radv];;

                        sp3 = ftsjs[2] + v3[rand]  + socomen[rand5] + advfrequ[radv];;
                        eng3 = ftsj[2] + verbs[rand] + sobegin[rand5] + frequadv[radv];;

                        sp3ella = ftsjs[3] + v3[rand]  + socomen[rand5] + advfrequ[radv];;
                        eng3she = ftsj[3] + verbs[rand] + sobegin[rand5] + frequadv[radv];;

                        sp3eso = ftsjs[4] + v3[rand]  + socomen[rand5] + advfrequ[radv];;
                        sp3it = ftsj[4] + verbs[rand] + sobegin[rand5] + frequadv[radv];;

                        sp4 = ftsjs[5] + v4[rand] + socomen[rand5] + advfrequ[radv];;
                        eng4 = ftsj[5] + verbs[rand] + sobegin[rand5] + frequadv[radv];;

                        sp5 = ftsjs[6] + v5nos[rand] + socomen[rand5] + advfrequ[radv];;
                        eng5 = ftsj[6] + verbs[rand] + sobegin[rand5] + frequadv[radv];;

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + socomen[rand5] + advfrequ[radv];;
                        eng1 = ftsjn[0] + verbs[rand] + sobegin[rand5] + frequadv[radv];;

                        sp2 = ftsjsn[1] + v2[rand] + socomen[rand5] + advfrequ[radv];;
                        eng2 = ftsjn[1] + verbs[rand] + sobegin[rand5] + frequadv[radv];;

                        sp3 = ftsjsn[2] + v3[rand] + socomen[rand5] + advfrequ[radv];;
                        eng3 = ftsjn[2] + verbs[rand] + sobegin[rand5] + frequadv[radv];;

                        sp3ella = ftsjsn[3] + v3[rand] + socomen[rand5] + advfrequ[radv];;
                        eng3she = ftsjn[3] + verbs[rand] + sobegin[rand5] + frequadv[radv];;

                        sp3eso = ftsjsn[4] + v3[rand] + socomen[rand5] + advfrequ[radv];;
                        sp3it = ftsjn[4] + verbs[rand] + sobegin[rand5] + frequadv[radv];;

                        sp4 = ftsjsn[5] + v4[rand] + socomen[rand5] + advfrequ[radv];;
                        eng4 = ftsjn[5] + verbs[rand] + sobegin[rand5] + frequadv[radv];;

                        sp5 = ftsjsn[6] + v5nos[rand] + socomen[rand5] + advfrequ[radv];;
                        eng5 = ftsjn[6] + verbs[rand] + sobegin[rand5] + frequadv[radv];;
                        break;
                }
                break;

            case "relate ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + socontinu[rand6] + advfrequ[radv];;
                        eng1 = ftsj[0] + verbs[rand] + soconti[rand6] + frequadv[radv];;

                        sp2 = ftsjs[1] + v2[rand]  + socontinu[rand6] + advfrequ[radv];;
                        eng2 = ftsj[1] + verbs[rand] + soconti[rand6] + frequadv[radv];;

                        sp3 = ftsjs[2] + v3[rand]  + socontinu[rand6] + advfrequ[radv];;
                        eng3 = ftsj[2] + verbs[rand] + soconti[rand6] + frequadv[radv];;

                        sp3ella = ftsjs[3] + v3[rand]  + socontinu[rand6] + advfrequ[radv];;
                        eng3she = ftsj[3] + verbs[rand] + soconti[rand6] + frequadv[radv];;

                        sp3eso = ftsjs[4] + v3[rand]  + socontinu[rand6] + advfrequ[radv];;
                        sp3it = ftsj[4] + verbs[rand] + soconti[rand6] + frequadv[radv];;

                        sp4 = ftsjs[5] + v4[rand] + socontinu[rand6] + advfrequ[radv];;
                        eng4 = ftsj[5] + verbs[rand] + soconti[rand6] + frequadv[radv];;

                        sp5 = ftsjs[6] + v5nos[rand] + socontinu[rand6] + advfrequ[radv];;
                        eng5 = ftsj[6] + verbs[rand] + soconti[rand6] + frequadv[radv];;

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + socontinu[rand6] + advfrequ[radv];;
                        eng1 = ftsjn[0] + verbs[rand] + soconti[rand6] + frequadv[radv];;

                        sp2 = ftsjsn[1] + v2[rand] + socontinu[rand6] + advfrequ[radv];;
                        eng2 = ftsjn[1] + verbs[rand] + soconti[rand6] + frequadv[radv];;

                        sp3 = ftsjsn[2] + v3[rand] + socontinu[rand6] + advfrequ[radv];;
                        eng3 = ftsjn[2] + verbs[rand] + soconti[rand6] + frequadv[radv];;

                        sp3ella = ftsjsn[3] + v3[rand] + socontinu[rand6] + advfrequ[radv];;
                        eng3she = ftsjn[3] + verbs[rand] + soconti[rand6] + frequadv[radv];;

                        sp3eso = ftsjsn[4] + v3[rand] + socontinu[rand6] + advfrequ[radv];;
                        sp3it = ftsjn[4] + verbs[rand] + soconti[rand6] + frequadv[radv];;

                        sp4 = ftsjsn[5] + v4[rand] + socontinu[rand6] + advfrequ[radv];;
                        eng4 = ftsjn[5] + verbs[rand] + soconti[rand6] + frequadv[radv];;

                        sp5 = ftsjsn[6] + v5nos[rand] + socontinu[rand6] + advfrequ[radv];;
                        eng5 = ftsjn[6] + verbs[rand] + soconti[rand6] + frequadv[radv];;
                        break;
                }
                break;

            case "settle ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + soescri[rand7] + advfrequ[radv];;
                        eng1 = ftsj[0] + verbs[rand] + sowrite[rand7] + frequadv[radv];;

                        sp2 = ftsjs[1] + v2[rand]  + soescri[rand7] + advfrequ[radv];;
                        eng2 = ftsj[1] + verbs[rand] + sowrite[rand7] + frequadv[radv];;

                        sp3 = ftsjs[2] + v3[rand]  + soescri[rand7] + advfrequ[radv];;
                        eng3 = ftsj[2] + verbs[rand] + sowrite[rand7] + frequadv[radv];;

                        sp3ella = ftsjs[3] + v3[rand]  + soescri[rand7] + advfrequ[radv];;
                        eng3she = ftsj[3] + verbs[rand] + sowrite[rand7] + frequadv[radv];;

                        sp3eso = ftsjs[4] + v3[rand]  + soescri[rand7] + advfrequ[radv];;
                        sp3it = ftsj[4] + verbs[rand] + sowrite[rand7] + frequadv[radv];;

                        sp4 = ftsjs[5] + v4[rand] + soescri[rand7] + advfrequ[radv];;
                        eng4 = ftsj[5] + verbs[rand] + sowrite[rand7] + frequadv[radv];;

                        sp5 = ftsjs[6] + v5nos[rand] + soescri[rand7] + advfrequ[radv];;
                        eng5 = ftsj[6] + verbs[rand] + sowrite[rand7] + frequadv[radv];;

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + soescri[rand7] + advfrequ[radv];;
                        eng1 = ftsjn[0] + verbs[rand] + sowrite[rand7] + frequadv[radv];;

                        sp2 = ftsjsn[1] + v2[rand] + soescri[rand7] + advfrequ[radv];;
                        eng2 = ftsjn[1] + verbs[rand] + sowrite[rand7] + frequadv[radv];;

                        sp3 = ftsjsn[2] + v3[rand] + soescri[rand7] + advfrequ[radv];;
                        eng3 = ftsjn[2] + verbs[rand] + sowrite[rand7] + frequadv[radv];;

                        sp3ella = ftsjsn[3] + v3[rand] + soescri[rand7] + advfrequ[radv];;
                        eng3she = ftsjn[3] + verbs[rand] + sowrite[rand7] + frequadv[radv];;

                        sp3eso = ftsjsn[4] + v3[rand] + soescri[rand7] + advfrequ[radv];;
                        sp3it = ftsjn[4] + verbs[rand] + sowrite[rand7] + frequadv[radv];;

                        sp4 = ftsjsn[5] + v4[rand] + soescri[rand7] + advfrequ[radv];;
                        eng4 = ftsjn[5] + verbs[rand] + sowrite[rand7] + frequadv[radv];;

                        sp5 = ftsjsn[6] + v5nos[rand] + soescri[rand7] + advfrequ[radv];;
                        eng5 = ftsjn[6] + verbs[rand] + sowrite[rand7] + frequadv[radv];;
                        break;
                }
                break;

            case "owe ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + sologr[rand8] + advfrequ[radv];;
                        eng1 = ftsj[0] + verbs[rand] + soachiv[rand8] + frequadv[radv];;

                        sp2 = ftsjs[1] + v2[rand]  + sologr[rand8] + advfrequ[radv];;
                        eng2 = ftsj[1] + verbs[rand] + soachiv[rand8] + frequadv[radv];;

                        sp3 = ftsjs[2] + v3[rand]  + sologr[rand8] + advfrequ[radv];;
                        eng3 = ftsj[2] + verbs[rand] + soachiv[rand8] + frequadv[radv];;

                        sp3ella = ftsjs[3] + v3[rand]  + sologr[rand8] + advfrequ[radv];;
                        eng3she = ftsj[3] + verbs[rand] + soachiv[rand8] + frequadv[radv];;

                        sp3eso = ftsjs[4] + v3[rand]  + sologr[rand8] + advfrequ[radv];;
                        sp3it = ftsj[4] + verbs[rand] + soachiv[rand8] + frequadv[radv];;

                        sp4 = ftsjs[5] + v4[rand] + sologr[rand8] + advfrequ[radv];;
                        eng4 = ftsj[5] + verbs[rand] + soachiv[rand8] + frequadv[radv];;

                        sp5 = ftsjs[6] + v5nos[rand] + sologr[rand8] + advfrequ[radv];;
                        eng5 = ftsj[6] + verbs[rand] + soachiv[rand8] + frequadv[radv];;

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + sologr[rand8] + advfrequ[radv];;
                        eng1 = ftsjn[0] + verbs[rand] + soachiv[rand8] + frequadv[radv];;

                        sp2 = ftsjsn[1] + v2[rand] + sologr[rand8] + advfrequ[radv];;
                        eng2 = ftsjn[1] + verbs[rand] + soachiv[rand8] + frequadv[radv];;

                        sp3 = ftsjsn[2] + v3[rand] + sologr[rand8] + advfrequ[radv];;
                        eng3 = ftsjn[2] + verbs[rand] + soachiv[rand8] + frequadv[radv];;

                        sp3ella = ftsjsn[3] + v3[rand] + sologr[rand8] + advfrequ[radv];;
                        eng3she = ftsjn[3] + verbs[rand] + soachiv[rand8] + frequadv[radv];;

                        sp3eso = ftsjsn[4] + v3[rand] + sologr[rand8] + advfrequ[radv];;
                        sp3it = ftsjn[4] + verbs[rand] + soachiv[rand8] + frequadv[radv];;

                        sp4 = ftsjsn[5] + v4[rand] + sologr[rand8] + advfrequ[radv];;
                        eng4 = ftsjn[5] + verbs[rand] + soachiv[rand8] + frequadv[radv];;

                        sp5 = ftsjsn[6] + v5nos[rand] + sologr[rand8] + advfrequ[radv];;
                        eng5 = ftsjn[6] + verbs[rand] + soachiv[rand8] + frequadv[radv];;
                        break;
                }
                break;

            case "confirm ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + sodiscu[rand9] + advfrequ[radv];;
                        eng1 = ftsj[0] + verbs[rand] + sodisc[rand9] + frequadv[radv];;

                        sp2 = ftsjs[1] + v2[rand]  + sodiscu[rand9] + advfrequ[radv];;
                        eng2 = ftsj[1] + verbs[rand] + sodisc[rand9] + frequadv[radv];;

                        sp3 = ftsjs[2] + v3[rand]  + sodiscu[rand9] + advfrequ[radv];;
                        eng3 = ftsj[2] + verbs[rand] + sodisc[rand9] + frequadv[radv];;

                        sp3ella = ftsjs[3] + v3[rand]  + sodiscu[rand9] + advfrequ[radv];;
                        eng3she = ftsj[3] + verbs[rand] + sodisc[rand9] + frequadv[radv];;

                        sp3eso = ftsjs[4] + v3[rand]  + sodiscu[rand9] + advfrequ[radv];;
                        sp3it = ftsj[4] + verbs[rand] + sodisc[rand9] + frequadv[radv];;

                        sp4 = ftsjs[5] + v4[rand] + sodiscu[rand9] + advfrequ[radv];;
                        eng4 = ftsj[5] + verbs[rand] + sodisc[rand9] + frequadv[radv];;

                        sp5 = ftsjs[6] + v5nos[rand] + sodiscu[rand9] + advfrequ[radv];;
                        eng5 = ftsj[6] + verbs[rand] + sodisc[rand9] + frequadv[radv];;

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + sodiscu[rand9] + advfrequ[radv];;
                        eng1 = ftsjn[0] + verbs[rand] + sodisc[rand9] + frequadv[radv];;

                        sp2 = ftsjsn[1] + v2[rand] + sodiscu[rand9] + advfrequ[radv];;
                        eng2 = ftsjn[1] + verbs[rand] + sodisc[rand9] + frequadv[radv];;

                        sp3 = ftsjsn[2] + v3[rand] + sodiscu[rand9] + advfrequ[radv];;
                        eng3 = ftsjn[2] + verbs[rand] + sodisc[rand9] + frequadv[radv];;

                        sp3ella = ftsjsn[3] + v3[rand] + sodiscu[rand9] + advfrequ[radv];;
                        eng3she = ftsjn[3] + verbs[rand] + sodisc[rand9] + frequadv[radv];;

                        sp3eso = ftsjsn[4] + v3[rand] + sodiscu[rand9] + advfrequ[radv];;
                        sp3it = ftsjn[4] + verbs[rand] + sodisc[rand9] + frequadv[radv];;

                        sp4 = ftsjsn[5] + v4[rand] + sodiscu[rand9] + advfrequ[radv];;
                        eng4 = ftsjn[5] + verbs[rand] + sodisc[rand9] + frequadv[radv];;

                        sp5 = ftsjsn[6] + v5nos[rand] + sodiscu[rand9] + advfrequ[radv];;
                        eng5 = ftsjn[6] + verbs[rand] + sodisc[rand9] + frequadv[radv];;
                        break;
                }
                break;

            case "calculate ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + soresolv[rand10] + advfrequ[radv];;
                        eng1 = ftsj[0] + verbs[rand] + sosolv[rand10] + frequadv[radv];;

                        sp2 = ftsjs[1] + v2[rand]  + soresolv[rand10] + advfrequ[radv];;
                        eng2 = ftsj[1] + verbs[rand] + sosolv[rand10] + frequadv[radv];;

                        sp3 = ftsjs[2] + v3[rand]  + soresolv[rand10] + advfrequ[radv];;
                        eng3 = ftsj[2] + verbs[rand] + sosolv[rand10] + frequadv[radv];;

                        sp3ella = ftsjs[3] + v3[rand]  + soresolv[rand10] + advfrequ[radv];;
                        eng3she = ftsj[3] + verbs[rand] + sosolv[rand10] + frequadv[radv];;

                        sp3eso = ftsjs[4] + v3[rand]  + soresolv[rand10] + advfrequ[radv];;
                        sp3it = ftsj[4] + verbs[rand] + sosolv[rand10] + frequadv[radv];;

                        sp4 = ftsjs[5] + v4[rand] + soresolv[rand10] + advfrequ[radv];;
                        eng4 = ftsj[5] + verbs[rand] + sosolv[rand10] + frequadv[radv];;

                        sp5 = ftsjs[6] + v5nos[rand] + soresolv[rand10] + advfrequ[radv];;
                        eng5 = ftsj[6] + verbs[rand] + sosolv[rand10] + frequadv[radv];;

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + soresolv[rand10] + advfrequ[radv];;
                        eng1 = ftsjn[0] + verbs[rand] + sosolv[rand10] + frequadv[radv];;

                        sp2 = ftsjsn[1] + v2[rand] + soresolv[rand10] + advfrequ[radv];;
                        eng2 = ftsjn[1] + verbs[rand] + sosolv[rand10] + frequadv[radv];;

                        sp3 = ftsjsn[2] + v3[rand] + soresolv[rand10] + advfrequ[radv];;
                        eng3 = ftsjn[2] + verbs[rand] + sosolv[rand10] + frequadv[radv];;

                        sp3ella = ftsjsn[3] + v3[rand] + soresolv[rand10] + advfrequ[radv];;
                        eng3she = ftsjn[3] + verbs[rand] + sosolv[rand10] + frequadv[radv];;

                        sp3eso = ftsjsn[4] + v3[rand] + soresolv[rand10] + advfrequ[radv];;
                        sp3it = ftsjn[4] + verbs[rand] + sosolv[rand10] + frequadv[radv];;

                        sp4 = ftsjsn[5] + v4[rand] + soresolv[rand10] + advfrequ[radv];;
                        eng4 = ftsjn[5] + verbs[rand] + sosolv[rand10] + frequadv[radv];;

                        sp5 = ftsjsn[6] + v5nos[rand] + soresolv[rand10] + advfrequ[radv];;
                        eng5 = ftsjn[6] + verbs[rand] + sosolv[rand10] + frequadv[radv];;
                        break;
                }
                break;

            case "deliver ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + soinvert[rand11] + advfrequ[radv];;
                        eng1 = ftsj[0] + verbs[rand] + soinvst[rand11] + frequadv[radv];;

                        sp2 = ftsjs[1] + v2[rand]  + soinvert[rand11] + advfrequ[radv];;
                        eng2 = ftsj[1] + verbs[rand] + soinvst[rand11] + frequadv[radv];;

                        sp3 = ftsjs[2] + v3[rand]  + soinvert[rand11] + advfrequ[radv];;
                        eng3 = ftsj[2] + verbs[rand] + soinvst[rand11] + frequadv[radv];;

                        sp3ella = ftsjs[3] + v3[rand]  + soinvert[rand11] + advfrequ[radv];;
                        eng3she = ftsj[3] + verbs[rand] + soinvst[rand11] + frequadv[radv];;

                        sp3eso = ftsjs[4] + v3[rand]  + soinvert[rand11] + advfrequ[radv];;
                        sp3it = ftsj[4] + verbs[rand] + soinvst[rand11] + frequadv[radv];;

                        sp4 = ftsjs[5] + v4[rand] + soinvert[rand11] + advfrequ[radv];;
                        eng4 = ftsj[5] + verbs[rand] + soinvst[rand11] + frequadv[radv];;

                        sp5 = ftsjs[6] + v5nos[rand] + soinvert[rand11] + advfrequ[radv];;
                        eng5 = ftsj[6] + verbs[rand] + soinvst[rand11] + frequadv[radv];;

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + soinvert[rand11] + advfrequ[radv];;
                        eng1 = ftsjn[0] + verbs[rand] + soinvst[rand11] + frequadv[radv];;

                        sp2 = ftsjsn[1] + v2[rand] + soinvert[rand11] + advfrequ[radv];;
                        eng2 = ftsjn[1] + verbs[rand] + soinvst[rand11] + frequadv[radv];;

                        sp3 = ftsjsn[2] + v3[rand] + soinvert[rand11] + advfrequ[radv];;
                        eng3 = ftsjn[2] + verbs[rand] + soinvst[rand11] + frequadv[radv];;

                        sp3ella = ftsjsn[3] + v3[rand] + soinvert[rand11] + advfrequ[radv];;
                        eng3she = ftsjn[3] + verbs[rand] + soinvst[rand11] + frequadv[radv];;

                        sp3eso = ftsjsn[4] + v3[rand] + soinvert[rand11] + advfrequ[radv];;
                        sp3it = ftsjn[4] + verbs[rand] + soinvst[rand11] + frequadv[radv];;

                        sp4 = ftsjsn[5] + v4[rand] + soinvert[rand11] + advfrequ[radv];;
                        eng4 = ftsjn[5] + verbs[rand] + soinvst[rand11] + frequadv[radv];;

                        sp5 = ftsjsn[6] + v5nos[rand] + soinvert[rand11] + advfrequ[radv];;
                        eng5 = ftsjn[6] + verbs[rand] + soinvst[rand11] + frequadv[radv];;
                        break;
                }
                break;

            case "extend ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + soreducir[rand12] + advfrequ[radv];;
                        eng1 = ftsj[0] + verbs[rand] + soreduce[rand12] + frequadv[radv];;

                        sp2 = ftsjs[1] + v2[rand]  + soreducir[rand12] + advfrequ[radv];;
                        eng2 = ftsj[1] + verbs[rand] + soreduce[rand12] + frequadv[radv];;

                        sp3 = ftsjs[2] + v3[rand]  + soreducir[rand12] + advfrequ[radv];;
                        eng3 = ftsj[2] + verbs[rand] + soreduce[rand12] + frequadv[radv];;

                        sp3ella = ftsjs[3] + v3[rand]  + soreducir[rand12] + advfrequ[radv];;
                        eng3she = ftsj[3] + verbs[rand] + soreduce[rand12] + frequadv[radv];;

                        sp3eso = ftsjs[4] + v3[rand]  + soreducir[rand12] + advfrequ[radv];;
                        sp3it = ftsj[4] + verbs[rand] + soreduce[rand12] + frequadv[radv];;

                        sp4 = ftsjs[5] + v4[rand] + soreducir[rand12] + advfrequ[radv];;
                        eng4 = ftsj[5] + verbs[rand] + soreduce[rand12] + frequadv[radv];;

                        sp5 = ftsjs[6] + v5nos[rand] + soreducir[rand12] + advfrequ[radv];;
                        eng5 = ftsj[6] + verbs[rand] + soreduce[rand12] + frequadv[radv];;

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + soreducir[rand12] + advfrequ[radv];;
                        eng1 = ftsjn[0] + verbs[rand] + soreduce[rand12] + frequadv[radv];;

                        sp2 = ftsjsn[1] + v2[rand] + soreducir[rand12] + advfrequ[radv];;
                        eng2 = ftsjn[1] + verbs[rand] + soreduce[rand12] + frequadv[radv];;

                        sp3 = ftsjsn[2] + v3[rand] + soreducir[rand12] + advfrequ[radv];;
                        eng3 = ftsjn[2] + verbs[rand] + soreduce[rand12] + frequadv[radv];;

                        sp3ella = ftsjsn[3] + v3[rand] + soreducir[rand12] + advfrequ[radv];;
                        eng3she = ftsjn[3] + verbs[rand] + soreduce[rand12] + frequadv[radv];;

                        sp3eso = ftsjsn[4] + v3[rand] + soreducir[rand12] + advfrequ[radv];;
                        sp3it = ftsjn[4] + verbs[rand] + soreduce[rand12] + frequadv[radv];;

                        sp4 = ftsjsn[5] + v4[rand] + soreducir[rand12] + advfrequ[radv];;
                        eng4 = ftsjn[5] + verbs[rand] + soreduce[rand12] + frequadv[radv];;

                        sp5 = ftsjsn[6] + v5nos[rand] + soreducir[rand12] + advfrequ[radv];;
                        eng5 = ftsjn[6] + verbs[rand] + soreduce[rand12] + frequadv[radv];;
                        break;
                }
                break;

            case "investigate ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + sohablar[rand13] + advfrequ[radv];;
                        eng1 = ftsj[0] + verbs[rand] + sospeak[rand13] + frequadv[radv];;

                        sp2 = ftsjs[1] + v2[rand]  + sohablar[rand13] + advfrequ[radv];;
                        eng2 = ftsj[1] + verbs[rand] + sospeak[rand13] + frequadv[radv];;

                        sp3 = ftsjs[2] + v3[rand]  + sohablar[rand13] + advfrequ[radv];;
                        eng3 = ftsj[2] + verbs[rand] + sospeak[rand13] + frequadv[radv];;

                        sp3ella = ftsjs[3] + v3[rand]  + sohablar[rand13] + advfrequ[radv];;
                        eng3she = ftsj[3] + verbs[rand] + sospeak[rand13] + frequadv[radv];;

                        sp3eso = ftsjs[4] + v3[rand]  + sohablar[rand13] + advfrequ[radv];;
                        sp3it = ftsj[4] + verbs[rand] + sospeak[rand13] + frequadv[radv];;

                        sp4 = ftsjs[5] + v4[rand] + sohablar[rand13] + advfrequ[radv];;
                        eng4 = ftsj[5] + verbs[rand] + sospeak[rand13] + frequadv[radv];;

                        sp5 = ftsjs[6] + v5nos[rand] + sohablar[rand13] + advfrequ[radv];;
                        eng5 = ftsj[6] + verbs[rand] + sospeak[rand13] + frequadv[radv];;

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + sohablar[rand13] + advfrequ[radv];;
                        eng1 = ftsjn[0] + verbs[rand] + sospeak[rand13] + frequadv[radv];;

                        sp2 = ftsjsn[1] + v2[rand] + sohablar[rand13] + advfrequ[radv];;
                        eng2 = ftsjn[1] + verbs[rand] + sospeak[rand13] + frequadv[radv];;

                        sp3 = ftsjsn[2] + v3[rand] + sohablar[rand13] + advfrequ[radv];;
                        eng3 = ftsjn[2] + verbs[rand] + sospeak[rand13] + frequadv[radv];;

                        sp3ella = ftsjsn[3] + v3[rand] + sohablar[rand13] + advfrequ[radv];;
                        eng3she = ftsjn[3] + verbs[rand] + sospeak[rand13] + frequadv[radv];;

                        sp3eso = ftsjsn[4] + v3[rand] + sohablar[rand13] + advfrequ[radv];;
                        sp3it = ftsjn[4] + verbs[rand] + sospeak[rand13] + frequadv[radv];;

                        sp4 = ftsjsn[5] + v4[rand] + sohablar[rand13] + advfrequ[radv];;
                        eng4 = ftsjn[5] + verbs[rand] + sospeak[rand13] + frequadv[radv];;

                        sp5 = ftsjsn[6] + v5nos[rand] + sohablar[rand13] + advfrequ[radv];;
                        eng5 = ftsjn[6] + verbs[rand] + sospeak[rand13] + frequadv[radv];;
                        break;
                }

                break;

            case "qualify ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + soaplic[rand14] + advfrequ[radv];;
                        eng1 = ftsj[0] + verbs[rand] + soapply[rand14] + frequadv[radv];;

                        sp2 = ftsjs[1] + v2[rand]  + soaplic[rand14] + advfrequ[radv];;
                        eng2 = ftsj[1] + verbs[rand] + soapply[rand14] + frequadv[radv];;

                        sp3 = ftsjs[2] + v3[rand]  + soaplic[rand14] + advfrequ[radv];;
                        eng3 = ftsj[2] + verbs[rand] + soapply[rand14] + frequadv[radv];;

                        sp3ella = ftsjs[3] + v3[rand]  + soaplic[rand14] + advfrequ[radv];;
                        eng3she = ftsj[3] + verbs[rand] + soapply[rand14] + frequadv[radv];;

                        sp3eso = ftsjs[4] + v3[rand]  + soaplic[rand14] + advfrequ[radv];;
                        sp3it = ftsj[4] + verbs[rand] + soapply[rand14] + frequadv[radv];;

                        sp4 = ftsjs[5] + v4[rand] + soaplic[rand14] + advfrequ[radv];;
                        eng4 = ftsj[5] + verbs[rand] + soapply[rand14] + frequadv[radv];;

                        sp5 = ftsjs[6] + v5nos[rand] + soaplic[rand14] + advfrequ[radv];;
                        eng5 = ftsj[6] + verbs[rand] + soapply[rand14] + frequadv[radv];;

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + soaplic[rand14] + advfrequ[radv];;
                        eng1 = ftsjn[0] + verbs[rand] + soapply[rand14] + frequadv[radv];;

                        sp2 = ftsjsn[1] + v2[rand] + soaplic[rand14] + advfrequ[radv];;
                        eng2 = ftsjn[1] + verbs[rand] + soapply[rand14] + frequadv[radv];;

                        sp3 = ftsjsn[2] + v3[rand] + soaplic[rand14] + advfrequ[radv];;
                        eng3 = ftsjn[2] + verbs[rand] + soapply[rand14] + frequadv[radv];;

                        sp3ella = ftsjsn[3] + v3[rand] + soaplic[rand14] + advfrequ[radv];;
                        eng3she = ftsjn[3] + verbs[rand] + soapply[rand14] + frequadv[radv];;

                        sp3eso = ftsjsn[4] + v3[rand] + soaplic[rand14] + advfrequ[radv];;
                        sp3it = ftsjn[4] + verbs[rand] + soapply[rand14] + frequadv[radv];;

                        sp4 = ftsjsn[5] + v4[rand] + soaplic[rand14] + advfrequ[radv];;
                        eng4 = ftsjn[5] + verbs[rand] + soapply[rand14] + frequadv[radv];;

                        sp5 = ftsjsn[6] + v5nos[rand] + soaplic[rand14] + advfrequ[radv];;
                        eng5 = ftsjn[6] + verbs[rand] + soapply[rand14] + frequadv[radv];;
                        break;
                }
                break;

            case "celebrate ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + sorecom[rand15] + advfrequ[radv];;
                        eng1 = ftsj[0] + verbs[rand] + sorec[rand15] + frequadv[radv];;

                        sp2 = ftsjs[1] + v2[rand]  + sorecom[rand15] + advfrequ[radv];;
                        eng2 = ftsj[1] + verbs[rand] + sorec[rand15] + frequadv[radv];;

                        sp3 = ftsjs[2] + v3[rand]  + sorecom[rand15] + advfrequ[radv];;
                        eng3 = ftsj[2] + verbs[rand] + sorec[rand15] + frequadv[radv];;

                        sp3ella = ftsjs[3] + v3[rand]  + sorecom[rand15] + advfrequ[radv];;
                        eng3she = ftsj[3] + verbs[rand] + sorec[rand15] + frequadv[radv];;

                        sp3eso = ftsjs[4] + v3[rand]  + sorecom[rand15] + advfrequ[radv];;
                        sp3it = ftsj[4] + verbs[rand] + sorec[rand15] + frequadv[radv];;

                        sp4 = ftsjs[5] + v4[rand] + sorecom[rand15] + advfrequ[radv];;
                        eng4 = ftsj[5] + verbs[rand] + sorec[rand15] + frequadv[radv];;

                        sp5 = ftsjs[6] + v5nos[rand] + sorecom[rand15] + advfrequ[radv];;
                        eng5 = ftsj[6] + verbs[rand] + sorec[rand15] + frequadv[radv];;

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + sorecom[rand15] + advfrequ[radv];;
                        eng1 = ftsjn[0] + verbs[rand] + sorec[rand15] + frequadv[radv];;

                        sp2 = ftsjsn[1] + v2[rand] + sorecom[rand15] + advfrequ[radv];;
                        eng2 = ftsjn[1] + verbs[rand] + sorec[rand15] + frequadv[radv];;

                        sp3 = ftsjsn[2] + v3[rand] + sorecom[rand15] + advfrequ[radv];;
                        eng3 = ftsjn[2] + verbs[rand] + sorec[rand15] + frequadv[radv];;

                        sp3ella = ftsjsn[3] + v3[rand] + sorecom[rand15] + advfrequ[radv];;
                        eng3she = ftsjn[3] + verbs[rand] + sorec[rand15] + frequadv[radv];;

                        sp3eso = ftsjsn[4] + v3[rand] + sorecom[rand15] + advfrequ[radv];;
                        sp3it = ftsjn[4] + verbs[rand] + sorec[rand15] + frequadv[radv];;

                        sp4 = ftsjsn[5] + v4[rand] + sorecom[rand15] + advfrequ[radv];;
                        eng4 = ftsjn[5] + verbs[rand] + sorec[rand15] + frequadv[radv];;

                        sp5 = ftsjsn[6] + v5nos[rand] + sorecom[rand15] + advfrequ[radv];;
                        eng5 = ftsjn[6] + verbs[rand] + sorec[rand15] + frequadv[radv];;
                        break;
                }
                break;

            case "admit ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + sovariar[rand16] + advfrequ[radv];;
                        eng1 = ftsj[0] + verbs[rand] + sovar[rand16] + frequadv[radv];;

                        sp2 = ftsjs[1] + v2[rand]  + sovariar[rand16] + advfrequ[radv];;
                        eng2 = ftsj[1] + verbs[rand] + sovar[rand16] + frequadv[radv];;

                        sp3 = ftsjs[2] + v3[rand]  + sovariar[rand16] + advfrequ[radv];;
                        eng3 = ftsj[2] + verbs[rand] + sovar[rand16] + frequadv[radv];;

                        sp3ella = ftsjs[3] + v3[rand]  + sovariar[rand16] + advfrequ[radv];;
                        eng3she = ftsj[3] + verbs[rand] + sovar[rand16] + frequadv[radv];;

                        sp3eso = ftsjs[4] + v3[rand]  + sovariar[rand16] + advfrequ[radv];;
                        sp3it = ftsj[4] + verbs[rand] + sovar[rand16] + frequadv[radv];;

                        sp4 = ftsjs[5] + v4[rand] + sovariar[rand16] + advfrequ[radv];;
                        eng4 = ftsj[5] + verbs[rand] + sovar[rand16] + frequadv[radv];;

                        sp5 = ftsjs[6] + v5nos[rand] + sovariar[rand16] + advfrequ[radv];;
                        eng5 = ftsj[6] + verbs[rand] + sovar[rand16] + frequadv[radv];;

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + sovariar[rand16] + advfrequ[radv];;
                        eng1 = ftsjn[0] + verbs[rand] + sovar[rand16] + frequadv[radv];;

                        sp2 = ftsjsn[1] + v2[rand] + sovariar[rand16] + advfrequ[radv];;
                        eng2 = ftsjn[1] + verbs[rand] + sovar[rand16] + frequadv[radv];;

                        sp3 = ftsjsn[2] + v3[rand] + sovariar[rand16] + advfrequ[radv];;
                        eng3 = ftsjn[2] + verbs[rand] + sovar[rand16] + frequadv[radv];;

                        sp3ella = ftsjsn[3] + v3[rand] + sovariar[rand16] + advfrequ[radv];;
                        eng3she = ftsjn[3] + verbs[rand] + sovar[rand16] + frequadv[radv];;

                        sp3eso = ftsjsn[4] + v3[rand] + sovariar[rand16] + advfrequ[radv];;
                        sp3it = ftsjn[4] + verbs[rand] + sovar[rand16] + frequadv[radv];;

                        sp4 = ftsjsn[5] + v4[rand] + sovariar[rand16] + advfrequ[radv];;
                        eng4 = ftsjn[5] + verbs[rand] + sovar[rand16] + frequadv[radv];;

                        sp5 = ftsjsn[6] + v5nos[rand] + sovariar[rand16] + advfrequ[radv];;
                        eng5 = ftsjn[6] + verbs[rand] + sovar[rand16] + frequadv[radv];;
                        break;
                }
                break;

            case "adopt ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + sogenerar[rand17] + advfrequ[radv];;
                        eng1 = ftsj[0] + verbs[rand] + sogener[rand17] + frequadv[radv];;

                        sp2 = ftsjs[1] + v2[rand]  + sogenerar[rand17] + advfrequ[radv];;
                        eng2 = ftsj[1] + verbs[rand] + sogener[rand17] + frequadv[radv];;

                        sp3 = ftsjs[2] + v3[rand]  + sogenerar[rand17] + advfrequ[radv];;
                        eng3 = ftsj[2] + verbs[rand] + sogener[rand17] + frequadv[radv];;

                        sp3ella = ftsjs[3] + v3[rand]  + sogenerar[rand17] + advfrequ[radv];;
                        eng3she = ftsj[3] + verbs[rand] + sogener[rand17] + frequadv[radv];;

                        sp3eso = ftsjs[4] + v3[rand]  + sogenerar[rand17] + advfrequ[radv];;
                        sp3it = ftsj[4] + verbs[rand] + sogener[rand17] + frequadv[radv];;

                        sp4 = ftsjs[5] + v4[rand] + sogenerar[rand17] + advfrequ[radv];;
                        eng4 = ftsj[5] + verbs[rand] + sogener[rand17] + frequadv[radv];;

                        sp5 = ftsjs[6] + v5nos[rand] + sogenerar[rand17] + advfrequ[radv];;
                        eng5 = ftsj[6] + verbs[rand] + sogener[rand17] + frequadv[radv];;

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + sogenerar[rand17] + advfrequ[radv];;
                        eng1 = ftsjn[0] + verbs[rand] + sogener[rand17] + frequadv[radv];;

                        sp2 = ftsjsn[1] + v2[rand] + sogenerar[rand17] + advfrequ[radv];;
                        eng2 = ftsjn[1] + verbs[rand] + sogener[rand17] + frequadv[radv];;

                        sp3 = ftsjsn[2] + v3[rand] + sogenerar[rand17] + advfrequ[radv];;
                        eng3 = ftsjn[2] + verbs[rand] + sogener[rand17] + frequadv[radv];;

                        sp3ella = ftsjsn[3] + v3[rand] + sogenerar[rand17] + advfrequ[radv];;
                        eng3she = ftsjn[3] + verbs[rand] + sogener[rand17] + frequadv[radv];;

                        sp3eso = ftsjsn[4] + v3[rand] + sogenerar[rand17] + advfrequ[radv];;
                        sp3it = ftsjn[4] + verbs[rand] + sogener[rand17] + frequadv[radv];;

                        sp4 = ftsjsn[5] + v4[rand] + sogenerar[rand17] + advfrequ[radv];;
                        eng4 = ftsjn[5] + verbs[rand] + sogener[rand17] + frequadv[radv];;

                        sp5 = ftsjsn[6] + v5nos[rand] + sogenerar[rand17] + advfrequ[radv];;
                        eng5 = ftsjn[6] + verbs[rand] + sogener[rand17] + frequadv[radv];;
                        break;
                }
                break;

            case "announce ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + soobten[rand18] + advfrequ[radv];;
                        eng1 = ftsj[0] + verbs[rand] + soobtn[rand18] + frequadv[radv];;

                        sp2 = ftsjs[1] + v2[rand]  + soobten[rand18] + advfrequ[radv];;
                        eng2 = ftsj[1] + verbs[rand] + soobtn[rand18] + frequadv[radv];;

                        sp3 = ftsjs[2] + v3[rand]  + soobten[rand18] + advfrequ[radv];;
                        eng3 = ftsj[2] + verbs[rand] + soobtn[rand18] + frequadv[radv];;

                        sp3ella = ftsjs[3] + v3[rand]  + soobten[rand18] + advfrequ[radv];;
                        eng3she = ftsj[3] + verbs[rand] + soobtn[rand18] + frequadv[radv];;

                        sp3eso = ftsjs[4] + v3[rand]  + soobten[rand18] + advfrequ[radv];;
                        sp3it = ftsj[4] + verbs[rand] + soobtn[rand18] + frequadv[radv];;

                        sp4 = ftsjs[5] + v4[rand] + soobten[rand18] + advfrequ[radv];;
                        eng4 = ftsj[5] + verbs[rand] + soobtn[rand18] + frequadv[radv];;

                        sp5 = ftsjs[6] + v5nos[rand] + soobten[rand18] + advfrequ[radv];;
                        eng5 = ftsj[6] + verbs[rand] + soobtn[rand18] + frequadv[radv];;

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + soobten[rand18] + advfrequ[radv];;
                        eng1 = ftsjn[0] + verbs[rand] + soobtn[rand18] + frequadv[radv];;

                        sp2 = ftsjsn[1] + v2[rand] + soobten[rand18] + advfrequ[radv];;
                        eng2 = ftsjn[1] + verbs[rand] + soobtn[rand18] + frequadv[radv];;

                        sp3 = ftsjsn[2] + v3[rand] + soobten[rand18] + advfrequ[radv];;
                        eng3 = ftsjn[2] + verbs[rand] + soobtn[rand18] + frequadv[radv];;

                        sp3ella = ftsjsn[3] + v3[rand] + soobten[rand18] + advfrequ[radv];;
                        eng3she = ftsjn[3] + verbs[rand] + soobtn[rand18] + frequadv[radv];;

                        sp3eso = ftsjsn[4] + v3[rand] + soobten[rand18] + advfrequ[radv];;
                        sp3it = ftsjn[4] + verbs[rand] + soobtn[rand18] + frequadv[radv];;

                        sp4 = ftsjsn[5] + v4[rand] + soobten[rand18] + advfrequ[radv];;
                        eng4 = ftsjn[5] + verbs[rand] + soobtn[rand18] + frequadv[radv];;

                        sp5 = ftsjsn[6] + v5nos[rand] + soobten[rand18] + advfrequ[radv];;
                        eng5 = ftsjn[6] + verbs[rand] + soobtn[rand18] + frequadv[radv];;
                        break;
                }
                break;

            case "attend ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + soentra[rand19] + advfrequ[radv];;
                        eng1 = ftsj[0] + verbs[rand] + soent[rand19] + frequadv[radv];;

                        sp2 = ftsjs[1] + v2[rand]  + soentra[rand19] + advfrequ[radv];;
                        eng2 = ftsj[1] + verbs[rand] + soent[rand19] + frequadv[radv];;

                        sp3 = ftsjs[2] + v3[rand]  + soentra[rand19] + advfrequ[radv];;
                        eng3 = ftsj[2] + verbs[rand] + soent[rand19] + frequadv[radv];;

                        sp3ella = ftsjs[3] + v3[rand]  + soentra[rand19] + advfrequ[radv];;
                        eng3she = ftsj[3] + verbs[rand] + soent[rand19] + frequadv[radv];;

                        sp3eso = ftsjs[4] + v3[rand]  + soentra[rand19] + advfrequ[radv];;
                        sp3it = ftsj[4] + verbs[rand] + soent[rand19] + frequadv[radv];;

                        sp4 = ftsjs[5] + v4[rand] + soentra[rand19] + advfrequ[radv];;
                        eng4 = ftsj[5] + verbs[rand] + soent[rand19] + frequadv[radv];;

                        sp5 = ftsjs[6] + v5nos[rand] + soentra[rand19] + advfrequ[radv];;
                        eng5 = ftsj[6] + verbs[rand] + soent[rand19] + frequadv[radv];;

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + soentra[rand19] + advfrequ[radv];;
                        eng1 = ftsjn[0] + verbs[rand] + soent[rand19] + frequadv[radv];;

                        sp2 = ftsjsn[1] + v2[rand] + soentra[rand19] + advfrequ[radv];;
                        eng2 = ftsjn[1] + verbs[rand] + soent[rand19] + frequadv[radv];;

                        sp3 = ftsjsn[2] + v3[rand] + soentra[rand19] + advfrequ[radv];;
                        eng3 = ftsjn[2] + verbs[rand] + soent[rand19] + frequadv[radv];;

                        sp3ella = ftsjsn[3] + v3[rand] + soentra[rand19] + advfrequ[radv];;
                        eng3she = ftsjn[3] + verbs[rand] + soent[rand19] + frequadv[radv];;

                        sp3eso = ftsjsn[4] + v3[rand] + soentra[rand19] + advfrequ[radv];;
                        sp3it = ftsjn[4] + verbs[rand] + soent[rand19] + frequadv[radv];;

                        sp4 = ftsjsn[5] + v4[rand] + soentra[rand19] + advfrequ[radv];;
                        eng4 = ftsjn[5] + verbs[rand] + soent[rand19] + frequadv[radv];;

                        sp5 = ftsjsn[6] + v5nos[rand] + soentra[rand19] + advfrequ[radv];;
                        eng5 = ftsjn[6] + verbs[rand] + soent[rand19] + frequadv[radv];;
                        break;
                }
                break;

            case "commit ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + soapre[rand20] + advfrequ[radv];;
                        eng1 = ftsj[0] + verbs[rand] + soappre[rand20] + frequadv[radv];;

                        sp2 = ftsjs[1] + v2[rand]  + soapre[rand20] + advfrequ[radv];;
                        eng2 = ftsj[1] + verbs[rand] + soappre[rand20] + frequadv[radv];;

                        sp3 = ftsjs[2] + v3[rand]  + soapre[rand20] + advfrequ[radv];;
                        eng3 = ftsj[2] + verbs[rand] + soappre[rand20] + frequadv[radv];;

                        sp3ella = ftsjs[3] + v3[rand]  + soapre[rand20] + advfrequ[radv];;
                        eng3she = ftsj[3] + verbs[rand] + soappre[rand20] + frequadv[radv];;

                        sp3eso = ftsjs[4] + v3[rand]  + soapre[rand20] + advfrequ[radv];;
                        sp3it = ftsj[4] + verbs[rand] + soappre[rand20] + frequadv[radv];;

                        sp4 = ftsjs[5] + v4[rand] + soapre[rand20] + advfrequ[radv];;
                        eng4 = ftsj[5] + verbs[rand] + soappre[rand20] + frequadv[radv];;

                        sp5 = ftsjs[6] + v5nos[rand] + soapre[rand20] + advfrequ[radv];;
                        eng5 = ftsj[6] + verbs[rand] + soappre[rand20] + frequadv[radv];;

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + soapre[rand20] + advfrequ[radv];;
                        eng1 = ftsjn[0] + verbs[rand] + soappre[rand20] + frequadv[radv];;

                        sp2 = ftsjsn[1] + v2[rand] + soapre[rand20] + advfrequ[radv];;
                        eng2 = ftsjn[1] + verbs[rand] + soappre[rand20] + frequadv[radv];;

                        sp3 = ftsjsn[2] + v3[rand] + soapre[rand20] + advfrequ[radv];;
                        eng3 = ftsjn[2] + verbs[rand] + soappre[rand20] + frequadv[radv];;

                        sp3ella = ftsjsn[3] + v3[rand] + soapre[rand20] + advfrequ[radv];;
                        eng3she = ftsjn[3] + verbs[rand] + soappre[rand20] + frequadv[radv];;

                        sp3eso = ftsjsn[4] + v3[rand] + soapre[rand20] + advfrequ[radv];;
                        sp3it = ftsjn[4] + verbs[rand] + soappre[rand20] + frequadv[radv];;

                        sp4 = ftsjsn[5] + v4[rand] + soapre[rand20] + advfrequ[radv];;
                        eng4 = ftsjn[5] + verbs[rand] + soappre[rand20] + frequadv[radv];;

                        sp5 = ftsjsn[6] + v5nos[rand] + soapre[rand20] + advfrequ[radv];;
                        eng5 = ftsjn[6] + verbs[rand] + soappre[rand20] + frequadv[radv];;
                        break;
                }
                break;

            case "illustrate ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + somane[rand21] + advfrequ[radv];;
                        eng1 = ftsj[0] + verbs[rand] + soman[rand21] + frequadv[radv];;

                        sp2 = ftsjs[1] + v2[rand]  + somane[rand21] + advfrequ[radv];;
                        eng2 = ftsj[1] + verbs[rand] + soman[rand21] + frequadv[radv];;

                        sp3 = ftsjs[2] + v3[rand]  + somane[rand21] + advfrequ[radv];;
                        eng3 = ftsj[2] + verbs[rand] + soman[rand21] + frequadv[radv];;

                        sp3ella = ftsjs[3] + v3[rand]  + somane[rand21] + advfrequ[radv];;
                        eng3she = ftsj[3] + verbs[rand] + soman[rand21] + frequadv[radv];;

                        sp3eso = ftsjs[4] + v3[rand]  + somane[rand21] + advfrequ[radv];;
                        sp3it = ftsj[4] + verbs[rand] + soman[rand21] + frequadv[radv];;

                        sp4 = ftsjs[5] + v4[rand] + somane[rand21] + advfrequ[radv];;
                        eng4 = ftsj[5] + verbs[rand] + soman[rand21] + frequadv[radv];;

                        sp5 = ftsjs[6] + v5nos[rand] + somane[rand21] + advfrequ[radv];;
                        eng5 = ftsj[6] + verbs[rand] + soman[rand21] + frequadv[radv];;

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + somane[rand21] + advfrequ[radv];;
                        eng1 = ftsjn[0] + verbs[rand] + soman[rand21] + frequadv[radv];;

                        sp2 = ftsjsn[1] + v2[rand] + somane[rand21] + advfrequ[radv];;
                        eng2 = ftsjn[1] + verbs[rand] + soman[rand21] + frequadv[radv];;

                        sp3 = ftsjsn[2] + v3[rand] + somane[rand21] + advfrequ[radv];;
                        eng3 = ftsjn[2] + verbs[rand] + soman[rand21] + frequadv[radv];;

                        sp3ella = ftsjsn[3] + v3[rand] + somane[rand21] + advfrequ[radv];;
                        eng3she = ftsjn[3] + verbs[rand] + soman[rand21] + frequadv[radv];;

                        sp3eso = ftsjsn[4] + v3[rand] + somane[rand21] + advfrequ[radv];;
                        sp3it = ftsjn[4] + verbs[rand] + soman[rand21] + frequadv[radv];;

                        sp4 = ftsjsn[5] + v4[rand] + somane[rand21] + advfrequ[radv];;
                        eng4 = ftsjn[5] + verbs[rand] + soman[rand21] + frequadv[radv];;

                        sp5 = ftsjsn[6] + v5nos[rand] + somane[rand21] + advfrequ[radv];;
                        eng5 = ftsjn[6] + verbs[rand] + soman[rand21] + frequadv[radv];;
                        break;
                }
                break;

            case "propose ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + sogan[rand22] + advfrequ[radv];;
                        eng1 = ftsj[0] + verbs[rand] + soearn[rand22] + frequadv[radv];;

                        sp2 = ftsjs[1] + v2[rand]  + sogan[rand22] + advfrequ[radv];;
                        eng2 = ftsj[1] + verbs[rand] + soearn[rand22] + frequadv[radv];;

                        sp3 = ftsjs[2] + v3[rand]  + sogan[rand22] + advfrequ[radv];;
                        eng3 = ftsj[2] + verbs[rand] + soearn[rand22] + frequadv[radv];;

                        sp3ella = ftsjs[3] + v3[rand]  + sogan[rand22] + advfrequ[radv];;
                        eng3she = ftsj[3] + verbs[rand] + soearn[rand22] + frequadv[radv];;

                        sp3eso = ftsjs[4] + v3[rand]  + sogan[rand22] + advfrequ[radv];;
                        sp3it = ftsj[4] + verbs[rand] + soearn[rand22] + frequadv[radv];;

                        sp4 = ftsjs[5] + v4[rand] + sogan[rand22] + advfrequ[radv];;
                        eng4 = ftsj[5] + verbs[rand] + soearn[rand22] + frequadv[radv];;

                        sp5 = ftsjs[6] + v5nos[rand] + sogan[rand22] + advfrequ[radv];;
                        eng5 = ftsj[6] + verbs[rand] + soearn[rand22] + frequadv[radv];;

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + sogan[rand22] + advfrequ[radv];;
                        eng1 = ftsjn[0] + verbs[rand] + soearn[rand22] + frequadv[radv];;

                        sp2 = ftsjsn[1] + v2[rand] + sogan[rand22] + advfrequ[radv];;
                        eng2 = ftsjn[1] + verbs[rand] + soearn[rand22] + frequadv[radv];;

                        sp3 = ftsjsn[2] + v3[rand] + sogan[rand22] + advfrequ[radv];;
                        eng3 = ftsjn[2] + verbs[rand] + soearn[rand22] + frequadv[radv];;

                        sp3ella = ftsjsn[3] + v3[rand] + sogan[rand22] + advfrequ[radv];;
                        eng3she = ftsjn[3] + verbs[rand] + soearn[rand22] + frequadv[radv];;

                        sp3eso = ftsjsn[4] + v3[rand] + sogan[rand22] + advfrequ[radv];;
                        sp3it = ftsjn[4] + verbs[rand] + soearn[rand22] + frequadv[radv];;

                        sp4 = ftsjsn[5] + v4[rand] + sogan[rand22] + advfrequ[radv];;
                        eng4 = ftsjn[5] + verbs[rand] + soearn[rand22] + frequadv[radv];;

                        sp5 = ftsjsn[6] + v5nos[rand] + sogan[rand22] + advfrequ[radv];;
                        eng5 = ftsjn[6] + verbs[rand] + soearn[rand22] + frequadv[radv];;
                        break;
                }
                break;

            case "submit ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + soreflejar[rand23] + advfrequ[radv];;
                        eng1 = ftsj[0] + verbs[rand] + sorefl[rand23] + frequadv[radv];;

                        sp2 = ftsjs[1] + v2[rand]  + soreflejar[rand23] + advfrequ[radv];;
                        eng2 = ftsj[1] + verbs[rand] + sorefl[rand23] + frequadv[radv];;

                        sp3 = ftsjs[2] + v3[rand]  + soreflejar[rand23] + advfrequ[radv];;
                        eng3 = ftsj[2] + verbs[rand] + sorefl[rand23] + frequadv[radv];;

                        sp3ella = ftsjs[3] + v3[rand]  + soreflejar[rand23] + advfrequ[radv];;
                        eng3she = ftsj[3] + verbs[rand] + sorefl[rand23] + frequadv[radv];;

                        sp3eso = ftsjs[4] + v3[rand]  + soreflejar[rand23] + advfrequ[radv];;
                        sp3it = ftsj[4] + verbs[rand] + sorefl[rand23] + frequadv[radv];;

                        sp4 = ftsjs[5] + v4[rand] + soreflejar[rand23] + advfrequ[radv];;
                        eng4 = ftsj[5] + verbs[rand] + sorefl[rand23] + frequadv[radv];;

                        sp5 = ftsjs[6] + v5nos[rand] + soreflejar[rand23] + advfrequ[radv];;
                        eng5 = ftsj[6] + verbs[rand] + sorefl[rand23] + frequadv[radv];;

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + soreflejar[rand23] + advfrequ[radv];;
                        eng1 = ftsjn[0] + verbs[rand] + sorefl[rand23] + frequadv[radv];;

                        sp2 = ftsjsn[1] + v2[rand] + soreflejar[rand23] + advfrequ[radv];;
                        eng2 = ftsjn[1] + verbs[rand] + sorefl[rand23] + frequadv[radv];;

                        sp3 = ftsjsn[2] + v3[rand] + soreflejar[rand23] + advfrequ[radv];;
                        eng3 = ftsjn[2] + verbs[rand] + sorefl[rand23] + frequadv[radv];;

                        sp3ella = ftsjsn[3] + v3[rand] + soreflejar[rand23] + advfrequ[radv];;
                        eng3she = ftsjn[3] + verbs[rand] + sorefl[rand23] + frequadv[radv];;

                        sp3eso = ftsjsn[4] + v3[rand] + soreflejar[rand23] + advfrequ[radv];;
                        sp3it = ftsjn[4] + verbs[rand] + sorefl[rand23] + frequadv[radv];;

                        sp4 = ftsjsn[5] + v4[rand] + soreflejar[rand23] + advfrequ[radv];;
                        eng4 = ftsjn[5] + verbs[rand] + sorefl[rand23] + frequadv[radv];;

                        sp5 = ftsjsn[6] + v5nos[rand] + soreflejar[rand23] + advfrequ[radv];;
                        eng5 = ftsjn[6] + verbs[rand] + sorefl[rand23] + frequadv[radv];;
                        break;
                }
                break;

            case "translate ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + soinstalar[rand24] + advfrequ[radv];;
                        eng1 = ftsj[0] + verbs[rand] + soinsta[rand24] + frequadv[radv];;

                        sp2 = ftsjs[1] + v2[rand]  + soinstalar[rand24] + advfrequ[radv];;
                        eng2 = ftsj[1] + verbs[rand] + soinsta[rand24] + frequadv[radv];;

                        sp3 = ftsjs[2] + v3[rand]  + soinstalar[rand24] + advfrequ[radv];;
                        eng3 = ftsj[2] + verbs[rand] + soinsta[rand24] + frequadv[radv];;

                        sp3ella = ftsjs[3] + v3[rand]  + soinstalar[rand24] + advfrequ[radv];;
                        eng3she = ftsj[3] + verbs[rand] + soinsta[rand24] + frequadv[radv];;

                        sp3eso = ftsjs[4] + v3[rand]  + soinstalar[rand24] + advfrequ[radv];;
                        sp3it = ftsj[4] + verbs[rand] + soinsta[rand24] + frequadv[radv];;

                        sp4 = ftsjs[5] + v4[rand] + soinstalar[rand24] + advfrequ[radv];;
                        eng4 = ftsj[5] + verbs[rand] + soinsta[rand24] + frequadv[radv];;

                        sp5 = ftsjs[6] + v5nos[rand] + soinstalar[rand24] + advfrequ[radv];;
                        eng5 = ftsj[6] + verbs[rand] + soinsta[rand24] + frequadv[radv];;

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + soinstalar[rand24] + advfrequ[radv];;
                        eng1 = ftsjn[0] + verbs[rand] + soinsta[rand24] + frequadv[radv];;

                        sp2 = ftsjsn[1] + v2[rand] + soinstalar[rand24] + advfrequ[radv];;
                        eng2 = ftsjn[1] + verbs[rand] + soinsta[rand24] + frequadv[radv];;

                        sp3 = ftsjsn[2] + v3[rand] + soinstalar[rand24] + advfrequ[radv];;
                        eng3 = ftsjn[2] + verbs[rand] + soinsta[rand24] + frequadv[radv];;

                        sp3ella = ftsjsn[3] + v3[rand] + soinstalar[rand24] + advfrequ[radv];;
                        eng3she = ftsjn[3] + verbs[rand] + soinsta[rand24] + frequadv[radv];;

                        sp3eso = ftsjsn[4] + v3[rand] + soinstalar[rand24] + advfrequ[radv];;
                        sp3it = ftsjn[4] + verbs[rand] + soinsta[rand24] + frequadv[radv];;

                        sp4 = ftsjsn[5] + v4[rand] + soinstalar[rand24] + advfrequ[radv];;
                        eng4 = ftsjn[5] + verbs[rand] + soinsta[rand24] + frequadv[radv];;

                        sp5 = ftsjsn[6] + v5nos[rand] + soinstalar[rand24] + advfrequ[radv];;
                        eng5 = ftsjn[6] + verbs[rand] + soinsta[rand24] + frequadv[radv];;
                        break;
                }
                break;

            case "suggest ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + sosobre[rand25] + advfrequ[radv];;
                        eng1 = ftsj[0] + verbs[rand] + soover[rand25] + frequadv[radv];;

                        sp2 = ftsjs[1] + v2[rand]  + sosobre[rand25] + advfrequ[radv];;
                        eng2 = ftsj[1] + verbs[rand] + soover[rand25] + frequadv[radv];;

                        sp3 = ftsjs[2] + v3[rand]  + sosobre[rand25] + advfrequ[radv];;
                        eng3 = ftsj[2] + verbs[rand] + soover[rand25] + frequadv[radv];;

                        sp3ella = ftsjs[3] + v3[rand]  + sosobre[rand25] + advfrequ[radv];;
                        eng3she = ftsj[3] + verbs[rand] + soover[rand25] + frequadv[radv];;

                        sp3eso = ftsjs[4] + v3[rand]  + sosobre[rand25] + advfrequ[radv];;
                        sp3it = ftsj[4] + verbs[rand] + soover[rand25] + frequadv[radv];;

                        sp4 = ftsjs[5] + v4[rand] + sosobre[rand25] + advfrequ[radv];;
                        eng4 = ftsj[5] + verbs[rand] + soover[rand25] + frequadv[radv];;

                        sp5 = ftsjs[6] + v5nos[rand] + sosobre[rand25] + advfrequ[radv];;
                        eng5 = ftsj[6] + verbs[rand] + soover[rand25] + frequadv[radv];;

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + sosobre[rand25] + advfrequ[radv];;
                        eng1 = ftsjn[0] + verbs[rand] + soover[rand25] + frequadv[radv];;

                        sp2 = ftsjsn[1] + v2[rand] + sosobre[rand25] + advfrequ[radv];;
                        eng2 = ftsjn[1] + verbs[rand] + soover[rand25] + frequadv[radv];;

                        sp3 = ftsjsn[2] + v3[rand] + sosobre[rand25] + advfrequ[radv];;
                        eng3 = ftsjn[2] + verbs[rand] + soover[rand25] + frequadv[radv];;

                        sp3ella = ftsjsn[3] + v3[rand] + sosobre[rand25] + advfrequ[radv];;
                        eng3she = ftsjn[3] + verbs[rand] + soover[rand25] + frequadv[radv];;

                        sp3eso = ftsjsn[4] + v3[rand] + sosobre[rand25] + advfrequ[radv];;
                        sp3it = ftsjn[4] + verbs[rand] + soover[rand25] + frequadv[radv];;

                        sp4 = ftsjsn[5] + v4[rand] + sosobre[rand25] + advfrequ[radv];;
                        eng4 = ftsjn[5] + verbs[rand] + soover[rand25] + frequadv[radv];;

                        sp5 = ftsjsn[6] + v5nos[rand] + sosobre[rand25] + advfrequ[radv];;
                        eng5 = ftsjn[6] + verbs[rand] + soover[rand25] + frequadv[radv];;
                        break;
                }
                break;

            case "shut ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + soaju[rand26] + advfrequ[radv];;
                        eng1 = ftsj[0] + verbs[rand] + soadj[rand26] + frequadv[radv];;

                        sp2 = ftsjs[1] + v2[rand]  + soaju[rand26] + advfrequ[radv];;
                        eng2 = ftsj[1] + verbs[rand] + soadj[rand26] + frequadv[radv];;

                        sp3 = ftsjs[2] + v3[rand]  + soaju[rand26] + advfrequ[radv];;
                        eng3 = ftsj[2] + verbs[rand] + soadj[rand26] + frequadv[radv];;

                        sp3ella = ftsjs[3] + v3[rand]  + soaju[rand26] + advfrequ[radv];;
                        eng3she = ftsj[3] + verbs[rand] + soadj[rand26] + frequadv[radv];;

                        sp3eso = ftsjs[4] + v3[rand]  + soaju[rand26] + advfrequ[radv];;
                        sp3it = ftsj[4] + verbs[rand] + soadj[rand26] + frequadv[radv];;

                        sp4 = ftsjs[5] + v4[rand] + soaju[rand26] + advfrequ[radv];;
                        eng4 = ftsj[5] + verbs[rand] + soadj[rand26] + frequadv[radv];;

                        sp5 = ftsjs[6] + v5nos[rand] + soaju[rand26] + advfrequ[radv];;
                        eng5 = ftsj[6] + verbs[rand] + soadj[rand26] + frequadv[radv];;

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + soaju[rand26] + advfrequ[radv];;
                        eng1 = ftsjn[0] + verbs[rand] + soadj[rand26] + frequadv[radv];;

                        sp2 = ftsjsn[1] + v2[rand] + soaju[rand26] + advfrequ[radv];;
                        eng2 = ftsjn[1] + verbs[rand] + soadj[rand26] + frequadv[radv];;

                        sp3 = ftsjsn[2] + v3[rand] + soaju[rand26] + advfrequ[radv];;
                        eng3 = ftsjn[2] + verbs[rand] + soadj[rand26] + frequadv[radv];;

                        sp3ella = ftsjsn[3] + v3[rand] + soaju[rand26] + advfrequ[radv];;
                        eng3she = ftsjn[3] + verbs[rand] + soadj[rand26] + frequadv[radv];;

                        sp3eso = ftsjsn[4] + v3[rand] + soaju[rand26] + advfrequ[radv];;
                        sp3it = ftsjn[4] + verbs[rand] + soadj[rand26] + frequadv[radv];;

                        sp4 = ftsjsn[5] + v4[rand] + soaju[rand26] + advfrequ[radv];;
                        eng4 = ftsjn[5] + verbs[rand] + soadj[rand26] + frequadv[radv];;

                        sp5 = ftsjsn[6] + v5nos[rand] + soaju[rand26] + advfrequ[radv];;
                        eng5 = ftsjn[6] + verbs[rand] + soadj[rand26] + frequadv[radv];;
                        break;
                }
                break;

            case "pour ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + soaliv[rand27] + advfrequ[radv];;
                        eng1 = ftsj[0] + verbs[rand] + sorelieve[rand27] + frequadv[radv];;

                        sp2 = ftsjs[1] + v2[rand]  + soaliv[rand27] + advfrequ[radv];;
                        eng2 = ftsj[1] + verbs[rand] + sorelieve[rand27] + frequadv[radv];;

                        sp3 = ftsjs[2] + v3[rand]  + soaliv[rand27] + advfrequ[radv];;
                        eng3 = ftsj[2] + verbs[rand] + sorelieve[rand27] + frequadv[radv];;

                        sp3ella = ftsjs[3] + v3[rand]  + soaliv[rand27] + advfrequ[radv];;
                        eng3she = ftsj[3] + verbs[rand] + sorelieve[rand27] + frequadv[radv];;

                        sp3eso = ftsjs[4] + v3[rand]  + soaliv[rand27] + advfrequ[radv];;
                        sp3it = ftsj[4] + verbs[rand] + sorelieve[rand27] + frequadv[radv];;

                        sp4 = ftsjs[5] + v4[rand] + soaliv[rand27] + advfrequ[radv];;
                        eng4 = ftsj[5] + verbs[rand] + sorelieve[rand27] + frequadv[radv];;

                        sp5 = ftsjs[6] + v5nos[rand] + soaliv[rand27] + advfrequ[radv];;
                        eng5 = ftsj[6] + verbs[rand] + sorelieve[rand27] + frequadv[radv];;

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + soaliv[rand27] + advfrequ[radv];;
                        eng1 = ftsjn[0] + verbs[rand] + sorelieve[rand27] + frequadv[radv];;

                        sp2 = ftsjsn[1] + v2[rand] + soaliv[rand27] + advfrequ[radv];;
                        eng2 = ftsjn[1] + verbs[rand] + sorelieve[rand27] + frequadv[radv];;

                        sp3 = ftsjsn[2] + v3[rand] + soaliv[rand27] + advfrequ[radv];;
                        eng3 = ftsjn[2] + verbs[rand] + sorelieve[rand27] + frequadv[radv];;

                        sp3ella = ftsjsn[3] + v3[rand] + soaliv[rand27] + advfrequ[radv];;
                        eng3she = ftsjn[3] + verbs[rand] + sorelieve[rand27] + frequadv[radv];;

                        sp3eso = ftsjsn[4] + v3[rand] + soaliv[rand27] + advfrequ[radv];;
                        sp3it = ftsjn[4] + verbs[rand] + sorelieve[rand27] + frequadv[radv];;

                        sp4 = ftsjsn[5] + v4[rand] + soaliv[rand27] + advfrequ[radv];;
                        eng4 = ftsjn[5] + verbs[rand] + sorelieve[rand27] + frequadv[radv];;

                        sp5 = ftsjsn[6] + v5nos[rand] + soaliv[rand27] + advfrequ[radv];;
                        eng5 = ftsjn[6] + verbs[rand] + sorelieve[rand27] + frequadv[radv];;
                        break;
                }

                break;
        }
    }//LR 20/04/2022

    //want to dificultad 3 SOLO SPECIAL
    public void wantyouto3() {
        int rand = (int) (Math.random() * verbs.length);
        Pasts2 pas = new Pasts2();
        String temp = verbs[rand];
        int rn1 = (int) (Math.random() * 6);
        int rn2 = (int) (Math.random() * 5);
        int neg = (int) (Math.random() * 2);
        randstarter();
        int radv = (int) (Math.random() * frequadv.length);

        //want to subject
        String wtsj[] = {"I want ", "you want ", "he want ", "she want ", "it want ", "we want ", "they want "};
        //want to subject negative
        String wtsjn[] = {"I don't want ", "you doesn't want ", "he doesn't want ", "she doesn't want ", "it doesn't want "
                , "we doesn't want ", "they doesn't want "};
        //sujetos want to en sp
        String wtsjs[] = {"yo quiero ", "tú quieres ", "él quiere ", "ella quiere ", "eso quiere ", "nosotros queremos ", "ellos quieren "};
        //sujetos want to en sp negativo
        String wtsjsn[] = {"yo no quiero ", "tú no quieres ", "él no quiere ", "eso no quiere ", "ella no quiere ", "nosotros no queremos ", "ellos no quieren "};

        String wtobj1[] = {"you to " + verbs[rand], "him to " + verbs[rand], "her to " + verbs[rand],
                "it to " + verbs[rand], "us to " + verbs[rand], "them to " + verbs[rand]};
        String wtobj2[] = {"me to " + verbs[rand], "him to " + verbs[rand], "her to " + verbs[rand],
                "it to " + verbs[rand], "us to " + verbs[rand], "them to " + verbs[rand]};
        String wtobj3[] = {"you to " + verbs[rand], "me to " + verbs[rand], "her to " + verbs[rand],
                "it to " + verbs[rand], "us to " + verbs[rand], "them to " + verbs[rand]};
        String wtobj4[] = {"you to " + verbs[rand], "him to " + verbs[rand], "me to " + verbs[rand],
                "it to " + verbs[rand], "us to " + verbs[rand], "them to " + verbs[rand]};
        String wtobj5[] = {"you to " + verbs[rand], "him to " + verbs[rand], "her to " + verbs[rand],
                "me to " + verbs[rand], "us to " + verbs[rand], "them to " + verbs[rand]};
        String wtobj6[] = {"you to " + verbs[rand], "him to " + verbs[rand], "her to " + verbs[rand],
                "it to " + verbs[rand], "them to " + verbs[rand]};
        String wtobj7[] = {"you to " + verbs[rand], "him to " + verbs[rand], "her to " + verbs[rand],
                "it to " + verbs[rand], "us to " + verbs[rand], "me to " + verbs[rand]};

        // objetos wt en sp
        String wtobj1s[] = {"que tú " + v2[rand], "que él " + v3[rand], "que ella " + v3[rand],
                "que eso " + v3[rand], "que nosotros " + v5nos[rand], "que ellos " + v4[rand]};
        String wtobj2s[] = {"que yo " + v1[rand], "que él " + v3[rand], "que ella " + v3[rand],
                "que eso " + v3[rand], "que nosotros " + v3[rand], "que ellos " + v3[rand]};
        String wtobj3s[] = {"que tú " + v2[rand], "que yo " + v1[rand], "que ella " + v3[rand],
                "que eso " + v3[rand], "que nosotros " + v5nos[rand], "que ellos " + v4[rand]};
        String wtobj4s[] = {"que tú " + v2[rand], "que él " + v3[rand], "que yo " + v1[rand],
                "que eso " + v3[rand], "que nosotros " + v5nos[rand], "que ellos " + v4[rand]};
        String wtobj5s[] = {"que tú " + v2[rand], "que él " + v3[rand], "que ella " + v3[rand],
                "que yo " + v1[rand], "que nosotros " + v5nos[rand], "que ellos " + v4[rand]};
        String wtobj6s[] = {"que tú " + v2[rand], "que él " + v3[rand], "que ella " + v3[rand],
                "que eso " + v3[rand], "que ellos " + v4[rand]};
        String wtobj7s[] = {"que tú " + v2[rand], "que él " + v3[rand], "que ella " + v3[rand],
                "que eso " + v3[rand], "que nosotros " + v5nos[rand], "que yo " + v1[rand]};

        switch (temp) {
            case "react ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sodete[rand1] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + sodet[rand1] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sodete[rand1] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + sodet[rand1] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sodete[rand1] + advfrequ[radv];
                        eng3 = wtsj[2] + wtobj3[rn1] + sodet[rand1] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sodete[rand1] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + sodet[rand1] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sodete[rand1] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + sodet[rand1] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sodete[rand1] + advfrequ[radv];
                        eng4 = wtsj[5] + wtobj6[rn2] + sodet[rand1] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sodete[rand1] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + sodet[rand1] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sodete[rand1] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sodet[rand1] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sodete[rand1] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sodet[rand1] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sodete[rand1] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sodet[rand1] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sodete[rand1] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sodet[rand1] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sodete[rand1] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sodet[rand1] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sodete[rand1] + advfrequ[radv];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sodet[rand1] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sodete[rand1] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sodet[rand1] + frequadv[radv];
                        break;
                }
                break;

            case "anticipate ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soacer[rand2] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + soappr[rand2] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soacer[rand2] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + soappr[rand2] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soacer[rand2] + advfrequ[radv];
                        eng3 = wtsj[2] + wtobj3[rn1] + soappr[rand2] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soacer[rand2] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + soappr[rand2] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soacer[rand2] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + soappr[rand2] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soacer[rand2] + advfrequ[radv];
                        eng4 = wtsj[5] + wtobj6[rn2] + soappr[rand2] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soacer[rand2] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + soappr[rand2] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + v1[rand] + soacer[rand2] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soappr[rand2] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soacer[rand2] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soappr[rand2] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soacer[rand2] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soappr[rand2] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soacer[rand2] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soappr[rand2] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soacer[rand2] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soappr[rand2] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soacer[rand2] + advfrequ[radv];
                        eng4 = wtsjn[5] + wtobj6[rn2] + soappr[rand2] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soacer[rand2] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soappr[rand2] + frequadv[radv];
                        break;
                }
                break;

            case "assume ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + socrecer[rand3] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + sogrow[rand3] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + socrecer[rand3] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + sogrow[rand3] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + socrecer[rand3] + advfrequ[radv];
                        eng3 = wtsj[2] + wtobj3[rn1] + sogrow[rand3] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + socrecer[rand3] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + sogrow[rand3] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + socrecer[rand3] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + sogrow[rand3] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + socrecer[rand3] + advfrequ[radv];
                        eng4 = wtsj[5] + wtobj6[rn2] + sogrow[rand3] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + socrecer[rand3] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + sogrow[rand3] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + v1[rand] + socrecer[rand3] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sogrow[rand3] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + socrecer[rand3] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sogrow[rand3] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + socrecer[rand3] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sogrow[rand3] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + socrecer[rand3] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sogrow[rand3] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + socrecer[rand3] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sogrow[rand3] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + socrecer[rand3] + advfrequ[radv];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sogrow[rand3] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + socrecer[rand3] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sogrow[rand3] + frequadv[radv];
                        break;
                }
                break;

            case "engage ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + somejo[rand4] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + soimpr[rand4] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + somejo[rand4] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + soimpr[rand4] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + somejo[rand4] + advfrequ[radv];
                        eng3 = wtsj[2] + wtobj3[rn1] + soimpr[rand4] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + somejo[rand4] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + soimpr[rand4] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + somejo[rand4] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + soimpr[rand4] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + somejo[rand4] + advfrequ[radv];
                        eng4 = wtsj[5] + wtobj6[rn2] + soimpr[rand4] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + somejo[rand4] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + soimpr[rand4] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + v1[rand] + somejo[rand4] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soimpr[rand4] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + somejo[rand4] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soimpr[rand4] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + somejo[rand4] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soimpr[rand4] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + somejo[rand4] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soimpr[rand4] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + somejo[rand4] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soimpr[rand4] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + somejo[rand4] + advfrequ[radv];
                        eng4 = wtsjn[5] + wtobj6[rn2] + soimpr[rand4] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + somejo[rand4] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soimpr[rand4] + frequadv[radv];
                        break;
                }
                break;

            case "intend ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + socomen[rand5] + advfrequ[radv];;
                        eng1 = wtsj[0] + wtobj1[rn1] + sobegin[rand5] + frequadv[radv];;

                        sp2 = wtsjs[1] + wtobj2s[rn1] + socomen[rand5] + advfrequ[radv];;
                        eng2 = wtsj[1] + wtobj2[rn1] + sobegin[rand5] + frequadv[radv];;

                        sp3 = wtsjs[2] + wtobj3s[rn1] + socomen[rand5] + advfrequ[radv];;
                        eng3 = wtsj[2] + wtobj3[rn1] + sobegin[rand5] + frequadv[radv];;

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + socomen[rand5] + advfrequ[radv];;
                        eng3she = wtsj[3] + wtobj4[rn1] + sobegin[rand5] + frequadv[radv];;

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + socomen[rand5] + advfrequ[radv];;
                        sp3it = wtsj[4] + wtobj5[rn1] + sobegin[rand5] + frequadv[radv];;

                        sp4 = wtsjs[5] + wtobj6s[rn2] + socomen[rand5] + advfrequ[radv];;
                        eng4 = wtsj[5] + wtobj6[rn2] + sobegin[rand5] + frequadv[radv];;

                        sp5 = wtsjs[6] + wtobj7s[rn1] + socomen[rand5] + advfrequ[radv];;
                        eng5 = wtsj[6] + wtobj7[rn1] + sobegin[rand5] + frequadv[radv];;

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + v1[rand] + socomen[rand5] + advfrequ[radv];;
                        eng1 = wtsjn[0] + wtobj1[rn1] + sobegin[rand5] + frequadv[radv];;

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + socomen[rand5] + advfrequ[radv];;
                        eng2 = wtsjn[1] + wtobj2[rn1] + sobegin[rand5] + frequadv[radv];;

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + socomen[rand5] + advfrequ[radv];;
                        eng3 = wtsjn[2] + wtobj3[rn1] + sobegin[rand5] + frequadv[radv];;

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + socomen[rand5] + advfrequ[radv];;
                        eng3she = wtsjn[3] + wtobj4[rn1] + sobegin[rand5] + frequadv[radv];;

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + socomen[rand5] + advfrequ[radv];;
                        sp3it = wtsjn[4] + wtobj5[rn1] + sobegin[rand5] + frequadv[radv];;

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + socomen[rand5] + advfrequ[radv];;
                        eng4 = wtsjn[5] + wtobj6[rn2] + sobegin[rand5] + frequadv[radv];;

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + socomen[rand5] + advfrequ[radv];;
                        eng5 = wtsjn[6] + wtobj7[rn1] + sobegin[rand5] + frequadv[radv];;
                        break;
                }
                break;

            case "relate ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + socontinu[rand6] + advfrequ[radv];;
                        eng1 = wtsj[0] + wtobj1[rn1] + soconti[rand6] + frequadv[radv];;

                        sp2 = wtsjs[1] + wtobj2s[rn1] + socontinu[rand6] + advfrequ[radv];;
                        eng2 = wtsj[1] + wtobj2[rn1] + soconti[rand6] + frequadv[radv];;

                        sp3 = wtsjs[2] + wtobj3s[rn1] + socontinu[rand6] + advfrequ[radv];;
                        eng3 = wtsj[2] + wtobj3[rn1] + soconti[rand6] + frequadv[radv];;

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + socontinu[rand6] + advfrequ[radv];;
                        eng3she = wtsj[3] + wtobj4[rn1] + soconti[rand6] + frequadv[radv];;

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + socontinu[rand6] + advfrequ[radv];;
                        sp3it = wtsj[4] + wtobj5[rn1] + soconti[rand6] + frequadv[radv];;

                        sp4 = wtsjs[5] + wtobj6s[rn2] + socontinu[rand6] + advfrequ[radv];;
                        eng4 = wtsj[5] + wtobj6[rn2] + soconti[rand6] + frequadv[radv];;

                        sp5 = wtsjs[6] + wtobj7s[rn1] + socontinu[rand6] + advfrequ[radv];;
                        eng5 = wtsj[6] + wtobj7[rn1] + soconti[rand6] + frequadv[radv];;

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + v1[rand] + socontinu[rand6] + advfrequ[radv];;
                        eng1 = wtsjn[0] + wtobj1[rn1] + soconti[rand6] + frequadv[radv];;

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + socontinu[rand6] + advfrequ[radv];;
                        eng2 = wtsjn[1] + wtobj2[rn1] + soconti[rand6] + frequadv[radv];;

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + socontinu[rand6] + advfrequ[radv];;
                        eng3 = wtsjn[2] + wtobj3[rn1] + soconti[rand6] + frequadv[radv];;

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + socontinu[rand6] + advfrequ[radv];;
                        eng3she = wtsjn[3] + wtobj4[rn1] + soconti[rand6] + frequadv[radv];;

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + socontinu[rand6] + advfrequ[radv];;
                        sp3it = wtsjn[4] + wtobj5[rn1] + soconti[rand6] + frequadv[radv];;

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + socontinu[rand6] + advfrequ[radv];;
                        eng4 = wtsjn[5] + wtobj6[rn2] + soconti[rand6] + frequadv[radv];;

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + socontinu[rand6] + advfrequ[radv];;
                        eng5 = wtsjn[6] + wtobj7[rn1] + soconti[rand6] + frequadv[radv];;
                        break;
                }
                break;

            case "settle ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soescri[rand7] + advfrequ[radv];;
                        eng1 = wtsj[0] + wtobj1[rn1] + sowrite[rand7] + frequadv[radv];;

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soescri[rand7] + advfrequ[radv];;
                        eng2 = wtsj[1] + wtobj2[rn1] + sowrite[rand7] + frequadv[radv];;

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soescri[rand7] + advfrequ[radv];;
                        eng3 = wtsj[2] + wtobj3[rn1] + sowrite[rand7] + frequadv[radv];;

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soescri[rand7] + advfrequ[radv];;
                        eng3she = wtsj[3] + wtobj4[rn1] + sowrite[rand7] + frequadv[radv];;

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soescri[rand7] + advfrequ[radv];;
                        sp3it = wtsj[4] + wtobj5[rn1] + sowrite[rand7] + frequadv[radv];;

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soescri[rand7] + advfrequ[radv];;
                        eng4 = wtsj[5] + wtobj6[rn2] + sowrite[rand7] + frequadv[radv];;

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soescri[rand7] + advfrequ[radv];;
                        eng5 = wtsj[6] + wtobj7[rn1] + sowrite[rand7] + frequadv[radv];;

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + v1[rand] + soescri[rand7] + advfrequ[radv];;
                        eng1 = wtsjn[0] + wtobj1[rn1] + sowrite[rand7] + frequadv[radv];;

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soescri[rand7] + advfrequ[radv];;
                        eng2 = wtsjn[1] + wtobj2[rn1] + sowrite[rand7] + frequadv[radv];;

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soescri[rand7] + advfrequ[radv];;
                        eng3 = wtsjn[2] + wtobj3[rn1] + sowrite[rand7] + frequadv[radv];;

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soescri[rand7] + advfrequ[radv];;
                        eng3she = wtsjn[3] + wtobj4[rn1] + sowrite[rand7] + frequadv[radv];;

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soescri[rand7] + advfrequ[radv];;
                        sp3it = wtsjn[4] + wtobj5[rn1] + sowrite[rand7] + frequadv[radv];;

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soescri[rand7] + advfrequ[radv];;
                        eng4 = wtsjn[5] + wtobj6[rn2] + sowrite[rand7] + frequadv[radv];;

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soescri[rand7] + advfrequ[radv];;
                        eng5 = wtsjn[6] + wtobj7[rn1] + sowrite[rand7] + frequadv[radv];;
                        break;
                }
                break;

            case "owe ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sologr[rand8] + advfrequ[radv];;
                        eng1 = wtsj[0] + wtobj1[rn1] + soachiv[rand8] + frequadv[radv];;

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sologr[rand8] + advfrequ[radv];;
                        eng2 = wtsj[1] + wtobj2[rn1] + soachiv[rand8] + frequadv[radv];;

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sologr[rand8] + advfrequ[radv];;
                        eng3 = wtsj[2] + wtobj3[rn1] + soachiv[rand8] + frequadv[radv];;

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sologr[rand8] + advfrequ[radv];;
                        eng3she = wtsj[3] + wtobj4[rn1] + soachiv[rand8] + frequadv[radv];;

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sologr[rand8] + advfrequ[radv];;
                        sp3it = wtsj[4] + wtobj5[rn1] + soachiv[rand8] + frequadv[radv];;

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sologr[rand8] + advfrequ[radv];;
                        eng4 = wtsj[5] + wtobj6[rn2] + soachiv[rand8] + frequadv[radv];;

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sologr[rand8] + advfrequ[radv];;
                        eng5 = wtsj[6] + wtobj7[rn1] + soachiv[rand8] + frequadv[radv];;

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + v1[rand] + sologr[rand8] + advfrequ[radv];;
                        eng1 = wtsjn[0] + wtobj1[rn1] + soachiv[rand8] + frequadv[radv];;

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sologr[rand8] + advfrequ[radv];;
                        eng2 = wtsjn[1] + wtobj2[rn1] + soachiv[rand8] + frequadv[radv];;

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sologr[rand8] + advfrequ[radv];;
                        eng3 = wtsjn[2] + wtobj3[rn1] + soachiv[rand8] + frequadv[radv];;

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sologr[rand8] + advfrequ[radv];;
                        eng3she = wtsjn[3] + wtobj4[rn1] + soachiv[rand8] + frequadv[radv];;

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sologr[rand8] + advfrequ[radv];;
                        sp3it = wtsjn[4] + wtobj5[rn1] + soachiv[rand8] + frequadv[radv];;

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sologr[rand8] + advfrequ[radv];;
                        eng4 = wtsjn[5] + wtobj6[rn2] + soachiv[rand8] + frequadv[radv];;

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sologr[rand8] + advfrequ[radv];;
                        eng5 = wtsjn[6] + wtobj7[rn1] + soachiv[rand8] + frequadv[radv];;
                        break;
                }
                break;

            case "confirm ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sodiscu[rand9] + advfrequ[radv];;
                        eng1 = wtsj[0] + wtobj1[rn1] + sodisc[rand9] + frequadv[radv];;

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sodiscu[rand9] + advfrequ[radv];;
                        eng2 = wtsj[1] + wtobj2[rn1] + sodisc[rand9] + frequadv[radv];;

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sodiscu[rand9] + advfrequ[radv];;
                        eng3 = wtsj[2] + wtobj3[rn1] + sodisc[rand9] + frequadv[radv];;

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sodiscu[rand9] + advfrequ[radv];;
                        eng3she = wtsj[3] + wtobj4[rn1] + sodisc[rand9] + frequadv[radv];;

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sodiscu[rand9] + advfrequ[radv];;
                        sp3it = wtsj[4] + wtobj5[rn1] + sodisc[rand9] + frequadv[radv];;

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sodiscu[rand9] + advfrequ[radv];;
                        eng4 = wtsj[5] + wtobj6[rn2] + sodisc[rand9] + frequadv[radv];;

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sodiscu[rand9] + advfrequ[radv];;
                        eng5 = wtsj[6] + wtobj7[rn1] + sodisc[rand9] + frequadv[radv];;

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + v1[rand] + sodiscu[rand9] + advfrequ[radv];;
                        eng1 = wtsjn[0] + wtobj1[rn1] + sodisc[rand9] + frequadv[radv];;

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sodiscu[rand9] + advfrequ[radv];;
                        eng2 = wtsjn[1] + wtobj2[rn1] + sodisc[rand9] + frequadv[radv];;

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sodiscu[rand9] + advfrequ[radv];;
                        eng3 = wtsjn[2] + wtobj3[rn1] + sodisc[rand9] + frequadv[radv];;

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sodiscu[rand9] + advfrequ[radv];;
                        eng3she = wtsjn[3] + wtobj4[rn1] + sodisc[rand9] + frequadv[radv];;

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sodiscu[rand9] + advfrequ[radv];;
                        sp3it = wtsjn[4] + wtobj5[rn1] + sodisc[rand9] + frequadv[radv];;

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sodiscu[rand9] + advfrequ[radv];;
                        eng4 = wtsjn[5] + wtobj6[rn2] + sodisc[rand9] + frequadv[radv];;

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sodiscu[rand9] + advfrequ[radv];;
                        eng5 = wtsjn[6] + wtobj7[rn1] + sodisc[rand9] + frequadv[radv];;
                        break;
                }
                break;

            case "calculate ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soresolv[rand10] + advfrequ[radv];;
                        eng1 = wtsj[0] + wtobj1[rn1] + sosolv[rand10] + frequadv[radv];;

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soresolv[rand10] + advfrequ[radv];;
                        eng2 = wtsj[1] + wtobj2[rn1] + sosolv[rand10] + frequadv[radv];;

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soresolv[rand10] + advfrequ[radv];;
                        eng3 = wtsj[2] + wtobj3[rn1] + sosolv[rand10] + frequadv[radv];;

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soresolv[rand10] + advfrequ[radv];;
                        eng3she = wtsj[3] + wtobj4[rn1] + sosolv[rand10] + frequadv[radv];;

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soresolv[rand10] + advfrequ[radv];;
                        sp3it = wtsj[4] + wtobj5[rn1] + sosolv[rand10] + frequadv[radv];;

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soresolv[rand10] + advfrequ[radv];;
                        eng4 = wtsj[5] + wtobj6[rn2] + sosolv[rand10] + frequadv[radv];;

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soresolv[rand10] + advfrequ[radv];;
                        eng5 = wtsj[6] + wtobj7[rn1] + sosolv[rand10] + frequadv[radv];;

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + v1[rand] + soresolv[rand10] + advfrequ[radv];;
                        eng1 = wtsjn[0] + wtobj1[rn1] + sosolv[rand10] + frequadv[radv];;

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soresolv[rand10] + advfrequ[radv];;
                        eng2 = wtsjn[1] + wtobj2[rn1] + sosolv[rand10] + frequadv[radv];;

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soresolv[rand10] + advfrequ[radv];;
                        eng3 = wtsjn[2] + wtobj3[rn1] + sosolv[rand10] + frequadv[radv];;

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soresolv[rand10] + advfrequ[radv];;
                        eng3she = wtsjn[3] + wtobj4[rn1] + sosolv[rand10] + frequadv[radv];;

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soresolv[rand10] + advfrequ[radv];;
                        sp3it = wtsjn[4] + wtobj5[rn1] + sosolv[rand10] + frequadv[radv];;

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soresolv[rand10] + advfrequ[radv];;
                        eng4 = wtsjn[5] + wtobj6[rn2] + sosolv[rand10] + frequadv[radv];;

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soresolv[rand10] + advfrequ[radv];;
                        eng5 = wtsjn[6] + wtobj7[rn1] + sosolv[rand10] + frequadv[radv];;
                        break;
                }
                break;

            case "deliver ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soinvert[rand11] + advfrequ[radv];;
                        eng1 = wtsj[0] + wtobj1[rn1] + soinvst[rand11] + frequadv[radv];;

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soinvert[rand11] + advfrequ[radv];;
                        eng2 = wtsj[1] + wtobj2[rn1] + soinvst[rand11] + frequadv[radv];;

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soinvert[rand11] + advfrequ[radv];;
                        eng3 = wtsj[2] + wtobj3[rn1] + soinvst[rand11] + frequadv[radv];;

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soinvert[rand11] + advfrequ[radv];;
                        eng3she = wtsj[3] + wtobj4[rn1] + soinvst[rand11] + frequadv[radv];;

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soinvert[rand11] + advfrequ[radv];;
                        sp3it = wtsj[4] + wtobj5[rn1] + soinvst[rand11] + frequadv[radv];;

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soinvert[rand11] + advfrequ[radv];;
                        eng4 = wtsj[5] + wtobj6[rn2] + soinvst[rand11] + frequadv[radv];;

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soinvert[rand11] + advfrequ[radv];;
                        eng5 = wtsj[6] + wtobj7[rn1] + soinvst[rand11] + frequadv[radv];;

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + v1[rand] + soinvert[rand11] + advfrequ[radv];;
                        eng1 = wtsjn[0] + wtobj1[rn1] + soinvst[rand11] + frequadv[radv];;

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soinvert[rand11] + advfrequ[radv];;
                        eng2 = wtsjn[1] + wtobj2[rn1] + soinvst[rand11] + frequadv[radv];;

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soinvert[rand11] + advfrequ[radv];;
                        eng3 = wtsjn[2] + wtobj3[rn1] + soinvst[rand11] + frequadv[radv];;

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soinvert[rand11] + advfrequ[radv];;
                        eng3she = wtsjn[3] + wtobj4[rn1] + soinvst[rand11] + frequadv[radv];;

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soinvert[rand11] + advfrequ[radv];;
                        sp3it = wtsjn[4] + wtobj5[rn1] + soinvst[rand11] + frequadv[radv];;

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soinvert[rand11] + advfrequ[radv];;
                        eng4 = wtsjn[5] + wtobj6[rn2] + soinvst[rand11] + frequadv[radv];;

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soinvert[rand11] + advfrequ[radv];;
                        eng5 = wtsjn[6] + wtobj7[rn1] + soinvst[rand11] + frequadv[radv];;
                        break;
                }
                break;

            case "extend ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soreducir[rand12] + advfrequ[radv];;
                        eng1 = wtsj[0] + wtobj1[rn1] + soreduce[rand12] + frequadv[radv];;

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soreducir[rand12] + advfrequ[radv];;
                        eng2 = wtsj[1] + wtobj2[rn1] + soreduce[rand12] + frequadv[radv];;

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soreducir[rand12] + advfrequ[radv];;
                        eng3 = wtsj[2] + wtobj3[rn1] + soreduce[rand12] + frequadv[radv];;

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soreducir[rand12] + advfrequ[radv];;
                        eng3she = wtsj[3] + wtobj4[rn1] + soreduce[rand12] + frequadv[radv];;

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soreducir[rand12] + advfrequ[radv];;
                        sp3it = wtsj[4] + wtobj5[rn1] + soreduce[rand12] + frequadv[radv];;

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soreducir[rand12] + advfrequ[radv];;
                        eng4 = wtsj[5] + wtobj6[rn2] + soreduce[rand12] + frequadv[radv];;

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soreducir[rand12] + advfrequ[radv];;
                        eng5 = wtsj[6] + wtobj7[rn1] + soreduce[rand12] + frequadv[radv];;

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + v1[rand] + soreducir[rand12] + advfrequ[radv];;
                        eng1 = wtsjn[0] + wtobj1[rn1] + soreduce[rand12] + frequadv[radv];;

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soreducir[rand12] + advfrequ[radv];;
                        eng2 = wtsjn[1] + wtobj2[rn1] + soreduce[rand12] + frequadv[radv];;

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soreducir[rand12] + advfrequ[radv];;
                        eng3 = wtsjn[2] + wtobj3[rn1] + soreduce[rand12] + frequadv[radv];;

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soreducir[rand12] + advfrequ[radv];;
                        eng3she = wtsjn[3] + wtobj4[rn1] + soreduce[rand12] + frequadv[radv];;

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soreducir[rand12] + advfrequ[radv];;
                        sp3it = wtsjn[4] + wtobj5[rn1] + soreduce[rand12] + frequadv[radv];;

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soreducir[rand12] + advfrequ[radv];;
                        eng4 = wtsjn[5] + wtobj6[rn2] + soreduce[rand12] + frequadv[radv];;

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soreducir[rand12] + advfrequ[radv];;
                        eng5 = wtsjn[6] + wtobj7[rn1] + soreduce[rand12] + frequadv[radv];;
                        break;
                }
                break;

            case "investigate ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sohablar[rand13] + advfrequ[radv];;
                        eng1 = wtsj[0] + wtobj1[rn1] + sospeak[rand13] + frequadv[radv];;

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sohablar[rand13] + advfrequ[radv];;
                        eng2 = wtsj[1] + wtobj2[rn1] + sospeak[rand13] + frequadv[radv];;

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sohablar[rand13] + advfrequ[radv];;
                        eng3 = wtsj[2] + wtobj3[rn1] + sospeak[rand13] + frequadv[radv];;

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sohablar[rand13] + advfrequ[radv];;
                        eng3she = wtsj[3] + wtobj4[rn1] + sospeak[rand13] + frequadv[radv];;

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sohablar[rand13] + advfrequ[radv];;
                        sp3it = wtsj[4] + wtobj5[rn1] + sospeak[rand13] + frequadv[radv];;

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sohablar[rand13] + advfrequ[radv];;
                        eng4 = wtsj[5] + wtobj6[rn2] + sospeak[rand13] + frequadv[radv];;

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sohablar[rand13] + advfrequ[radv];;
                        eng5 = wtsj[6] + wtobj7[rn1] + sospeak[rand13] + frequadv[radv];;

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + v1[rand] + sohablar[rand13] + advfrequ[radv];;
                        eng1 = wtsjn[0] + wtobj1[rn1] + sospeak[rand13] + frequadv[radv];;

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sohablar[rand13] + advfrequ[radv];;
                        eng2 = wtsjn[1] + wtobj2[rn1] + sospeak[rand13] + frequadv[radv];;

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sohablar[rand13] + advfrequ[radv];;
                        eng3 = wtsjn[2] + wtobj3[rn1] + sospeak[rand13] + frequadv[radv];;

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sohablar[rand13] + advfrequ[radv];;
                        eng3she = wtsjn[3] + wtobj4[rn1] + sospeak[rand13] + frequadv[radv];;

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sohablar[rand13] + advfrequ[radv];;
                        sp3it = wtsjn[4] + wtobj5[rn1] + sospeak[rand13] + frequadv[radv];;

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sohablar[rand13] + advfrequ[radv];;
                        eng4 = wtsjn[5] + wtobj6[rn2] + sospeak[rand13] + frequadv[radv];;

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sohablar[rand13] + advfrequ[radv];;
                        eng5 = wtsjn[6] + wtobj7[rn1] + sospeak[rand13] + frequadv[radv];;
                        break;
                }

                break;

            case "qualify ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soaplic[rand14] + advfrequ[radv];;
                        eng1 = wtsj[0] + wtobj1[rn1] + soapply[rand14] + frequadv[radv];;

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soaplic[rand14] + advfrequ[radv];;
                        eng2 = wtsj[1] + wtobj2[rn1] + soapply[rand14] + frequadv[radv];;

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soaplic[rand14] + advfrequ[radv];;
                        eng3 = wtsj[2] + wtobj3[rn1] + soapply[rand14] + frequadv[radv];;

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soaplic[rand14] + advfrequ[radv];;
                        eng3she = wtsj[3] + wtobj4[rn1] + soapply[rand14] + frequadv[radv];;

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soaplic[rand14] + advfrequ[radv];;
                        sp3it = wtsj[4] + wtobj5[rn1] + soapply[rand14] + frequadv[radv];;

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soaplic[rand14] + advfrequ[radv];;
                        eng4 = wtsj[5] + wtobj6[rn2] + soapply[rand14] + frequadv[radv];;

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soaplic[rand14] + advfrequ[radv];;
                        eng5 = wtsj[6] + wtobj7[rn1] + soapply[rand14] + frequadv[radv];;

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + v1[rand] + soaplic[rand14] + advfrequ[radv];;
                        eng1 = wtsjn[0] + wtobj1[rn1] + soapply[rand14] + frequadv[radv];;

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soaplic[rand14] + advfrequ[radv];;
                        eng2 = wtsjn[1] + wtobj2[rn1] + soapply[rand14] + frequadv[radv];;

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soaplic[rand14] + advfrequ[radv];;
                        eng3 = wtsjn[2] + wtobj3[rn1] + soapply[rand14] + frequadv[radv];;

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soaplic[rand14] + advfrequ[radv];;
                        eng3she = wtsjn[3] + wtobj4[rn1] + soapply[rand14] + frequadv[radv];;

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soaplic[rand14] + advfrequ[radv];;
                        sp3it = wtsjn[4] + wtobj5[rn1] + soapply[rand14] + frequadv[radv];;

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soaplic[rand14] + advfrequ[radv];;
                        eng4 = wtsjn[5] + wtobj6[rn2] + soapply[rand14] + frequadv[radv];;

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soaplic[rand14] + advfrequ[radv];;
                        eng5 = wtsjn[6] + wtobj7[rn1] + soapply[rand14] + frequadv[radv];;
                        break;
                }
                break;

            case "celebrate ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sorecom[rand15] + advfrequ[radv];;
                        eng1 = wtsj[0] + wtobj1[rn1] + sorec[rand15] + frequadv[radv];;

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sorecom[rand15] + advfrequ[radv];;
                        eng2 = wtsj[1] + wtobj2[rn1] + sorec[rand15] + frequadv[radv];;

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sorecom[rand15] + advfrequ[radv];;
                        eng3 = wtsj[2] + wtobj3[rn1] + sorec[rand15] + frequadv[radv];;

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sorecom[rand15] + advfrequ[radv];;
                        eng3she = wtsj[3] + wtobj4[rn1] + sorec[rand15] + frequadv[radv];;

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sorecom[rand15] + advfrequ[radv];;
                        sp3it = wtsj[4] + wtobj5[rn1] + sorec[rand15] + frequadv[radv];;

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sorecom[rand15] + advfrequ[radv];;
                        eng4 = wtsj[5] + wtobj6[rn2] + sorec[rand15] + frequadv[radv];;

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sorecom[rand15] + advfrequ[radv];;
                        eng5 = wtsj[6] + wtobj7[rn1] + sorec[rand15] + frequadv[radv];;

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + v1[rand] + sorecom[rand15] + advfrequ[radv];;
                        eng1 = wtsjn[0] + wtobj1[rn1] + sorec[rand15] + frequadv[radv];;

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sorecom[rand15] + advfrequ[radv];;
                        eng2 = wtsjn[1] + wtobj2[rn1] + sorec[rand15] + frequadv[radv];;

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sorecom[rand15] + advfrequ[radv];;
                        eng3 = wtsjn[2] + wtobj3[rn1] + sorec[rand15] + frequadv[radv];;

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sorecom[rand15] + advfrequ[radv];;
                        eng3she = wtsjn[3] + wtobj4[rn1] + sorec[rand15] + frequadv[radv];;

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sorecom[rand15] + advfrequ[radv];;
                        sp3it = wtsjn[4] + wtobj5[rn1] + sorec[rand15] + frequadv[radv];;

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sorecom[rand15] + advfrequ[radv];;
                        eng4 = wtsjn[5] + wtobj6[rn2] + sorec[rand15] + frequadv[radv];;

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sorecom[rand15] + advfrequ[radv];;
                        eng5 = wtsjn[6] + wtobj7[rn1] + sorec[rand15] + frequadv[radv];;
                        break;
                }
                break;

            case "admit ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sovariar[rand16] + advfrequ[radv];;
                        eng1 = wtsj[0] + wtobj1[rn1] + sovar[rand16] + frequadv[radv];;

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sovariar[rand16] + advfrequ[radv];;
                        eng2 = wtsj[1] + wtobj2[rn1] + sovar[rand16] + frequadv[radv];;

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sovariar[rand16] + advfrequ[radv];;
                        eng3 = wtsj[2] + wtobj3[rn1] + sovar[rand16] + frequadv[radv];;

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sovariar[rand16] + advfrequ[radv];;
                        eng3she = wtsj[3] + wtobj4[rn1] + sovar[rand16] + frequadv[radv];;

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sovariar[rand16] + advfrequ[radv];;
                        sp3it = wtsj[4] + wtobj5[rn1] + sovar[rand16] + frequadv[radv];;

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sovariar[rand16] + advfrequ[radv];;
                        eng4 = wtsj[5] + wtobj6[rn2] + sovar[rand16] + frequadv[radv];;

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sovariar[rand16] + advfrequ[radv];;
                        eng5 = wtsj[6] + wtobj7[rn1] + sovar[rand16] + frequadv[radv];;

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + v1[rand] + sovariar[rand16] + advfrequ[radv];;
                        eng1 = wtsjn[0] + wtobj1[rn1] + sovar[rand16] + frequadv[radv];;

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sovariar[rand16] + advfrequ[radv];;
                        eng2 = wtsjn[1] + wtobj2[rn1] + sovar[rand16] + frequadv[radv];;

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sovariar[rand16] + advfrequ[radv];;
                        eng3 = wtsjn[2] + wtobj3[rn1] + sovar[rand16] + frequadv[radv];;

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sovariar[rand16] + advfrequ[radv];;
                        eng3she = wtsjn[3] + wtobj4[rn1] + sovar[rand16] + frequadv[radv];;

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sovariar[rand16] + advfrequ[radv];;
                        sp3it = wtsjn[4] + wtobj5[rn1] + sovar[rand16] + frequadv[radv];;

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sovariar[rand16] + advfrequ[radv];;
                        eng4 = wtsjn[5] + wtobj6[rn2] + sovar[rand16] + frequadv[radv];;

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sovariar[rand16] + advfrequ[radv];;
                        eng5 = wtsjn[6] + wtobj7[rn1] + sovar[rand16] + frequadv[radv];;
                        break;
                }
                break;

            case "adopt ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sogenerar[rand17] + advfrequ[radv];;
                        eng1 = wtsj[0] + wtobj1[rn1] + sogener[rand17] + frequadv[radv];;

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sogenerar[rand17] + advfrequ[radv];;
                        eng2 = wtsj[1] + wtobj2[rn1] + sogener[rand17] + frequadv[radv];;

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sogenerar[rand17] + advfrequ[radv];;
                        eng3 = wtsj[2] + wtobj3[rn1] + sogener[rand17] + frequadv[radv];;

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sogenerar[rand17] + advfrequ[radv];;
                        eng3she = wtsj[3] + wtobj4[rn1] + sogener[rand17] + frequadv[radv];;

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sogenerar[rand17] + advfrequ[radv];;
                        sp3it = wtsj[4] + wtobj5[rn1] + sogener[rand17] + frequadv[radv];;

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sogenerar[rand17] + advfrequ[radv];;
                        eng4 = wtsj[5] + wtobj6[rn2] + sogener[rand17] + frequadv[radv];;

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sogenerar[rand17] + advfrequ[radv];;
                        eng5 = wtsj[6] + wtobj7[rn1] + sogener[rand17] + frequadv[radv];;

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + v1[rand] + sogenerar[rand17] + advfrequ[radv];;
                        eng1 = wtsjn[0] + wtobj1[rn1] + sogener[rand17] + frequadv[radv];;

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sogenerar[rand17] + advfrequ[radv];;
                        eng2 = wtsjn[1] + wtobj2[rn1] + sogener[rand17] + frequadv[radv];;

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sogenerar[rand17] + advfrequ[radv];;
                        eng3 = wtsjn[2] + wtobj3[rn1] + sogener[rand17] + frequadv[radv];;

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sogenerar[rand17] + advfrequ[radv];;
                        eng3she = wtsjn[3] + wtobj4[rn1] + sogener[rand17] + frequadv[radv];;

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sogenerar[rand17] + advfrequ[radv];;
                        sp3it = wtsjn[4] + wtobj5[rn1] + sogener[rand17] + frequadv[radv];;

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sogenerar[rand17] + advfrequ[radv];;
                        eng4 = wtsjn[5] + wtobj6[rn2] + sogener[rand17] + frequadv[radv];;

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sogenerar[rand17] + advfrequ[radv];;
                        eng5 = wtsjn[6] + wtobj7[rn1] + sogener[rand17] + frequadv[radv];;
                        break;
                }
                break;

            case "announce ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soobten[rand18] + advfrequ[radv];;
                        eng1 = wtsj[0] + wtobj1[rn1] + soobtn[rand18] + frequadv[radv];;

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soobten[rand18] + advfrequ[radv];;
                        eng2 = wtsj[1] + wtobj2[rn1] + soobtn[rand18] + frequadv[radv];;

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soobten[rand18] + advfrequ[radv];;
                        eng3 = wtsj[2] + wtobj3[rn1] + soobtn[rand18] + frequadv[radv];;

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soobten[rand18] + advfrequ[radv];;
                        eng3she = wtsj[3] + wtobj4[rn1] + soobtn[rand18] + frequadv[radv];;

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soobten[rand18] + advfrequ[radv];;
                        sp3it = wtsj[4] + wtobj5[rn1] + soobtn[rand18] + frequadv[radv];;

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soobten[rand18] + advfrequ[radv];;
                        eng4 = wtsj[5] + wtobj6[rn2] + soobtn[rand18] + frequadv[radv];;

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soobten[rand18] + advfrequ[radv];;
                        eng5 = wtsj[6] + wtobj7[rn1] + soobtn[rand18] + frequadv[radv];;

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + v1[rand] + soobten[rand18] + advfrequ[radv];;
                        eng1 = wtsjn[0] + wtobj1[rn1] + soobtn[rand18] + frequadv[radv];;

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soobten[rand18] + advfrequ[radv];;
                        eng2 = wtsjn[1] + wtobj2[rn1] + soobtn[rand18] + frequadv[radv];;

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soobten[rand18] + advfrequ[radv];;
                        eng3 = wtsjn[2] + wtobj3[rn1] + soobtn[rand18] + frequadv[radv];;

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soobten[rand18] + advfrequ[radv];;
                        eng3she = wtsjn[3] + wtobj4[rn1] + soobtn[rand18] + frequadv[radv];;

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soobten[rand18] + advfrequ[radv];;
                        sp3it = wtsjn[4] + wtobj5[rn1] + soobtn[rand18] + frequadv[radv];;

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soobten[rand18] + advfrequ[radv];;
                        eng4 = wtsjn[5] + wtobj6[rn2] + soobtn[rand18] + frequadv[radv];;

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soobten[rand18] + advfrequ[radv];;
                        eng5 = wtsjn[6] + wtobj7[rn1] + soobtn[rand18] + frequadv[radv];;
                        break;
                }
                break;

            case "attend ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soentra[rand19] + advfrequ[radv];;
                        eng1 = wtsj[0] + wtobj1[rn1] + soent[rand19] + frequadv[radv];;

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soentra[rand19] + advfrequ[radv];;
                        eng2 = wtsj[1] + wtobj2[rn1] + soent[rand19] + frequadv[radv];;

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soentra[rand19] + advfrequ[radv];;
                        eng3 = wtsj[2] + wtobj3[rn1] + soent[rand19] + frequadv[radv];;

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soentra[rand19] + advfrequ[radv];;
                        eng3she = wtsj[3] + wtobj4[rn1] + soent[rand19] + frequadv[radv];;

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soentra[rand19] + advfrequ[radv];;
                        sp3it = wtsj[4] + wtobj5[rn1] + soent[rand19] + frequadv[radv];;

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soentra[rand19] + advfrequ[radv];;
                        eng4 = wtsj[5] + wtobj6[rn2] + soent[rand19] + frequadv[radv];;

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soentra[rand19] + advfrequ[radv];;
                        eng5 = wtsj[6] + wtobj7[rn1] + soent[rand19] + frequadv[radv];;

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + v1[rand] + soentra[rand19] + advfrequ[radv];;
                        eng1 = wtsjn[0] + wtobj1[rn1] + soent[rand19] + frequadv[radv];;

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soentra[rand19] + advfrequ[radv];;
                        eng2 = wtsjn[1] + wtobj2[rn1] + soent[rand19] + frequadv[radv];;

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soentra[rand19] + advfrequ[radv];;
                        eng3 = wtsjn[2] + wtobj3[rn1] + soent[rand19] + frequadv[radv];;

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soentra[rand19] + advfrequ[radv];;
                        eng3she = wtsjn[3] + wtobj4[rn1] + soent[rand19] + frequadv[radv];;

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soentra[rand19] + advfrequ[radv];;
                        sp3it = wtsjn[4] + wtobj5[rn1] + soent[rand19] + frequadv[radv];;

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soentra[rand19] + advfrequ[radv];;
                        eng4 = wtsjn[5] + wtobj6[rn2] + soent[rand19] + frequadv[radv];;

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soentra[rand19] + advfrequ[radv];;
                        eng5 = wtsjn[6] + wtobj7[rn1] + soent[rand19] + frequadv[radv];;
                        break;
                }
                break;

            case "commit ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soapre[rand20] + advfrequ[radv];;
                        eng1 = wtsj[0] + wtobj1[rn1] + soappre[rand20] + frequadv[radv];;

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soapre[rand20] + advfrequ[radv];;
                        eng2 = wtsj[1] + wtobj2[rn1] + soappre[rand20] + frequadv[radv];;

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soapre[rand20] + advfrequ[radv];;
                        eng3 = wtsj[2] + wtobj3[rn1] + soappre[rand20] + frequadv[radv];;

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soapre[rand20] + advfrequ[radv];;
                        eng3she = wtsj[3] + wtobj4[rn1] + soappre[rand20] + frequadv[radv];;

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soapre[rand20] + advfrequ[radv];;
                        sp3it = wtsj[4] + wtobj5[rn1] + soappre[rand20] + frequadv[radv];;

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soapre[rand20] + advfrequ[radv];;
                        eng4 = wtsj[5] + wtobj6[rn2] + soappre[rand20] + frequadv[radv];;

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soapre[rand20] + advfrequ[radv];;
                        eng5 = wtsj[6] + wtobj7[rn1] + soappre[rand20] + frequadv[radv];;

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + v1[rand] + soapre[rand20] + advfrequ[radv];;
                        eng1 = wtsjn[0] + wtobj1[rn1] + soappre[rand20] + frequadv[radv];;

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soapre[rand20] + advfrequ[radv];;
                        eng2 = wtsjn[1] + wtobj2[rn1] + soappre[rand20] + frequadv[radv];;

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soapre[rand20] + advfrequ[radv];;
                        eng3 = wtsjn[2] + wtobj3[rn1] + soappre[rand20] + frequadv[radv];;

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soapre[rand20] + advfrequ[radv];;
                        eng3she = wtsjn[3] + wtobj4[rn1] + soappre[rand20] + frequadv[radv];;

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soapre[rand20] + advfrequ[radv];;
                        sp3it = wtsjn[4] + wtobj5[rn1] + soappre[rand20] + frequadv[radv];;

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soapre[rand20] + advfrequ[radv];;
                        eng4 = wtsjn[5] + wtobj6[rn2] + soappre[rand20] + frequadv[radv];;

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soapre[rand20] + advfrequ[radv];;
                        eng5 = wtsjn[6] + wtobj7[rn1] + soappre[rand20] + frequadv[radv];;
                        break;
                }
                break;

            case "illustrate ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + somane[rand21] + advfrequ[radv];;
                        eng1 = wtsj[0] + wtobj1[rn1] + soman[rand21] + frequadv[radv];;

                        sp2 = wtsjs[1] + wtobj2s[rn1] + somane[rand21] + advfrequ[radv];;
                        eng2 = wtsj[1] + wtobj2[rn1] + soman[rand21] + frequadv[radv];;

                        sp3 = wtsjs[2] + wtobj3s[rn1] + somane[rand21] + advfrequ[radv];;
                        eng3 = wtsj[2] + wtobj3[rn1] + soman[rand21] + frequadv[radv];;

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + somane[rand21] + advfrequ[radv];;
                        eng3she = wtsj[3] + wtobj4[rn1] + soman[rand21] + frequadv[radv];;

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + somane[rand21] + advfrequ[radv];;
                        sp3it = wtsj[4] + wtobj5[rn1] + soman[rand21] + frequadv[radv];;

                        sp4 = wtsjs[5] + wtobj6s[rn2] + somane[rand21] + advfrequ[radv];;
                        eng4 = wtsj[5] + wtobj6[rn2] + soman[rand21] + frequadv[radv];;

                        sp5 = wtsjs[6] + wtobj7s[rn1] + somane[rand21] + advfrequ[radv];;
                        eng5 = wtsj[6] + wtobj7[rn1] + soman[rand21] + frequadv[radv];;

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + v1[rand] + somane[rand21] + advfrequ[radv];;
                        eng1 = wtsjn[0] + wtobj1[rn1] + soman[rand21] + frequadv[radv];;

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + somane[rand21] + advfrequ[radv];;
                        eng2 = wtsjn[1] + wtobj2[rn1] + soman[rand21] + frequadv[radv];;

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + somane[rand21] + advfrequ[radv];;
                        eng3 = wtsjn[2] + wtobj3[rn1] + soman[rand21] + frequadv[radv];;

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + somane[rand21] + advfrequ[radv];;
                        eng3she = wtsjn[3] + wtobj4[rn1] + soman[rand21] + frequadv[radv];;

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + somane[rand21] + advfrequ[radv];;
                        sp3it = wtsjn[4] + wtobj5[rn1] + soman[rand21] + frequadv[radv];;

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + somane[rand21] + advfrequ[radv];;
                        eng4 = wtsjn[5] + wtobj6[rn2] + soman[rand21] + frequadv[radv];;

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + somane[rand21] + advfrequ[radv];;
                        eng5 = wtsjn[6] + wtobj7[rn1] + soman[rand21] + frequadv[radv];;
                        break;
                }
                break;

            case "propose ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sogan[rand22] + advfrequ[radv];;
                        eng1 = wtsj[0] + wtobj1[rn1] + soearn[rand22] + frequadv[radv];;

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sogan[rand22] + advfrequ[radv];;
                        eng2 = wtsj[1] + wtobj2[rn1] + soearn[rand22] + frequadv[radv];;

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sogan[rand22] + advfrequ[radv];;
                        eng3 = wtsj[2] + wtobj3[rn1] + soearn[rand22] + frequadv[radv];;

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sogan[rand22] + advfrequ[radv];;
                        eng3she = wtsj[3] + wtobj4[rn1] + soearn[rand22] + frequadv[radv];;

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sogan[rand22] + advfrequ[radv];;
                        sp3it = wtsj[4] + wtobj5[rn1] + soearn[rand22] + frequadv[radv];;

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sogan[rand22] + advfrequ[radv];;
                        eng4 = wtsj[5] + wtobj6[rn2] + soearn[rand22] + frequadv[radv];;

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sogan[rand22] + advfrequ[radv];;
                        eng5 = wtsj[6] + wtobj7[rn1] + soearn[rand22] + frequadv[radv];;

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + v1[rand] + sogan[rand22] + advfrequ[radv];;
                        eng1 = wtsjn[0] + wtobj1[rn1] + soearn[rand22] + frequadv[radv];;

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sogan[rand22] + advfrequ[radv];;
                        eng2 = wtsjn[1] + wtobj2[rn1] + soearn[rand22] + frequadv[radv];;

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sogan[rand22] + advfrequ[radv];;
                        eng3 = wtsjn[2] + wtobj3[rn1] + soearn[rand22] + frequadv[radv];;

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sogan[rand22] + advfrequ[radv];;
                        eng3she = wtsjn[3] + wtobj4[rn1] + soearn[rand22] + frequadv[radv];;

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sogan[rand22] + advfrequ[radv];;
                        sp3it = wtsjn[4] + wtobj5[rn1] + soearn[rand22] + frequadv[radv];;

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sogan[rand22] + advfrequ[radv];;
                        eng4 = wtsjn[5] + wtobj6[rn2] + soearn[rand22] + frequadv[radv];;

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sogan[rand22] + advfrequ[radv];;
                        eng5 = wtsjn[6] + wtobj7[rn1] + soearn[rand22] + frequadv[radv];;
                        break;
                }
                break;

            case "submit ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soreflejar[rand23] + advfrequ[radv];;
                        eng1 = wtsj[0] + wtobj1[rn1] + sorefl[rand23] + frequadv[radv];;

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soreflejar[rand23] + advfrequ[radv];;
                        eng2 = wtsj[1] + wtobj2[rn1] + sorefl[rand23] + frequadv[radv];;

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soreflejar[rand23] + advfrequ[radv];;
                        eng3 = wtsj[2] + wtobj3[rn1] + sorefl[rand23] + frequadv[radv];;

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soreflejar[rand23] + advfrequ[radv];;
                        eng3she = wtsj[3] + wtobj4[rn1] + sorefl[rand23] + frequadv[radv];;

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soreflejar[rand23] + advfrequ[radv];;
                        sp3it = wtsj[4] + wtobj5[rn1] + sorefl[rand23] + frequadv[radv];;

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soreflejar[rand23] + advfrequ[radv];;
                        eng4 = wtsj[5] + wtobj6[rn2] + sorefl[rand23] + frequadv[radv];;

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soreflejar[rand23] + advfrequ[radv];;
                        eng5 = wtsj[6] + wtobj7[rn1] + sorefl[rand23] + frequadv[radv];;

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + v1[rand] + soreflejar[rand23] + advfrequ[radv];;
                        eng1 = wtsjn[0] + wtobj1[rn1] + sorefl[rand23] + frequadv[radv];;

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soreflejar[rand23] + advfrequ[radv];;
                        eng2 = wtsjn[1] + wtobj2[rn1] + sorefl[rand23] + frequadv[radv];;

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soreflejar[rand23] + advfrequ[radv];;
                        eng3 = wtsjn[2] + wtobj3[rn1] + sorefl[rand23] + frequadv[radv];;

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soreflejar[rand23] + advfrequ[radv];;
                        eng3she = wtsjn[3] + wtobj4[rn1] + sorefl[rand23] + frequadv[radv];;

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soreflejar[rand23] + advfrequ[radv];;
                        sp3it = wtsjn[4] + wtobj5[rn1] + sorefl[rand23] + frequadv[radv];;

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soreflejar[rand23] + advfrequ[radv];;
                        eng4 = wtsjn[5] + wtobj6[rn2] + sorefl[rand23] + frequadv[radv];;

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soreflejar[rand23] + advfrequ[radv];;
                        eng5 = wtsjn[6] + wtobj7[rn1] + sorefl[rand23] + frequadv[radv];;
                        break;
                }
                break;

            case "translate ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soinstalar[rand24] + advfrequ[radv];;
                        eng1 = wtsj[0] + wtobj1[rn1] + soinsta[rand24] + frequadv[radv];;

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soinstalar[rand24] + advfrequ[radv];;
                        eng2 = wtsj[1] + wtobj2[rn1] + soinsta[rand24] + frequadv[radv];;

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soinstalar[rand24] + advfrequ[radv];;
                        eng3 = wtsj[2] + wtobj3[rn1] + soinsta[rand24] + frequadv[radv];;

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soinstalar[rand24] + advfrequ[radv];;
                        eng3she = wtsj[3] + wtobj4[rn1] + soinsta[rand24] + frequadv[radv];;

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soinstalar[rand24] + advfrequ[radv];;
                        sp3it = wtsj[4] + wtobj5[rn1] + soinsta[rand24] + frequadv[radv];;

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soinstalar[rand24] + advfrequ[radv];;
                        eng4 = wtsj[5] + wtobj6[rn2] + soinsta[rand24] + frequadv[radv];;

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soinstalar[rand24] + advfrequ[radv];;
                        eng5 = wtsj[6] + wtobj7[rn1] + soinsta[rand24] + frequadv[radv];;

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + v1[rand] + soinstalar[rand24] + advfrequ[radv];;
                        eng1 = wtsjn[0] + wtobj1[rn1] + soinsta[rand24] + frequadv[radv];;

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soinstalar[rand24] + advfrequ[radv];;
                        eng2 = wtsjn[1] + wtobj2[rn1] + soinsta[rand24] + frequadv[radv];;

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soinstalar[rand24] + advfrequ[radv];;
                        eng3 = wtsjn[2] + wtobj3[rn1] + soinsta[rand24] + frequadv[radv];;

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soinstalar[rand24] + advfrequ[radv];;
                        eng3she = wtsjn[3] + wtobj4[rn1] + soinsta[rand24] + frequadv[radv];;

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soinstalar[rand24] + advfrequ[radv];;
                        sp3it = wtsjn[4] + wtobj5[rn1] + soinsta[rand24] + frequadv[radv];;

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soinstalar[rand24] + advfrequ[radv];;
                        eng4 = wtsjn[5] + wtobj6[rn2] + soinsta[rand24] + frequadv[radv];;

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soinstalar[rand24] + advfrequ[radv];;
                        eng5 = wtsjn[6] + wtobj7[rn1] + soinsta[rand24] + frequadv[radv];;
                        break;
                }
                break;

            case "suggest ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sosobre[rand25] + advfrequ[radv];;
                        eng1 = wtsj[0] + wtobj1[rn1] + soover[rand25] + frequadv[radv];;

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sosobre[rand25] + advfrequ[radv];;
                        eng2 = wtsj[1] + wtobj2[rn1] + soover[rand25] + frequadv[radv];;

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sosobre[rand25] + advfrequ[radv];;
                        eng3 = wtsj[2] + wtobj3[rn1] + soover[rand25] + frequadv[radv];;

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sosobre[rand25] + advfrequ[radv];;
                        eng3she = wtsj[3] + wtobj4[rn1] + soover[rand25] + frequadv[radv];;

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sosobre[rand25] + advfrequ[radv];;
                        sp3it = wtsj[4] + wtobj5[rn1] + soover[rand25] + frequadv[radv];;

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sosobre[rand25] + advfrequ[radv];;
                        eng4 = wtsj[5] + wtobj6[rn2] + soover[rand25] + frequadv[radv];;

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sosobre[rand25] + advfrequ[radv];;
                        eng5 = wtsj[6] + wtobj7[rn1] + soover[rand25] + frequadv[radv];;

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + v1[rand] + sosobre[rand25] + advfrequ[radv];;
                        eng1 = wtsjn[0] + wtobj1[rn1] + soover[rand25] + frequadv[radv];;

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sosobre[rand25] + advfrequ[radv];;
                        eng2 = wtsjn[1] + wtobj2[rn1] + soover[rand25] + frequadv[radv];;

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sosobre[rand25] + advfrequ[radv];;
                        eng3 = wtsjn[2] + wtobj3[rn1] + soover[rand25] + frequadv[radv];;

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sosobre[rand25] + advfrequ[radv];;
                        eng3she = wtsjn[3] + wtobj4[rn1] + soover[rand25] + frequadv[radv];;

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sosobre[rand25] + advfrequ[radv];;
                        sp3it = wtsjn[4] + wtobj5[rn1] + soover[rand25] + frequadv[radv];;

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sosobre[rand25] + advfrequ[radv];;
                        eng4 = wtsjn[5] + wtobj6[rn2] + soover[rand25] + frequadv[radv];;

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sosobre[rand25] + advfrequ[radv];;
                        eng5 = wtsjn[6] + wtobj7[rn1] + soover[rand25] + frequadv[radv];;
                        break;
                }
                break;

            case "shut ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soaju[rand26] + advfrequ[radv];;
                        eng1 = wtsj[0] + wtobj1[rn1] + soadj[rand26] + frequadv[radv];;

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soaju[rand26] + advfrequ[radv];;
                        eng2 = wtsj[1] + wtobj2[rn1] + soadj[rand26] + frequadv[radv];;

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soaju[rand26] + advfrequ[radv];;
                        eng3 = wtsj[2] + wtobj3[rn1] + soadj[rand26] + frequadv[radv];;

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soaju[rand26] + advfrequ[radv];;
                        eng3she = wtsj[3] + wtobj4[rn1] + soadj[rand26] + frequadv[radv];;

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soaju[rand26] + advfrequ[radv];;
                        sp3it = wtsj[4] + wtobj5[rn1] + soadj[rand26] + frequadv[radv];;

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soaju[rand26] + advfrequ[radv];;
                        eng4 = wtsj[5] + wtobj6[rn2] + soadj[rand26] + frequadv[radv];;

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soaju[rand26] + advfrequ[radv];;
                        eng5 = wtsj[6] + wtobj7[rn1] + soadj[rand26] + frequadv[radv];;

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + v1[rand] + soaju[rand26] + advfrequ[radv];;
                        eng1 = wtsjn[0] + wtobj1[rn1] + soadj[rand26] + frequadv[radv];;

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soaju[rand26] + advfrequ[radv];;
                        eng2 = wtsjn[1] + wtobj2[rn1] + soadj[rand26] + frequadv[radv];;

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soaju[rand26] + advfrequ[radv];;
                        eng3 = wtsjn[2] + wtobj3[rn1] + soadj[rand26] + frequadv[radv];;

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soaju[rand26] + advfrequ[radv];;
                        eng3she = wtsjn[3] + wtobj4[rn1] + soadj[rand26] + frequadv[radv];;

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soaju[rand26] + advfrequ[radv];;
                        sp3it = wtsjn[4] + wtobj5[rn1] + soadj[rand26] + frequadv[radv];;

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soaju[rand26] + advfrequ[radv];;
                        eng4 = wtsjn[5] + wtobj6[rn2] + soadj[rand26] + frequadv[radv];;

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soaju[rand26] + advfrequ[radv];;
                        eng5 = wtsjn[6] + wtobj7[rn1] + soadj[rand26] + frequadv[radv];;
                        break;
                }
                break;

            case "pour ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soaliv[rand27] + advfrequ[radv];;
                        eng1 = wtsj[0] + wtobj1[rn1] + sorelieve[rand27] + frequadv[radv];;

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soaliv[rand27] + advfrequ[radv];;
                        eng2 = wtsj[1] + wtobj2[rn1] + sorelieve[rand27] + frequadv[radv];;

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soaliv[rand27] + advfrequ[radv];;
                        eng3 = wtsj[2] + wtobj3[rn1] + sorelieve[rand27] + frequadv[radv];;

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soaliv[rand27] + advfrequ[radv];;
                        eng3she = wtsj[3] + wtobj4[rn1] + sorelieve[rand27] + frequadv[radv];;

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soaliv[rand27] + advfrequ[radv];;
                        sp3it = wtsj[4] + wtobj5[rn1] + sorelieve[rand27] + frequadv[radv];;

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soaliv[rand27] + advfrequ[radv];;
                        eng4 = wtsj[5] + wtobj6[rn2] + sorelieve[rand27] + frequadv[radv];;

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soaliv[rand27] + advfrequ[radv];;
                        eng5 = wtsj[6] + wtobj7[rn1] + sorelieve[rand27] + frequadv[radv];;

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + v1[rand] + soaliv[rand27] + advfrequ[radv];;
                        eng1 = wtsjn[0] + wtobj1[rn1] + sorelieve[rand27] + frequadv[radv];;

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soaliv[rand27] + advfrequ[radv];;
                        eng2 = wtsjn[1] + wtobj2[rn1] + sorelieve[rand27] + frequadv[radv];;

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soaliv[rand27] + advfrequ[radv];;
                        eng3 = wtsjn[2] + wtobj3[rn1] + sorelieve[rand27] + frequadv[radv];;

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soaliv[rand27] + advfrequ[radv];;
                        eng3she = wtsjn[3] + wtobj4[rn1] + sorelieve[rand27] + frequadv[radv];;

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soaliv[rand27] + advfrequ[radv];;
                        sp3it = wtsjn[4] + wtobj5[rn1] + sorelieve[rand27] + frequadv[radv];;

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soaliv[rand27] + advfrequ[radv];;
                        eng4 = wtsjn[5] + wtobj6[rn2] + sorelieve[rand27] + frequadv[radv];;

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soaliv[rand27] + advfrequ[radv];;
                        eng5 = wtsjn[6] + wtobj7[rn1] + sorelieve[rand27] + frequadv[radv];;
                        break;
                }

                break;
        }


    }//LR 20/04/2022



    //Dificultad 4

    //PresENTES
    public void GenPresSimp4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo " + v1[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + v2[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + v3[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he " + verbs3[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + v3[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she " + verbs3[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + v3[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it " + verbs3[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + v4[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + v5nos[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no " + v1[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I " + "don't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + "no " + v2[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you " + "don't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + "no " + v3[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he " + "doesn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + "no " + v3[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she " + "doesn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + "no " + v3[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it " + "doesn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + "no " + v4[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they " + "don't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + "no " + v5nos[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we " + "don't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenPresCont4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo estoy " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I am " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I'm " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú estás " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you are " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you're " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él está " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he is " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he's " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella está " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she is " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she's " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso está " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it is " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it's " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos están " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they are " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they're " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros estamos " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we are " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we're " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no estoy " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I " + "am not " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I'm not " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + "no estás " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you're not " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you " + "aren't " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + "no está " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he's not " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he " + "isn't " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + "no está " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she's not " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she " + "isn't " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + "no está " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it's not " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it " + "isn't " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + "no están " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they're not " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they " + "aren't " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + "no están " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we're not " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we " + "aren't " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenPresPerf4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo he " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I've " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú has " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you've " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él ha " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he has " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he's " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella ha " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she has " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she's " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso ha " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it has " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it's " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos han " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they've " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros hemos " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we've " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                    case 1:
                        sp1 = "yo no he " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I have not " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I haven't " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú no has " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you have not " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you haven't " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él no ha " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he has not " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he hasn't " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella no ha " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she has not " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she hasn't " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso no ha " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it has not " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it hasn't " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos no han " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they have not " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they haven't " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros no hemos " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we have not " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we haven't " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenPresPerfCont4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo he estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú has estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él ha estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he has been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella ha estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she has been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso ha estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it has been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos han estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros hemos estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo no he estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I haven't been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú no has estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you haven't been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él no ha estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he hasn't been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella no ha estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she hasn't been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso no ha estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it hasn't been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos no han estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they haven't been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros no hemos estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we haven't been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023

    //PASADOS
    public void GenPastSimp4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 4);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo " + vsp1[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I " + vsp[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + vsp2[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you " + vsp[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + vsp3[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he " + vsp[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + vsp3[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she " + vsp[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + vsp3[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it " + vsp[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + vsp4[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they " + vsp[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + vsp5[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we " + vsp[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no " + vsp1[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I " + "didn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + "no " + vsp2[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you " + "didn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + "no " + vsp3[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he " + "didn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + "no " + vsp3[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she " + "didn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + "no " + vsp3[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it " + "didn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + "no " + vsp4[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they " + "didn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + "no " + vsp5[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we " + "didn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                    case 2:
                        sp1 = "yo " + vsp1i[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I " + vsp[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + vsp2i[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you " + vsp[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + vsp3i[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he " + vsp[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + vsp3i[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she " + vsp[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + vsp3i[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it " + vsp[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + vsp4i[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they " + vsp[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + vsp5i[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we " + vsp[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 3:
                        sp1 = "yo " + "no " + vsp1i[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I " + "didn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + "no " + vsp2i[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you " + "didn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + "no " + vsp3i[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he " + "didn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + "no " + vsp3i[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she " + "didn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + "no " + vsp3i[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it " + "didn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + "no " + vsp4i[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they " + "didn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + "no " + vsp5i[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we " + "didn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenPastCont4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo estaba " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I was " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I was " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú estabas " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you were " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you were " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él estaba " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he was " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he was " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella estaba " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she was " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she was " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso estaba " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it was " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it was " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos estaban " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they were " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they were " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros estabamos " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we were " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we were " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                    case 1:
                        sp1 = "yo " + "no estaba " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I " + "was not " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I " + "wasn't " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + "no estabas " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you " + "were not " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you " + "weren't " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + "no estaba " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he " + "was not " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he " + "wasn't " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + "no estaba " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she " + "was not " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she " + "wasn't " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + "no estaba " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it " + "was not " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it " + "wasn't " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + "no estaban " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they " + "were not " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they " + "weren't " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + "no estabamos " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we " + "were not " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we " + "weren't " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenPastPerf4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo había " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I had " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I'd " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú habías " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you had " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you'd " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él había " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he had " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he'd " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella había " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she had " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she'd " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso había " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it had " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it'd " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos habían " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they had " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they'd " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros habíamos " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we had " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we'd " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo no había " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I had not " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I hadn't " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú no habías " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you had not " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you hadn't " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él no había " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he had not " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he hadn't " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella no había " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she had not " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she hadn't " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso no había " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it had not " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it hadn't " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos no habían " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they had not " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they hadn't " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros no habíamos " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we had not " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we hadn't " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenPastPerfCont4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo había estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I had been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú habías estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you had been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él había estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he had been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella había estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she had been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso había estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it had been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos habían estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they had been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros habíamos estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we had been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo no había estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I hadn't been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú no habías estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you hadn't been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él no había estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he hadn't been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella no había estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she hadn't been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso no había estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it hadn't been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos no habían estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they hadn't been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros no habíamos estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we hadn't been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023

    //FUTUROS
    public void GenFutSimp4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo " + vsf1[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I will " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + vsf2[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you will " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + vsf3[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he will " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + vsf3[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she will " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + vsf3[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it will " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + vsf5[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they will " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + vsf4[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we will " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no " + vsf1[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I " + "won't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + "no " + vsf2[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you " + "won't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + "no " + vsf3[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he " + "won't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + "no " + vsf3[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she " + "won't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + "no " + vsf3[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it " + "won't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + "no " + vsf5[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they " + "won't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + "no " + vsf4[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we " + "won't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenFutCont4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo estaré " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I will be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I'll be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú estarás " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you will be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you'll be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él estará " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he will be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he'll be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella estará " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she will be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she'll be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso estará " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it will be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it'll be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos estarán " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they will be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they'll be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros estaremos " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we will be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we'll be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no estaré " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I " + "will not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I " + "won't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + "no estarás " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you " + "will not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you " + "won't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + "no estará " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he " + "will not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he " + "won't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + "no estará " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she " + "will not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she " + "won't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + "no estará " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it " + "will not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it " + "won't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + "no estarán " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they " + "will not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they " + "won't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + "no estaremos " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we " + "will not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we " + "won't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenFutPerf4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo habré " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I will have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I'll have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú habrás " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you will have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you'll have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él habrá " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he will have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he'll have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella habrá " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she will have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she'll have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso habrá " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it will have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it'll have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos habrán " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they will have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they'll have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros habremos " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we will have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we'll have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                    case 1:
                        sp1 = "yo no habré " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I will not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I won't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú no habrás " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you will not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you won't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él no habrá " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he will not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he won't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella no habrá " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she will not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she won't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso no habrá " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it will not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it won't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos no habrán " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they will not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they won't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros no habremos " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we will not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we won't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenFutPerfCont4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo habré estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I will have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú habrás estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you will have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él habrá estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he will have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella habrá estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she will have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso habrá estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it will have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos habrán estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they will have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros habremos estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we will have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo no habré estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I won't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú no habrás estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you won't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él no habrá estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he won't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella no habrá estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she won't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso no habrá estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it won't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos no habrán estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they won't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros no habremos estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we won't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023

    // WOULD
    public void GenWouldSimp4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo " + vsb1w[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I would " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + vsb2w[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you would " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + vsb3w[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he would " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + vsb3w[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she would " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + vsb3w[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it would " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + vsb4w[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they would " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + vsb5w[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we would " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no " + vsb1w[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I " + "wouldn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + "no " + vsb2w[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you " + "wouldn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + "no " + vsb3w[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he " + "wouldn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + "no " + vsb3w[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she " + "wouldn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + "no " + vsb3w[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it " + "wouldn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + "no " + vsb4w[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they " + "wouldn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + "no " + vsb5w[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we " + "wouldn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenWouldCont4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo estaría " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I would be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I'd be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú estarías " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you would be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you'd be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él estaría " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he would be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he'd be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella estaría " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she would be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she'd be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso estaría " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it would be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it'd be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos estarían " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they would be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they'd be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros estaríamos " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we would be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we'd be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no estaría " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I " + "would not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I " + "wouldn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + "no estarías " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you " + "would not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you " + "wouldn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + "no estaría " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he " + "would not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he " + "wouldn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + "no estaría " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she " + "would not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she " + "wouldn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + "no estaría " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it " + "would not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it " + "wouldn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + "no estarían " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they " + "would not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they " + "wouldn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + "no estaríamos " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we " + "would not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we " + "wouldn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenWouldPerf4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo habría " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I would have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I'd have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú habrías " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you would have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you'd have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él habría " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he would have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he'd have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella habría " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she would have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she'd have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso habría " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it would have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it'd have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos habrían " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they would have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they'd have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros habríamos " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we would have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we'd have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                    case 1:
                        sp1 = "yo no habría " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I would not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I wouldn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú no habrías " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you would not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you wouldn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él no habría " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he would not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he wouldn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella no habría " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she would not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she wouldn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso no habría " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it would not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it wouldn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos no habrían " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they would not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they wouldn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros no habríamos " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we would not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we wouldn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenWouldPerfCont4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo habría estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I would have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú habrías estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you would have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él habría estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he would have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella habría estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she would have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso habría estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it would have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos habrían estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they would have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros habríamos estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we would have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo no habría estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I wouldn't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú no habrías estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you wouldn't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él no habría estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he wouldn't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella no habría estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she wouldn't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso no habría estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it wouldn't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos no habrían estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they wouldn't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros no habríamos estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we wouldn't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023

    //COULD
    public void GenCouldSimp4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo podría " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I could " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú podrías " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you could " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él podría " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he could " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella podría " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she could " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso podría " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it could " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos podrían " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they could " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros podríamos " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we could " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no podría " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I " + "couldn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + "no podrías " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you " + "couldn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + "no podría " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he " + "couldn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + "no podría " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she " + "couldn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + "no podría " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it " + "couldn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + "no podrían " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they " + "couldn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + "no podríamos " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we " + "couldn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenCouldCont4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo podría estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I could be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I could be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú podrías estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you could be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you could be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él podría estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he could be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he could be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella podría estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she could be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she could be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso podría estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it could be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it could be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos podrían estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they could be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they could be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros podríamos estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we could be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we could be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no podría estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I " + "could not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I " + "couldn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + "no podrías estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you " + "could not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you " + "couldn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + "no podría estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he " + "could not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he " + "couldn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + "no podría estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she " + "could not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she " + "couldn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + "no podría estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it " + "could not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it " + "couldn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + "no podrían estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they " + "could not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they " + "couldn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + "no podríamos estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we " + "could not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52= "we " + "couldn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenCouldPerf4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo pude haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I could have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I could have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú pudiste haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you could have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you could have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él pudo haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he could have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he could have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella pudiese haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she could have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she could have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso pudiese haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it could have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it could have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos pudiesen haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they could have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they could have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros pudiesemos haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we could have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we could have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no pude haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I " + "could not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I " + "couldn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + "no pudiste haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you " + "could not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you " + "couldn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + "no pudo haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he " + "could not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he " + "couldn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + "no pudiese haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she " + "could not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she " + "couldn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + "no pudiese haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it " + "could not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it " + "couldn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + "no pudiesen haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they " + "could not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they " + "couldn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + "no pudiesemos haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we " + "could not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we " + "couldn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenCouldPerfCont4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo podría haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I could have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú podrías haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you could have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él podría haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he could have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella podría haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she could have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso podría haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it could have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos podrían haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they could have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros podríamos haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we could have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no podría haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I " + "couldn't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + "no podrías haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you " + "couldn't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + "no podría haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he " + "couldn't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + "no podría haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she " + "couldn't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + "no podría haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it " + "couldn't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + "no podrían haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they " + "couldn't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + "no podríamos haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we " + "couldn't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023

    // MIGHT
    public void GenMightSimp4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo quizá " + v1[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I might " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú quizá " + v2[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you might " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él quizá " + v3[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he might " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella quizá " + v3[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she might " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso quizá" + v3[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it might " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos quizá " + v4[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they might " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros quizá " + v5nos[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we might " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo quizá no " + v1[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I might not " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú quizá no " + v2[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you might not " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él quizá no " + v3[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he might not " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella quizá no " + v3[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she might not " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso quizá no " + v3[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it might not " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos quizá no " + v4[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they might not " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros quizá no " + v5nos[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we might not " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenMightCont4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo quizá esté " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I might be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I might be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú quizá estés " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you might be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you might be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él quizá esté " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he might be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he might be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella quizá esté " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she might be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she might be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso quizá esté " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it might be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it might be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos quizá estén " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they might be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they might be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros quizá estemos " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we might be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we might be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "quizá no esté " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I " + "might not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I " + "mightn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + "quizá no estés " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you " + "might not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you " + "mightn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + "quizá no esté  " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he " + "might not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he " + "mightn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + "quizá no esté " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she " + "might not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she " + "mightn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + "quizá no esté " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it " + "might not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it " + "mightn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + "quizá no estén " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they " + "might not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they " + "mightn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + "quizá no estémos " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we " + "might not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we " + "mightn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenMightPerf4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo quizá haya " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I might have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I might have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú quizá hayas " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you might have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you might have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él quizá haya " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he might have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he might have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella quizá haya " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she might have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she might have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso quizá haya " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it might have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it might have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos quizá hayan " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they might have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they might have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros quizá hayamos " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we might have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we might have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo quizá no haya " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I might not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I mightn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú quizá no hayas " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you might not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you mightn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él quizá no haya " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he might not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he mightn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella quizá no haya " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she might not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she mightn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso quizá no haya " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it might not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it might not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos quizá no hayan " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they might not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they mightn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros quizá no hayamos " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we might not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we mightn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenMightPerfCont4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo quizá haya estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I might have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú quizá hayas estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you might have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él quizá haya estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he might have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella quizá haya estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she might have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso quizá haya estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it might have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos quizá hayan estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they might have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros quizá hayamos estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we might have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo quizá no haya estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I might not have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú quizá no hayas estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you might not have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él quizá no haya estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he might not have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella quizá no haya estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she might not have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso quizá no haya estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it might not have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos quizá no hayan estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they might not have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros quizá no hayamos estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we might not have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023

    //SHOULD
    public void GenShouldSimp4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo debería " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I should " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú deberías " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you should " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él debería " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he should " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella debería " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she should " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso debería " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it should " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos deberían " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they should " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros deberíamos " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we should " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no debería " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I " + "shouldn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + "no deberías " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you " + "shouldn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + "no debería " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he " + "shouldn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + "no debería " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she " + "shouldn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + "no debería " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it " + "shouldn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + "no deberían " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they " + "shouldn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + "no deberíamos " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we " + "shouldn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenShouldCont4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo debería estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I should be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I'd be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú deberías estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you should be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you'd be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él debería estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he should be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he'd be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella debería estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she should be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she'd be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso debería estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it should be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it'd be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos deberían estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they should be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they'd be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros deberíamos estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we should be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we'd be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                    case 1:
                        sp1 = "yo " + "no debería estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I " + "should not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I " + "shouldn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + "no deberías estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you " + "should not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you " + "shouldn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + "no debería estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he " + "should not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he " + "shouldn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + "no debería estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she " + "should not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she " + "shouldn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + "no debería estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it " + "should not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it " + "shouldn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + "no deberían estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they " + "should not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they " + "shouldn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + "no deberíamos estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we " + "should not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we " + "shouldn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenShouldPerf4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo debería haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I should have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I'd have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú deberías haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you should have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you'd have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él debería haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he should have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he'd have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella debería haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she should have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she = "she'd have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso debería haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it should have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it'd have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos deberían haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they should have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they'd have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros deberíamos haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we should have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we'd have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no debería haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I " + "should not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I " + "shouldn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + "no deberías haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you " + "should not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you " + "shouldn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + "no debería haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he " + "should not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he " + "shouldn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + "no debería haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she " + "should not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she " + "shouldn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + "no debería haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it " + "should not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it " + "shouldn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + "no deberían haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they " + "should not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they " + "shouldn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + "no deberíamos haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we " + "should not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we " + "shouldn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenShouldPerfCont4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo debería haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I should have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú deberías haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you should have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él debería haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he should have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella debería haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she should have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso debería haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it should have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos deberían haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they should have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros deberíamos haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we should have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no debería haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I " + "shouldn't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + "no deberías haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you " + "shouldn't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + "no debería haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he " + "shouldn't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + "no debería haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she " + "shouldn't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + "no debería haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it " + "shouldn't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + "no deberían haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they " + "shouldn't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + "no deberíamos haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we " + "shouldn't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023

    //Can
    public void GenCanSimp4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo puedo " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I can " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú puedes " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you can " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él puede " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he can " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella puede " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she can " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso puede " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it can " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos pueden " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they can " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros podemos " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we can " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no puedo " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I " + "can't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + "no puedes " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you " + "can't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + "no puede " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he " + "can't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + "no puede " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she " + "can't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + "no puede " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it " + "can't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + "no pueden " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they " + "can't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + "no podemos " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we " + "can't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenCanCont4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo puedo estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I can be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I can be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú puedes estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you can be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you can be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él puede estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he can be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he can be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella puede " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she can be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she can be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso puede " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it can be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it can be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos pueden estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they can be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they can be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros podemos " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we can be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we can be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no puedo estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I " + "cannot be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I " + "can't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + "no puedes estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you " + "cannot be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you " + "can't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + "no puede estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he " + "cannot be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he " + "can't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + "no puede estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she " + "cannot be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she " + "can't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + "no puede estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it " + "cannot be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it " + "can't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + "no pueden estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they " + "cannot be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they " + "can't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + "no podemos estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we " + "cannot be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we " + "can't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023

    //Must
    public void GenMustSimp4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo debo " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I must " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú debés " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you must " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él debe " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he must " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella debe " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she must " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso debe " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it must " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos deben " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they must " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros debemos " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we must " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no debo " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I " + "mustn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + "no debés " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you " + "mustn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + "no debe " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he " + "mustn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + "no debe " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she " + "mustn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + "no debe " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it " + "mustn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + "no deben " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they " + "mustn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + "no debemos " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we " + "mustn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenMustCont4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo debo estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I must be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I must be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú debés estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you must be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you must be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él debe estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he must be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he must be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella debe estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she must be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she must be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso debe estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it must be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it must be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos deben estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they must be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they must be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros debemos estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we must be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we must be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no debo estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I " + "must not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I " + "mustn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + "no debés estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you " + "must not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you " + "mustn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + "no debe estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he " + "must not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he " + "mustn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + "no debe estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she " + "must not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she " + "mustn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + "no debe estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it " + "must not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it " + "mustn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + "no deben estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they " + "must not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they " + "mustn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + "no debemos estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we " + "must not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we " + "mustn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023

    public void GenAbleTo4(){
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo " + "soy capaz de " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I am " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I'm " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + "eres capaz de " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you are " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you're " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + "es capaz de " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he is " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he's " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + "es capaz de " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she is " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she's " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + "es capaz de " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it is " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it's " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + "son capaz de " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they are " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they're " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + "somos capaz de " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we are " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we're " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                    case 1:
                        sp1 = "yo no " + "soy capaz de " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I am not " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I'm not " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú no " + "eres capaz de " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you are not " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you're not " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él no " + "es capaz de " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he is not " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he's not " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella no " + "es capaz de " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she is not " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she's not " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso no " + "es capaz de " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it is not " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it's not " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos no " + "son capaz de " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they are not " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they're not " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros no " + "somos capaz de " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we are not " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we're not " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;

                }
            }
        }
    }//PD FEB 2023

    //for to dificultad 4 SOlO SPECIAL
    public void forSubTo4() {
        int rand = (int) (Math.random() * verbs.length);
        Pasts2 pas = new Pasts2();
        String temp = verbs[rand];
        int rn1 = (int) (Math.random() * 6);
        int rn2 = (int) (Math.random() * 5);
        int neg = (int) (Math.random() * 2);
        randstarter();
        int radv = (int) (Math.random() * frequadv.length);

        //subject in eng
        String ftsj[] = {
                "for me to ", "for you to ", "for him to ", "for her to ", "for it to ",
                "for them to ", "for us to "
        };

        //subject in spanish
        String ftsjs[] = {
                "para que yo ", "para que tú ", "para que él ", "para que ella ",
                "para que eso ", "para que ellos ", "para que nosotros "
        };

        //subject in eng negative
        String ftsjn[] = {
                "for me not to ", "for you not to ", "for him not to ", "for her not to ",
                "for it not to ", "for them not to ", "for us not to "
        };

        //subject in spanish negative
        String ftsjsn[] = {
                "para que yo no ", "para que tú no ", "para que él no ", "para que ella no ",
                "para que eso no ", "para que ellos no ", "para que nosotros no "
        };

        switch (temp) {
            case "react ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + sodete[rand1]  + reaccionarspecial[rd1][rd1s] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + sodet[rand1]  + reactspecial[rd1][rd1s] + frequadv[radv];

                        sp2 = ftsjs[1] + v2[rand] + sodete[rand1]  + reaccionarspecial[rd1][rd1s] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + sodet[rand1]  + reactspecial[rd1][rd1s] + frequadv[radv];

                        sp3 = ftsjs[2] + v3[rand] + sodete[rand1]  + reaccionarspecial[rd1][rd1s] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs3[rand] + sodet[rand1]  + reactspecial[rd1][rd1s] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3[rand] + sodete[rand1]  + reaccionarspecial[rd1][rd1s] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs3[rand] + sodet[rand1]  + reactspecial[rd1][rd1s] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3[rand] + sodete[rand1]  + reaccionarspecial[rd1][rd1s] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs3[rand] + sodet[rand1]  + reactspecial[rd1][rd1s] + frequadv[radv];

                        sp4 = ftsjs[5] + v4[rand] + sodete[rand1]  + reaccionarspecial[rd1][rd1s] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + sodet[rand1]  + reactspecial[rd1][rd1s] + frequadv[radv];

                        sp5 = ftsjs[6] + v5nos[rand] + sodete[rand1]  + reaccionarspecial[rd1][rd1s] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + sodet[rand1]  + reactspecial[rd1][rd1s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + sodete[rand1]  + reaccionarspecial[rd1][rd1s] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + sodet[rand1]  + reactspecial[rd1][rd1s] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2[rand] + sodete[rand1]  + reaccionarspecial[rd1][rd1s] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + sodet[rand1]  + reactspecial[rd1][rd1s] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3[rand] + sodete[rand1]  + reaccionarspecial[rd1][rd1s] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + sodet[rand1]  + reactspecial[rd1][rd1s] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3[rand] + sodete[rand1]  + reaccionarspecial[rd1][rd1s] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + sodet[rand1]  + reactspecial[rd1][rd1s] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3[rand] + sodete[rand1]  + reaccionarspecial[rd1][rd1s] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + sodet[rand1]  + reactspecial[rd1][rd1s] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4[rand] + sodete[rand1]  + reaccionarspecial[rd1][rd1s] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + sodet[rand1]  + reactspecial[rd1][rd1s] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5nos[rand] + sodete[rand1]  + reaccionarspecial[rd1][rd1s] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + sodet[rand1]  + reactspecial[rd1][rd1s] + frequadv[radv];
                        break;
                }
                break;

            case "anticipate ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + soacer[rand2]  + anticiparspecial[rd2][rd2s] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + soappr[rand2] + anticipatespecial[rd2][rd2s] + frequadv[radv];

                        sp2 = ftsjs[1] + v2[rand] + soacer[rand2]  + anticiparspecial[rd2][rd2s] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + soappr[rand2] + anticipatespecial[rd2][rd2s] + frequadv[radv];

                        sp3 = ftsjs[2] + v3[rand] + soacer[rand2]  + anticiparspecial[rd2][rd2s] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs3[rand] + soappr[rand2] + anticipatespecial[rd2][rd2s] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3[rand] + soacer[rand2]  + anticiparspecial[rd2][rd2s] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs3[rand] + soappr[rand2] + anticipatespecial[rd2][rd2s] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3[rand] + soacer[rand2]  + anticiparspecial[rd2][rd2s] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs3[rand] + soappr[rand2] + anticipatespecial[rd2][rd2s] + frequadv[radv];

                        sp4 = ftsjs[5] + v4[rand] + soacer[rand2]  + anticiparspecial[rd2][rd2s] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + soappr[rand2] + anticipatespecial[rd2][rd2s] + frequadv[radv];

                        sp5 = ftsjs[6] + v5nos[rand] + soacer[rand2]  + anticiparspecial[rd2][rd2s] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + soappr[rand2] + anticipatespecial[rd2][rd2s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + soacer[rand2]  + anticiparspecial[rd2][rd2s] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + soappr[rand2] + anticipatespecial[rd2][rd2s] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2[rand] + soacer[rand2]  + anticiparspecial[rd2][rd2s] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + soappr[rand2] + anticipatespecial[rd2][rd2s] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3[rand] + soacer[rand2]  + anticiparspecial[rd2][rd2s] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + soappr[rand2] + anticipatespecial[rd2][rd2s] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3[rand] + soacer[rand2]  + anticiparspecial[rd2][rd2s] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + soappr[rand2] + anticipatespecial[rd2][rd2s] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3[rand] + soacer[rand2]  + anticiparspecial[rd2][rd2s] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + soappr[rand2] + anticipatespecial[rd2][rd2s] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4[rand] + soacer[rand2]  + anticiparspecial[rd2][rd2s] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + soappr[rand2] + anticipatespecial[rd2][rd2s] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5nos[rand] + soacer[rand2]  + anticiparspecial[rd2][rd2s] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + soappr[rand2] + anticipatespecial[rd2][rd2s] + frequadv[radv];
                        break;
                }
                break;

            case "assume ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + socrecer[rand3]  + asumirspecial[rd3][rd3s] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + sogrow[rand3]  + assumespecial[rd3][rd3s] + frequadv[radv];

                        sp2 = ftsjs[1] + v2[rand] + socrecer[rand3]  + asumirspecial[rd3][rd3s] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + sogrow[rand3]  + assumespecial[rd3][rd3s] + frequadv[radv];

                        sp3 = ftsjs[2] + v3[rand] + socrecer[rand3]  + asumirspecial[rd3][rd3s] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs3[rand] + sogrow[rand3]  + assumespecial[rd3][rd3s] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3[rand] + socrecer[rand3]  + asumirspecial[rd3][rd3s] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs3[rand] + sogrow[rand3]  + assumespecial[rd3][rd3s] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3[rand] + socrecer[rand3]  + asumirspecial[rd3][rd3s] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs3[rand] + sogrow[rand3]  + assumespecial[rd3][rd3s] + frequadv[radv];

                        sp4 = ftsjs[5] + v4[rand] + socrecer[rand3]  + asumirspecial[rd3][rd3s] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + sogrow[rand3]  + assumespecial[rd3][rd3s] + frequadv[radv];

                        sp5 = ftsjs[6] + v5nos[rand] + socrecer[rand3]  + asumirspecial[rd3][rd3s] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + sogrow[rand3]  + assumespecial[rd3][rd3s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + socrecer[rand3]  + asumirspecial[rd3][rd3s] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + sogrow[rand3]  + assumespecial[rd3][rd3s] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2[rand] + socrecer[rand3]  + asumirspecial[rd3][rd3s] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + sogrow[rand3]  + assumespecial[rd3][rd3s] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3[rand] + socrecer[rand3]  + asumirspecial[rd3][rd3s] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + sogrow[rand3]  + assumespecial[rd3][rd3s] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3[rand] + socrecer[rand3]  + asumirspecial[rd3][rd3s] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + sogrow[rand3]  + assumespecial[rd3][rd3s] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3[rand] + socrecer[rand3]  + asumirspecial[rd3][rd3s] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + sogrow[rand3]  + assumespecial[rd3][rd3s] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4[rand] + socrecer[rand3]  + asumirspecial[rd3][rd3s] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + sogrow[rand3]  + assumespecial[rd3][rd3s] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5nos[rand] + socrecer[rand3]  + asumirspecial[rd3][rd3s] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + sogrow[rand3]  + assumespecial[rd3][rd3s] + frequadv[radv];
                        break;
                }
                break;

            case "engage ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + somejo[rand4]  + comprometerspecial[rd4][rd4s] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + soimpr[rand4]  + engagespecial[rd4][rd4s] + frequadv[radv];

                        sp2 = ftsjs[1] + v2[rand] + somejo[rand4]  + comprometerspecial[rd4][rd4s] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + soimpr[rand4]  + engagespecial[rd4][rd4s] + frequadv[radv];

                        sp3 = ftsjs[2] + v3[rand] + somejo[rand4]  + comprometerspecial[rd4][rd4s] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs3[rand] + soimpr[rand4]  + engagespecial[rd4][rd4s] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3[rand] + somejo[rand4]  + comprometerspecial[rd4][rd4s] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs3[rand] + soimpr[rand4]  + engagespecial[rd4][rd4s] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3[rand] + somejo[rand4]  + comprometerspecial[rd4][rd4s] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs3[rand] + soimpr[rand4]  + engagespecial[rd4][rd4s] + frequadv[radv];

                        sp4 = ftsjs[5] + v4[rand] + somejo[rand4]  + comprometerspecial[rd4][rd4s] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + soimpr[rand4]  + engagespecial[rd4][rd4s] + frequadv[radv];

                        sp5 = ftsjs[6] + v5nos[rand] + somejo[rand4]  + comprometerspecial[rd4][rd4s] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + soimpr[rand4]  + engagespecial[rd4][rd4s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + somejo[rand4]  + comprometerspecial[rd4][rd4s] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + soimpr[rand4]  + engagespecial[rd4][rd4s] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2[rand] + somejo[rand4]  + comprometerspecial[rd4][rd4s] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + soimpr[rand4]  + engagespecial[rd4][rd4s] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3[rand] + somejo[rand4]  + comprometerspecial[rd4][rd4s] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + soimpr[rand4]  + engagespecial[rd4][rd4s] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3[rand] + somejo[rand4]  + comprometerspecial[rd4][rd4s] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + soimpr[rand4]  + engagespecial[rd4][rd4s] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3[rand] + somejo[rand4]  + comprometerspecial[rd4][rd4s] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + soimpr[rand4]  + engagespecial[rd4][rd4s] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4[rand] + somejo[rand4]  + comprometerspecial[rd4][rd4s] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + soimpr[rand4]  + engagespecial[rd4][rd4s] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5nos[rand] + somejo[rand4]  + comprometerspecial[rd4][rd4s] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + soimpr[rand4]  + engagespecial[rd4][rd4s] + frequadv[radv];
                        break;
                }
                break;

            case "intend ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + socomen[rand5]  + intentarspecial[rd5][rd5s] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + sobegin[rand5]  + intendspecial[rd5][rd5s] + frequadv[radv];

                        sp2 = ftsjs[1] + v2[rand] + socomen[rand5]  + intentarspecial[rd5][rd5s] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + sobegin[rand5]  + intendspecial[rd5][rd5s] + frequadv[radv];

                        sp3 = ftsjs[2] + v3[rand] + socomen[rand5]  + intentarspecial[rd5][rd5s] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs3[rand] + sobegin[rand5]  + intendspecial[rd5][rd5s] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3[rand] + socomen[rand5]  + intentarspecial[rd5][rd5s] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs3[rand] + sobegin[rand5]  + intendspecial[rd5][rd5s] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3[rand] + socomen[rand5]  + intentarspecial[rd5][rd5s] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs3[rand] + sobegin[rand5]  + intendspecial[rd5][rd5s] + frequadv[radv];

                        sp4 = ftsjs[5] + v4[rand] + socomen[rand5]  + intentarspecial[rd5][rd5s] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + sobegin[rand5]  + intendspecial[rd5][rd5s] + frequadv[radv];

                        sp5 = ftsjs[6] + v5nos[rand] + socomen[rand5]  + intentarspecial[rd5][rd5s] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + sobegin[rand5]  + intendspecial[rd5][rd5s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + socomen[rand5]  + intentarspecial[rd5][rd5s] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + sobegin[rand5]  + intendspecial[rd5][rd5s] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2[rand] + socomen[rand5]  + intentarspecial[rd5][rd5s] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + sobegin[rand5]  + intendspecial[rd5][rd5s] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3[rand] + socomen[rand5]  + intentarspecial[rd5][rd5s] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + sobegin[rand5]  + intendspecial[rd5][rd5s] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3[rand] + socomen[rand5]  + intentarspecial[rd5][rd5s] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + sobegin[rand5]  + intendspecial[rd5][rd5s] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3[rand] + socomen[rand5]  + intentarspecial[rd5][rd5s] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + sobegin[rand5]  + intendspecial[rd5][rd5s] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4[rand] + socomen[rand5]  + intentarspecial[rd5][rd5s] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + sobegin[rand5]  + intendspecial[rd5][rd5s] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5nos[rand] + socomen[rand5]  + intentarspecial[rd5][rd5s] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + sobegin[rand5]  + intendspecial[rd5][rd5s] + frequadv[radv];
                        break;
                }
                break;

            case "relate ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + socontinu[rand6]  + relacionarspecial[rd6][rd6s] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + soconti[rand6]  + relatespecial[rd6][rd6s]  + frequadv[radv];

                        sp2 = ftsjs[1] + v2[rand] + socontinu[rand6]  + relacionarspecial[rd6][rd6s] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + soconti[rand6]  + relatespecial[rd6][rd6s]  + frequadv[radv];

                        sp3 = ftsjs[2] + v3[rand] + socontinu[rand6]  + relacionarspecial[rd6][rd6s] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs3[rand] + soconti[rand6]  + relatespecial[rd6][rd6s]  + frequadv[radv];

                        sp3ella = ftsjs[3] + v3[rand] + socontinu[rand6]  + relacionarspecial[rd6][rd6s] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs3[rand] + soconti[rand6]  + relatespecial[rd6][rd6s]  + frequadv[radv];

                        sp3eso = ftsjs[4] + v3[rand] + socontinu[rand6]  + relacionarspecial[rd6][rd6s] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs3[rand] + soconti[rand6]  + relatespecial[rd6][rd6s]  + frequadv[radv];

                        sp4 = ftsjs[5] + v4[rand] + socontinu[rand6]  + relacionarspecial[rd6][rd6s] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + soconti[rand6]  + relatespecial[rd6][rd6s]  + frequadv[radv];

                        sp5 = ftsjs[6] + v5nos[rand] + socontinu[rand6]  + relacionarspecial[rd6][rd6s] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + soconti[rand6]  + relatespecial[rd6][rd6s]  + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + socontinu[rand6]  + relacionarspecial[rd6][rd6s] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + soconti[rand6]  + relatespecial[rd6][rd6s]  + frequadv[radv];

                        sp2 = ftsjsn[1] + v2[rand] + socontinu[rand6]  + relacionarspecial[rd6][rd6s] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + soconti[rand6]  + relatespecial[rd6][rd6s]  + frequadv[radv];

                        sp3 = ftsjsn[2] + v3[rand] + socontinu[rand6]  + relacionarspecial[rd6][rd6s] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + soconti[rand6]  + relatespecial[rd6][rd6s]  + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3[rand] + socontinu[rand6]  + relacionarspecial[rd6][rd6s] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + soconti[rand6]  + relatespecial[rd6][rd6s]  + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3[rand] + socontinu[rand6]  + relacionarspecial[rd6][rd6s] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + soconti[rand6]  + relatespecial[rd6][rd6s]  + frequadv[radv];

                        sp4 = ftsjsn[5] + v4[rand] + socontinu[rand6]  + relacionarspecial[rd6][rd6s] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + soconti[rand6]  + relatespecial[rd6][rd6s]  + frequadv[radv];

                        sp5 = ftsjsn[6] + v5nos[rand] + socontinu[rand6]  + relacionarspecial[rd6][rd6s] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + soconti[rand6]  + relatespecial[rd6][rd6s]  + frequadv[radv];
                        break;
                }
                break;

            case "settle ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + soescri[rand7]  + resolverspecial[rd7][rd7s] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + sowrite[rand7]  + settlespecial[rd7][rd7s] + frequadv[radv];

                        sp2 = ftsjs[1] + v2[rand] + soescri[rand7]  + resolverspecial[rd7][rd7s] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + sowrite[rand7]  + settlespecial[rd7][rd7s] + frequadv[radv];

                        sp3 = ftsjs[2] + v3[rand] + soescri[rand7]  + resolverspecial[rd7][rd7s] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs3[rand] + sowrite[rand7]  + settlespecial[rd7][rd7s] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3[rand] + soescri[rand7]  + resolverspecial[rd7][rd7s] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs3[rand] + sowrite[rand7]  + settlespecial[rd7][rd7s] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3[rand] + soescri[rand7]  + resolverspecial[rd7][rd7s] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs3[rand] + sowrite[rand7]  + settlespecial[rd7][rd7s] + frequadv[radv];

                        sp4 = ftsjs[5] + v4[rand] + soescri[rand7]  + resolverspecial[rd7][rd7s] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + sowrite[rand7]  + settlespecial[rd7][rd7s] + frequadv[radv];

                        sp5 = ftsjs[6] + v5nos[rand] + soescri[rand7]  + resolverspecial[rd7][rd7s] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + sowrite[rand7]  + settlespecial[rd7][rd7s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + soescri[rand7]  + resolverspecial[rd7][rd7s] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + sowrite[rand7]  + settlespecial[rd7][rd7s] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2[rand] + soescri[rand7]  + resolverspecial[rd7][rd7s] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + sowrite[rand7]  + settlespecial[rd7][rd7s] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3[rand] + soescri[rand7]  + resolverspecial[rd7][rd7s] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + sowrite[rand7]  + settlespecial[rd7][rd7s] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3[rand] + soescri[rand7]  + resolverspecial[rd7][rd7s] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + sowrite[rand7]  + settlespecial[rd7][rd7s] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3[rand] + soescri[rand7]  + resolverspecial[rd7][rd7s] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + sowrite[rand7]  + settlespecial[rd7][rd7s] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4[rand] + soescri[rand7]  + resolverspecial[rd7][rd7s] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + sowrite[rand7]  + settlespecial[rd7][rd7s] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5nos[rand] + soescri[rand7]  + resolverspecial[rd7][rd7s] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + sowrite[rand7]  + settlespecial[rd7][rd7s] + frequadv[radv];
                        break;
                }
                break;

            case "owe ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + sologr[rand8]  + deberspecial[rd8][rd8s] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + soachiv[rand8]  + owespecial[rd8][rd8s] + frequadv[radv];

                        sp2 = ftsjs[1] + v2[rand] + sologr[rand8]  + deberspecial[rd8][rd8s] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + soachiv[rand8]  + owespecial[rd8][rd8s] + frequadv[radv];

                        sp3 = ftsjs[2] + v3[rand] + sologr[rand8]  + deberspecial[rd8][rd8s] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs3[rand] + soachiv[rand8]  + owespecial[rd8][rd8s] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3[rand] + sologr[rand8]  + deberspecial[rd8][rd8s] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs3[rand] + soachiv[rand8]  + owespecial[rd8][rd8s] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3[rand] + sologr[rand8]  + deberspecial[rd8][rd8s] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs3[rand] + soachiv[rand8]  + owespecial[rd8][rd8s] + frequadv[radv];

                        sp4 = ftsjs[5] + v4[rand] + sologr[rand8]  + deberspecial[rd8][rd8s] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + soachiv[rand8]  + owespecial[rd8][rd8s] + frequadv[radv];

                        sp5 = ftsjs[6] + v5nos[rand] + sologr[rand8]  + deberspecial[rd8][rd8s] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + soachiv[rand8]  + owespecial[rd8][rd8s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + sologr[rand8]  + deberspecial[rd8][rd8s] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + soachiv[rand8]  + owespecial[rd8][rd8s] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2[rand] + sologr[rand8]  + deberspecial[rd8][rd8s] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + soachiv[rand8]  + owespecial[rd8][rd8s] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3[rand] + sologr[rand8]  + deberspecial[rd8][rd8s] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + soachiv[rand8]  + owespecial[rd8][rd8s] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3[rand] + sologr[rand8]  + deberspecial[rd8][rd8s] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + soachiv[rand8]  + owespecial[rd8][rd8s] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3[rand] + sologr[rand8]  + deberspecial[rd8][rd8s] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + soachiv[rand8]  + owespecial[rd8][rd8s] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4[rand] + sologr[rand8]  + deberspecial[rd8][rd8s] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + soachiv[rand8]  + owespecial[rd8][rd8s] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5nos[rand] + sologr[rand8]  + deberspecial[rd8][rd8s] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + soachiv[rand8]  + owespecial[rd8][rd8s] + frequadv[radv];
                        break;
                }
                break;

            case "confirm ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + sodiscu[rand9] + confirmarspecial[rd9][rd9s] +   advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + sodisc[rand9]  + confirmspecial[rd9][rd9s]  + frequadv[radv];

                        sp2 = ftsjs[1] + v2[rand] + sodiscu[rand9] + confirmarspecial[rd9][rd9s] +   advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + sodisc[rand9]  + confirmspecial[rd9][rd9s]  + frequadv[radv];

                        sp3 = ftsjs[2] + v3[rand] + sodiscu[rand9] + confirmarspecial[rd9][rd9s] +   advfrequ[radv];
                        eng3 = ftsj[2] + verbs3[rand] + sodisc[rand9]  + confirmspecial[rd9][rd9s]  + frequadv[radv];

                        sp3ella = ftsjs[3] + v3[rand] + sodiscu[rand9] + confirmarspecial[rd9][rd9s] +   advfrequ[radv];
                        eng3she = ftsj[3] + verbs3[rand] + sodisc[rand9]  + confirmspecial[rd9][rd9s]  + frequadv[radv];

                        sp3eso = ftsjs[4] + v3[rand] + sodiscu[rand9] + confirmarspecial[rd9][rd9s] +   advfrequ[radv];
                        sp3it = ftsj[4] + verbs3[rand] + sodisc[rand9]  + confirmspecial[rd9][rd9s]  + frequadv[radv];

                        sp4 = ftsjs[5] + v4[rand] + sodiscu[rand9] + confirmarspecial[rd9][rd9s] +   advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + sodisc[rand9]  + confirmspecial[rd9][rd9s]  + frequadv[radv];

                        sp5 = ftsjs[6] + v5nos[rand] + sodiscu[rand9] + confirmarspecial[rd9][rd9s] +   advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + sodisc[rand9]  + confirmspecial[rd9][rd9s]  + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + sodiscu[rand9] + confirmarspecial[rd9][rd9s] +   advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + sodisc[rand9]  + confirmspecial[rd9][rd9s]  + frequadv[radv];

                        sp2 = ftsjsn[1] + v2[rand] + sodiscu[rand9] + confirmarspecial[rd9][rd9s] +   advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + sodisc[rand9]  + confirmspecial[rd9][rd9s]  + frequadv[radv];

                        sp3 = ftsjsn[2] + v3[rand] + sodiscu[rand9] + confirmarspecial[rd9][rd9s] +   advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + sodisc[rand9]  + confirmspecial[rd9][rd9s]  + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3[rand] + sodiscu[rand9] + confirmarspecial[rd9][rd9s] +   advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + sodisc[rand9]  + confirmspecial[rd9][rd9s]  + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3[rand] + sodiscu[rand9] + confirmarspecial[rd9][rd9s] +   advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + sodisc[rand9]  + confirmspecial[rd9][rd9s]  + frequadv[radv];

                        sp4 = ftsjsn[5] + v4[rand] + sodiscu[rand9] + confirmarspecial[rd9][rd9s] +   advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + sodisc[rand9]  + confirmspecial[rd9][rd9s]  + frequadv[radv];

                        sp5 = ftsjsn[6] + v5nos[rand] + sodiscu[rand9] + confirmarspecial[rd9][rd9s] +   advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + sodisc[rand9]  + confirmspecial[rd9][rd9s]  + frequadv[radv];
                        break;
                }
                break;

            case "calculate ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + soresolv[rand10]  + calcularspecial[rd10][rd10s]  + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + sosolv[rand10] + calculatespecial[rd10][rd10s]  + frequadv[radv];

                        sp2 = ftsjs[1] + v2[rand] + soresolv[rand10]  + calcularspecial[rd10][rd10s]  + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + sosolv[rand10] + calculatespecial[rd10][rd10s]  + frequadv[radv];

                        sp3 = ftsjs[2] + v3[rand] + soresolv[rand10]  + calcularspecial[rd10][rd10s]  + advfrequ[radv];
                        eng3 = ftsj[2] + verbs3[rand] + sosolv[rand10] + calculatespecial[rd10][rd10s]  + frequadv[radv];

                        sp3ella = ftsjs[3] + v3[rand] + soresolv[rand10]  + calcularspecial[rd10][rd10s]  + advfrequ[radv];
                        eng3she = ftsj[3] + verbs3[rand] + sosolv[rand10] + calculatespecial[rd10][rd10s]  + frequadv[radv];

                        sp3eso = ftsjs[4] + v3[rand] + soresolv[rand10]  + calcularspecial[rd10][rd10s]  + advfrequ[radv];
                        sp3it = ftsj[4] + verbs3[rand] + sosolv[rand10] + calculatespecial[rd10][rd10s]  + frequadv[radv];

                        sp4 = ftsjs[5] + v4[rand] + soresolv[rand10]  + calcularspecial[rd10][rd10s]  + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + sosolv[rand10] + calculatespecial[rd10][rd10s]  + frequadv[radv];

                        sp5 = ftsjs[6] + v5nos[rand] + soresolv[rand10]  + calcularspecial[rd10][rd10s]  + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + sosolv[rand10] + calculatespecial[rd10][rd10s]  + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + soresolv[rand10]  + calcularspecial[rd10][rd10s]  + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + sosolv[rand10] + calculatespecial[rd10][rd10s]  + frequadv[radv];

                        sp2 = ftsjsn[1] + v2[rand] + soresolv[rand10]  + calcularspecial[rd10][rd10s]  + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + sosolv[rand10] + calculatespecial[rd10][rd10s]  + frequadv[radv];

                        sp3 = ftsjsn[2] + v3[rand] + soresolv[rand10]  + calcularspecial[rd10][rd10s]  + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + sosolv[rand10] + calculatespecial[rd10][rd10s]  + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3[rand] + soresolv[rand10]  + calcularspecial[rd10][rd10s]  + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + sosolv[rand10] + calculatespecial[rd10][rd10s]  + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3[rand] + soresolv[rand10]  + calcularspecial[rd10][rd10s]  + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + sosolv[rand10] + calculatespecial[rd10][rd10s]  + frequadv[radv];

                        sp4 = ftsjsn[5] + v4[rand] + soresolv[rand10]  + calcularspecial[rd10][rd10s]  + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + sosolv[rand10] + calculatespecial[rd10][rd10s]  + frequadv[radv];

                        sp5 = ftsjsn[6] + v5nos[rand] + soresolv[rand10]  + calcularspecial[rd10][rd10s]  + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + sosolv[rand10] + calculatespecial[rd10][rd10s]  + frequadv[radv];
                        break;
                }
                break;

            case "deliver ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + soinvert[rand11] + entregarspecial[rd11][rd11s]  + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + soinvst[rand11]  + deliverspecial[rd11][rd11s]  + frequadv[radv];

                        sp2 = ftsjs[1] + v2[rand] + soinvert[rand11] + entregarspecial[rd11][rd11s]  + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + soinvst[rand11]  + deliverspecial[rd11][rd11s]  + frequadv[radv];

                        sp3 = ftsjs[2] + v3[rand] + soinvert[rand11] + entregarspecial[rd11][rd11s]  + advfrequ[radv];
                        eng3 = ftsj[2] + verbs3[rand] + soinvst[rand11]  + deliverspecial[rd11][rd11s]  + frequadv[radv];

                        sp3ella = ftsjs[3] + v3[rand] + soinvert[rand11] + entregarspecial[rd11][rd11s]  + advfrequ[radv];
                        eng3she = ftsj[3] + verbs3[rand] + soinvst[rand11]  + deliverspecial[rd11][rd11s]  + frequadv[radv];

                        sp3eso = ftsjs[4] + v3[rand] + soinvert[rand11] + entregarspecial[rd11][rd11s]  + advfrequ[radv];
                        sp3it = ftsj[4] + verbs3[rand] + soinvst[rand11]  + deliverspecial[rd11][rd11s]  + frequadv[radv];

                        sp4 = ftsjs[5] + v4[rand] + soinvert[rand11] + entregarspecial[rd11][rd11s]  + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + soinvst[rand11]  + deliverspecial[rd11][rd11s]  + frequadv[radv];

                        sp5 = ftsjs[6] + v5nos[rand] + soinvert[rand11] + entregarspecial[rd11][rd11s]  + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + soinvst[rand11]  + deliverspecial[rd11][rd11s]  + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + soinvert[rand11] + entregarspecial[rd11][rd11s]  + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + soinvst[rand11]  + deliverspecial[rd11][rd11s]  + frequadv[radv];

                        sp2 = ftsjsn[1] + v2[rand] + soinvert[rand11] + entregarspecial[rd11][rd11s]  + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + soinvst[rand11]  + deliverspecial[rd11][rd11s]  + frequadv[radv];

                        sp3 = ftsjsn[2] + v3[rand] + soinvert[rand11] + entregarspecial[rd11][rd11s]  + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + soinvst[rand11]  + deliverspecial[rd11][rd11s]  + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3[rand] + soinvert[rand11] + entregarspecial[rd11][rd11s]  + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + soinvst[rand11]  + deliverspecial[rd11][rd11s]  + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3[rand] + soinvert[rand11] + entregarspecial[rd11][rd11s]  + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + soinvst[rand11]  + deliverspecial[rd11][rd11s]  + frequadv[radv];

                        sp4 = ftsjsn[5] + v4[rand] + soinvert[rand11] + entregarspecial[rd11][rd11s]  + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + soinvst[rand11]  + deliverspecial[rd11][rd11s]  + frequadv[radv];

                        sp5 = ftsjsn[6] + v5nos[rand] + soinvert[rand11] + entregarspecial[rd11][rd11s]  + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + soinvst[rand11]  + deliverspecial[rd11][rd11s]  + frequadv[radv];
                        break;
                }
                break;

            case "extend ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + soreducir[rand12] + extenderspecial[rd12][rd12s]  + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + soreduce[rand12]  + extendspecial[rd12][rd12s]  + frequadv[radv];

                        sp2 = ftsjs[1] + v2[rand] + soreducir[rand12] + extenderspecial[rd12][rd12s]  + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + soreduce[rand12]  + extendspecial[rd12][rd12s]  + frequadv[radv];

                        sp3 = ftsjs[2] + v3[rand] + soreducir[rand12] + extenderspecial[rd12][rd12s]  + advfrequ[radv];
                        eng3 = ftsj[2] + verbs3[rand] + soreduce[rand12]  + extendspecial[rd12][rd12s]  + frequadv[radv];

                        sp3ella = ftsjs[3] + v3[rand] + soreducir[rand12] + extenderspecial[rd12][rd12s]  + advfrequ[radv];
                        eng3she = ftsj[3] + verbs3[rand] + soreduce[rand12]  + extendspecial[rd12][rd12s]  + frequadv[radv];

                        sp3eso = ftsjs[4] + v3[rand] + soreducir[rand12] + extenderspecial[rd12][rd12s]  + advfrequ[radv];
                        sp3it = ftsj[4] + verbs3[rand] + soreduce[rand12]  + extendspecial[rd12][rd12s]  + frequadv[radv];

                        sp4 = ftsjs[5] + v4[rand] + soreducir[rand12] + extenderspecial[rd12][rd12s]  + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + soreduce[rand12]  + extendspecial[rd12][rd12s]  + frequadv[radv];

                        sp5 = ftsjs[6] + v5nos[rand] + soreducir[rand12] + extenderspecial[rd12][rd12s]  + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + soreduce[rand12]  + extendspecial[rd12][rd12s]  + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + soreducir[rand12] + extenderspecial[rd12][rd12s]  + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + soreduce[rand12]  + extendspecial[rd12][rd12s]  + frequadv[radv];

                        sp2 = ftsjsn[1] + v2[rand] + soreducir[rand12] + extenderspecial[rd12][rd12s]  + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + soreduce[rand12]  + extendspecial[rd12][rd12s]  + frequadv[radv];

                        sp3 = ftsjsn[2] + v3[rand] + soreducir[rand12] + extenderspecial[rd12][rd12s]  + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + soreduce[rand12]  + extendspecial[rd12][rd12s]  + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3[rand] + soreducir[rand12] + extenderspecial[rd12][rd12s]  + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + soreduce[rand12]  + extendspecial[rd12][rd12s]  + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3[rand] + soreducir[rand12] + extenderspecial[rd12][rd12s]  + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + soreduce[rand12]  + extendspecial[rd12][rd12s]  + frequadv[radv];

                        sp4 = ftsjsn[5] + v4[rand] + soreducir[rand12] + extenderspecial[rd12][rd12s]  + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + soreduce[rand12]  + extendspecial[rd12][rd12s]  + frequadv[radv];

                        sp5 = ftsjsn[6] + v5nos[rand] + soreducir[rand12] + extenderspecial[rd12][rd12s]  + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + soreduce[rand12]  + extendspecial[rd12][rd12s]  + frequadv[radv];
                        break;
                }
                break;

            case "investigate ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + sohablar[rand13] + investigarspecial[rd13][rd13s]  + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + sospeak[rand13]  + investigatespecial[rd13][rd13s]  + frequadv[radv];

                        sp2 = ftsjs[1] + v2[rand] + sohablar[rand13] + investigarspecial[rd13][rd13s]  + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + sospeak[rand13]  + investigatespecial[rd13][rd13s]  + frequadv[radv];

                        sp3 = ftsjs[2] + v3[rand] + sohablar[rand13] + investigarspecial[rd13][rd13s]  + advfrequ[radv];
                        eng3 = ftsj[2] + verbs3[rand] + sospeak[rand13]  + investigatespecial[rd13][rd13s]  + frequadv[radv];

                        sp3ella = ftsjs[3] + v3[rand] + sohablar[rand13] + investigarspecial[rd13][rd13s]  + advfrequ[radv];
                        eng3she = ftsj[3] + verbs3[rand] + sospeak[rand13]  + investigatespecial[rd13][rd13s]  + frequadv[radv];

                        sp3eso = ftsjs[4] + v3[rand] + sohablar[rand13] + investigarspecial[rd13][rd13s]  + advfrequ[radv];
                        sp3it = ftsj[4] + verbs3[rand] + sospeak[rand13]  + investigatespecial[rd13][rd13s]  + frequadv[radv];

                        sp4 = ftsjs[5] + v4[rand] + sohablar[rand13] + investigarspecial[rd13][rd13s]  + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + sospeak[rand13]  + investigatespecial[rd13][rd13s]  + frequadv[radv];

                        sp5 = ftsjs[6] + v5nos[rand] + sohablar[rand13] + investigarspecial[rd13][rd13s]  + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + sospeak[rand13]  + investigatespecial[rd13][rd13s]  + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + sohablar[rand13] + investigarspecial[rd13][rd13s]  + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + sospeak[rand13]  + investigatespecial[rd13][rd13s]  + frequadv[radv];

                        sp2 = ftsjsn[1] + v2[rand] + sohablar[rand13] + investigarspecial[rd13][rd13s]  + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + sospeak[rand13]  + investigatespecial[rd13][rd13s]  + frequadv[radv];

                        sp3 = ftsjsn[2] + v3[rand] + sohablar[rand13] + investigarspecial[rd13][rd13s]  + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + sospeak[rand13]  + investigatespecial[rd13][rd13s]  + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3[rand] + sohablar[rand13] + investigarspecial[rd13][rd13s]  + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + sospeak[rand13]  + investigatespecial[rd13][rd13s]  + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3[rand] + sohablar[rand13] + investigarspecial[rd13][rd13s]  + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + sospeak[rand13]  + investigatespecial[rd13][rd13s]  + frequadv[radv];

                        sp4 = ftsjsn[5] + v4[rand] + sohablar[rand13] + investigarspecial[rd13][rd13s]  + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + sospeak[rand13]  + investigatespecial[rd13][rd13s]  + frequadv[radv];

                        sp5 = ftsjsn[6] + v5nos[rand] + sohablar[rand13] + investigarspecial[rd13][rd13s]  + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + sospeak[rand13]  + investigatespecial[rd13][rd13s]  + frequadv[radv];
                        break;
                }
                break;

            case "qualify ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + soaplic[rand14] + calificarspecial[rd14][rd14s]  + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + soapply[rand14]  + qualifyspecial[rd14][rd14s]  + frequadv[radv];

                        sp2 = ftsjs[1] + v2[rand] + soaplic[rand14] + calificarspecial[rd14][rd14s]  + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + soapply[rand14]  + qualifyspecial[rd14][rd14s]  + frequadv[radv];

                        sp3 = ftsjs[2] + v3[rand] + soaplic[rand14] + calificarspecial[rd14][rd14s]  + advfrequ[radv];
                        eng3 = ftsj[2] + verbs3[rand] + soapply[rand14]  + qualifyspecial[rd14][rd14s]  + frequadv[radv];

                        sp3ella = ftsjs[3] + v3[rand] + soaplic[rand14] + calificarspecial[rd14][rd14s]  + advfrequ[radv];
                        eng3she = ftsj[3] + verbs3[rand] + soapply[rand14]  + qualifyspecial[rd14][rd14s]  + frequadv[radv];

                        sp3eso = ftsjs[4] + v3[rand] + soaplic[rand14] + calificarspecial[rd14][rd14s]  + advfrequ[radv];
                        sp3it = ftsj[4] + verbs3[rand] + soapply[rand14]  + qualifyspecial[rd14][rd14s]  + frequadv[radv];

                        sp4 = ftsjs[5] + v4[rand] + soaplic[rand14] + calificarspecial[rd14][rd14s]  + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + soapply[rand14]  + qualifyspecial[rd14][rd14s]  + frequadv[radv];

                        sp5 = ftsjs[6] + v5nos[rand] + soaplic[rand14] + calificarspecial[rd14][rd14s]  + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + soapply[rand14]  + qualifyspecial[rd14][rd14s]  + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + soaplic[rand14] + calificarspecial[rd14][rd14s]  + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + soapply[rand14]  + qualifyspecial[rd14][rd14s]  + frequadv[radv];

                        sp2 = ftsjsn[1] + v2[rand] + soaplic[rand14] + calificarspecial[rd14][rd14s]  + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + soapply[rand14]  + qualifyspecial[rd14][rd14s]  + frequadv[radv];

                        sp3 = ftsjsn[2] + v3[rand] + soaplic[rand14] + calificarspecial[rd14][rd14s]  + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + soapply[rand14]  + qualifyspecial[rd14][rd14s]  + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3[rand] + soaplic[rand14] + calificarspecial[rd14][rd14s]  + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + soapply[rand14]  + qualifyspecial[rd14][rd14s]  + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3[rand] + soaplic[rand14] + calificarspecial[rd14][rd14s]  + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + soapply[rand14]  + qualifyspecial[rd14][rd14s]  + frequadv[radv];

                        sp4 = ftsjsn[5] + v4[rand] + soaplic[rand14] + calificarspecial[rd14][rd14s]  + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + soapply[rand14]  + qualifyspecial[rd14][rd14s]  + frequadv[radv];

                        sp5 = ftsjsn[6] + v5nos[rand] + soaplic[rand14] + calificarspecial[rd14][rd14s]  + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + soapply[rand14]  + qualifyspecial[rd14][rd14s]  + frequadv[radv];
                        break;
                }
                break;

            case "celebrate ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + sorecom[rand15] + celebrarspecial[rd15][rd15s]  + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + sorec[rand15]  + celebratespecial[rd15][rd15s]  + frequadv[radv];

                        sp2 = ftsjs[1] + v2[rand] + sorecom[rand15] + celebrarspecial[rd15][rd15s]  + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + sorec[rand15]  + celebratespecial[rd15][rd15s]  + frequadv[radv];

                        sp3 = ftsjs[2] + v3[rand] + sorecom[rand15] + celebrarspecial[rd15][rd15s]  + advfrequ[radv];
                        eng3 = ftsj[2] + verbs3[rand] + sorec[rand15]  + celebratespecial[rd15][rd15s]  + frequadv[radv];

                        sp3ella = ftsjs[3] + v3[rand] + sorecom[rand15] + celebrarspecial[rd15][rd15s]  + advfrequ[radv];
                        eng3she = ftsj[3] + verbs3[rand] + sorec[rand15]  + celebratespecial[rd15][rd15s]  + frequadv[radv];

                        sp3eso = ftsjs[4] + v3[rand] + sorecom[rand15] + celebrarspecial[rd15][rd15s]  + advfrequ[radv];
                        sp3it = ftsj[4] + verbs3[rand] + sorec[rand15]  + celebratespecial[rd15][rd15s]  + frequadv[radv];

                        sp4 = ftsjs[5] + v4[rand] + sorecom[rand15] + celebrarspecial[rd15][rd15s]  + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + sorec[rand15]  + celebratespecial[rd15][rd15s]  + frequadv[radv];

                        sp5 = ftsjs[6] + v5nos[rand] + sorecom[rand15] + celebrarspecial[rd15][rd15s]  + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + sorec[rand15]  + celebratespecial[rd15][rd15s]  + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + sorecom[rand15] + celebrarspecial[rd15][rd15s]  + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + sorec[rand15]  + celebratespecial[rd15][rd15s]  + frequadv[radv];

                        sp2 = ftsjsn[1] + v2[rand] + sorecom[rand15] + celebrarspecial[rd15][rd15s]  + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + sorec[rand15]  + celebratespecial[rd15][rd15s]  + frequadv[radv];

                        sp3 = ftsjsn[2] + v3[rand] + sorecom[rand15] + celebrarspecial[rd15][rd15s]  + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + sorec[rand15]  + celebratespecial[rd15][rd15s]  + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3[rand] + sorecom[rand15] + celebrarspecial[rd15][rd15s]  + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + sorec[rand15]  + celebratespecial[rd15][rd15s]  + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3[rand] + sorecom[rand15] + celebrarspecial[rd15][rd15s]  + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + sorec[rand15]  + celebratespecial[rd15][rd15s]  + frequadv[radv];

                        sp4 = ftsjsn[5] + v4[rand] + sorecom[rand15] + celebrarspecial[rd15][rd15s]  + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + sorec[rand15]  + celebratespecial[rd15][rd15s]  + frequadv[radv];

                        sp5 = ftsjsn[6] + v5nos[rand] + sorecom[rand15] + celebrarspecial[rd15][rd15s]  + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + sorec[rand15]  + celebratespecial[rd15][rd15s]  + frequadv[radv];
                        break;
                }
                break;

            case "admit ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + sovariar[rand16]  + admitirspecial[rd16][rd16s]  + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + sovar[rand16]  + admitspecial[rd16][rd16s]  + frequadv[radv];

                        sp2 = ftsjs[1] + v2[rand] + sovariar[rand16]  + admitirspecial[rd16][rd16s]  + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + sovar[rand16]  + admitspecial[rd16][rd16s]  + frequadv[radv];

                        sp3 = ftsjs[2] + v3[rand] + sovariar[rand16]  + admitirspecial[rd16][rd16s]  + advfrequ[radv];
                        eng3 = ftsj[2] + verbs3[rand] + sovar[rand16]  + admitspecial[rd16][rd16s]  + frequadv[radv];

                        sp3ella = ftsjs[3] + v3[rand] + sovariar[rand16]  + admitirspecial[rd16][rd16s]  + advfrequ[radv];
                        eng3she = ftsj[3] + verbs3[rand] + sovar[rand16]  + admitspecial[rd16][rd16s]  + frequadv[radv];

                        sp3eso = ftsjs[4] + v3[rand] + sovariar[rand16]  + admitirspecial[rd16][rd16s]  + advfrequ[radv];
                        sp3it = ftsj[4] + verbs3[rand] + sovar[rand16]  + admitspecial[rd16][rd16s]  + frequadv[radv];

                        sp4 = ftsjs[5] + v4[rand] + sovariar[rand16]  + admitirspecial[rd16][rd16s]  + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + sovar[rand16]  + admitspecial[rd16][rd16s]  + frequadv[radv];

                        sp5 = ftsjs[6] + v5nos[rand] + sovariar[rand16]  + admitirspecial[rd16][rd16s]  + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + sovar[rand16]  + admitspecial[rd16][rd16s]  + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + sovariar[rand16]  + admitirspecial[rd16][rd16s]  + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + sovar[rand16]  + admitspecial[rd16][rd16s]  + frequadv[radv];

                        sp2 = ftsjsn[1] + v2[rand] + sovariar[rand16]  + admitirspecial[rd16][rd16s]  + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + sovar[rand16]  + admitspecial[rd16][rd16s]  + frequadv[radv];

                        sp3 = ftsjsn[2] + v3[rand] + sovariar[rand16]  + admitirspecial[rd16][rd16s]  + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + sovar[rand16]  + admitspecial[rd16][rd16s]  + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3[rand] + sovariar[rand16]  + admitirspecial[rd16][rd16s]  + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + sovar[rand16]  + admitspecial[rd16][rd16s]  + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3[rand] + sovariar[rand16]  + admitirspecial[rd16][rd16s]  + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + sovar[rand16]  + admitspecial[rd16][rd16s]  + frequadv[radv];

                        sp4 = ftsjsn[5] + v4[rand] + sovariar[rand16]  + admitirspecial[rd16][rd16s]  + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + sovar[rand16]  + admitspecial[rd16][rd16s]  + frequadv[radv];

                        sp5 = ftsjsn[6] + v5nos[rand] + sovariar[rand16]  + admitirspecial[rd16][rd16s]  + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + sovar[rand16]  + admitspecial[rd16][rd16s]  + frequadv[radv];
                        break;
                }
                break;

            case "adopt ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + sogenerar[rand17]   + adoptarspecial[rd17][rd17s]  + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + sogener[rand17]  + adoptspecial[rd17][rd17s]  + frequadv[radv];

                        sp2 = ftsjs[1] + v2[rand] + sogenerar[rand17]   + adoptarspecial[rd17][rd17s]  + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + sogener[rand17]  + adoptspecial[rd17][rd17s]  + frequadv[radv];

                        sp3 = ftsjs[2] + v3[rand] + sogenerar[rand17]   + adoptarspecial[rd17][rd17s]  + advfrequ[radv];
                        eng3 = ftsj[2] + verbs3[rand] + sogener[rand17]  + adoptspecial[rd17][rd17s]  + frequadv[radv];

                        sp3ella = ftsjs[3] + v3[rand] + sogenerar[rand17]   + adoptarspecial[rd17][rd17s]  + advfrequ[radv];
                        eng3she = ftsj[3] + verbs3[rand] + sogener[rand17]  + adoptspecial[rd17][rd17s]  + frequadv[radv];

                        sp3eso = ftsjs[4] + v3[rand] + sogenerar[rand17]   + adoptarspecial[rd17][rd17s]  + advfrequ[radv];
                        sp3it = ftsj[4] + verbs3[rand] + sogener[rand17]  + adoptspecial[rd17][rd17s]  + frequadv[radv];

                        sp4 = ftsjs[5] + v4[rand] + sogenerar[rand17]   + adoptarspecial[rd17][rd17s]  + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + sogener[rand17]  + adoptspecial[rd17][rd17s]  + frequadv[radv];

                        sp5 = ftsjs[6] + v5nos[rand] + sogenerar[rand17]   + adoptarspecial[rd17][rd17s]  + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + sogener[rand17]  + adoptspecial[rd17][rd17s]  + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + sogenerar[rand17]   + adoptarspecial[rd17][rd17s]  + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + sogener[rand17]  + adoptspecial[rd17][rd17s]  + frequadv[radv];

                        sp2 = ftsjsn[1] + v2[rand] + sogenerar[rand17]   + adoptarspecial[rd17][rd17s]  + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + sogener[rand17]  + adoptspecial[rd17][rd17s]  + frequadv[radv];

                        sp3 = ftsjsn[2] + v3[rand] + sogenerar[rand17]   + adoptarspecial[rd17][rd17s]  + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + sogener[rand17]  + adoptspecial[rd17][rd17s]  + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3[rand] + sogenerar[rand17]   + adoptarspecial[rd17][rd17s]  + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + sogener[rand17]  + adoptspecial[rd17][rd17s]  + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3[rand] + sogenerar[rand17]   + adoptarspecial[rd17][rd17s]  + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + sogener[rand17]  + adoptspecial[rd17][rd17s]  + frequadv[radv];

                        sp4 = ftsjsn[5] + v4[rand] + sogenerar[rand17]   + adoptarspecial[rd17][rd17s]  + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + sogener[rand17]  + adoptspecial[rd17][rd17s]  + frequadv[radv];

                        sp5 = ftsjsn[6] + v5nos[rand] + sogenerar[rand17]   + adoptarspecial[rd17][rd17s]  + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + sogener[rand17]  + adoptspecial[rd17][rd17s]  + frequadv[radv];
                        break;
                }
                break;

            case "announce ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + soobten[rand18]  + anunciarspecial[rd18][rd18s]  + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + soobtn[rand18]  + announcespecial[rd18][rd18s]  + frequadv[radv];

                        sp2 = ftsjs[1] + v2[rand] + soobten[rand18]  + anunciarspecial[rd18][rd18s]  + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + soobtn[rand18]  + announcespecial[rd18][rd18s]  + frequadv[radv];

                        sp3 = ftsjs[2] + v3[rand] + soobten[rand18]  + anunciarspecial[rd18][rd18s]  + advfrequ[radv];
                        eng3 = ftsj[2] + verbs3[rand] + soobtn[rand18]  + announcespecial[rd18][rd18s]  + frequadv[radv];

                        sp3ella = ftsjs[3] + v3[rand] + soobten[rand18]  + anunciarspecial[rd18][rd18s]  + advfrequ[radv];
                        eng3she = ftsj[3] + verbs3[rand] + soobtn[rand18]  + announcespecial[rd18][rd18s]  + frequadv[radv];

                        sp3eso = ftsjs[4] + v3[rand] + soobten[rand18]  + anunciarspecial[rd18][rd18s]  + advfrequ[radv];
                        sp3it = ftsj[4] + verbs3[rand] + soobtn[rand18]  + announcespecial[rd18][rd18s]  + frequadv[radv];

                        sp4 = ftsjs[5] + v4[rand] + soobten[rand18]  + anunciarspecial[rd18][rd18s]  + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + soobtn[rand18]  + announcespecial[rd18][rd18s]  + frequadv[radv];

                        sp5 = ftsjs[6] + v5nos[rand] + soobten[rand18]  + anunciarspecial[rd18][rd18s]  + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + soobtn[rand18]  + announcespecial[rd18][rd18s]  + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + soobten[rand18]  + anunciarspecial[rd18][rd18s]  + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + soobtn[rand18]  + announcespecial[rd18][rd18s]  + frequadv[radv];

                        sp2 = ftsjsn[1] + v2[rand] + soobten[rand18]  + anunciarspecial[rd18][rd18s]  + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + soobtn[rand18]  + announcespecial[rd18][rd18s]  + frequadv[radv];

                        sp3 = ftsjsn[2] + v3[rand] + soobten[rand18]  + anunciarspecial[rd18][rd18s]  + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + soobtn[rand18]  + announcespecial[rd18][rd18s]  + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3[rand] + soobten[rand18]  + anunciarspecial[rd18][rd18s]  + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + soobtn[rand18]  + announcespecial[rd18][rd18s]  + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3[rand] + soobten[rand18]  + anunciarspecial[rd18][rd18s]  + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + soobtn[rand18]  + announcespecial[rd18][rd18s]  + frequadv[radv];

                        sp4 = ftsjsn[5] + v4[rand] + soobten[rand18]  + anunciarspecial[rd18][rd18s]  + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + soobtn[rand18]  + announcespecial[rd18][rd18s]  + frequadv[radv];

                        sp5 = ftsjsn[6] + v5nos[rand] + soobten[rand18]  + anunciarspecial[rd18][rd18s]  + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + soobtn[rand18]  + announcespecial[rd18][rd18s]  + frequadv[radv];
                        break;
                }
                break;

            case "attend ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + soentra[rand19]  + atenderspecial[rd19][rd19s]  + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + soent[rand19]  + attendspecial[rd19][rd19s]  + frequadv[radv];

                        sp2 = ftsjs[1] + v2[rand] + soentra[rand19]  + atenderspecial[rd19][rd19s]  + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + soent[rand19]  + attendspecial[rd19][rd19s]  + frequadv[radv];

                        sp3 = ftsjs[2] + v3[rand] + soentra[rand19]  + atenderspecial[rd19][rd19s]  + advfrequ[radv];
                        eng3 = ftsj[2] + verbs3[rand] + soent[rand19]  + attendspecial[rd19][rd19s]  + frequadv[radv];

                        sp3ella = ftsjs[3] + v3[rand] + soentra[rand19]  + atenderspecial[rd19][rd19s]  + advfrequ[radv];
                        eng3she = ftsj[3] + verbs3[rand] + soent[rand19]  + attendspecial[rd19][rd19s]  + frequadv[radv];

                        sp3eso = ftsjs[4] + v3[rand] + soentra[rand19]  + atenderspecial[rd19][rd19s]  + advfrequ[radv];
                        sp3it = ftsj[4] + verbs3[rand] + soent[rand19]  + attendspecial[rd19][rd19s]  + frequadv[radv];

                        sp4 = ftsjs[5] + v4[rand] + soentra[rand19]  + atenderspecial[rd19][rd19s]  + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + soent[rand19]  + attendspecial[rd19][rd19s]  + frequadv[radv];

                        sp5 = ftsjs[6] + v5nos[rand] + soentra[rand19]  + atenderspecial[rd19][rd19s]  + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + soent[rand19]  + attendspecial[rd19][rd19s]  + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + soentra[rand19]  + atenderspecial[rd19][rd19s]  + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + soent[rand19]  + attendspecial[rd19][rd19s]  + frequadv[radv];

                        sp2 = ftsjsn[1] + v2[rand] + soentra[rand19]  + atenderspecial[rd19][rd19s]  + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + soent[rand19]  + attendspecial[rd19][rd19s]  + frequadv[radv];

                        sp3 = ftsjsn[2] + v3[rand] + soentra[rand19]  + atenderspecial[rd19][rd19s]  + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + soent[rand19]  + attendspecial[rd19][rd19s]  + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3[rand] + soentra[rand19]  + atenderspecial[rd19][rd19s]  + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + soent[rand19]  + attendspecial[rd19][rd19s]  + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3[rand] + soentra[rand19]  + atenderspecial[rd19][rd19s]  + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + soent[rand19]  + attendspecial[rd19][rd19s]  + frequadv[radv];

                        sp4 = ftsjsn[5] + v4[rand] + soentra[rand19]  + atenderspecial[rd19][rd19s]  + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + soent[rand19]  + attendspecial[rd19][rd19s]  + frequadv[radv];

                        sp5 = ftsjsn[6] + v5nos[rand] + soentra[rand19]  + atenderspecial[rd19][rd19s]  + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + soent[rand19]  + attendspecial[rd19][rd19s]  + frequadv[radv];
                        break;
                }
                break;

            case "commit ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + soapre[rand20]  + cometerspecial[rd20][rd20s]  + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + soappre[rand20] + commitspecial[rd20][rd20s]  + frequadv[radv];

                        sp2 = ftsjs[1] + v2[rand] + soapre[rand20]  + cometerspecial[rd20][rd20s]  + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + soappre[rand20] + commitspecial[rd20][rd20s]  + frequadv[radv];

                        sp3 = ftsjs[2] + v3[rand] + soapre[rand20]  + cometerspecial[rd20][rd20s]  + advfrequ[radv];
                        eng3 = ftsj[2] + verbs3[rand] + soappre[rand20] + commitspecial[rd20][rd20s]  + frequadv[radv];

                        sp3ella = ftsjs[3] + v3[rand] + soapre[rand20]  + cometerspecial[rd20][rd20s]  + advfrequ[radv];
                        eng3she = ftsj[3] + verbs3[rand] + soappre[rand20] + commitspecial[rd20][rd20s]  + frequadv[radv];

                        sp3eso = ftsjs[4] + v3[rand] + soapre[rand20]  + cometerspecial[rd20][rd20s]  + advfrequ[radv];
                        sp3it = ftsj[4] + verbs3[rand] + soappre[rand20] + commitspecial[rd20][rd20s]  + frequadv[radv];

                        sp4 = ftsjs[5] + v4[rand] + soapre[rand20]  + cometerspecial[rd20][rd20s]  + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + soappre[rand20] + commitspecial[rd20][rd20s]  + frequadv[radv];

                        sp5 = ftsjs[6] + v5nos[rand] + soapre[rand20]  + cometerspecial[rd20][rd20s]  + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + soappre[rand20] + commitspecial[rd20][rd20s]  + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + soapre[rand20]  + cometerspecial[rd20][rd20s]  + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + soappre[rand20] + commitspecial[rd20][rd20s]  + frequadv[radv];

                        sp2 = ftsjsn[1] + v2[rand] + soapre[rand20]  + cometerspecial[rd20][rd20s]  + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + soappre[rand20] + commitspecial[rd20][rd20s]  + frequadv[radv];

                        sp3 = ftsjsn[2] + v3[rand] + soapre[rand20]  + cometerspecial[rd20][rd20s]  + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + soappre[rand20] + commitspecial[rd20][rd20s]  + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3[rand] + soapre[rand20]  + cometerspecial[rd20][rd20s]  + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + soappre[rand20] + commitspecial[rd20][rd20s]  + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3[rand] + soapre[rand20]  + cometerspecial[rd20][rd20s]  + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + soappre[rand20] + commitspecial[rd20][rd20s]  + frequadv[radv];

                        sp4 = ftsjsn[5] + v4[rand] + soapre[rand20]  + cometerspecial[rd20][rd20s]  + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + soappre[rand20] + commitspecial[rd20][rd20s]  + frequadv[radv];

                        sp5 = ftsjsn[6] + v5nos[rand] + soapre[rand20]  + cometerspecial[rd20][rd20s]  + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + soappre[rand20] + commitspecial[rd20][rd20s]  + frequadv[radv];
                        break;
                }
                break;

            case "illustrate ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + somane[rand21]  + ilustrarspecial[rd21][rd21s]  + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + soman[rand21]  + illustratespecial[rd21][rd21s]  + frequadv[radv];

                        sp2 = ftsjs[1] + v2[rand] + somane[rand21]  + ilustrarspecial[rd21][rd21s]  + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + soman[rand21]  + illustratespecial[rd21][rd21s]  + frequadv[radv];

                        sp3 = ftsjs[2] + v3[rand] + somane[rand21]  + ilustrarspecial[rd21][rd21s]  + advfrequ[radv];
                        eng3 = ftsj[2] + verbs3[rand] + soman[rand21]  + illustratespecial[rd21][rd21s]  + frequadv[radv];

                        sp3ella = ftsjs[3] + v3[rand] + somane[rand21]  + ilustrarspecial[rd21][rd21s]  + advfrequ[radv];
                        eng3she = ftsj[3] + verbs3[rand] + soman[rand21]  + illustratespecial[rd21][rd21s]  + frequadv[radv];

                        sp3eso = ftsjs[4] + v3[rand] + somane[rand21]  + ilustrarspecial[rd21][rd21s]  + advfrequ[radv];
                        sp3it = ftsj[4] + verbs3[rand] + soman[rand21]  + illustratespecial[rd21][rd21s]  + frequadv[radv];

                        sp4 = ftsjs[5] + v4[rand] + somane[rand21]  + ilustrarspecial[rd21][rd21s]  + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + soman[rand21]  + illustratespecial[rd21][rd21s]  + frequadv[radv];

                        sp5 = ftsjs[6] + v5nos[rand] + somane[rand21]  + ilustrarspecial[rd21][rd21s]  + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + soman[rand21]  + illustratespecial[rd21][rd21s]  + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + somane[rand21]  + ilustrarspecial[rd21][rd21s]  + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + soman[rand21]  + illustratespecial[rd21][rd21s]  + frequadv[radv];

                        sp2 = ftsjsn[1] + v2[rand] + somane[rand21]  + ilustrarspecial[rd21][rd21s]  + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + soman[rand21]  + illustratespecial[rd21][rd21s]  + frequadv[radv];

                        sp3 = ftsjsn[2] + v3[rand] + somane[rand21]  + ilustrarspecial[rd21][rd21s]  + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + soman[rand21]  + illustratespecial[rd21][rd21s]  + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3[rand] + somane[rand21]  + ilustrarspecial[rd21][rd21s]  + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + soman[rand21]  + illustratespecial[rd21][rd21s]  + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3[rand] + somane[rand21]  + ilustrarspecial[rd21][rd21s]  + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + soman[rand21]  + illustratespecial[rd21][rd21s]  + frequadv[radv];

                        sp4 = ftsjsn[5] + v4[rand] + somane[rand21]  + ilustrarspecial[rd21][rd21s]  + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + soman[rand21]  + illustratespecial[rd21][rd21s]  + frequadv[radv];

                        sp5 = ftsjsn[6] + v5nos[rand] + somane[rand21]  + ilustrarspecial[rd21][rd21s]  + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + soman[rand21]  + illustratespecial[rd21][rd21s]  + frequadv[radv];
                        break;
                }
                break;

            case "propose ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + sogan[rand22]  + proponerspecial[rd22][rd22s]  + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + soearn[rand22]  + proposespecial[rd22][rd22s]  + frequadv[radv];

                        sp2 = ftsjs[1] + v2[rand] + sogan[rand22]  + proponerspecial[rd22][rd22s]  + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + soearn[rand22]  + proposespecial[rd22][rd22s]  + frequadv[radv];

                        sp3 = ftsjs[2] + v3[rand] + sogan[rand22]  + proponerspecial[rd22][rd22s]  + advfrequ[radv];
                        eng3 = ftsj[2] + verbs3[rand] + soearn[rand22]  + proposespecial[rd22][rd22s]  + frequadv[radv];

                        sp3ella = ftsjs[3] + v3[rand] + sogan[rand22]  + proponerspecial[rd22][rd22s]  + advfrequ[radv];
                        eng3she = ftsj[3] + verbs3[rand] + soearn[rand22]  + proposespecial[rd22][rd22s]  + frequadv[radv];

                        sp3eso = ftsjs[4] + v3[rand] + sogan[rand22]  + proponerspecial[rd22][rd22s]  + advfrequ[radv];
                        sp3it = ftsj[4] + verbs3[rand] + soearn[rand22]  + proposespecial[rd22][rd22s]  + frequadv[radv];

                        sp4 = ftsjs[5] + v4[rand] + sogan[rand22]  + proponerspecial[rd22][rd22s]  + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + soearn[rand22]  + proposespecial[rd22][rd22s]  + frequadv[radv];

                        sp5 = ftsjs[6] + v5nos[rand] + sogan[rand22]  + proponerspecial[rd22][rd22s]  + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + soearn[rand22]  + proposespecial[rd22][rd22s]  + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + sogan[rand22]  + proponerspecial[rd22][rd22s]  + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + soearn[rand22]  + proposespecial[rd22][rd22s]  + frequadv[radv];

                        sp2 = ftsjsn[1] + v2[rand] + sogan[rand22]  + proponerspecial[rd22][rd22s]  + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + soearn[rand22]  + proposespecial[rd22][rd22s]  + frequadv[radv];

                        sp3 = ftsjsn[2] + v3[rand] + sogan[rand22]  + proponerspecial[rd22][rd22s]  + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + soearn[rand22]  + proposespecial[rd22][rd22s]  + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3[rand] + sogan[rand22]  + proponerspecial[rd22][rd22s]  + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + soearn[rand22]  + proposespecial[rd22][rd22s]  + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3[rand] + sogan[rand22]  + proponerspecial[rd22][rd22s]  + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + soearn[rand22]  + proposespecial[rd22][rd22s]  + frequadv[radv];

                        sp4 = ftsjsn[5] + v4[rand] + sogan[rand22]  + proponerspecial[rd22][rd22s]  + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + soearn[rand22]  + proposespecial[rd22][rd22s]  + frequadv[radv];

                        sp5 = ftsjsn[6] + v5nos[rand] + sogan[rand22]  + proponerspecial[rd22][rd22s]  + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + soearn[rand22]  + proposespecial[rd22][rd22s]  + frequadv[radv];
                        break;
                }
                break;

            case "submit ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + soreflejar[rand23] + enviarspecial[rd23][rd23s]  + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + sorefl[rand23]  + submitspecial[rd23][rd23s]  + frequadv[radv];

                        sp2 = ftsjs[1] + v2[rand] + soreflejar[rand23] + enviarspecial[rd23][rd23s]  + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + sorefl[rand23]  + submitspecial[rd23][rd23s]  + frequadv[radv];

                        sp3 = ftsjs[2] + v3[rand] + soreflejar[rand23] + enviarspecial[rd23][rd23s]  + advfrequ[radv];
                        eng3 = ftsj[2] + verbs3[rand] + sorefl[rand23]  + submitspecial[rd23][rd23s]  + frequadv[radv];

                        sp3ella = ftsjs[3] + v3[rand] + soreflejar[rand23] + enviarspecial[rd23][rd23s]  + advfrequ[radv];
                        eng3she = ftsj[3] + verbs3[rand] + sorefl[rand23]  + submitspecial[rd23][rd23s]  + frequadv[radv];

                        sp3eso = ftsjs[4] + v3[rand] + soreflejar[rand23] + enviarspecial[rd23][rd23s]  + advfrequ[radv];
                        sp3it = ftsj[4] + verbs3[rand] + sorefl[rand23]  + submitspecial[rd23][rd23s]  + frequadv[radv];

                        sp4 = ftsjs[5] + v4[rand] + soreflejar[rand23] + enviarspecial[rd23][rd23s]  + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + sorefl[rand23]  + submitspecial[rd23][rd23s]  + frequadv[radv];

                        sp5 = ftsjs[6] + v5nos[rand] + soreflejar[rand23] + enviarspecial[rd23][rd23s]  + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + sorefl[rand23]  + submitspecial[rd23][rd23s]  + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + soreflejar[rand23] + enviarspecial[rd23][rd23s]  + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + sorefl[rand23]  + submitspecial[rd23][rd23s]  + frequadv[radv];

                        sp2 = ftsjsn[1] + v2[rand] + soreflejar[rand23] + enviarspecial[rd23][rd23s]  + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + sorefl[rand23]  + submitspecial[rd23][rd23s]  + frequadv[radv];

                        sp3 = ftsjsn[2] + v3[rand] + soreflejar[rand23] + enviarspecial[rd23][rd23s]  + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + sorefl[rand23]  + submitspecial[rd23][rd23s]  + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3[rand] + soreflejar[rand23] + enviarspecial[rd23][rd23s]  + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + sorefl[rand23]  + submitspecial[rd23][rd23s]  + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3[rand] + soreflejar[rand23] + enviarspecial[rd23][rd23s]  + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + sorefl[rand23]  + submitspecial[rd23][rd23s]  + frequadv[radv];

                        sp4 = ftsjsn[5] + v4[rand] + soreflejar[rand23] + enviarspecial[rd23][rd23s]  + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + sorefl[rand23]  + submitspecial[rd23][rd23s]  + frequadv[radv];

                        sp5 = ftsjsn[6] + v5nos[rand] + soreflejar[rand23] + enviarspecial[rd23][rd23s]  + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + sorefl[rand23]  + submitspecial[rd23][rd23s]  + frequadv[radv];
                        break;
                }
                break;

            case "translate ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + soinstalar[rand24]  + traducirspecial[rd24][rd24s]  + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + soinsta[rand24]  + translatespecial[rd24][rd24s]  + frequadv[radv];

                        sp2 = ftsjs[1] + v2[rand] + soinstalar[rand24]  + traducirspecial[rd24][rd24s]  + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + soinsta[rand24]  + translatespecial[rd24][rd24s]  + frequadv[radv];

                        sp3 = ftsjs[2] + v3[rand] + soinstalar[rand24]  + traducirspecial[rd24][rd24s]  + advfrequ[radv];
                        eng3 = ftsj[2] + verbs3[rand] + soinsta[rand24]  + translatespecial[rd24][rd24s]  + frequadv[radv];

                        sp3ella = ftsjs[3] + v3[rand] + soinstalar[rand24]  + traducirspecial[rd24][rd24s]  + advfrequ[radv];
                        eng3she = ftsj[3] + verbs3[rand] + soinsta[rand24]  + translatespecial[rd24][rd24s]  + frequadv[radv];

                        sp3eso = ftsjs[4] + v3[rand] + soinstalar[rand24]  + traducirspecial[rd24][rd24s]  + advfrequ[radv];
                        sp3it = ftsj[4] + verbs3[rand] + soinsta[rand24]  + translatespecial[rd24][rd24s]  + frequadv[radv];

                        sp4 = ftsjs[5] + v4[rand] + soinstalar[rand24]  + traducirspecial[rd24][rd24s]  + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + soinsta[rand24]  + translatespecial[rd24][rd24s]  + frequadv[radv];

                        sp5 = ftsjs[6] + v5nos[rand] + soinstalar[rand24]  + traducirspecial[rd24][rd24s]  + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + soinsta[rand24]  + translatespecial[rd24][rd24s]  + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + soinstalar[rand24]  + traducirspecial[rd24][rd24s]  + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + soinsta[rand24]  + translatespecial[rd24][rd24s]  + frequadv[radv];

                        sp2 = ftsjsn[1] + v2[rand] + soinstalar[rand24]  + traducirspecial[rd24][rd24s]  + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + soinsta[rand24]  + translatespecial[rd24][rd24s]  + frequadv[radv];

                        sp3 = ftsjsn[2] + v3[rand] + soinstalar[rand24]  + traducirspecial[rd24][rd24s]  + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + soinsta[rand24]  + translatespecial[rd24][rd24s]  + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3[rand] + soinstalar[rand24]  + traducirspecial[rd24][rd24s]  + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + soinsta[rand24]  + translatespecial[rd24][rd24s]  + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3[rand] + soinstalar[rand24]  + traducirspecial[rd24][rd24s]  + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + soinsta[rand24]  + translatespecial[rd24][rd24s]  + frequadv[radv];

                        sp4 = ftsjsn[5] + v4[rand] + soinstalar[rand24]  + traducirspecial[rd24][rd24s]  + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + soinsta[rand24]  + translatespecial[rd24][rd24s]  + frequadv[radv];

                        sp5 = ftsjsn[6] + v5nos[rand] + soinstalar[rand24]  + traducirspecial[rd24][rd24s]  + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + soinsta[rand24]  + translatespecial[rd24][rd24s]  + frequadv[radv];
                        break;
                }
                break;

            case "suggest ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + sosobre[rand25]  + sugerirspecial[rd25][rd25s]  + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + soover[rand25]  + suggestspecial[rd25][rd25s]  + frequadv[radv];

                        sp2 = ftsjs[1] + v2[rand] + sosobre[rand25]  + sugerirspecial[rd25][rd25s]  + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + soover[rand25]  + suggestspecial[rd25][rd25s]  + frequadv[radv];

                        sp3 = ftsjs[2] + v3[rand] + sosobre[rand25]  + sugerirspecial[rd25][rd25s]  + advfrequ[radv];
                        eng3 = ftsj[2] + verbs3[rand] + soover[rand25]  + suggestspecial[rd25][rd25s]  + frequadv[radv];

                        sp3ella = ftsjs[3] + v3[rand] + sosobre[rand25]  + sugerirspecial[rd25][rd25s]  + advfrequ[radv];
                        eng3she = ftsj[3] + verbs3[rand] + soover[rand25]  + suggestspecial[rd25][rd25s]  + frequadv[radv];

                        sp3eso = ftsjs[4] + v3[rand] + sosobre[rand25]  + sugerirspecial[rd25][rd25s]  + advfrequ[radv];
                        sp3it = ftsj[4] + verbs3[rand] + soover[rand25]  + suggestspecial[rd25][rd25s]  + frequadv[radv];

                        sp4 = ftsjs[5] + v4[rand] + sosobre[rand25]  + sugerirspecial[rd25][rd25s]  + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + soover[rand25]  + suggestspecial[rd25][rd25s]  + frequadv[radv];

                        sp5 = ftsjs[6] + v5nos[rand] + sosobre[rand25]  + sugerirspecial[rd25][rd25s]  + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + soover[rand25]  + suggestspecial[rd25][rd25s]  + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + sosobre[rand25]  + sugerirspecial[rd25][rd25s]  + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + soover[rand25]  + suggestspecial[rd25][rd25s]  + frequadv[radv];

                        sp2 = ftsjsn[1] + v2[rand] + sosobre[rand25]  + sugerirspecial[rd25][rd25s]  + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + soover[rand25]  + suggestspecial[rd25][rd25s]  + frequadv[radv];

                        sp3 = ftsjsn[2] + v3[rand] + sosobre[rand25]  + sugerirspecial[rd25][rd25s]  + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + soover[rand25]  + suggestspecial[rd25][rd25s]  + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3[rand] + sosobre[rand25]  + sugerirspecial[rd25][rd25s]  + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + soover[rand25]  + suggestspecial[rd25][rd25s]  + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3[rand] + sosobre[rand25]  + sugerirspecial[rd25][rd25s]  + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + soover[rand25]  + suggestspecial[rd25][rd25s]  + frequadv[radv];

                        sp4 = ftsjsn[5] + v4[rand] + sosobre[rand25]  + sugerirspecial[rd25][rd25s]  + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + soover[rand25]  + suggestspecial[rd25][rd25s]  + frequadv[radv];

                        sp5 = ftsjsn[6] + v5nos[rand] + sosobre[rand25]  + sugerirspecial[rd25][rd25s]  + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + soover[rand25]  + suggestspecial[rd25][rd25s]  + frequadv[radv];
                        break;
                }
                break;

            case "shut ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + soaju[rand26]  + cerrarspecial[rd26][rd26s]  + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + soadj[rand26]  + shutspecial[rd26][rd26s]  + frequadv[radv];

                        sp2 = ftsjs[1] + v2[rand] + soaju[rand26]  + cerrarspecial[rd26][rd26s]  + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + soadj[rand26]  + shutspecial[rd26][rd26s]  + frequadv[radv];

                        sp3 = ftsjs[2] + v3[rand] + soaju[rand26]  + cerrarspecial[rd26][rd26s]  + advfrequ[radv];
                        eng3 = ftsj[2] + verbs3[rand] + soadj[rand26]  + shutspecial[rd26][rd26s]  + frequadv[radv];

                        sp3ella = ftsjs[3] + v3[rand] + soaju[rand26]  + cerrarspecial[rd26][rd26s]  + advfrequ[radv];
                        eng3she = ftsj[3] + verbs3[rand] + soadj[rand26]  + shutspecial[rd26][rd26s]  + frequadv[radv];

                        sp3eso = ftsjs[4] + v3[rand] + soaju[rand26]  + cerrarspecial[rd26][rd26s]  + advfrequ[radv];
                        sp3it = ftsj[4] + verbs3[rand] + soadj[rand26]  + shutspecial[rd26][rd26s]  + frequadv[radv];

                        sp4 = ftsjs[5] + v4[rand] + soaju[rand26]  + cerrarspecial[rd26][rd26s]  + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + soadj[rand26]  + shutspecial[rd26][rd26s]  + frequadv[radv];

                        sp5 = ftsjs[6] + v5nos[rand] + soaju[rand26]  + cerrarspecial[rd26][rd26s]  + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + soadj[rand26]  + shutspecial[rd26][rd26s]  + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + soaju[rand26]  + cerrarspecial[rd26][rd26s]  + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + soadj[rand26]  + shutspecial[rd26][rd26s]  + frequadv[radv];

                        sp2 = ftsjsn[1] + v2[rand] + soaju[rand26]  + cerrarspecial[rd26][rd26s]  + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + soadj[rand26]  + shutspecial[rd26][rd26s]  + frequadv[radv];

                        sp3 = ftsjsn[2] + v3[rand] + soaju[rand26]  + cerrarspecial[rd26][rd26s]  + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + soadj[rand26]  + shutspecial[rd26][rd26s]  + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3[rand] + soaju[rand26]  + cerrarspecial[rd26][rd26s]  + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + soadj[rand26]  + shutspecial[rd26][rd26s]  + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3[rand] + soaju[rand26]  + cerrarspecial[rd26][rd26s]  + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + soadj[rand26]  + shutspecial[rd26][rd26s]  + frequadv[radv];

                        sp4 = ftsjsn[5] + v4[rand] + soaju[rand26]  + cerrarspecial[rd26][rd26s]  + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + soadj[rand26]  + shutspecial[rd26][rd26s]  + frequadv[radv];

                        sp5 = ftsjsn[6] + v5nos[rand] + soaju[rand26]  + cerrarspecial[rd26][rd26s]  + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + soadj[rand26]  + shutspecial[rd26][rd26s]  + frequadv[radv];
                        break;
                }
                break;

            case "pour ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1[rand] + soaliv[rand27]  + derramarspecial[rd27][rd27s]  + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + sorelieve[rand27]  + pourspecial[rd27][rd27s]  + frequadv[radv];

                        sp2 = ftsjs[1] + v2[rand] + soaliv[rand27]  + derramarspecial[rd27][rd27s]  + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + sorelieve[rand27]  + pourspecial[rd27][rd27s]  + frequadv[radv];

                        sp3 = ftsjs[2] + v3[rand] + soaliv[rand27]  + derramarspecial[rd27][rd27s]  + advfrequ[radv];
                        eng3 = ftsj[2] + verbs3[rand] + sorelieve[rand27]  + pourspecial[rd27][rd27s]  + frequadv[radv];

                        sp3ella = ftsjs[3] + v3[rand] + soaliv[rand27]  + derramarspecial[rd27][rd27s]  + advfrequ[radv];
                        eng3she = ftsj[3] + verbs3[rand] + sorelieve[rand27]  + pourspecial[rd27][rd27s]  + frequadv[radv];

                        sp3eso = ftsjs[4] + v3[rand] + soaliv[rand27]  + derramarspecial[rd27][rd27s]  + advfrequ[radv];
                        sp3it = ftsj[4] + verbs3[rand] + sorelieve[rand27]  + pourspecial[rd27][rd27s]  + frequadv[radv];

                        sp4 = ftsjs[5] + v4[rand] + soaliv[rand27]  + derramarspecial[rd27][rd27s]  + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + sorelieve[rand27]  + pourspecial[rd27][rd27s]  + frequadv[radv];

                        sp5 = ftsjs[6] + v5nos[rand] + soaliv[rand27]  + derramarspecial[rd27][rd27s]  + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + sorelieve[rand27]  + pourspecial[rd27][rd27s]  + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1[rand] + soaliv[rand27]  + derramarspecial[rd27][rd27s]  + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + sorelieve[rand27]  + pourspecial[rd27][rd27s]  + frequadv[radv];

                        sp2 = ftsjsn[1] + v2[rand] + soaliv[rand27]  + derramarspecial[rd27][rd27s]  + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + sorelieve[rand27]  + pourspecial[rd27][rd27s]  + frequadv[radv];

                        sp3 = ftsjsn[2] + v3[rand] + soaliv[rand27]  + derramarspecial[rd27][rd27s]  + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + sorelieve[rand27]  + pourspecial[rd27][rd27s]  + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3[rand] + soaliv[rand27]  + derramarspecial[rd27][rd27s]  + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + sorelieve[rand27]  + pourspecial[rd27][rd27s]  + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3[rand] + soaliv[rand27]  + derramarspecial[rd27][rd27s]  + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + sorelieve[rand27]  + pourspecial[rd27][rd27s]  + frequadv[radv];

                        sp4 = ftsjsn[5] + v4[rand] + soaliv[rand27]  + derramarspecial[rd27][rd27s]  + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + sorelieve[rand27]  + pourspecial[rd27][rd27s]  + frequadv[radv];

                        sp5 = ftsjsn[6] + v5nos[rand] + soaliv[rand27]  + derramarspecial[rd27][rd27s]  + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + sorelieve[rand27]  + pourspecial[rd27][rd27s]  + frequadv[radv];
                        break;
                }
                break;
        }
    }//LR 13/05/2022

    //want to dificultad 4 SOLO SPECIAL
    public void wantyouto4() {
        int rand = (int) (Math.random() * verbs.length);
        Pasts2 pas = new Pasts2();
        String temp = verbs[rand];
        int rn1 = (int) (Math.random() * 6);
        int rn2 = (int) (Math.random() * 5);
        int neg = (int) (Math.random() * 2);
        randstarter();
        int radv = (int) (Math.random() * frequadv.length);

        //want to subject
        String wtsj[] = {"I want ", "you want ", "he want ", "she want ", "it want ", "we want ", "they want "};
        //want to subject negative
        String wtsjn[] = {"I don't want ", "you doesn't want ", "he doesn't want ", "she doesn't want ", "it doesn't want "
                , "we doesn't want ", "they doesn't want "};
        //sujetos want to en sp
        String wtsjs[] = {"yo quiero ", "tú quieres ", "él quiere ", "ella quiere ", "eso quiere ", "nosotros queremos ", "ellos quieren "};
        //sujetos want to en sp negativo
        String wtsjsn[] = {"yo no quiero ", "tú no quieres ", "él no quiere ", "eso no quiere ", "ella no quiere ", "nosotros no queremos ", "ellos no quieren "};

        String wtobj1[] = {"you to " + verbs[rand], "him to " + verbs[rand], "her to " + verbs[rand],
                "it to " + verbs[rand], "us to " + verbs[rand], "them to " + verbs[rand]};
        String wtobj2[] = {"me to " + verbs[rand], "him to " + verbs[rand], "her to " + verbs[rand],
                "it to " + verbs[rand], "us to " + verbs[rand], "them to " + verbs[rand]};
        String wtobj3[] = {"you to " + verbs[rand], "me to " + verbs[rand], "her to " + verbs[rand],
                "it to " + verbs[rand], "us to " + verbs[rand], "them to " + verbs[rand]};
        String wtobj4[] = {"you to " + verbs[rand], "him to " + verbs[rand], "me to " + verbs[rand],
                "it to " + verbs[rand], "us to " + verbs[rand], "them to " + verbs[rand]};
        String wtobj5[] = {"you to " + verbs[rand], "him to " + verbs[rand], "her to " + verbs[rand],
                "me to " + verbs[rand], "us to " + verbs[rand], "them to " + verbs[rand]};
        String wtobj6[] = {"you to " + verbs[rand], "him to " + verbs[rand], "her to " + verbs[rand],
                "it to " + verbs[rand], "them to " + verbs[rand]};
        String wtobj7[] = {"you to " + verbs[rand], "him to " + verbs[rand], "her to " + verbs[rand],
                "it to " + verbs[rand], "us to " + verbs[rand], "me to " + verbs[rand]};

        // objetos wt en sp
        String wtobj1s[] = {"que tú " + v2[rand], "que él " + v3[rand], "que ella " + v3[rand],
                "que eso " + v3[rand], "que nosotros " + v5nos[rand], "que ellos " + v4[rand]};
        String wtobj2s[] = {"que yo " + v1[rand], "que él " + v3[rand], "que ella " + v3[rand],
                "que eso " + v3[rand], "que nosotros " + v3[rand], "que ellos " + v3[rand]};
        String wtobj3s[] = {"que tú " + v2[rand], "que yo " + v1[rand], "que ella " + v3[rand],
                "que eso " + v3[rand], "que nosotros " + v5nos[rand], "que ellos " + v4[rand]};
        String wtobj4s[] = {"que tú " + v2[rand], "que él " + v3[rand], "que yo " + v1[rand],
                "que eso " + v3[rand], "que nosotros " + v5nos[rand], "que ellos " + v4[rand]};
        String wtobj5s[] = {"que tú " + v2[rand], "que él " + v3[rand], "que ella " + v3[rand],
                "que yo " + v1[rand], "que nosotros " + v5nos[rand], "que ellos " + v4[rand]};
        String wtobj6s[] = {"que tú " + v2[rand], "que él " + v3[rand], "que ella " + v3[rand],
                "que eso " + v3[rand], "que ellos " + v4[rand]};
        String wtobj7s[] = {"que tú " + v2[rand], "que él " + v3[rand], "que ella " + v3[rand],
                "que eso " + v3[rand], "que nosotros " + v5nos[rand], "que yo " + v1[rand]};

        switch (temp) {
            case "react ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sodete[rand1]  + reaccionarspecial[rd1][rd1s] + advfrequ[radv];
                        eng1 = wtsj[0] + verbs[rand] + sodet[rand1]  + reactspecial[rd1][rd1s] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sodete[rand1]  + reaccionarspecial[rd1][rd1s] + advfrequ[radv];
                        eng2 = wtsj[1] + verbs[rand] + sodet[rand1]  + reactspecial[rd1][rd1s] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sodete[rand1]  + reaccionarspecial[rd1][rd1s] + advfrequ[radv];
                        eng3 = wtsj[2] + verbs3[rand] + sodet[rand1]  + reactspecial[rd1][rd1s] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sodete[rand1]  + reaccionarspecial[rd1][rd1s] + advfrequ[radv];
                        eng3she = wtsj[3] + verbs3[rand] + sodet[rand1]  + reactspecial[rd1][rd1s] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sodete[rand1]  + reaccionarspecial[rd1][rd1s] + advfrequ[radv];
                        sp3it = wtsj[4] + verbs3[rand] + sodet[rand1]  + reactspecial[rd1][rd1s] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sodete[rand1]  + reaccionarspecial[rd1][rd1s] + advfrequ[radv];
                        eng4 = wtsj[5] + verbs[rand] + sodet[rand1]  + reactspecial[rd1][rd1s] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sodete[rand1]  + reaccionarspecial[rd1][rd1s] + advfrequ[radv];
                        eng5 = wtsj[6] + verbs[rand] + sodet[rand1]  + reactspecial[rd1][rd1s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sodete[rand1]  + reaccionarspecial[rd1][rd1s] + advfrequ[radv];
                        eng1 = wtsjn[0] + verbs[rand] + sodet[rand1]  + reactspecial[rd1][rd1s] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sodete[rand1]  + reaccionarspecial[rd1][rd1s] + advfrequ[radv];
                        eng2 = wtsjn[1] + verbs[rand] + sodet[rand1]  + reactspecial[rd1][rd1s] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sodete[rand1]  + reaccionarspecial[rd1][rd1s] + advfrequ[radv];
                        eng3 = wtsjn[2] + verbs[rand] + sodet[rand1]  + reactspecial[rd1][rd1s] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj3s[rn1] + sodete[rand1]  + reaccionarspecial[rd1][rd1s] + advfrequ[radv];
                        eng3she = wtsjn[3] + verbs[rand] + sodet[rand1]  + reactspecial[rd1][rd1s] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj3s[rn1] + sodete[rand1]  + reaccionarspecial[rd1][rd1s] + advfrequ[radv];
                        sp3it = wtsjn[4] + verbs[rand] + sodet[rand1]  + reactspecial[rd1][rd1s] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sodete[rand1]  + reaccionarspecial[rd1][rd1s] + advfrequ[radv];
                        eng4 = wtsjn[5] + verbs[rand] + sodet[rand1]  + reactspecial[rd1][rd1s] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sodete[rand1]  + reaccionarspecial[rd1][rd1s] + advfrequ[radv];
                        eng5 = wtsjn[6] + verbs[rand] + sodet[rand1]  + reactspecial[rd1][rd1s] + frequadv[radv];
                        break;
                }
                break;

            case "anticipate ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soacer[rand2]  + anticiparspecial[rd2][rd2s] + advfrequ[radv];
                        eng1 = wtsj[0] + verbs[rand] + soappr[rand2] + anticipatespecial[rd2][rd2s] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soacer[rand2]  + anticiparspecial[rd2][rd2s] + advfrequ[radv];
                        eng2 = wtsj[1] + verbs[rand] + soappr[rand2] + anticipatespecial[rd2][rd2s] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soacer[rand2]  + anticiparspecial[rd2][rd2s] + advfrequ[radv];
                        eng3 = wtsj[2] + verbs3[rand] + soappr[rand2] + anticipatespecial[rd2][rd2s] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soacer[rand2]  + anticiparspecial[rd2][rd2s] + advfrequ[radv];
                        eng3she = wtsj[3] + verbs3[rand] + soappr[rand2] + anticipatespecial[rd2][rd2s] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soacer[rand2]  + anticiparspecial[rd2][rd2s] + advfrequ[radv];
                        sp3it = wtsj[4] + verbs3[rand] + soappr[rand2] + anticipatespecial[rd2][rd2s] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soacer[rand2]  + anticiparspecial[rd2][rd2s] + advfrequ[radv];
                        eng4 = wtsj[5] + verbs[rand] + soappr[rand2] + anticipatespecial[rd2][rd2s] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soacer[rand2]  + anticiparspecial[rd2][rd2s] + advfrequ[radv];
                        eng5 = wtsj[6] + verbs[rand] + soappr[rand2] + anticipatespecial[rd2][rd2s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soacer[rand2]  + anticiparspecial[rd2][rd2s] + advfrequ[radv];
                        eng1 = wtsjn[0] + verbs[rand] + soappr[rand2] + anticipatespecial[rd2][rd2s] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soacer[rand2]  + anticiparspecial[rd2][rd2s] + advfrequ[radv];
                        eng2 = wtsjn[1] + verbs[rand] + soappr[rand2] + anticipatespecial[rd2][rd2s] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soacer[rand2]  + anticiparspecial[rd2][rd2s] + advfrequ[radv];
                        eng3 = wtsjn[2] + verbs[rand] + soappr[rand2] + anticipatespecial[rd2][rd2s] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj3s[rn1] + soacer[rand2]  + anticiparspecial[rd2][rd2s] + advfrequ[radv];
                        eng3she = wtsjn[3] + verbs[rand] + soappr[rand2] + anticipatespecial[rd2][rd2s] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj3s[rn1] + soacer[rand2]  + anticiparspecial[rd2][rd2s] + advfrequ[radv];
                        sp3it = wtsjn[4] + verbs[rand] + soappr[rand2] + anticipatespecial[rd2][rd2s] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soacer[rand2]  + anticiparspecial[rd2][rd2s] + advfrequ[radv];
                        eng4 = wtsjn[5] + verbs[rand] + soappr[rand2] + anticipatespecial[rd2][rd2s] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soacer[rand2]  + anticiparspecial[rd2][rd2s] + advfrequ[radv];
                        eng5 = wtsjn[6] + verbs[rand] + soappr[rand2] + anticipatespecial[rd2][rd2s] + frequadv[radv];
                        break;
                }
                break;

            case "assume ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + socrecer[rand3]  + asumirspecial[rd3][rd3s] + advfrequ[radv];
                        eng1 = wtsj[0] + verbs[rand] + sogrow[rand3]  + assumespecial[rd3][rd3s] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + socrecer[rand3]  + asumirspecial[rd3][rd3s] + advfrequ[radv];
                        eng2 = wtsj[1] + verbs[rand] + sogrow[rand3]  + assumespecial[rd3][rd3s] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + socrecer[rand3]  + asumirspecial[rd3][rd3s] + advfrequ[radv];
                        eng3 = wtsj[2] + verbs3[rand] + sogrow[rand3]  + assumespecial[rd3][rd3s] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + socrecer[rand3]  + asumirspecial[rd3][rd3s] + advfrequ[radv];
                        eng3she = wtsj[3] + verbs3[rand] + sogrow[rand3]  + assumespecial[rd3][rd3s] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + socrecer[rand3]  + asumirspecial[rd3][rd3s] + advfrequ[radv];
                        sp3it = wtsj[4] + verbs3[rand] + sogrow[rand3]  + assumespecial[rd3][rd3s] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + socrecer[rand3]  + asumirspecial[rd3][rd3s] + advfrequ[radv];
                        eng4 = wtsj[5] + verbs[rand] + sogrow[rand3]  + assumespecial[rd3][rd3s] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + socrecer[rand3]  + asumirspecial[rd3][rd3s] + advfrequ[radv];
                        eng5 = wtsj[6] + verbs[rand] + sogrow[rand3]  + assumespecial[rd3][rd3s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + socrecer[rand3]  + asumirspecial[rd3][rd3s] + advfrequ[radv];
                        eng1 = wtsjn[0] + verbs[rand] + sogrow[rand3]  + assumespecial[rd3][rd3s] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + socrecer[rand3]  + asumirspecial[rd3][rd3s] + advfrequ[radv];
                        eng2 = wtsjn[1] + verbs[rand] + sogrow[rand3]  + assumespecial[rd3][rd3s] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + socrecer[rand3]  + asumirspecial[rd3][rd3s] + advfrequ[radv];
                        eng3 = wtsjn[2] + verbs[rand] + sogrow[rand3]  + assumespecial[rd3][rd3s] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj3s[rn1] + socrecer[rand3]  + asumirspecial[rd3][rd3s] + advfrequ[radv];
                        eng3she = wtsjn[3] + verbs[rand] + sogrow[rand3]  + assumespecial[rd3][rd3s] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj3s[rn1] + socrecer[rand3]  + asumirspecial[rd3][rd3s] + advfrequ[radv];
                        sp3it = wtsjn[4] + verbs[rand] + sogrow[rand3]  + assumespecial[rd3][rd3s] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + socrecer[rand3]  + asumirspecial[rd3][rd3s] + advfrequ[radv];
                        eng4 = wtsjn[5] + verbs[rand] + sogrow[rand3]  + assumespecial[rd3][rd3s] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + socrecer[rand3]  + asumirspecial[rd3][rd3s] + advfrequ[radv];
                        eng5 = wtsjn[6] + verbs[rand] + sogrow[rand3]  + assumespecial[rd3][rd3s] + frequadv[radv];
                        break;
                }
                break;

            case "engage ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + somejo[rand4]  + comprometerspecial[rd4][rd4s] + advfrequ[radv];
                        eng1 = wtsj[0] + verbs[rand] + soimpr[rand4]  + engagespecial[rd4][rd4s] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + somejo[rand4]  + comprometerspecial[rd4][rd4s] + advfrequ[radv];
                        eng2 = wtsj[1] + verbs[rand] + soimpr[rand4]  + engagespecial[rd4][rd4s] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + somejo[rand4]  + comprometerspecial[rd4][rd4s] + advfrequ[radv];
                        eng3 = wtsj[2] + verbs3[rand] + soimpr[rand4]  + engagespecial[rd4][rd4s] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + somejo[rand4]  + comprometerspecial[rd4][rd4s] + advfrequ[radv];
                        eng3she = wtsj[3] + verbs3[rand] + soimpr[rand4]  + engagespecial[rd4][rd4s] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + somejo[rand4]  + comprometerspecial[rd4][rd4s] + advfrequ[radv];
                        sp3it = wtsj[4] + verbs3[rand] + soimpr[rand4]  + engagespecial[rd4][rd4s] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + somejo[rand4]  + comprometerspecial[rd4][rd4s] + advfrequ[radv];
                        eng4 = wtsj[5] + verbs[rand] + soimpr[rand4]  + engagespecial[rd4][rd4s] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + somejo[rand4]  + comprometerspecial[rd4][rd4s] + advfrequ[radv];
                        eng5 = wtsj[6] + verbs[rand] + soimpr[rand4]  + engagespecial[rd4][rd4s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + somejo[rand4]  + comprometerspecial[rd4][rd4s] + advfrequ[radv];
                        eng1 = wtsjn[0] + verbs[rand] + soimpr[rand4]  + engagespecial[rd4][rd4s] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + somejo[rand4]  + comprometerspecial[rd4][rd4s] + advfrequ[radv];
                        eng2 = wtsjn[1] + verbs[rand] + soimpr[rand4]  + engagespecial[rd4][rd4s] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + somejo[rand4]  + comprometerspecial[rd4][rd4s] + advfrequ[radv];
                        eng3 = wtsjn[2] + verbs[rand] + soimpr[rand4]  + engagespecial[rd4][rd4s] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj3s[rn1] + somejo[rand4]  + comprometerspecial[rd4][rd4s] + advfrequ[radv];
                        eng3she = wtsjn[3] + verbs[rand] + soimpr[rand4]  + engagespecial[rd4][rd4s] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj3s[rn1] + somejo[rand4]  + comprometerspecial[rd4][rd4s] + advfrequ[radv];
                        sp3it = wtsjn[4] + verbs[rand] + soimpr[rand4]  + engagespecial[rd4][rd4s] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + somejo[rand4]  + comprometerspecial[rd4][rd4s] + advfrequ[radv];
                        eng4 = wtsjn[5] + verbs[rand] + soimpr[rand4]  + engagespecial[rd4][rd4s] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + somejo[rand4]  + comprometerspecial[rd4][rd4s] + advfrequ[radv];
                        eng5 = wtsjn[6] + verbs[rand] + soimpr[rand4]  + engagespecial[rd4][rd4s] + frequadv[radv];
                        break;
                }
                break;

            case "intend ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + socomen[rand5]  + intentarspecial[rd5][rd5s] + advfrequ[radv];
                        eng1 = wtsj[0] + verbs[rand] + sobegin[rand5]  + intendspecial[rd5][rd5s] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + socomen[rand5]  + intentarspecial[rd5][rd5s] + advfrequ[radv];
                        eng2 = wtsj[1] + verbs[rand] + sobegin[rand5]  + intendspecial[rd5][rd5s] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + socomen[rand5]  + intentarspecial[rd5][rd5s] + advfrequ[radv];
                        eng3 = wtsj[2] + verbs3[rand] + sobegin[rand5]  + intendspecial[rd5][rd5s] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + socomen[rand5]  + intentarspecial[rd5][rd5s] + advfrequ[radv];
                        eng3she = wtsj[3] + verbs3[rand] + sobegin[rand5]  + intendspecial[rd5][rd5s] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + socomen[rand5]  + intentarspecial[rd5][rd5s] + advfrequ[radv];
                        sp3it = wtsj[4] + verbs3[rand] + sobegin[rand5]  + intendspecial[rd5][rd5s] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + socomen[rand5]  + intentarspecial[rd5][rd5s] + advfrequ[radv];
                        eng4 = wtsj[5] + verbs[rand] + sobegin[rand5]  + intendspecial[rd5][rd5s] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + socomen[rand5]  + intentarspecial[rd5][rd5s] + advfrequ[radv];
                        eng5 = wtsj[6] + verbs[rand] + sobegin[rand5]  + intendspecial[rd5][rd5s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + socomen[rand5]  + intentarspecial[rd5][rd5s] + advfrequ[radv];
                        eng1 = wtsjn[0] + verbs[rand] + sobegin[rand5]  + intendspecial[rd5][rd5s] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + socomen[rand5]  + intentarspecial[rd5][rd5s] + advfrequ[radv];
                        eng2 = wtsjn[1] + verbs[rand] + sobegin[rand5]  + intendspecial[rd5][rd5s] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + socomen[rand5]  + intentarspecial[rd5][rd5s] + advfrequ[radv];
                        eng3 = wtsjn[2] + verbs[rand] + sobegin[rand5]  + intendspecial[rd5][rd5s] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj3s[rn1] + socomen[rand5]  + intentarspecial[rd5][rd5s] + advfrequ[radv];
                        eng3she = wtsjn[3] + verbs[rand] + sobegin[rand5]  + intendspecial[rd5][rd5s] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj3s[rn1] + socomen[rand5]  + intentarspecial[rd5][rd5s] + advfrequ[radv];
                        sp3it = wtsjn[4] + verbs[rand] + sobegin[rand5]  + intendspecial[rd5][rd5s] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + socomen[rand5]  + intentarspecial[rd5][rd5s] + advfrequ[radv];
                        eng4 = wtsjn[5] + verbs[rand] + sobegin[rand5]  + intendspecial[rd5][rd5s] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + socomen[rand5]  + intentarspecial[rd5][rd5s] + advfrequ[radv];
                        eng5 = wtsjn[6] + verbs[rand] + sobegin[rand5]  + intendspecial[rd5][rd5s] + frequadv[radv];
                        break;
                }
                break;

            case "relate ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + socontinu[rand6]  + relacionarspecial[rd6][rd6s] + advfrequ[radv];
                        eng1 = wtsj[0] + verbs[rand] + soconti[rand6]  + relatespecial[rd6][rd6s]  + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + socontinu[rand6]  + relacionarspecial[rd6][rd6s] + advfrequ[radv];
                        eng2 = wtsj[1] + verbs[rand] + soconti[rand6]  + relatespecial[rd6][rd6s]  + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + socontinu[rand6]  + relacionarspecial[rd6][rd6s] + advfrequ[radv];
                        eng3 = wtsj[2] + verbs3[rand] + soconti[rand6]  + relatespecial[rd6][rd6s]  + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + socontinu[rand6]  + relacionarspecial[rd6][rd6s] + advfrequ[radv];
                        eng3she = wtsj[3] + verbs3[rand] + soconti[rand6]  + relatespecial[rd6][rd6s]  + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + socontinu[rand6]  + relacionarspecial[rd6][rd6s] + advfrequ[radv];
                        sp3it = wtsj[4] + verbs3[rand] + soconti[rand6]  + relatespecial[rd6][rd6s]  + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + socontinu[rand6]  + relacionarspecial[rd6][rd6s] + advfrequ[radv];
                        eng4 = wtsj[5] + verbs[rand] + soconti[rand6]  + relatespecial[rd6][rd6s]  + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + socontinu[rand6]  + relacionarspecial[rd6][rd6s] + advfrequ[radv];
                        eng5 = wtsj[6] + verbs[rand] + soconti[rand6]  + relatespecial[rd6][rd6s]  + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + socontinu[rand6]  + relacionarspecial[rd6][rd6s] + advfrequ[radv];
                        eng1 = wtsjn[0] + verbs[rand] + soconti[rand6]  + relatespecial[rd6][rd6s]  + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + socontinu[rand6]  + relacionarspecial[rd6][rd6s] + advfrequ[radv];
                        eng2 = wtsjn[1] + verbs[rand] + soconti[rand6]  + relatespecial[rd6][rd6s]  + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + socontinu[rand6]  + relacionarspecial[rd6][rd6s] + advfrequ[radv];
                        eng3 = wtsjn[2] + verbs[rand] + soconti[rand6]  + relatespecial[rd6][rd6s]  + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj3s[rn1] + socontinu[rand6]  + relacionarspecial[rd6][rd6s] + advfrequ[radv];
                        eng3she = wtsjn[3] + verbs[rand] + soconti[rand6]  + relatespecial[rd6][rd6s]  + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj3s[rn1] + socontinu[rand6]  + relacionarspecial[rd6][rd6s] + advfrequ[radv];
                        sp3it = wtsjn[4] + verbs[rand] + soconti[rand6]  + relatespecial[rd6][rd6s]  + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + socontinu[rand6]  + relacionarspecial[rd6][rd6s] + advfrequ[radv];
                        eng4 = wtsjn[5] + verbs[rand] + soconti[rand6]  + relatespecial[rd6][rd6s]  + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + socontinu[rand6]  + relacionarspecial[rd6][rd6s] + advfrequ[radv];
                        eng5 = wtsjn[6] + verbs[rand] + soconti[rand6]  + relatespecial[rd6][rd6s]  + frequadv[radv];
                        break;
                }
                break;

            case "settle ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soescri[rand7]  + resolverspecial[rd7][rd7s] + advfrequ[radv];
                        eng1 = wtsj[0] + verbs[rand] + sowrite[rand7]  + settlespecial[rd7][rd7s] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soescri[rand7]  + resolverspecial[rd7][rd7s] + advfrequ[radv];
                        eng2 = wtsj[1] + verbs[rand] + sowrite[rand7]  + settlespecial[rd7][rd7s] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soescri[rand7]  + resolverspecial[rd7][rd7s] + advfrequ[radv];
                        eng3 = wtsj[2] + verbs3[rand] + sowrite[rand7]  + settlespecial[rd7][rd7s] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soescri[rand7]  + resolverspecial[rd7][rd7s] + advfrequ[radv];
                        eng3she = wtsj[3] + verbs3[rand] + sowrite[rand7]  + settlespecial[rd7][rd7s] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soescri[rand7]  + resolverspecial[rd7][rd7s] + advfrequ[radv];
                        sp3it = wtsj[4] + verbs3[rand] + sowrite[rand7]  + settlespecial[rd7][rd7s] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soescri[rand7]  + resolverspecial[rd7][rd7s] + advfrequ[radv];
                        eng4 = wtsj[5] + verbs[rand] + sowrite[rand7]  + settlespecial[rd7][rd7s] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soescri[rand7]  + resolverspecial[rd7][rd7s] + advfrequ[radv];
                        eng5 = wtsj[6] + verbs[rand] + sowrite[rand7]  + settlespecial[rd7][rd7s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soescri[rand7]  + resolverspecial[rd7][rd7s] + advfrequ[radv];
                        eng1 = wtsjn[0] + verbs[rand] + sowrite[rand7]  + settlespecial[rd7][rd7s] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soescri[rand7]  + resolverspecial[rd7][rd7s] + advfrequ[radv];
                        eng2 = wtsjn[1] + verbs[rand] + sowrite[rand7]  + settlespecial[rd7][rd7s] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soescri[rand7]  + resolverspecial[rd7][rd7s] + advfrequ[radv];
                        eng3 = wtsjn[2] + verbs[rand] + sowrite[rand7]  + settlespecial[rd7][rd7s] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj3s[rn1] + soescri[rand7]  + resolverspecial[rd7][rd7s] + advfrequ[radv];
                        eng3she = wtsjn[3] + verbs[rand] + sowrite[rand7]  + settlespecial[rd7][rd7s] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj3s[rn1] + soescri[rand7]  + resolverspecial[rd7][rd7s] + advfrequ[radv];
                        sp3it = wtsjn[4] + verbs[rand] + sowrite[rand7]  + settlespecial[rd7][rd7s] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soescri[rand7]  + resolverspecial[rd7][rd7s] + advfrequ[radv];
                        eng4 = wtsjn[5] + verbs[rand] + sowrite[rand7]  + settlespecial[rd7][rd7s] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soescri[rand7]  + resolverspecial[rd7][rd7s] + advfrequ[radv];
                        eng5 = wtsjn[6] + verbs[rand] + sowrite[rand7]  + settlespecial[rd7][rd7s] + frequadv[radv];
                        break;
                }
                break;

            case "owe ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sologr[rand8]  + deberspecial[rd8][rd8s] + advfrequ[radv];
                        eng1 = wtsj[0] + verbs[rand] + soachiv[rand8]  + owespecial[rd8][rd8s] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sologr[rand8]  + deberspecial[rd8][rd8s] + advfrequ[radv];
                        eng2 = wtsj[1] + verbs[rand] + soachiv[rand8]  + owespecial[rd8][rd8s] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sologr[rand8]  + deberspecial[rd8][rd8s] + advfrequ[radv];
                        eng3 = wtsj[2] + verbs3[rand] + soachiv[rand8]  + owespecial[rd8][rd8s] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sologr[rand8]  + deberspecial[rd8][rd8s] + advfrequ[radv];
                        eng3she = wtsj[3] + verbs3[rand] + soachiv[rand8]  + owespecial[rd8][rd8s] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sologr[rand8]  + deberspecial[rd8][rd8s] + advfrequ[radv];
                        sp3it = wtsj[4] + verbs3[rand] + soachiv[rand8]  + owespecial[rd8][rd8s] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sologr[rand8]  + deberspecial[rd8][rd8s] + advfrequ[radv];
                        eng4 = wtsj[5] + verbs[rand] + soachiv[rand8]  + owespecial[rd8][rd8s] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sologr[rand8]  + deberspecial[rd8][rd8s] + advfrequ[radv];
                        eng5 = wtsj[6] + verbs[rand] + soachiv[rand8]  + owespecial[rd8][rd8s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sologr[rand8]  + deberspecial[rd8][rd8s] + advfrequ[radv];
                        eng1 = wtsjn[0] + verbs[rand] + soachiv[rand8]  + owespecial[rd8][rd8s] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sologr[rand8]  + deberspecial[rd8][rd8s] + advfrequ[radv];
                        eng2 = wtsjn[1] + verbs[rand] + soachiv[rand8]  + owespecial[rd8][rd8s] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sologr[rand8]  + deberspecial[rd8][rd8s] + advfrequ[radv];
                        eng3 = wtsjn[2] + verbs[rand] + soachiv[rand8]  + owespecial[rd8][rd8s] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj3s[rn1] + sologr[rand8]  + deberspecial[rd8][rd8s] + advfrequ[radv];
                        eng3she = wtsjn[3] + verbs[rand] + soachiv[rand8]  + owespecial[rd8][rd8s] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj3s[rn1] + sologr[rand8]  + deberspecial[rd8][rd8s] + advfrequ[radv];
                        sp3it = wtsjn[4] + verbs[rand] + soachiv[rand8]  + owespecial[rd8][rd8s] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sologr[rand8]  + deberspecial[rd8][rd8s] + advfrequ[radv];
                        eng4 = wtsjn[5] + verbs[rand] + soachiv[rand8]  + owespecial[rd8][rd8s] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sologr[rand8]  + deberspecial[rd8][rd8s] + advfrequ[radv];
                        eng5 = wtsjn[6] + verbs[rand] + soachiv[rand8]  + owespecial[rd8][rd8s] + frequadv[radv];
                        break;
                }
                break;

            case "confirm ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sodiscu[rand9] + confirmarspecial[rd9][rd9s] +   advfrequ[radv];
                        eng1 = wtsj[0] + verbs[rand] + sodisc[rand9]  + confirmspecial[rd9][rd9s]  + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sodiscu[rand9] + confirmarspecial[rd9][rd9s] +   advfrequ[radv];
                        eng2 = wtsj[1] + verbs[rand] + sodisc[rand9]  + confirmspecial[rd9][rd9s]  + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sodiscu[rand9] + confirmarspecial[rd9][rd9s] +   advfrequ[radv];
                        eng3 = wtsj[2] + verbs3[rand] + sodisc[rand9]  + confirmspecial[rd9][rd9s]  + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sodiscu[rand9] + confirmarspecial[rd9][rd9s] +   advfrequ[radv];
                        eng3she = wtsj[3] + verbs3[rand] + sodisc[rand9]  + confirmspecial[rd9][rd9s]  + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sodiscu[rand9] + confirmarspecial[rd9][rd9s] +   advfrequ[radv];
                        sp3it = wtsj[4] + verbs3[rand] + sodisc[rand9]  + confirmspecial[rd9][rd9s]  + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sodiscu[rand9] + confirmarspecial[rd9][rd9s] +   advfrequ[radv];
                        eng4 = wtsj[5] + verbs[rand] + sodisc[rand9]  + confirmspecial[rd9][rd9s]  + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sodiscu[rand9] + confirmarspecial[rd9][rd9s] +   advfrequ[radv];
                        eng5 = wtsj[6] + verbs[rand] + sodisc[rand9]  + confirmspecial[rd9][rd9s]  + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sodiscu[rand9] + confirmarspecial[rd9][rd9s] +   advfrequ[radv];
                        eng1 = wtsjn[0] + verbs[rand] + sodisc[rand9]  + confirmspecial[rd9][rd9s]  + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sodiscu[rand9] + confirmarspecial[rd9][rd9s] +   advfrequ[radv];
                        eng2 = wtsjn[1] + verbs[rand] + sodisc[rand9]  + confirmspecial[rd9][rd9s]  + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sodiscu[rand9] + confirmarspecial[rd9][rd9s] +   advfrequ[radv];
                        eng3 = wtsjn[2] + verbs[rand] + sodisc[rand9]  + confirmspecial[rd9][rd9s]  + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj3s[rn1] + sodiscu[rand9] + confirmarspecial[rd9][rd9s] +   advfrequ[radv];
                        eng3she = wtsjn[3] + verbs[rand] + sodisc[rand9]  + confirmspecial[rd9][rd9s]  + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj3s[rn1] + sodiscu[rand9] + confirmarspecial[rd9][rd9s] +   advfrequ[radv];
                        sp3it = wtsjn[4] + verbs[rand] + sodisc[rand9]  + confirmspecial[rd9][rd9s]  + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sodiscu[rand9] + confirmarspecial[rd9][rd9s] +   advfrequ[radv];
                        eng4 = wtsjn[5] + verbs[rand] + sodisc[rand9]  + confirmspecial[rd9][rd9s]  + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sodiscu[rand9] + confirmarspecial[rd9][rd9s] +   advfrequ[radv];
                        eng5 = wtsjn[6] + verbs[rand] + sodisc[rand9]  + confirmspecial[rd9][rd9s]  + frequadv[radv];
                        break;
                }
                break;

            case "calculate ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soresolv[rand10]  + calcularspecial[rd10][rd10s]  + advfrequ[radv];
                        eng1 = wtsj[0] + verbs[rand] + sosolv[rand10] + calculatespecial[rd10][rd10s]  + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soresolv[rand10]  + calcularspecial[rd10][rd10s]  + advfrequ[radv];
                        eng2 = wtsj[1] + verbs[rand] + sosolv[rand10] + calculatespecial[rd10][rd10s]  + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soresolv[rand10]  + calcularspecial[rd10][rd10s]  + advfrequ[radv];
                        eng3 = wtsj[2] + verbs3[rand] + sosolv[rand10] + calculatespecial[rd10][rd10s]  + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soresolv[rand10]  + calcularspecial[rd10][rd10s]  + advfrequ[radv];
                        eng3she = wtsj[3] + verbs3[rand] + sosolv[rand10] + calculatespecial[rd10][rd10s]  + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soresolv[rand10]  + calcularspecial[rd10][rd10s]  + advfrequ[radv];
                        sp3it = wtsj[4] + verbs3[rand] + sosolv[rand10] + calculatespecial[rd10][rd10s]  + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soresolv[rand10]  + calcularspecial[rd10][rd10s]  + advfrequ[radv];
                        eng4 = wtsj[5] + verbs[rand] + sosolv[rand10] + calculatespecial[rd10][rd10s]  + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soresolv[rand10]  + calcularspecial[rd10][rd10s]  + advfrequ[radv];
                        eng5 = wtsj[6] + verbs[rand] + sosolv[rand10] + calculatespecial[rd10][rd10s]  + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soresolv[rand10]  + calcularspecial[rd10][rd10s]  + advfrequ[radv];
                        eng1 = wtsjn[0] + verbs[rand] + sosolv[rand10] + calculatespecial[rd10][rd10s]  + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soresolv[rand10]  + calcularspecial[rd10][rd10s]  + advfrequ[radv];
                        eng2 = wtsjn[1] + verbs[rand] + sosolv[rand10] + calculatespecial[rd10][rd10s]  + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soresolv[rand10]  + calcularspecial[rd10][rd10s]  + advfrequ[radv];
                        eng3 = wtsjn[2] + verbs[rand] + sosolv[rand10] + calculatespecial[rd10][rd10s]  + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj3s[rn1] + soresolv[rand10]  + calcularspecial[rd10][rd10s]  + advfrequ[radv];
                        eng3she = wtsjn[3] + verbs[rand] + sosolv[rand10] + calculatespecial[rd10][rd10s]  + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj3s[rn1] + soresolv[rand10]  + calcularspecial[rd10][rd10s]  + advfrequ[radv];
                        sp3it = wtsjn[4] + verbs[rand] + sosolv[rand10] + calculatespecial[rd10][rd10s]  + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soresolv[rand10]  + calcularspecial[rd10][rd10s]  + advfrequ[radv];
                        eng4 = wtsjn[5] + verbs[rand] + sosolv[rand10] + calculatespecial[rd10][rd10s]  + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soresolv[rand10]  + calcularspecial[rd10][rd10s]  + advfrequ[radv];
                        eng5 = wtsjn[6] + verbs[rand] + sosolv[rand10] + calculatespecial[rd10][rd10s]  + frequadv[radv];
                        break;
                }
                break;

            case "deliver ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soinvert[rand11] + entregarspecial[rd11][rd11s]  + advfrequ[radv];
                        eng1 = wtsj[0] + verbs[rand] + soinvst[rand11]  + deliverspecial[rd11][rd11s]  + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soinvert[rand11] + entregarspecial[rd11][rd11s]  + advfrequ[radv];
                        eng2 = wtsj[1] + verbs[rand] + soinvst[rand11]  + deliverspecial[rd11][rd11s]  + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soinvert[rand11] + entregarspecial[rd11][rd11s]  + advfrequ[radv];
                        eng3 = wtsj[2] + verbs3[rand] + soinvst[rand11]  + deliverspecial[rd11][rd11s]  + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soinvert[rand11] + entregarspecial[rd11][rd11s]  + advfrequ[radv];
                        eng3she = wtsj[3] + verbs3[rand] + soinvst[rand11]  + deliverspecial[rd11][rd11s]  + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soinvert[rand11] + entregarspecial[rd11][rd11s]  + advfrequ[radv];
                        sp3it = wtsj[4] + verbs3[rand] + soinvst[rand11]  + deliverspecial[rd11][rd11s]  + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soinvert[rand11] + entregarspecial[rd11][rd11s]  + advfrequ[radv];
                        eng4 = wtsj[5] + verbs[rand] + soinvst[rand11]  + deliverspecial[rd11][rd11s]  + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soinvert[rand11] + entregarspecial[rd11][rd11s]  + advfrequ[radv];
                        eng5 = wtsj[6] + verbs[rand] + soinvst[rand11]  + deliverspecial[rd11][rd11s]  + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soinvert[rand11] + entregarspecial[rd11][rd11s]  + advfrequ[radv];
                        eng1 = wtsjn[0] + verbs[rand] + soinvst[rand11]  + deliverspecial[rd11][rd11s]  + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soinvert[rand11] + entregarspecial[rd11][rd11s]  + advfrequ[radv];
                        eng2 = wtsjn[1] + verbs[rand] + soinvst[rand11]  + deliverspecial[rd11][rd11s]  + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soinvert[rand11] + entregarspecial[rd11][rd11s]  + advfrequ[radv];
                        eng3 = wtsjn[2] + verbs[rand] + soinvst[rand11]  + deliverspecial[rd11][rd11s]  + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj3s[rn1] + soinvert[rand11] + entregarspecial[rd11][rd11s]  + advfrequ[radv];
                        eng3she = wtsjn[3] + verbs[rand] + soinvst[rand11]  + deliverspecial[rd11][rd11s]  + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj3s[rn1] + soinvert[rand11] + entregarspecial[rd11][rd11s]  + advfrequ[radv];
                        sp3it = wtsjn[4] + verbs[rand] + soinvst[rand11]  + deliverspecial[rd11][rd11s]  + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soinvert[rand11] + entregarspecial[rd11][rd11s]  + advfrequ[radv];
                        eng4 = wtsjn[5] + verbs[rand] + soinvst[rand11]  + deliverspecial[rd11][rd11s]  + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soinvert[rand11] + entregarspecial[rd11][rd11s]  + advfrequ[radv];
                        eng5 = wtsjn[6] + verbs[rand] + soinvst[rand11]  + deliverspecial[rd11][rd11s]  + frequadv[radv];
                        break;
                }
                break;

            case "extend ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soreducir[rand12] + extenderspecial[rd12][rd12s]  + advfrequ[radv];
                        eng1 = wtsj[0] + verbs[rand] + soreduce[rand12]  + extendspecial[rd12][rd12s]  + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soreducir[rand12] + extenderspecial[rd12][rd12s]  + advfrequ[radv];
                        eng2 = wtsj[1] + verbs[rand] + soreduce[rand12]  + extendspecial[rd12][rd12s]  + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soreducir[rand12] + extenderspecial[rd12][rd12s]  + advfrequ[radv];
                        eng3 = wtsj[2] + verbs3[rand] + soreduce[rand12]  + extendspecial[rd12][rd12s]  + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soreducir[rand12] + extenderspecial[rd12][rd12s]  + advfrequ[radv];
                        eng3she = wtsj[3] + verbs3[rand] + soreduce[rand12]  + extendspecial[rd12][rd12s]  + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soreducir[rand12] + extenderspecial[rd12][rd12s]  + advfrequ[radv];
                        sp3it = wtsj[4] + verbs3[rand] + soreduce[rand12]  + extendspecial[rd12][rd12s]  + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soreducir[rand12] + extenderspecial[rd12][rd12s]  + advfrequ[radv];
                        eng4 = wtsj[5] + verbs[rand] + soreduce[rand12]  + extendspecial[rd12][rd12s]  + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soreducir[rand12] + extenderspecial[rd12][rd12s]  + advfrequ[radv];
                        eng5 = wtsj[6] + verbs[rand] + soreduce[rand12]  + extendspecial[rd12][rd12s]  + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soreducir[rand12] + extenderspecial[rd12][rd12s]  + advfrequ[radv];
                        eng1 = wtsjn[0] + verbs[rand] + soreduce[rand12]  + extendspecial[rd12][rd12s]  + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soreducir[rand12] + extenderspecial[rd12][rd12s]  + advfrequ[radv];
                        eng2 = wtsjn[1] + verbs[rand] + soreduce[rand12]  + extendspecial[rd12][rd12s]  + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soreducir[rand12] + extenderspecial[rd12][rd12s]  + advfrequ[radv];
                        eng3 = wtsjn[2] + verbs[rand] + soreduce[rand12]  + extendspecial[rd12][rd12s]  + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj3s[rn1] + soreducir[rand12] + extenderspecial[rd12][rd12s]  + advfrequ[radv];
                        eng3she = wtsjn[3] + verbs[rand] + soreduce[rand12]  + extendspecial[rd12][rd12s]  + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj3s[rn1] + soreducir[rand12] + extenderspecial[rd12][rd12s]  + advfrequ[radv];
                        sp3it = wtsjn[4] + verbs[rand] + soreduce[rand12]  + extendspecial[rd12][rd12s]  + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soreducir[rand12] + extenderspecial[rd12][rd12s]  + advfrequ[radv];
                        eng4 = wtsjn[5] + verbs[rand] + soreduce[rand12]  + extendspecial[rd12][rd12s]  + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soreducir[rand12] + extenderspecial[rd12][rd12s]  + advfrequ[radv];
                        eng5 = wtsjn[6] + verbs[rand] + soreduce[rand12]  + extendspecial[rd12][rd12s]  + frequadv[radv];
                        break;
                }
                break;

            case "investigate ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sohablar[rand13] + investigarspecial[rd13][rd13s]  + advfrequ[radv];
                        eng1 = wtsj[0] + verbs[rand] + sospeak[rand13]  + investigatespecial[rd13][rd13s]  + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sohablar[rand13] + investigarspecial[rd13][rd13s]  + advfrequ[radv];
                        eng2 = wtsj[1] + verbs[rand] + sospeak[rand13]  + investigatespecial[rd13][rd13s]  + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sohablar[rand13] + investigarspecial[rd13][rd13s]  + advfrequ[radv];
                        eng3 = wtsj[2] + verbs3[rand] + sospeak[rand13]  + investigatespecial[rd13][rd13s]  + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sohablar[rand13] + investigarspecial[rd13][rd13s]  + advfrequ[radv];
                        eng3she = wtsj[3] + verbs3[rand] + sospeak[rand13]  + investigatespecial[rd13][rd13s]  + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sohablar[rand13] + investigarspecial[rd13][rd13s]  + advfrequ[radv];
                        sp3it = wtsj[4] + verbs3[rand] + sospeak[rand13]  + investigatespecial[rd13][rd13s]  + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sohablar[rand13] + investigarspecial[rd13][rd13s]  + advfrequ[radv];
                        eng4 = wtsj[5] + verbs[rand] + sospeak[rand13]  + investigatespecial[rd13][rd13s]  + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sohablar[rand13] + investigarspecial[rd13][rd13s]  + advfrequ[radv];
                        eng5 = wtsj[6] + verbs[rand] + sospeak[rand13]  + investigatespecial[rd13][rd13s]  + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sohablar[rand13] + investigarspecial[rd13][rd13s]  + advfrequ[radv];
                        eng1 = wtsjn[0] + verbs[rand] + sospeak[rand13]  + investigatespecial[rd13][rd13s]  + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sohablar[rand13] + investigarspecial[rd13][rd13s]  + advfrequ[radv];
                        eng2 = wtsjn[1] + verbs[rand] + sospeak[rand13]  + investigatespecial[rd13][rd13s]  + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sohablar[rand13] + investigarspecial[rd13][rd13s]  + advfrequ[radv];
                        eng3 = wtsjn[2] + verbs[rand] + sospeak[rand13]  + investigatespecial[rd13][rd13s]  + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj3s[rn1] + sohablar[rand13] + investigarspecial[rd13][rd13s]  + advfrequ[radv];
                        eng3she = wtsjn[3] + verbs[rand] + sospeak[rand13]  + investigatespecial[rd13][rd13s]  + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj3s[rn1] + sohablar[rand13] + investigarspecial[rd13][rd13s]  + advfrequ[radv];
                        sp3it = wtsjn[4] + verbs[rand] + sospeak[rand13]  + investigatespecial[rd13][rd13s]  + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sohablar[rand13] + investigarspecial[rd13][rd13s]  + advfrequ[radv];
                        eng4 = wtsjn[5] + verbs[rand] + sospeak[rand13]  + investigatespecial[rd13][rd13s]  + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sohablar[rand13] + investigarspecial[rd13][rd13s]  + advfrequ[radv];
                        eng5 = wtsjn[6] + verbs[rand] + sospeak[rand13]  + investigatespecial[rd13][rd13s]  + frequadv[radv];
                        break;
                }
                break;

            case "qualify ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soaplic[rand14] + calificarspecial[rd14][rd14s]  + advfrequ[radv];
                        eng1 = wtsj[0] + verbs[rand] + soapply[rand14]  + qualifyspecial[rd14][rd14s]  + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soaplic[rand14] + calificarspecial[rd14][rd14s]  + advfrequ[radv];
                        eng2 = wtsj[1] + verbs[rand] + soapply[rand14]  + qualifyspecial[rd14][rd14s]  + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soaplic[rand14] + calificarspecial[rd14][rd14s]  + advfrequ[radv];
                        eng3 = wtsj[2] + verbs3[rand] + soapply[rand14]  + qualifyspecial[rd14][rd14s]  + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soaplic[rand14] + calificarspecial[rd14][rd14s]  + advfrequ[radv];
                        eng3she = wtsj[3] + verbs3[rand] + soapply[rand14]  + qualifyspecial[rd14][rd14s]  + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soaplic[rand14] + calificarspecial[rd14][rd14s]  + advfrequ[radv];
                        sp3it = wtsj[4] + verbs3[rand] + soapply[rand14]  + qualifyspecial[rd14][rd14s]  + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soaplic[rand14] + calificarspecial[rd14][rd14s]  + advfrequ[radv];
                        eng4 = wtsj[5] + verbs[rand] + soapply[rand14]  + qualifyspecial[rd14][rd14s]  + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soaplic[rand14] + calificarspecial[rd14][rd14s]  + advfrequ[radv];
                        eng5 = wtsj[6] + verbs[rand] + soapply[rand14]  + qualifyspecial[rd14][rd14s]  + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soaplic[rand14] + calificarspecial[rd14][rd14s]  + advfrequ[radv];
                        eng1 = wtsjn[0] + verbs[rand] + soapply[rand14]  + qualifyspecial[rd14][rd14s]  + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soaplic[rand14] + calificarspecial[rd14][rd14s]  + advfrequ[radv];
                        eng2 = wtsjn[1] + verbs[rand] + soapply[rand14]  + qualifyspecial[rd14][rd14s]  + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soaplic[rand14] + calificarspecial[rd14][rd14s]  + advfrequ[radv];
                        eng3 = wtsjn[2] + verbs[rand] + soapply[rand14]  + qualifyspecial[rd14][rd14s]  + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj3s[rn1] + soaplic[rand14] + calificarspecial[rd14][rd14s]  + advfrequ[radv];
                        eng3she = wtsjn[3] + verbs[rand] + soapply[rand14]  + qualifyspecial[rd14][rd14s]  + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj3s[rn1] + soaplic[rand14] + calificarspecial[rd14][rd14s]  + advfrequ[radv];
                        sp3it = wtsjn[4] + verbs[rand] + soapply[rand14]  + qualifyspecial[rd14][rd14s]  + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soaplic[rand14] + calificarspecial[rd14][rd14s]  + advfrequ[radv];
                        eng4 = wtsjn[5] + verbs[rand] + soapply[rand14]  + qualifyspecial[rd14][rd14s]  + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soaplic[rand14] + calificarspecial[rd14][rd14s]  + advfrequ[radv];
                        eng5 = wtsjn[6] + verbs[rand] + soapply[rand14]  + qualifyspecial[rd14][rd14s]  + frequadv[radv];
                        break;
                }
                break;

            case "celebrate ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sorecom[rand15] + celebrarspecial[rd15][rd15s]  + advfrequ[radv];
                        eng1 = wtsj[0] + verbs[rand] + sorec[rand15]  + celebratespecial[rd15][rd15s]  + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sorecom[rand15] + celebrarspecial[rd15][rd15s]  + advfrequ[radv];
                        eng2 = wtsj[1] + verbs[rand] + sorec[rand15]  + celebratespecial[rd15][rd15s]  + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sorecom[rand15] + celebrarspecial[rd15][rd15s]  + advfrequ[radv];
                        eng3 = wtsj[2] + verbs3[rand] + sorec[rand15]  + celebratespecial[rd15][rd15s]  + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sorecom[rand15] + celebrarspecial[rd15][rd15s]  + advfrequ[radv];
                        eng3she = wtsj[3] + verbs3[rand] + sorec[rand15]  + celebratespecial[rd15][rd15s]  + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sorecom[rand15] + celebrarspecial[rd15][rd15s]  + advfrequ[radv];
                        sp3it = wtsj[4] + verbs3[rand] + sorec[rand15]  + celebratespecial[rd15][rd15s]  + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sorecom[rand15] + celebrarspecial[rd15][rd15s]  + advfrequ[radv];
                        eng4 = wtsj[5] + verbs[rand] + sorec[rand15]  + celebratespecial[rd15][rd15s]  + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sorecom[rand15] + celebrarspecial[rd15][rd15s]  + advfrequ[radv];
                        eng5 = wtsj[6] + verbs[rand] + sorec[rand15]  + celebratespecial[rd15][rd15s]  + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sorecom[rand15] + celebrarspecial[rd15][rd15s]  + advfrequ[radv];
                        eng1 = wtsjn[0] + verbs[rand] + sorec[rand15]  + celebratespecial[rd15][rd15s]  + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sorecom[rand15] + celebrarspecial[rd15][rd15s]  + advfrequ[radv];
                        eng2 = wtsjn[1] + verbs[rand] + sorec[rand15]  + celebratespecial[rd15][rd15s]  + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sorecom[rand15] + celebrarspecial[rd15][rd15s]  + advfrequ[radv];
                        eng3 = wtsjn[2] + verbs[rand] + sorec[rand15]  + celebratespecial[rd15][rd15s]  + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj3s[rn1] + sorecom[rand15] + celebrarspecial[rd15][rd15s]  + advfrequ[radv];
                        eng3she = wtsjn[3] + verbs[rand] + sorec[rand15]  + celebratespecial[rd15][rd15s]  + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj3s[rn1] + sorecom[rand15] + celebrarspecial[rd15][rd15s]  + advfrequ[radv];
                        sp3it = wtsjn[4] + verbs[rand] + sorec[rand15]  + celebratespecial[rd15][rd15s]  + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sorecom[rand15] + celebrarspecial[rd15][rd15s]  + advfrequ[radv];
                        eng4 = wtsjn[5] + verbs[rand] + sorec[rand15]  + celebratespecial[rd15][rd15s]  + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sorecom[rand15] + celebrarspecial[rd15][rd15s]  + advfrequ[radv];
                        eng5 = wtsjn[6] + verbs[rand] + sorec[rand15]  + celebratespecial[rd15][rd15s]  + frequadv[radv];
                        break;
                }
                break;

            case "admit ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sovariar[rand16]  + admitirspecial[rd16][rd16s]  + advfrequ[radv];
                        eng1 = wtsj[0] + verbs[rand] + sovar[rand16]  + admitspecial[rd16][rd16s]  + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sovariar[rand16]  + admitirspecial[rd16][rd16s]  + advfrequ[radv];
                        eng2 = wtsj[1] + verbs[rand] + sovar[rand16]  + admitspecial[rd16][rd16s]  + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sovariar[rand16]  + admitirspecial[rd16][rd16s]  + advfrequ[radv];
                        eng3 = wtsj[2] + verbs3[rand] + sovar[rand16]  + admitspecial[rd16][rd16s]  + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sovariar[rand16]  + admitirspecial[rd16][rd16s]  + advfrequ[radv];
                        eng3she = wtsj[3] + verbs3[rand] + sovar[rand16]  + admitspecial[rd16][rd16s]  + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sovariar[rand16]  + admitirspecial[rd16][rd16s]  + advfrequ[radv];
                        sp3it = wtsj[4] + verbs3[rand] + sovar[rand16]  + admitspecial[rd16][rd16s]  + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sovariar[rand16]  + admitirspecial[rd16][rd16s]  + advfrequ[radv];
                        eng4 = wtsj[5] + verbs[rand] + sovar[rand16]  + admitspecial[rd16][rd16s]  + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sovariar[rand16]  + admitirspecial[rd16][rd16s]  + advfrequ[radv];
                        eng5 = wtsj[6] + verbs[rand] + sovar[rand16]  + admitspecial[rd16][rd16s]  + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sovariar[rand16]  + admitirspecial[rd16][rd16s]  + advfrequ[radv];
                        eng1 = wtsjn[0] + verbs[rand] + sovar[rand16]  + admitspecial[rd16][rd16s]  + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sovariar[rand16]  + admitirspecial[rd16][rd16s]  + advfrequ[radv];
                        eng2 = wtsjn[1] + verbs[rand] + sovar[rand16]  + admitspecial[rd16][rd16s]  + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sovariar[rand16]  + admitirspecial[rd16][rd16s]  + advfrequ[radv];
                        eng3 = wtsjn[2] + verbs[rand] + sovar[rand16]  + admitspecial[rd16][rd16s]  + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj3s[rn1] + sovariar[rand16]  + admitirspecial[rd16][rd16s]  + advfrequ[radv];
                        eng3she = wtsjn[3] + verbs[rand] + sovar[rand16]  + admitspecial[rd16][rd16s]  + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj3s[rn1] + sovariar[rand16]  + admitirspecial[rd16][rd16s]  + advfrequ[radv];
                        sp3it = wtsjn[4] + verbs[rand] + sovar[rand16]  + admitspecial[rd16][rd16s]  + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sovariar[rand16]  + admitirspecial[rd16][rd16s]  + advfrequ[radv];
                        eng4 = wtsjn[5] + verbs[rand] + sovar[rand16]  + admitspecial[rd16][rd16s]  + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sovariar[rand16]  + admitirspecial[rd16][rd16s]  + advfrequ[radv];
                        eng5 = wtsjn[6] + verbs[rand] + sovar[rand16]  + admitspecial[rd16][rd16s]  + frequadv[radv];
                        break;
                }
                break;

            case "adopt ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sogenerar[rand17]   + adoptarspecial[rd17][rd17s]  + advfrequ[radv];
                        eng1 = wtsj[0] + verbs[rand] + sogener[rand17]  + adoptspecial[rd17][rd17s]  + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sogenerar[rand17]   + adoptarspecial[rd17][rd17s]  + advfrequ[radv];
                        eng2 = wtsj[1] + verbs[rand] + sogener[rand17]  + adoptspecial[rd17][rd17s]  + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sogenerar[rand17]   + adoptarspecial[rd17][rd17s]  + advfrequ[radv];
                        eng3 = wtsj[2] + verbs3[rand] + sogener[rand17]  + adoptspecial[rd17][rd17s]  + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sogenerar[rand17]   + adoptarspecial[rd17][rd17s]  + advfrequ[radv];
                        eng3she = wtsj[3] + verbs3[rand] + sogener[rand17]  + adoptspecial[rd17][rd17s]  + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sogenerar[rand17]   + adoptarspecial[rd17][rd17s]  + advfrequ[radv];
                        sp3it = wtsj[4] + verbs3[rand] + sogener[rand17]  + adoptspecial[rd17][rd17s]  + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sogenerar[rand17]   + adoptarspecial[rd17][rd17s]  + advfrequ[radv];
                        eng4 = wtsj[5] + verbs[rand] + sogener[rand17]  + adoptspecial[rd17][rd17s]  + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sogenerar[rand17]   + adoptarspecial[rd17][rd17s]  + advfrequ[radv];
                        eng5 = wtsj[6] + verbs[rand] + sogener[rand17]  + adoptspecial[rd17][rd17s]  + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sogenerar[rand17]   + adoptarspecial[rd17][rd17s]  + advfrequ[radv];
                        eng1 = wtsjn[0] + verbs[rand] + sogener[rand17]  + adoptspecial[rd17][rd17s]  + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sogenerar[rand17]   + adoptarspecial[rd17][rd17s]  + advfrequ[radv];
                        eng2 = wtsjn[1] + verbs[rand] + sogener[rand17]  + adoptspecial[rd17][rd17s]  + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sogenerar[rand17]   + adoptarspecial[rd17][rd17s]  + advfrequ[radv];
                        eng3 = wtsjn[2] + verbs[rand] + sogener[rand17]  + adoptspecial[rd17][rd17s]  + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj3s[rn1] + sogenerar[rand17]   + adoptarspecial[rd17][rd17s]  + advfrequ[radv];
                        eng3she = wtsjn[3] + verbs[rand] + sogener[rand17]  + adoptspecial[rd17][rd17s]  + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj3s[rn1] + sogenerar[rand17]   + adoptarspecial[rd17][rd17s]  + advfrequ[radv];
                        sp3it = wtsjn[4] + verbs[rand] + sogener[rand17]  + adoptspecial[rd17][rd17s]  + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sogenerar[rand17]   + adoptarspecial[rd17][rd17s]  + advfrequ[radv];
                        eng4 = wtsjn[5] + verbs[rand] + sogener[rand17]  + adoptspecial[rd17][rd17s]  + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sogenerar[rand17]   + adoptarspecial[rd17][rd17s]  + advfrequ[radv];
                        eng5 = wtsjn[6] + verbs[rand] + sogener[rand17]  + adoptspecial[rd17][rd17s]  + frequadv[radv];
                        break;
                }
                break;

            case "announce ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soobten[rand18]  + anunciarspecial[rd18][rd18s]  + advfrequ[radv];
                        eng1 = wtsj[0] + verbs[rand] + soobtn[rand18]  + announcespecial[rd18][rd18s]  + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soobten[rand18]  + anunciarspecial[rd18][rd18s]  + advfrequ[radv];
                        eng2 = wtsj[1] + verbs[rand] + soobtn[rand18]  + announcespecial[rd18][rd18s]  + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soobten[rand18]  + anunciarspecial[rd18][rd18s]  + advfrequ[radv];
                        eng3 = wtsj[2] + verbs3[rand] + soobtn[rand18]  + announcespecial[rd18][rd18s]  + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soobten[rand18]  + anunciarspecial[rd18][rd18s]  + advfrequ[radv];
                        eng3she = wtsj[3] + verbs3[rand] + soobtn[rand18]  + announcespecial[rd18][rd18s]  + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soobten[rand18]  + anunciarspecial[rd18][rd18s]  + advfrequ[radv];
                        sp3it = wtsj[4] + verbs3[rand] + soobtn[rand18]  + announcespecial[rd18][rd18s]  + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soobten[rand18]  + anunciarspecial[rd18][rd18s]  + advfrequ[radv];
                        eng4 = wtsj[5] + verbs[rand] + soobtn[rand18]  + announcespecial[rd18][rd18s]  + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soobten[rand18]  + anunciarspecial[rd18][rd18s]  + advfrequ[radv];
                        eng5 = wtsj[6] + verbs[rand] + soobtn[rand18]  + announcespecial[rd18][rd18s]  + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soobten[rand18]  + anunciarspecial[rd18][rd18s]  + advfrequ[radv];
                        eng1 = wtsjn[0] + verbs[rand] + soobtn[rand18]  + announcespecial[rd18][rd18s]  + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soobten[rand18]  + anunciarspecial[rd18][rd18s]  + advfrequ[radv];
                        eng2 = wtsjn[1] + verbs[rand] + soobtn[rand18]  + announcespecial[rd18][rd18s]  + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soobten[rand18]  + anunciarspecial[rd18][rd18s]  + advfrequ[radv];
                        eng3 = wtsjn[2] + verbs[rand] + soobtn[rand18]  + announcespecial[rd18][rd18s]  + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj3s[rn1] + soobten[rand18]  + anunciarspecial[rd18][rd18s]  + advfrequ[radv];
                        eng3she = wtsjn[3] + verbs[rand] + soobtn[rand18]  + announcespecial[rd18][rd18s]  + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj3s[rn1] + soobten[rand18]  + anunciarspecial[rd18][rd18s]  + advfrequ[radv];
                        sp3it = wtsjn[4] + verbs[rand] + soobtn[rand18]  + announcespecial[rd18][rd18s]  + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soobten[rand18]  + anunciarspecial[rd18][rd18s]  + advfrequ[radv];
                        eng4 = wtsjn[5] + verbs[rand] + soobtn[rand18]  + announcespecial[rd18][rd18s]  + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soobten[rand18]  + anunciarspecial[rd18][rd18s]  + advfrequ[radv];
                        eng5 = wtsjn[6] + verbs[rand] + soobtn[rand18]  + announcespecial[rd18][rd18s]  + frequadv[radv];
                        break;
                }
                break;

            case "attend ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soentra[rand19]  + atenderspecial[rd19][rd19s]  + advfrequ[radv];
                        eng1 = wtsj[0] + verbs[rand] + soent[rand19]  + attendspecial[rd19][rd19s]  + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soentra[rand19]  + atenderspecial[rd19][rd19s]  + advfrequ[radv];
                        eng2 = wtsj[1] + verbs[rand] + soent[rand19]  + attendspecial[rd19][rd19s]  + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soentra[rand19]  + atenderspecial[rd19][rd19s]  + advfrequ[radv];
                        eng3 = wtsj[2] + verbs3[rand] + soent[rand19]  + attendspecial[rd19][rd19s]  + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soentra[rand19]  + atenderspecial[rd19][rd19s]  + advfrequ[radv];
                        eng3she = wtsj[3] + verbs3[rand] + soent[rand19]  + attendspecial[rd19][rd19s]  + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soentra[rand19]  + atenderspecial[rd19][rd19s]  + advfrequ[radv];
                        sp3it = wtsj[4] + verbs3[rand] + soent[rand19]  + attendspecial[rd19][rd19s]  + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soentra[rand19]  + atenderspecial[rd19][rd19s]  + advfrequ[radv];
                        eng4 = wtsj[5] + verbs[rand] + soent[rand19]  + attendspecial[rd19][rd19s]  + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soentra[rand19]  + atenderspecial[rd19][rd19s]  + advfrequ[radv];
                        eng5 = wtsj[6] + verbs[rand] + soent[rand19]  + attendspecial[rd19][rd19s]  + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soentra[rand19]  + atenderspecial[rd19][rd19s]  + advfrequ[radv];
                        eng1 = wtsjn[0] + verbs[rand] + soent[rand19]  + attendspecial[rd19][rd19s]  + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soentra[rand19]  + atenderspecial[rd19][rd19s]  + advfrequ[radv];
                        eng2 = wtsjn[1] + verbs[rand] + soent[rand19]  + attendspecial[rd19][rd19s]  + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soentra[rand19]  + atenderspecial[rd19][rd19s]  + advfrequ[radv];
                        eng3 = wtsjn[2] + verbs[rand] + soent[rand19]  + attendspecial[rd19][rd19s]  + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj3s[rn1] + soentra[rand19]  + atenderspecial[rd19][rd19s]  + advfrequ[radv];
                        eng3she = wtsjn[3] + verbs[rand] + soent[rand19]  + attendspecial[rd19][rd19s]  + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj3s[rn1] + soentra[rand19]  + atenderspecial[rd19][rd19s]  + advfrequ[radv];
                        sp3it = wtsjn[4] + verbs[rand] + soent[rand19]  + attendspecial[rd19][rd19s]  + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soentra[rand19]  + atenderspecial[rd19][rd19s]  + advfrequ[radv];
                        eng4 = wtsjn[5] + verbs[rand] + soent[rand19]  + attendspecial[rd19][rd19s]  + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soentra[rand19]  + atenderspecial[rd19][rd19s]  + advfrequ[radv];
                        eng5 = wtsjn[6] + verbs[rand] + soent[rand19]  + attendspecial[rd19][rd19s]  + frequadv[radv];
                        break;
                }
                break;

            case "commit ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soapre[rand20]  + cometerspecial[rd20][rd20s]  + advfrequ[radv];
                        eng1 = wtsj[0] + verbs[rand] + soappre[rand20] + commitspecial[rd20][rd20s]  + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soapre[rand20]  + cometerspecial[rd20][rd20s]  + advfrequ[radv];
                        eng2 = wtsj[1] + verbs[rand] + soappre[rand20] + commitspecial[rd20][rd20s]  + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soapre[rand20]  + cometerspecial[rd20][rd20s]  + advfrequ[radv];
                        eng3 = wtsj[2] + verbs3[rand] + soappre[rand20] + commitspecial[rd20][rd20s]  + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soapre[rand20]  + cometerspecial[rd20][rd20s]  + advfrequ[radv];
                        eng3she = wtsj[3] + verbs3[rand] + soappre[rand20] + commitspecial[rd20][rd20s]  + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soapre[rand20]  + cometerspecial[rd20][rd20s]  + advfrequ[radv];
                        sp3it = wtsj[4] + verbs3[rand] + soappre[rand20] + commitspecial[rd20][rd20s]  + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soapre[rand20]  + cometerspecial[rd20][rd20s]  + advfrequ[radv];
                        eng4 = wtsj[5] + verbs[rand] + soappre[rand20] + commitspecial[rd20][rd20s]  + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soapre[rand20]  + cometerspecial[rd20][rd20s]  + advfrequ[radv];
                        eng5 = wtsj[6] + verbs[rand] + soappre[rand20] + commitspecial[rd20][rd20s]  + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soapre[rand20]  + cometerspecial[rd20][rd20s]  + advfrequ[radv];
                        eng1 = wtsjn[0] + verbs[rand] + soappre[rand20] + commitspecial[rd20][rd20s]  + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soapre[rand20]  + cometerspecial[rd20][rd20s]  + advfrequ[radv];
                        eng2 = wtsjn[1] + verbs[rand] + soappre[rand20] + commitspecial[rd20][rd20s]  + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soapre[rand20]  + cometerspecial[rd20][rd20s]  + advfrequ[radv];
                        eng3 = wtsjn[2] + verbs[rand] + soappre[rand20] + commitspecial[rd20][rd20s]  + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj3s[rn1] + soapre[rand20]  + cometerspecial[rd20][rd20s]  + advfrequ[radv];
                        eng3she = wtsjn[3] + verbs[rand] + soappre[rand20] + commitspecial[rd20][rd20s]  + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj3s[rn1] + soapre[rand20]  + cometerspecial[rd20][rd20s]  + advfrequ[radv];
                        sp3it = wtsjn[4] + verbs[rand] + soappre[rand20] + commitspecial[rd20][rd20s]  + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soapre[rand20]  + cometerspecial[rd20][rd20s]  + advfrequ[radv];
                        eng4 = wtsjn[5] + verbs[rand] + soappre[rand20] + commitspecial[rd20][rd20s]  + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soapre[rand20]  + cometerspecial[rd20][rd20s]  + advfrequ[radv];
                        eng5 = wtsjn[6] + verbs[rand] + soappre[rand20] + commitspecial[rd20][rd20s]  + frequadv[radv];
                        break;
                }
                break;

            case "illustrate ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + somane[rand21]  + ilustrarspecial[rd21][rd21s]  + advfrequ[radv];
                        eng1 = wtsj[0] + verbs[rand] + soman[rand21]  + illustratespecial[rd21][rd21s]  + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + somane[rand21]  + ilustrarspecial[rd21][rd21s]  + advfrequ[radv];
                        eng2 = wtsj[1] + verbs[rand] + soman[rand21]  + illustratespecial[rd21][rd21s]  + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + somane[rand21]  + ilustrarspecial[rd21][rd21s]  + advfrequ[radv];
                        eng3 = wtsj[2] + verbs3[rand] + soman[rand21]  + illustratespecial[rd21][rd21s]  + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + somane[rand21]  + ilustrarspecial[rd21][rd21s]  + advfrequ[radv];
                        eng3she = wtsj[3] + verbs3[rand] + soman[rand21]  + illustratespecial[rd21][rd21s]  + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + somane[rand21]  + ilustrarspecial[rd21][rd21s]  + advfrequ[radv];
                        sp3it = wtsj[4] + verbs3[rand] + soman[rand21]  + illustratespecial[rd21][rd21s]  + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + somane[rand21]  + ilustrarspecial[rd21][rd21s]  + advfrequ[radv];
                        eng4 = wtsj[5] + verbs[rand] + soman[rand21]  + illustratespecial[rd21][rd21s]  + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + somane[rand21]  + ilustrarspecial[rd21][rd21s]  + advfrequ[radv];
                        eng5 = wtsj[6] + verbs[rand] + soman[rand21]  + illustratespecial[rd21][rd21s]  + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + somane[rand21]  + ilustrarspecial[rd21][rd21s]  + advfrequ[radv];
                        eng1 = wtsjn[0] + verbs[rand] + soman[rand21]  + illustratespecial[rd21][rd21s]  + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + somane[rand21]  + ilustrarspecial[rd21][rd21s]  + advfrequ[radv];
                        eng2 = wtsjn[1] + verbs[rand] + soman[rand21]  + illustratespecial[rd21][rd21s]  + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + somane[rand21]  + ilustrarspecial[rd21][rd21s]  + advfrequ[radv];
                        eng3 = wtsjn[2] + verbs[rand] + soman[rand21]  + illustratespecial[rd21][rd21s]  + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj3s[rn1] + somane[rand21]  + ilustrarspecial[rd21][rd21s]  + advfrequ[radv];
                        eng3she = wtsjn[3] + verbs[rand] + soman[rand21]  + illustratespecial[rd21][rd21s]  + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj3s[rn1] + somane[rand21]  + ilustrarspecial[rd21][rd21s]  + advfrequ[radv];
                        sp3it = wtsjn[4] + verbs[rand] + soman[rand21]  + illustratespecial[rd21][rd21s]  + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + somane[rand21]  + ilustrarspecial[rd21][rd21s]  + advfrequ[radv];
                        eng4 = wtsjn[5] + verbs[rand] + soman[rand21]  + illustratespecial[rd21][rd21s]  + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + somane[rand21]  + ilustrarspecial[rd21][rd21s]  + advfrequ[radv];
                        eng5 = wtsjn[6] + verbs[rand] + soman[rand21]  + illustratespecial[rd21][rd21s]  + frequadv[radv];
                        break;
                }
                break;

            case "propose ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sogan[rand22]  + proponerspecial[rd22][rd22s]  + advfrequ[radv];
                        eng1 = wtsj[0] + verbs[rand] + soearn[rand22]  + proposespecial[rd22][rd22s]  + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sogan[rand22]  + proponerspecial[rd22][rd22s]  + advfrequ[radv];
                        eng2 = wtsj[1] + verbs[rand] + soearn[rand22]  + proposespecial[rd22][rd22s]  + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sogan[rand22]  + proponerspecial[rd22][rd22s]  + advfrequ[radv];
                        eng3 = wtsj[2] + verbs3[rand] + soearn[rand22]  + proposespecial[rd22][rd22s]  + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sogan[rand22]  + proponerspecial[rd22][rd22s]  + advfrequ[radv];
                        eng3she = wtsj[3] + verbs3[rand] + soearn[rand22]  + proposespecial[rd22][rd22s]  + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sogan[rand22]  + proponerspecial[rd22][rd22s]  + advfrequ[radv];
                        sp3it = wtsj[4] + verbs3[rand] + soearn[rand22]  + proposespecial[rd22][rd22s]  + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sogan[rand22]  + proponerspecial[rd22][rd22s]  + advfrequ[radv];
                        eng4 = wtsj[5] + verbs[rand] + soearn[rand22]  + proposespecial[rd22][rd22s]  + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sogan[rand22]  + proponerspecial[rd22][rd22s]  + advfrequ[radv];
                        eng5 = wtsj[6] + verbs[rand] + soearn[rand22]  + proposespecial[rd22][rd22s]  + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sogan[rand22]  + proponerspecial[rd22][rd22s]  + advfrequ[radv];
                        eng1 = wtsjn[0] + verbs[rand] + soearn[rand22]  + proposespecial[rd22][rd22s]  + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sogan[rand22]  + proponerspecial[rd22][rd22s]  + advfrequ[radv];
                        eng2 = wtsjn[1] + verbs[rand] + soearn[rand22]  + proposespecial[rd22][rd22s]  + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sogan[rand22]  + proponerspecial[rd22][rd22s]  + advfrequ[radv];
                        eng3 = wtsjn[2] + verbs[rand] + soearn[rand22]  + proposespecial[rd22][rd22s]  + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj3s[rn1] + sogan[rand22]  + proponerspecial[rd22][rd22s]  + advfrequ[radv];
                        eng3she = wtsjn[3] + verbs[rand] + soearn[rand22]  + proposespecial[rd22][rd22s]  + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj3s[rn1] + sogan[rand22]  + proponerspecial[rd22][rd22s]  + advfrequ[radv];
                        sp3it = wtsjn[4] + verbs[rand] + soearn[rand22]  + proposespecial[rd22][rd22s]  + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sogan[rand22]  + proponerspecial[rd22][rd22s]  + advfrequ[radv];
                        eng4 = wtsjn[5] + verbs[rand] + soearn[rand22]  + proposespecial[rd22][rd22s]  + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sogan[rand22]  + proponerspecial[rd22][rd22s]  + advfrequ[radv];
                        eng5 = wtsjn[6] + verbs[rand] + soearn[rand22]  + proposespecial[rd22][rd22s]  + frequadv[radv];
                        break;
                }
                break;

            case "submit ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soreflejar[rand23] + enviarspecial[rd23][rd23s]  + advfrequ[radv];
                        eng1 = wtsj[0] + verbs[rand] + sorefl[rand23]  + submitspecial[rd23][rd23s]  + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soreflejar[rand23] + enviarspecial[rd23][rd23s]  + advfrequ[radv];
                        eng2 = wtsj[1] + verbs[rand] + sorefl[rand23]  + submitspecial[rd23][rd23s]  + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soreflejar[rand23] + enviarspecial[rd23][rd23s]  + advfrequ[radv];
                        eng3 = wtsj[2] + verbs3[rand] + sorefl[rand23]  + submitspecial[rd23][rd23s]  + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soreflejar[rand23] + enviarspecial[rd23][rd23s]  + advfrequ[radv];
                        eng3she = wtsj[3] + verbs3[rand] + sorefl[rand23]  + submitspecial[rd23][rd23s]  + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soreflejar[rand23] + enviarspecial[rd23][rd23s]  + advfrequ[radv];
                        sp3it = wtsj[4] + verbs3[rand] + sorefl[rand23]  + submitspecial[rd23][rd23s]  + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soreflejar[rand23] + enviarspecial[rd23][rd23s]  + advfrequ[radv];
                        eng4 = wtsj[5] + verbs[rand] + sorefl[rand23]  + submitspecial[rd23][rd23s]  + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soreflejar[rand23] + enviarspecial[rd23][rd23s]  + advfrequ[radv];
                        eng5 = wtsj[6] + verbs[rand] + sorefl[rand23]  + submitspecial[rd23][rd23s]  + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soreflejar[rand23] + enviarspecial[rd23][rd23s]  + advfrequ[radv];
                        eng1 = wtsjn[0] + verbs[rand] + sorefl[rand23]  + submitspecial[rd23][rd23s]  + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soreflejar[rand23] + enviarspecial[rd23][rd23s]  + advfrequ[radv];
                        eng2 = wtsjn[1] + verbs[rand] + sorefl[rand23]  + submitspecial[rd23][rd23s]  + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soreflejar[rand23] + enviarspecial[rd23][rd23s]  + advfrequ[radv];
                        eng3 = wtsjn[2] + verbs[rand] + sorefl[rand23]  + submitspecial[rd23][rd23s]  + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj3s[rn1] + soreflejar[rand23] + enviarspecial[rd23][rd23s]  + advfrequ[radv];
                        eng3she = wtsjn[3] + verbs[rand] + sorefl[rand23]  + submitspecial[rd23][rd23s]  + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj3s[rn1] + soreflejar[rand23] + enviarspecial[rd23][rd23s]  + advfrequ[radv];
                        sp3it = wtsjn[4] + verbs[rand] + sorefl[rand23]  + submitspecial[rd23][rd23s]  + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soreflejar[rand23] + enviarspecial[rd23][rd23s]  + advfrequ[radv];
                        eng4 = wtsjn[5] + verbs[rand] + sorefl[rand23]  + submitspecial[rd23][rd23s]  + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soreflejar[rand23] + enviarspecial[rd23][rd23s]  + advfrequ[radv];
                        eng5 = wtsjn[6] + verbs[rand] + sorefl[rand23]  + submitspecial[rd23][rd23s]  + frequadv[radv];
                        break;
                }
                break;

            case "translate ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soinstalar[rand24]  + traducirspecial[rd24][rd24s]  + advfrequ[radv];
                        eng1 = wtsj[0] + verbs[rand] + soinsta[rand24]  + translatespecial[rd24][rd24s]  + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soinstalar[rand24]  + traducirspecial[rd24][rd24s]  + advfrequ[radv];
                        eng2 = wtsj[1] + verbs[rand] + soinsta[rand24]  + translatespecial[rd24][rd24s]  + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soinstalar[rand24]  + traducirspecial[rd24][rd24s]  + advfrequ[radv];
                        eng3 = wtsj[2] + verbs3[rand] + soinsta[rand24]  + translatespecial[rd24][rd24s]  + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soinstalar[rand24]  + traducirspecial[rd24][rd24s]  + advfrequ[radv];
                        eng3she = wtsj[3] + verbs3[rand] + soinsta[rand24]  + translatespecial[rd24][rd24s]  + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soinstalar[rand24]  + traducirspecial[rd24][rd24s]  + advfrequ[radv];
                        sp3it = wtsj[4] + verbs3[rand] + soinsta[rand24]  + translatespecial[rd24][rd24s]  + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soinstalar[rand24]  + traducirspecial[rd24][rd24s]  + advfrequ[radv];
                        eng4 = wtsj[5] + verbs[rand] + soinsta[rand24]  + translatespecial[rd24][rd24s]  + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soinstalar[rand24]  + traducirspecial[rd24][rd24s]  + advfrequ[radv];
                        eng5 = wtsj[6] + verbs[rand] + soinsta[rand24]  + translatespecial[rd24][rd24s]  + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soinstalar[rand24]  + traducirspecial[rd24][rd24s]  + advfrequ[radv];
                        eng1 = wtsjn[0] + verbs[rand] + soinsta[rand24]  + translatespecial[rd24][rd24s]  + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soinstalar[rand24]  + traducirspecial[rd24][rd24s]  + advfrequ[radv];
                        eng2 = wtsjn[1] + verbs[rand] + soinsta[rand24]  + translatespecial[rd24][rd24s]  + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soinstalar[rand24]  + traducirspecial[rd24][rd24s]  + advfrequ[radv];
                        eng3 = wtsjn[2] + verbs[rand] + soinsta[rand24]  + translatespecial[rd24][rd24s]  + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj3s[rn1] + soinstalar[rand24]  + traducirspecial[rd24][rd24s]  + advfrequ[radv];
                        eng3she = wtsjn[3] + verbs[rand] + soinsta[rand24]  + translatespecial[rd24][rd24s]  + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj3s[rn1] + soinstalar[rand24]  + traducirspecial[rd24][rd24s]  + advfrequ[radv];
                        sp3it = wtsjn[4] + verbs[rand] + soinsta[rand24]  + translatespecial[rd24][rd24s]  + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soinstalar[rand24]  + traducirspecial[rd24][rd24s]  + advfrequ[radv];
                        eng4 = wtsjn[5] + verbs[rand] + soinsta[rand24]  + translatespecial[rd24][rd24s]  + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soinstalar[rand24]  + traducirspecial[rd24][rd24s]  + advfrequ[radv];
                        eng5 = wtsjn[6] + verbs[rand] + soinsta[rand24]  + translatespecial[rd24][rd24s]  + frequadv[radv];
                        break;
                }
                break;

            case "suggest ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sosobre[rand25]  + sugerirspecial[rd25][rd25s]  + advfrequ[radv];
                        eng1 = wtsj[0] + verbs[rand] + soover[rand25]  + suggestspecial[rd25][rd25s]  + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sosobre[rand25]  + sugerirspecial[rd25][rd25s]  + advfrequ[radv];
                        eng2 = wtsj[1] + verbs[rand] + soover[rand25]  + suggestspecial[rd25][rd25s]  + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sosobre[rand25]  + sugerirspecial[rd25][rd25s]  + advfrequ[radv];
                        eng3 = wtsj[2] + verbs3[rand] + soover[rand25]  + suggestspecial[rd25][rd25s]  + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sosobre[rand25]  + sugerirspecial[rd25][rd25s]  + advfrequ[radv];
                        eng3she = wtsj[3] + verbs3[rand] + soover[rand25]  + suggestspecial[rd25][rd25s]  + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sosobre[rand25]  + sugerirspecial[rd25][rd25s]  + advfrequ[radv];
                        sp3it = wtsj[4] + verbs3[rand] + soover[rand25]  + suggestspecial[rd25][rd25s]  + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sosobre[rand25]  + sugerirspecial[rd25][rd25s]  + advfrequ[radv];
                        eng4 = wtsj[5] + verbs[rand] + soover[rand25]  + suggestspecial[rd25][rd25s]  + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sosobre[rand25]  + sugerirspecial[rd25][rd25s]  + advfrequ[radv];
                        eng5 = wtsj[6] + verbs[rand] + soover[rand25]  + suggestspecial[rd25][rd25s]  + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sosobre[rand25]  + sugerirspecial[rd25][rd25s]  + advfrequ[radv];
                        eng1 = wtsjn[0] + verbs[rand] + soover[rand25]  + suggestspecial[rd25][rd25s]  + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sosobre[rand25]  + sugerirspecial[rd25][rd25s]  + advfrequ[radv];
                        eng2 = wtsjn[1] + verbs[rand] + soover[rand25]  + suggestspecial[rd25][rd25s]  + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sosobre[rand25]  + sugerirspecial[rd25][rd25s]  + advfrequ[radv];
                        eng3 = wtsjn[2] + verbs[rand] + soover[rand25]  + suggestspecial[rd25][rd25s]  + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj3s[rn1] + sosobre[rand25]  + sugerirspecial[rd25][rd25s]  + advfrequ[radv];
                        eng3she = wtsjn[3] + verbs[rand] + soover[rand25]  + suggestspecial[rd25][rd25s]  + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj3s[rn1] + sosobre[rand25]  + sugerirspecial[rd25][rd25s]  + advfrequ[radv];
                        sp3it = wtsjn[4] + verbs[rand] + soover[rand25]  + suggestspecial[rd25][rd25s]  + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sosobre[rand25]  + sugerirspecial[rd25][rd25s]  + advfrequ[radv];
                        eng4 = wtsjn[5] + verbs[rand] + soover[rand25]  + suggestspecial[rd25][rd25s]  + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sosobre[rand25]  + sugerirspecial[rd25][rd25s]  + advfrequ[radv];
                        eng5 = wtsjn[6] + verbs[rand] + soover[rand25]  + suggestspecial[rd25][rd25s]  + frequadv[radv];
                        break;
                }
                break;

            case "shut ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soaju[rand26]  + cerrarspecial[rd26][rd26s]  + advfrequ[radv];
                        eng1 = wtsj[0] + verbs[rand] + soadj[rand26]  + shutspecial[rd26][rd26s]  + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soaju[rand26]  + cerrarspecial[rd26][rd26s]  + advfrequ[radv];
                        eng2 = wtsj[1] + verbs[rand] + soadj[rand26]  + shutspecial[rd26][rd26s]  + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soaju[rand26]  + cerrarspecial[rd26][rd26s]  + advfrequ[radv];
                        eng3 = wtsj[2] + verbs3[rand] + soadj[rand26]  + shutspecial[rd26][rd26s]  + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soaju[rand26]  + cerrarspecial[rd26][rd26s]  + advfrequ[radv];
                        eng3she = wtsj[3] + verbs3[rand] + soadj[rand26]  + shutspecial[rd26][rd26s]  + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soaju[rand26]  + cerrarspecial[rd26][rd26s]  + advfrequ[radv];
                        sp3it = wtsj[4] + verbs3[rand] + soadj[rand26]  + shutspecial[rd26][rd26s]  + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soaju[rand26]  + cerrarspecial[rd26][rd26s]  + advfrequ[radv];
                        eng4 = wtsj[5] + verbs[rand] + soadj[rand26]  + shutspecial[rd26][rd26s]  + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soaju[rand26]  + cerrarspecial[rd26][rd26s]  + advfrequ[radv];
                        eng5 = wtsj[6] + verbs[rand] + soadj[rand26]  + shutspecial[rd26][rd26s]  + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soaju[rand26]  + cerrarspecial[rd26][rd26s]  + advfrequ[radv];
                        eng1 = wtsjn[0] + verbs[rand] + soadj[rand26]  + shutspecial[rd26][rd26s]  + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soaju[rand26]  + cerrarspecial[rd26][rd26s]  + advfrequ[radv];
                        eng2 = wtsjn[1] + verbs[rand] + soadj[rand26]  + shutspecial[rd26][rd26s]  + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soaju[rand26]  + cerrarspecial[rd26][rd26s]  + advfrequ[radv];
                        eng3 = wtsjn[2] + verbs[rand] + soadj[rand26]  + shutspecial[rd26][rd26s]  + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj3s[rn1] + soaju[rand26]  + cerrarspecial[rd26][rd26s]  + advfrequ[radv];
                        eng3she = wtsjn[3] + verbs[rand] + soadj[rand26]  + shutspecial[rd26][rd26s]  + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj3s[rn1] + soaju[rand26]  + cerrarspecial[rd26][rd26s]  + advfrequ[radv];
                        sp3it = wtsjn[4] + verbs[rand] + soadj[rand26]  + shutspecial[rd26][rd26s]  + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soaju[rand26]  + cerrarspecial[rd26][rd26s]  + advfrequ[radv];
                        eng4 = wtsjn[5] + verbs[rand] + soadj[rand26]  + shutspecial[rd26][rd26s]  + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soaju[rand26]  + cerrarspecial[rd26][rd26s]  + advfrequ[radv];
                        eng5 = wtsjn[6] + verbs[rand] + soadj[rand26]  + shutspecial[rd26][rd26s]  + frequadv[radv];
                        break;
                }
                break;

            case "pour ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soaliv[rand27]  + derramarspecial[rd27][rd27s]  + advfrequ[radv];
                        eng1 = wtsj[0] + verbs[rand] + sorelieve[rand27]  + pourspecial[rd27][rd27s]  + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soaliv[rand27]  + derramarspecial[rd27][rd27s]  + advfrequ[radv];
                        eng2 = wtsj[1] + verbs[rand] + sorelieve[rand27]  + pourspecial[rd27][rd27s]  + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soaliv[rand27]  + derramarspecial[rd27][rd27s]  + advfrequ[radv];
                        eng3 = wtsj[2] + verbs3[rand] + sorelieve[rand27]  + pourspecial[rd27][rd27s]  + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soaliv[rand27]  + derramarspecial[rd27][rd27s]  + advfrequ[radv];
                        eng3she = wtsj[3] + verbs3[rand] + sorelieve[rand27]  + pourspecial[rd27][rd27s]  + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soaliv[rand27]  + derramarspecial[rd27][rd27s]  + advfrequ[radv];
                        sp3it = wtsj[4] + verbs3[rand] + sorelieve[rand27]  + pourspecial[rd27][rd27s]  + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soaliv[rand27]  + derramarspecial[rd27][rd27s]  + advfrequ[radv];
                        eng4 = wtsj[5] + verbs[rand] + sorelieve[rand27]  + pourspecial[rd27][rd27s]  + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soaliv[rand27]  + derramarspecial[rd27][rd27s]  + advfrequ[radv];
                        eng5 = wtsj[6] + verbs[rand] + sorelieve[rand27]  + pourspecial[rd27][rd27s]  + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soaliv[rand27]  + derramarspecial[rd27][rd27s]  + advfrequ[radv];
                        eng1 = wtsjn[0] + verbs[rand] + sorelieve[rand27]  + pourspecial[rd27][rd27s]  + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soaliv[rand27]  + derramarspecial[rd27][rd27s]  + advfrequ[radv];
                        eng2 = wtsjn[1] + verbs[rand] + sorelieve[rand27]  + pourspecial[rd27][rd27s]  + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soaliv[rand27]  + derramarspecial[rd27][rd27s]  + advfrequ[radv];
                        eng3 = wtsjn[2] + verbs[rand] + sorelieve[rand27]  + pourspecial[rd27][rd27s]  + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj3s[rn1] + soaliv[rand27]  + derramarspecial[rd27][rd27s]  + advfrequ[radv];
                        eng3she = wtsjn[3] + verbs[rand] + sorelieve[rand27]  + pourspecial[rd27][rd27s]  + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj3s[rn1] + soaliv[rand27]  + derramarspecial[rd27][rd27s]  + advfrequ[radv];
                        sp3it = wtsjn[4] + verbs[rand] + sorelieve[rand27]  + pourspecial[rd27][rd27s]  + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soaliv[rand27]  + derramarspecial[rd27][rd27s]  + advfrequ[radv];
                        eng4 = wtsjn[5] + verbs[rand] + sorelieve[rand27]  + pourspecial[rd27][rd27s]  + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soaliv[rand27]  + derramarspecial[rd27][rd27s]  + advfrequ[radv];
                        eng5 = wtsjn[6] + verbs[rand] + sorelieve[rand27]  + pourspecial[rd27][rd27s]  + frequadv[radv];
                        break;
                }
                break;
        }


    }//LR 13/05/2022


}

