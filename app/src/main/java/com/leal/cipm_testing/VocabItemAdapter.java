package com.leal.cipm_testing;

import static androidx.core.content.ContentProviderCompat.requireContext;
import static androidx.core.content.ContextCompat.startActivity;

import android.annotation.SuppressLint;
import android.app.Activity;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.Typeface;
import android.graphics.drawable.GradientDrawable;
import android.mtp.MtpConstants;
import android.net.Uri;
import android.speech.RecognizerIntent;
import android.speech.tts.TextToSpeech;
import android.speech.tts.UtteranceProgressListener;
import android.text.Html;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.SimpleAdapter;
import android.widget.TextView;
import android.widget.Toast;

import androidx.activity.result.ActivityResultLauncher;
import androidx.annotation.MainThread;
import androidx.annotation.NonNull;
import androidx.appcompat.app.AlertDialog;
import androidx.recyclerview.widget.RecyclerView;

import com.google.android.exoplayer2.ExoPlayer;
import com.google.android.exoplayer2.MediaItem;
import com.google.android.exoplayer2.SimpleExoPlayer;
import com.google.android.exoplayer2.ui.StyledPlayerView;
import com.google.android.exoplayer2.SimpleExoPlayer;
import com.google.android.exoplayer2.MediaItem;
import com.google.android.gms.ads.AdError;
import com.google.android.gms.ads.AdListener;
import com.google.android.gms.ads.AdRequest;
import com.google.android.gms.ads.FullScreenContentCallback;
import com.google.android.gms.ads.LoadAdError;
import com.google.android.gms.ads.rewarded.RewardedAd;
import com.google.android.gms.ads.rewarded.RewardedAdLoadCallback;
import com.google.protobuf.DescriptorProtos;


import java.util.List;
import java.util.Locale;
import java.util.Spliterators;

public class VocabItemAdapter extends RecyclerView.Adapter<VocabItemAdapter.VocabItemViewHolder>  {

    private List<VocabItem> vocabItems;
    private SpeechInitiator speechInitiator;
    private AdListener adListener;
    TextToSpeech ttr;
    String globalAnswer="";
    String globalAnswer2="";
    String globalAnswer3="";
    NewVerbClass object = new NewVerbClass();
    NewVerbClass object2= new NewVerbClass();
    Context context ;
    Prefs prefs;
    MediaItem mediaItem;
    boolean hasSeenDialogue;
    int itemType;
    public VocabItemAdapter(Context context, List<VocabItem> vocabItems, SpeechInitiator speechInitiator, Prefs prefs,AdListener adlistener) {


        this.vocabItems = vocabItems;
        this.speechInitiator = speechInitiator;
        this.context=context;
        this.prefs= prefs;
        this.adListener = adlistener;




    }
    @NonNull
    @Override
    public VocabItemAdapter.VocabItemViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType)   {
        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.vocab_recycler_view, parent, false);
        if(prefs.getPremium()==0){
            loadRewardedAd();
        }


        return  new VocabItemAdapter.VocabItemViewHolder(view);
    }
    @Override
    public void onViewRecycled(@NonNull VocabItemViewHolder holder) {
        super.onViewRecycled(holder);

        Log.d("VocabAdapter", "View recycled: " + holder.getAdapterPosition());
    }
    @Override
    public void onBindViewHolder(@NonNull VocabItemAdapter.VocabItemViewHolder holder,
                                 @SuppressLint("RecyclerView") int position)   {
        VocabItem item = vocabItems.get(position);
        texts text2 = new texts();
        cerotofifty gen = new cerotofifty();
        NewNounClass  nouns= new NewNounClass();
        String[] subjectsEnglish = {"I ", "You ", "He ", "She ", "We ", "They "};
        itemType=item.getType();
        String tit;

        holder.checarRespBtn.setVisibility(View.GONE);
        holder.continuarBtn.setVisibility(View.GONE);
        holder.description.setVisibility(View.GONE);
        holder.ejemplostxt.setVisibility(View.GONE);
        holder.mic.setVisibility(View.GONE);
        holder.comoDirias.setVisibility(View.GONE);
        holder.respCorrecta.setVisibility(View.GONE);
        holder.definition.setVisibility(View.VISIBLE);
        holder.definition.setTypeface(null, Typeface.BOLD);
        holder.title.setText(String.valueOf(position)+"."+item.getTitle());
        holder.title.setPaintFlags(holder.title.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);
        tit=holder.title.getText().toString();
        // sets original colors of buttons
        holder.definition.setText(item.getDefinition());
        holder.userInput.setText(item.getUserInput());
        holder.practicaBtn.setVisibility(View.VISIBLE);
        holder.ejemplosBtn.setVisibility(View.VISIBLE);
        holder.masInfoBtn.setVisibility(View.VISIBLE);
        if(tit.equalsIgnoreCase("0.the")&& !hasSeenDialogue){
            hasSeenDialogue=true;

        }



        if(prefs.getHasSeenAd()||prefs.getPremium()==1){
            //holder.ejemplosBtn.setBackgroundResource(R.drawable.borde_azul);
            //holder.ejemplosBtn.(Color.BLUE);
            holder.ejemplosBtn.setVisibility(View.VISIBLE);
            holder.practicaBtn.setBackgroundResource(R.drawable.borde_azul);
            holder.practicaBtn.setTextColor(Color.BLUE);
            holder.practicaBtn.setVisibility(View.VISIBLE);
            holder.practicaBtn.setText("Practicar");
            holder.masInfoBtn.setBackgroundResource(R.drawable.borde_azul);
            holder.masInfoBtn.setTextColor(Color.BLUE);
            holder.masInfoBtn.setVisibility(View.VISIBLE);
        }else {
            holder.ejemplosBtn.setVisibility(View.GONE);
            holder.masInfoBtn.setVisibility(View.GONE);
            holder.practicaBtn.setText("Ver Anuncio Para Desbloquear");
            holder.practicaBtn.setBackgroundResource(R.drawable.borde_azul);
            holder.practicaBtn.setTextColor(Color.BLUE);
        }
        if(!holder.userInput.getText().toString().isEmpty()){
            holder.userInput.setVisibility(View.VISIBLE);
            holder.checarRespBtn.setVisibility(View.VISIBLE);
            holder.practicaBtn.setVisibility(View.GONE);
            holder.comoDirias.setVisibility(View.GONE);

        }
        //BTN EJEMPLO
        holder.ejemplosBtn.setOnClickListener(new View.OnClickListener() {
                                                  @Override
                                                  public void onClick(View v) {

                                                      int rv = (int) (Math.random() * subjectsEnglish.length);
                                                      String pronoun = subjectsEnglish[rv];
                                                      // Change the button's background color to green.
                                                      //set the examples
                                                      String sp;

                                                      cerotofifty gen = new cerotofifty();
                                                      Generator gen1 = new Generator();
                                                      Generator gen2 = new Generator();
                                                      Generator genA = new Generator();
                                                      AuxModalNegator negator = new AuxModalNegator();
                                                      Nobles n = new Nobles();
                                                      sp = "first value";
                                                      String complemento, complement, complement2;
                                                      switch (position) {
                                                          case 0:
                                                              // the
                                                              if (item.getType() == 1) {
                                                                  int r2 = (int) (Math.random() * 3);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          object.GenPresSimp();
                                                                          sp = object.gens + "-" + object.gene;

                                                                          break;
                                                                      case 1:
                                                                          gen1.GenPresSimp2();
                                                                          sp = gen1.gens + "-" + gen1.gene;
                                                                          break;
                                                                      case 2:
                                                                          object.GenPresSimp();
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negatePresentSimpleContracted(object.gene);
                                                                          break;
                                                                  }


                                                              } else if (item.getType() == 0) {
                                                                  gen.artob(0);
                                                                  sp = gen.ob + " - " + gen.eng;
                                                              } else if (item.getType() == 2) {
                                                                  object.GenConj("and", "y");
                                                                  int r = (int) (Math.random() * 2);
                                                                  complemento = "";
                                                                  complement = "";
                                                                  switch (r) {

                                                                      case 0:
                                                                          object2.GenPresSimp();
                                                                          complemento = object2.gens;
                                                                          complement = object2.gene;
                                                                          break;

                                                                      case 1:
                                                                          gen1.GenPresSimp2();
                                                                          complemento = gen1.gens;
                                                                          complement = gen1.gene;
                                                                          break;
                                                                      default:
                                                                          complemento = "no object activated";
                                                                          complement = "no object activated";
                                                                          break;
                                                                  }
                                                                  sp = object.gens + " " + complemento + "-" + object.gene + " " + complement;
                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 1:
                                                              // to be
                                                              if (item.getType() == 0) {
                                                                  gen.tobe();
                                                                  sp = gen.gens + " - " + gen.gene;
                                                              } else if (item.getType() == 1) {
                                                                  int r2 = (int) (Math.random() * 4);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          gen1.GenPresCont2();
                                                                          sp = gen1.gens + "-" + gen1.gene + "-" + negator.contractPresentContinuousPresent(gen1.gene);
                                                                          break;
                                                                      case 1:
                                                                          object.GenContTenses("am ", "are ", "is ", "estoy ", "estas ", "esta ", "estamos ", "estan ");
                                                                          sp = object.gens + "-" + object.gene + "-" + negator.contractPresentContinuousPresent(object.gene);

                                                                          break;
                                                                      case 2:
                                                                          object.GenContTenses("am ", "are ", "is ", "estoy ", "estas ", "esta ", "estamos ", "estan ");
                                                                          // present continuous contracted not negated
                                                                          String negatedNotContracted = negator.negateFirstAuxOrModal(object.gene);
                                                                          String negatedContracted = negator.negateFirstAuxOrModalContracted(object.gene);
                                                                          String contractedToBeAndNegated = negator.negateAndContractPresentContinuous(negatedNotContracted);
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negatedNotContracted + "-" + negatedContracted + "-" + contractedToBeAndNegated;
                                                                          break;
                                                                      case 3:
                                                                          gen1.GenPresCont2();// present continuous contracted not negated
                                                                          String negatedNotContracted2 = negator.negateFirstAuxOrModal(gen1.gene);
                                                                          String negatedContracted2 = negator.negateFirstAuxOrModalContracted(gen1.gene);
                                                                          String contractedToBeAndNegated2 = negator.negateAndContractPresentContinuous(negatedNotContracted2);
                                                                          sp = negator.negateSentenceSpanish(gen1.gens) + "-" + negatedNotContracted2 + "-" + negatedContracted2 + "-" + contractedToBeAndNegated2;

                                                                          break;
                                                                  }

                                                              } else if (item.getType() == 2) {
                                                                  n.GenRelativeClauses1New();
                                                                  sp = n.gens + " - " + n.gene;

                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 2:
                                                              // Adapted case 2 logic to mirror case 1's structure
                                                              if (item.getType() == 0) {
                                                                  gen.advpronverb(4); // Assuming this needs to be called for type 0 in case 2
                                                                  sp = gen.gens + " - " + gen.gene;
                                                              } else if (item.getType() == 1) {

                                                                  int r2 = (int) (Math.random() * 3);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          gen1.GenPresPerf2();
                                                                          sp = gen1.gens + "-" + gen1.gene;
                                                                          break;

                                                                      case 1:
                                                                          object.GenPerfectTenses("have ", "has ", "he ", "has ", "ha ", "hemos ", "han ");
                                                                          sp = object.gens + "-" + object.gene;
                                                                          break;
                                                                      case 2:
                                                                          object.GenPerfectTenses("have ", "has ", "he ", "has ", "ha ", "hemos ", "han ");
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negateFirstAuxOrModalContracted(object.gene);

                                                                          break;

                                                                  }


                                                              } else if (item.getType() == 2) {
                                                                  //but para conectores
                                                                  object.GenConj("but", "pero");
                                                                  int r = (int) (Math.random() * 2);
                                                                  complemento = "";
                                                                  complement = "";
                                                                  switch (r) {
                                                                      case 0:
                                                                          object2.GenPresSimp();
                                                                          complemento = object2.gens;
                                                                          complement = object2.gene;
                                                                          break;

                                                                      case 1:
                                                                          gen1.GenPresSimp2();
                                                                          complemento = gen1.gens;
                                                                          complement = gen1.gene;
                                                                          break;
                                                                      default:
                                                                          complemento = "no object activated";
                                                                          complement = "no object activated";
                                                                          break;
                                                                  }
                                                                  sp = object.gens + " " + complemento + "-" + object.gene + " " + complement;

                                                              } else if (item.getType() == 3) {

                                                              }
                                                              break;
                                                          case 3:
                                                              //of
                                                              if (item.getType() == 0) {
                                                                  gen.prepartob(0);
                                                                  sp = gen.ob + " - " + gen.eng;
                                                              } else if (item.getType() == 1) {


                                                                  int r2 = (int) (Math.random() * 4);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          gen1.GenPresPerfCont2();
                                                                          sp = gen1.gens + "-" + gen1.gene;
                                                                          break;

                                                                      case 1:
                                                                          object.GenContTenses("have been ", "have been ", "has been ", "he estado ", "has estado ", "ha estado ", "hemos estado ", "han estado ");
                                                                          sp = object.gens + "-" + object.gene;
                                                                          break;
                                                                      case 2:
                                                                          object.GenContTenses("have been ", "have been ", "has been ", "he estado ", "has estado ", "ha estado ", "hemos estado ", "han estado ");
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negateFirstAuxOrModal(object.gene);

                                                                          break;
                                                                      case 3:
                                                                          object.GenContTenses("have been ", "have been ", "has been ", "he estado ", "has estado ", "ha estado ", "hemos estado ", "han estado ");
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negateFirstAuxOrModalContracted(object.gene);

                                                                          break;
                                                                  }
                                                              } else if (item.getType() == 2) {

                                                                  object.GenConj("or", "o");
                                                                  int r = (int) (Math.random() * 2);
                                                                  complemento = "";
                                                                  complement = "";
                                                                  switch (r) {
                                                                      case 0:
                                                                          object2.GenPresSimp();
                                                                          complemento = object2.gens;
                                                                          complement = object2.gene;
                                                                          break;

                                                                      case 1:
                                                                          gen1.GenPresSimp2();
                                                                          complemento = gen1.gens;
                                                                          complement = gen1.gene;
                                                                          break;
                                                                      default:
                                                                          complemento = "no object activated";
                                                                          complement = "no object activated";
                                                                          break;
                                                                  }
                                                                  sp = object.gens + " " + complemento + "-" + object.gene + " " + complement;
                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 4:
                                                              //a
                                                              if (item.getType() == 0) {
                                                                  gen.artoba();
                                                                  sp = gen.ob + " - " + gen.eng;
                                                              } else if (item.getType() == 1) {

                                                                  int r2 = (int) (Math.random() * 3);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          gen1.GenPastSimp2();
                                                                          sp = gen1.gens + "-" + gen1.gene;
                                                                          break;
                                                                      case 1:
                                                                          object.GenPastSimp();
                                                                          sp = object.gens + "-" + object.gene;
                                                                          break;
                                                                      case 2:

                                                                          object.GenPastSimp();
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negatePastSimple(object.gene2);

                                                                          break;
                                                                  }
                                                              } else if (item.getType() == 2) {
                                                                  //as trans
                                                                  Nobles n1 = new Nobles();
                                                                  int pos1 = (int) (Math.random() * 6);
                                                                  n1.GenPresSimpAs(pos1);
                                                                  int r = (int) (Math.random() * 2);
                                                                  complemento = "";
                                                                  complement = "";
                                                                  switch (r) {
                                                                      case 0:
                                                                          object2.GenPresSimp();
                                                                          complemento = object2.gens;
                                                                          complement = object2.gene;
                                                                          break;

                                                                      case 1:
                                                                          gen1.GenPresSimp2();
                                                                          complemento = gen1.gens;
                                                                          complement = gen1.gene;
                                                                          break;
                                                                      default:
                                                                          complemento = "no object activated";
                                                                          complement = "no object activated";
                                                                          break;
                                                                  }

                                                                  sp = n1.gens + complemento + " - " + n1.gene + complement;

                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 5:
                                                              // in
                                                              if (item.getType() == 0) {
                                                                  gen.prepartob(1);
                                                                  sp = gen.ob + " - " + gen.eng;
                                                              } else if (item.getType() == 1) {


                                                                  int r2 = (int) (Math.random() * 4);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          gen1.GenPastCont2();
                                                                          sp = gen1.gens + "-" + gen1.gene;
                                                                          break;
                                                                      case 1:
                                                                          object.GenContTenses("was ", "were ", "was ", "estaba ", "estabas ", "estaba ", "estabamos ", "estaban ");
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negateFirstAuxOrModalContracted(object.gene);

                                                                          break;
                                                                      case 2:
                                                                          object.GenContTenses("was ", "were ", "was ", "estaba ", "estabas ", "estaba ", "estabamos ", "estaban ");
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negateFirstAuxOrModal(object.gene);
                                                                          break;
                                                                      case 3:
                                                                          object.GenContTenses("was ", "were ", "was ", "estaba ", "estabas ", "estaba ", "estabamos ", "estaban ");
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negateFirstAuxOrModalContracted(object.gene);
                                                                          break;
                                                                  }
                                                              } else if (item.getType() == 2) {
                                                                  //if trans
                                                                  complemento = "";
                                                                  complement = "";
                                                                  String oracionsp = "";
                                                                  String oracioneng = "";
                                                                  int r = (int) (Math.random() * 2);
                                                                  switch (r) {
                                                                      case 0:
                                                                          object.GenConjFuture("if ", "si ");
                                                                          object2.GenPresSimp();
                                                                          oracionsp = object.gens;
                                                                          oracioneng = object.gene;
                                                                          complemento = object2.gens;
                                                                          complement = object2.gene;

                                                                          sp = oracionsp + complemento + "-" + oracioneng + complement;
                                                                          break;

                                                                      case 1:
                                                                          object.GenConj("if ", "si ");
                                                                          object2.GenPresSimp();
                                                                          oracionsp = object.gens;
                                                                          oracioneng = object.gene;
                                                                          complemento = object2.gens;
                                                                          complement = object2.gene;
                                                                          sp = oracionsp + complemento + "-" + oracioneng + complement;

                                                                          break;

                                                                      default:
                                                                          sp = "no hay valor";
                                                                          break;
                                                                  }


                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 6:
                                                              //to infinitive
                                                              if (item.getType() == 0) {
                                                                  gen1.GenInfinitives();
                                                                  sp = gen1.ob + " - " + gen1.eng;
                                                              } else if (item.getType() == 1) {


                                                                  int r2 = (int) (Math.random() * 4);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          gen1.GenPastPerf2();
                                                                          sp = gen1.gens + "-" + gen1.gene;
                                                                          break;
                                                                      case 1:
                                                                          object.GenPerfectTenses("had ", "had ", "había ", "habías ", "había ", "habíamos ", "habían ");
                                                                          sp = object.gens + "-" + object.gene;
                                                                          break;
                                                                      case 2:
                                                                          object.GenPerfectTenses("had ", "had ", "había ", "habías ", "había ", "habíamos ", "habían ");
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negateFirstAuxOrModal(object.gene);

                                                                          break;
                                                                      case 3:
                                                                          object.GenPerfectTenses("had ", "had ", "había ", "habías ", "había ", "habíamos ", "habían ");
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negateFirstAuxOrModalContracted(object.gene);


                                                                          break;
                                                                  }

                                                              } else if (item.getType() == 2) {
                                                                  //when trans
                                                                  int r = (int) (Math.random() * 2);
                                                                  complemento = "";
                                                                  complement = "";
                                                                  String oracionsp = "";
                                                                  String oracioneng = "";
                                                                  switch (r) {
                                                                      case 0:
                                                                          object.GenConjFuture("when ", "cuando ");
                                                                          object2.GenPresSimpSubjunctive();
                                                                          complemento = object2.gens;
                                                                          complement = object2.gene;

                                                                          oracionsp = object.gens;
                                                                          oracioneng = object.gene;
                                                                          break;

                                                                      case 1:
                                                                          object.GenConj("when ", "cuando ");
                                                                          gen1.GenPresSimp2();
                                                                          complemento = gen1.gens;
                                                                          complement = gen1.gene;

                                                                          oracionsp = object.gens;
                                                                          oracioneng = object.gene;
                                                                          break;
                                                                      default:
                                                                          complemento = "no object activated";
                                                                          complement = "no object activated";
                                                                          break;
                                                                  }

                                                                  sp = oracionsp + complemento + "- " + oracioneng + complement;

                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 7:
                                                              //have
                                                              if (item.getType() == 0) {
                                                                  int pos = (int) (Math.random() * 6);
                                                                  n.GenPresSimp(pos, 0);
                                                                  sp = n.gens + " - " + n.gene;
                                                              } else if (item.getType() == 1) {


                                                                  int r2 = (int) (Math.random() * 4);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          gen1.GenPastPerfCont2();
                                                                          sp = gen1.gens + "-" + gen1.gene;
                                                                          break;
                                                                      case 1:
                                                                          object.GenContTenses("had been ", "had been ", "had been ", "había estado ", "habías estado ", "había estado ", "habíamos estado ", "habían estado ");
                                                                          sp = object.gens + "-" + object.gene;
                                                                          break;
                                                                      case 2:
                                                                          object.GenContTenses("had been ", "had been ", "had been ", "había estado ", "habías estado ", "había estado ", "habíamos estado ", "habían estado ");
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negateFirstAuxOrModal(object.gene);

                                                                          break;
                                                                      case 3:
                                                                          object.GenContTenses("had been ", "had been ", "had been ", "había estado ", "habías estado ", "había estado ", "habíamos estado ", "habían estado ");
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negateFirstAuxOrModalContracted(object.gene);


                                                                          break;
                                                                  }
                                                              } else if (item.getType() == 2) {
                                                                  //because trans
                                                                  int r = (int) (Math.random() * 4);
                                                                  complemento = "";
                                                                  complement = "";
                                                                  complement2 = "";
                                                                  String oracionsp = "";
                                                                  String oracioneng = "";
                                                                  switch (r) {
                                                                      case 0:
                                                                          object.GenConjFuture("because ", "por que ");
                                                                          object2.GenPresSimp();
                                                                          complemento = object2.gens;
                                                                          complement = object2.gene;

                                                                          oracionsp = object.gens;
                                                                          oracioneng = object.gene;
                                                                          sp = oracionsp + complemento + "- " + oracioneng + complement;
                                                                          break;

                                                                      case 1:
                                                                          gen1.GenPastSimp2();
                                                                          gen2.GenPastPerf2();

                                                                          complemento = gen1.gens;
                                                                          complement = gen1.gene;

                                                                          oracionsp = gen2.gens;
                                                                          oracioneng = gen2.gene;
                                                                          complement2 = gen2.gene2;
                                                                          sp = oracionsp + "por que " + complemento + "- " + oracioneng + "because " + complement;
                                                                          break;

                                                                      case 2:
                                                                          object.GenConj("because ", "por que ");
                                                                          object2.GenPresSimp();
                                                                          complemento = object2.gens;
                                                                          complement = object2.gene;

                                                                          oracionsp = object.gens;
                                                                          oracioneng = object.gene;
                                                                          sp = oracionsp + complemento + "- " + oracioneng + complement;
                                                                          break;


                                                                      case 3:
                                                                          object.GenConjFuture("because ", "por que ");
                                                                          gen1.GenPresPerf2();
                                                                          complemento = gen1.gens;
                                                                          complement = gen1.gene;

                                                                          oracionsp = object.gens;
                                                                          oracioneng = object.gene;
                                                                          sp = oracionsp + complemento + "- " + oracioneng + complement;

                                                                          break;
                                                                      default:
                                                                          complemento = "no object activated";
                                                                          complement = "no object activated";
                                                                          break;
                                                                  }


                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 8:
                                                              //to preposition
                                                              if (item.getType() == 0) {
                                                                  gen.prepartob(2);
                                                                  sp = gen.ob + " - " + gen.eng;
                                                              } else if (item.getType() == 1) {

                                                                  int r2 = (int) (Math.random() * 6);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          //lo cambie pera que solo diera affirmativo
                                                                          gen1.GenFutSimp2();
                                                                          sp = gen1.gens + "-" + gen1.gene;
                                                                          break;
                                                                      case 1:
                                                                          object.GenFuture();
                                                                          sp = object.gens + "-" + object.gene;
                                                                          break;
                                                                      case 2:
                                                                          // will not
                                                                          object.GenFuture();
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negateFirstAuxOrModal(object.gene);
                                                                          break;
                                                                      case 3:
                                                                          //wont
                                                                          object.GenFuture();
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negateFirstAuxOrModalContracted(object.gene);
                                                                          break;
                                                                      case 4:
                                                                          // wont contracted del generator
                                                                          gen1.GenFutSimp2();
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negateFirstAuxOrModalContracted(object.gene);
                                                                          break;
                                                                      case 5:
                                                                          // will not  contracted del generator
                                                                          gen1.GenFutSimp2();
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negateFirstAuxOrModal(object.gene);
                                                                          break;
                                                                  }
                                                              } else if (item.getType() == 2) {
                                                                  //while trans
                                                                  int r = (int) (Math.random() * 2);
                                                                  complemento = "";
                                                                  complement = "";
                                                                  complement2 = "";
                                                                  String oracionsp = "";
                                                                  String oracioneng = "";
                                                                  switch (r) {
                                                                      case 0:
                                                                          object.GenConjFuture("while ", "mientras que ");
                                                                          object2.GenPresSimpSubjunctive();
                                                                          complemento = object2.gens;
                                                                          complement = object2.gene;

                                                                          oracionsp = object.gens;
                                                                          oracioneng = object.gene;
                                                                          sp = oracionsp + complemento + "- " + oracioneng + complement;
                                                                          break;


                                                                      case 1:
                                                                          object.GenConj("while ", "mientras que ");
                                                                          object2.GenPresSimp();
                                                                          complemento = object2.gens;
                                                                          complement = object2.gene;

                                                                          oracionsp = object.gens;
                                                                          oracioneng = object.gene;
                                                                          sp = oracionsp + complemento + "- " + oracioneng + complement;
                                                                          break;

                                                                      default:
                                                                          complemento = "no object activated";
                                                                          complement = "no object activated";
                                                                          break;
                                                                  }

                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 9:
                                                              //it
                                                              if (item.getType() == 0) {
                                                                  gen.pronverb("eso ");
                                                                  sp = gen.gens + "- " + gen.gene;
                                                              } else if (item.getType() == 1) {
                                                                  int r2 = (int) (Math.random() * 5);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          gen1.GenFutCont2();
                                                                          sp = gen1.gens + "-" + gen1.gene;
                                                                          break;
                                                                      case 1:
                                                                          object.GenContTenses("will be ", "will be ", "will be ", "estaré ", "estarás ", "estará ", "estarémos ", "estarán ");
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negateFirstAuxOrModal(object.gene);
                                                                          break;
                                                                      case 2:
                                                                          object.GenContTenses("will be ", "will be ", "will be ", "estaré ", "estarás ", "estará ", "estarémos ", "estarán ");
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negateFirstAuxOrModalContracted(object.gene);
                                                                          break;
                                                                      case 3:
                                                                          gen1.GenFutCont2();
                                                                          sp = negator.negateSentenceSpanish(gen1.gens) + "-" + negator.negateFirstAuxOrModal(gen1.gene);
                                                                          break;
                                                                      case 4:
                                                                          object.GenContTenses("will be ", "will be ", "will be ", "estaré ", "estarás ", "estará ", "estarémos ", "estarán ");
                                                                          sp = object.gens + "-" + object.gene;
                                                                          break;
                                                                  }

                                                              } else if (item.getType() == 2) {
                                                                  //where trans
                                                                  int r = (int) (Math.random() * 2);
                                                                  complemento = "";
                                                                  complement = "";
                                                                  complement2 = "";
                                                                  String oracionsp = "";
                                                                  String oracioneng = "";
                                                                  switch (r) {
                                                                      case 0:
                                                                          object.GenConjFuture("where ", "donde ");
                                                                          object2.GenPresSimpSubjunctive();
                                                                          complemento = object2.gens;
                                                                          complement = object2.gene;

                                                                          oracionsp = object.gens;
                                                                          oracioneng = object.gene;
                                                                          sp = oracionsp + complemento + "- " + oracioneng + complement;
                                                                          break;


                                                                      case 1:
                                                                          object.GenConj("where ", "donde ");
                                                                          object2.GenPresSimp();
                                                                          complemento = object2.gens;
                                                                          complement = object2.gene;

                                                                          oracionsp = object.gens;
                                                                          oracioneng = object.gene;
                                                                          sp = oracionsp + complemento + "- " + oracioneng + complement;
                                                                          break;

                                                                      default:
                                                                          complemento = "no object activated";
                                                                          complement = "no object activated";
                                                                          break;
                                                                  }

                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 10:
                                                              //i
                                                              if (item.getType() == 0) {
                                                                  gen.pronverb("yo ");
                                                                  sp = gen.gens + "- " + gen.gene;
                                                              } else if (item.getType() == 1) {

                                                                  int r2 = (int) (Math.random() * 5);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          gen1.GenFutPerf2();
                                                                          sp = gen1.gens + "-" + gen1.gene;
                                                                          break;
                                                                      case 1:
                                                                          object.GenPerfectTenses("will have ", "will have ", "habré ", "habrás ", "habrá ", "habrémos ", "habrán ");
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negateFirstAuxOrModal(object.gene);
                                                                          break;
                                                                      case 2:
                                                                          object.GenPerfectTenses("will have ", "will have ", "habré ", "habrás ", "habrá ", "habrémos ", "habrán ");
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negateFirstAuxOrModalContracted(object.gene);
                                                                          break;
                                                                      case 3:
                                                                          gen1.GenFutPerf2();
                                                                          sp = negator.negateSentenceSpanish(gen1.gens) + "-" + negator.negateFirstAuxOrModal(gen1.gene);
                                                                          break;
                                                                      case 5:
                                                                          object.GenPerfectTenses("will have ", "will have ", "habré ", "habrás ", "habrá ", "habrémos ", "habrán ");
                                                                          sp = object.gens + "-" + object.gene;
                                                                          break;
                                                                  }

                                                              } else if (item.getType() == 2) {
                                                                  //so trans
                                                                  int r = (int) (Math.random() * 3);
                                                                  complemento = "";
                                                                  complement = "";
                                                                  complement2 = "";
                                                                  String oracionsp = "";
                                                                  String oracioneng = "";
                                                                  switch (r) {
                                                                      case 0:
                                                                          object.GenPastSimp();
                                                                          object2.GenPresSimpAdverbs3("so ", "asi que ");
                                                                          complemento = object2.gens;
                                                                          complement = object2.gene;

                                                                          oracionsp = object.gens;
                                                                          oracioneng = object.gene;
                                                                          sp = oracionsp + complemento + "- " + oracioneng + complement;
                                                                          break;

                                                                      case 1:
                                                                          object.GenPresSimp();
                                                                          object2.GenPresSimpAdverbs3("so ", "asi que ");
                                                                          complemento = object2.gens;
                                                                          complement = object2.gene;

                                                                          oracionsp = object.gens;
                                                                          oracioneng = object.gene;
                                                                          sp = oracionsp + complemento + "- " + oracioneng + complement;
                                                                          break;
                                                                      case 2:
                                                                          object.GenPastSimp();
                                                                          oracionsp = object.gens;
                                                                          oracioneng = object.gene;

                                                                          object2.GenConjFuture("", "");
                                                                          complemento = object2.gens;
                                                                          complement = object2.gene;

                                                                          sp = oracionsp + "asi que " + complemento + "- " + oracioneng + "so " + complement;
                                                                          break;

                                                                      default:
                                                                          complemento = "no object activated";
                                                                          complement = "no object activated";
                                                                          break;
                                                                  }


                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 11:
                                                              // that para conectar
                                                              if (item.getType() == 0) {
                                                                  int r = (int) (Math.random() * 2);
                                                                  n.GenRelativeClauses1(r);
                                                                  sp = n.gens + " - " + n.gene;
                                                              } else if (item.getType() == 1) {

                                                                  int r2 = (int) (Math.random() * 5);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          gen1.GenFutPerfCont2();
                                                                          sp = gen1.gens + "-" + gen1.gene;
                                                                          break;
                                                                      case 1:
                                                                          object.GenContTenses("will have been ", "will have been ", "will have been ", "habré estado ", "habrás estado ", "habrá estado ", "habrémos estado ", "habrán estado ");
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negateFirstAuxOrModal(object.gene);
                                                                          break;
                                                                      case 2:
                                                                          object.GenContTenses("will have been ", "will have been ", "will have been ", "habré estado ", "habrás estado ", "habrá estado ", "habrémos estado ", "habrán estado ");
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negateFirstAuxOrModalContracted(object.gene);
                                                                          break;
                                                                      case 3:
                                                                          gen1.GenFutPerfCont2();
                                                                          sp = negator.negateSentenceSpanish(gen1.gens) + "-" + negator.negateFirstAuxOrModal(gen1.gene);
                                                                          break;
                                                                      case 4:
                                                                          object.GenContTenses("will have been ", "will have been ", "will have been ", "habré estado ", "habrás estado ", "habrá estado ", "habrémos estado ", "habrán estado ");
                                                                          sp = object.gens + "-" + object.gene;
                                                                          break;
                                                                  }

                                                              } else if (item.getType() == 2) {
                                                                  //though trans
                                                                  int r = (int) (Math.random() * 3);
                                                                  complemento = "";
                                                                  complement = "";
                                                                  complement2 = "";
                                                                  String oracionsp = "";
                                                                  String oracioneng = "";
                                                                  switch (r) {
                                                                      case 0:
                                                                          object.GenPastSimp();
                                                                          oracionsp = object.gens;
                                                                          oracioneng = object.gene;
                                                                          object2.GenPastSimp();
                                                                          complemento = object2.gens;
                                                                          complement = object2.gene;
                                                                          sp = oracionsp + " aún que " + complemento + "-" + oracioneng + "though " + complement;
                                                                          break;

                                                                      case 1:

                                                                          object.GenPastSimp();
                                                                          oracionsp = negator.negateSentenceSpanish(object.gens);

                                                                          oracioneng = negator.negatePastSimple(object.gene2);
                                                                          object2.GenPastSimp();
                                                                          complemento = object2.gens;
                                                                          complement = object2.gene;

                                                                          sp = oracionsp + " aún que " + complemento + "-" + oracioneng + "though " + complement;

                                                                          break;
                                                                      case 2:
                                                                          object.GenConjFuture("though ", "aun que ");
                                                                          oracionsp = object.gens;
                                                                          oracioneng = object.gene;
                                                                          object2.GenPresSimpSubjunctive();
                                                                          complemento = object2.gens;
                                                                          complement = object2.gene;
                                                                          sp = oracionsp + complemento + "-" + oracioneng + complement;

                                                                          break;

                                                                      default:
                                                                          complemento = "no object activated";
                                                                          complement = "no object activated";
                                                                          break;
                                                                  }


                                                              } else if (item.getType() == 3) {
                                                              }
                                                              break;
                                                          case 12:
                                                              //for como prep
                                                              if (item.getType() == 0) {
                                                                  gen.prepartob(3);
                                                                  sp = gen.ob + " - " + gen.eng;
                                                              } else if (item.getType() == 1) {
                                                                  int r2 = (int) (Math.random() * 4);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          //made it so it is only positive now
                                                                          gen1.GenWouldSimp2();
                                                                          sp = gen1.gens + "-" + gen1.gene;
                                                                          break;
                                                                      case 1:
                                                                          object.GenWould();
                                                                          sp = object.gens + "-" + object.gene;
                                                                          break;
                                                                      case 2:
                                                                          gen1.GenWouldSimp2();
                                                                          sp = negator.negateSentenceSpanish(gen1.gens) + "-" + negator.negateFirstAuxOrModal(gen1.gene);
                                                                          break;
                                                                      case 3:
                                                                          object.GenWould();
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negateFirstAuxOrModal(object.gene);
                                                                          break;

                                                                  }

                                                              } else if (item.getType() == 2) {
                                                                  //after trans
                                                                  int r = (int) (Math.random() * 3);
                                                                  complemento = "";
                                                                  complement = "";
                                                                  complement2 = "";
                                                                  String oracionsp = "";
                                                                  String oracioneng = "";
                                                                  switch (r) {
                                                                      case 0:
                                                                          object.GenConjFuture("after ", "después de que ");
                                                                          oracionsp = object.gens;
                                                                          oracioneng = object.gene;
                                                                          object2.GenPresSimpSubjunctive();
                                                                          complemento = object2.gens;
                                                                          complement = object2.gene;
                                                                          sp = oracionsp + complemento + "-" + oracioneng + complement;

                                                                          break;

                                                                      case 1:
                                                                          object.GenPastSimp();
                                                                          oracionsp = object.gens;
                                                                          oracioneng = object.gene;
                                                                          object2.GenPastSimp();
                                                                          complemento = object2.gens;
                                                                          complement = object2.gene;
                                                                          sp = oracionsp + "después de que " + complemento + "-" + oracioneng + "after " + complement;
                                                                          break;

                                                                      case 2:
                                                                          object.GenPresSimp();
                                                                          oracionsp = object.gens;
                                                                          oracioneng = object.gene;
                                                                          object2.GenPvpp();
                                                                          complemento = object2.gens;
                                                                          complement = object2.gene;
                                                                          sp = oracionsp + "después de que " + complemento + "-" + oracioneng + "after " + complement;


                                                                          break;

                                                                      default:
                                                                          complemento = "no object activated";
                                                                          complement = "no object activated";
                                                                          break;
                                                                  }

                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 13:
                                                              //you
                                                              if (item.getType() == 0) {
                                                                  gen.pronverb("tú ");
                                                                  sp = gen.gens + "- " + gen.gene;
                                                              } else if (item.getType() == 1) {

                                                                  int r2 = (int) (Math.random() * 4);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          //made it so it is only positive now
                                                                          gen1.GenWouldCont2();
                                                                          sp = gen1.gens + "-" + gen1.gene;
                                                                          break;
                                                                      case 1:
                                                                          object.GenContTenses("would be ", "would be ", "would be ", "estaría ", "estarías ", "estaría ", "estaríamos ", "estarían ");
                                                                          sp = object.gens + "-" + object.gene;
                                                                          break;
                                                                      case 2:
                                                                          object.GenContTenses("would be ", "would be ", "would be ", "estaría ", "estarías ", "estaría ", "estaríamos ", "estarían ");
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negateFirstAuxOrModal(object.gene);
                                                                          break;
                                                                      case 3:
                                                                          gen1.GenWouldCont2();
                                                                          sp = negator.negateSentenceSpanish(gen1.gens) + "-" + negator.negateFirstAuxOrModal(gen1.gene);
                                                                          break;

                                                                  }


                                                              } else if (item.getType() == 2) {
                                                                  //since trans

                                                                  int r = (int) (Math.random() * 3);
                                                                  complemento = "";
                                                                  complement = "";
                                                                  complement2 = "";
                                                                  String oracionsp = "";
                                                                  String oracioneng = "";


                                                                  switch (r) {
                                                                      case 0:
                                                                          object.GenPerfectTenses("have ", "has ", "he ", "has ", "ha ", "hemos ", "han ");
                                                                          oracionsp = object.gens;
                                                                          oracioneng = object.gene;
                                                                          object2.GenContTenses("was ", "were ", "was ", "estaba ", "estabas ", "estaba ", "estabamos ", "estaban ");
                                                                          complemento = object2.gens;
                                                                          complement = object2.gene;
                                                                          sp = oracionsp + "desde que " + complemento + "-" + oracioneng + "since " + complement;
                                                                          break;

                                                                      case 1:
                                                                          object.GenPerfectTenses("had ", "had ", "había ", "habías ", "había ", "habíamos ", "habían ");
                                                                          oracionsp = object.gens;
                                                                          oracioneng = object.gene;
                                                                          object2.GenContTenses("was ", "were ", "was ", "estaba ", "estabas ", "estaba ", "estabamos ", "estaban ");
                                                                          complemento = object2.gens;
                                                                          complement = object2.gene;
                                                                          sp = oracionsp + "desde que " + complemento + "-" + oracioneng + "since " + complement;
                                                                          break;

                                                                      case 2:
                                                                          object.GenPastSimp();
                                                                          oracionsp = object.gens;
                                                                          oracioneng = object.gene;
                                                                          object2.GenContTenses("was ", "were ", "was ", "estaba ", "estabas ", "estaba ", "estabamos ", "estaban ");
                                                                          complemento = object2.gens;
                                                                          complement = object2.gene;
                                                                          sp = oracionsp + "desde que " + complemento + "-" + oracioneng + "since " + complement;


                                                                          break;

                                                                      default:
                                                                          complemento = "no object activated";
                                                                          complement = "no object activated";
                                                                          break;
                                                                  }

                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 14:
                                                              //he
                                                              if (item.getType() == 0) {
                                                                  gen.pronverb("él ");
                                                                  sp = gen.gens + "- " + gen.gene;
                                                              } else if (item.getType() == 1) {
                                                                  int r2 = (int) (Math.random() * 4);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          //made it so it is only positive now
                                                                          gen1.GenWouldPerf2();
                                                                          sp = gen1.gens + "-" + gen1.gene;
                                                                          break;
                                                                      case 1:
                                                                          object.GenPerfectTenses("would have ", "would have ", "habría ", "habrías ", "habría ", "habríamos ", "habrían ");
                                                                          sp = object.gens + "-" + object.gene;

                                                                          break;
                                                                      case 2:
                                                                          object.GenPerfectTenses("would have ", "would have ", "habría ", "habrías ", "habría ", "habríamos ", "habrían ");
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negateFirstAuxOrModalContracted(object.gene);
                                                                          break;
                                                                      case 3:
                                                                          gen1.GenWouldPerf2();
                                                                          sp = negator.negateSentenceSpanish(gen1.gens) + "-" + negator.negateFirstAuxOrModal(gen1.gene);
                                                                          break;
                                                                  }
                                                              } else if (item.getType() == 2) {
                                                                  //until trans

                                                                  int r = (int) (Math.random() * 2);
                                                                  complemento = "";
                                                                  complement = "";
                                                                  complement2 = "";
                                                                  String oracionsp = "";
                                                                  String oracioneng = "";
                                                                  switch (r) {
                                                                      case 0:
                                                                          object2.GenContTenses("was ", "were ", "was ", "estaba ", "estabas ", "estaba ", "estabamos ", "estaban ");
                                                                          oracionsp = object2.gens;
                                                                          oracioneng = object2.gene;
                                                                          object.GenPastSimp();
                                                                          complemento = object.gens;
                                                                          complement = object.gene;
                                                                          sp = oracionsp + "hasta que " + complemento + "-" + oracioneng + "until " + complement;
                                                                          break;

                                                                      case 1:
                                                                          object2.GenContTenses("was ", "were ", "was ", "estaba ", "estabas ", "estaba ", "estabamos ", "estaban ");
                                                                          oracionsp = object2.gens;
                                                                          oracioneng = object2.gene;
                                                                          object.GenPvppPast();
                                                                          complemento = object.gens;
                                                                          complement = object.gene;
                                                                          sp = oracionsp + "hasta que " + complemento + "-" + oracioneng + "until " + complement;
                                                                          break;


                                                                      default:
                                                                          complemento = "no object activated";
                                                                          complement = "no object activated";
                                                                          break;
                                                                  }

                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 15:
                                                              //with
                                                              if (item.getType() == 0) {
                                                                  gen.prepartob(4);
                                                                  sp = gen.ob + " - " + gen.eng;
                                                              } else if (item.getType() == 1) {


                                                                  int r2 = (int) (Math.random() * 4);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          //made it so it is only positive now
                                                                          gen1.GenWouldPerfCont2();
                                                                          sp = gen1.gens + "-" + gen1.gene;
                                                                          break;

                                                                      case 1:
                                                                          object.GenContTenses("would have been ", "would have been ", "would have been ", "habría estado ", "habrías estado ", "habría estado ", "habríamos estado ", "habrían estado ");
                                                                          sp = object.gens + "-" + object.gene;
                                                                          break;

                                                                      case 2:
                                                                          object.GenContTenses("would have been ", "would have been ", "would have been ", "habría estado ", "habrías estado ", "habría estado ", "habríamos estado ", "habrían estado ");
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negateFirstAuxOrModal(object.gene);
                                                                          break;

                                                                      case 3:
                                                                          gen1.GenWouldPerfCont2();
                                                                          sp = negator.negateSentenceSpanish(gen1.gens) + "-" + negator.negateFirstAuxOrModal(gen1.gene);
                                                                          break;

                                                                  }
                                                              } else if (item.getType() == 2) {
                                                                  //whether trans
                                                                  object.GenConjFuture("whether", "ya sea que");
                                                                  object2.GenPresSimpSubjunctive();
                                                                  complemento = object2.gens;
                                                                  complement = object2.gene;
                                                                  sp = object.gens + " " + complemento + "o no" + "--" + object.gene + " " + complement + "or not";

                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 16:
                                                              //on
                                                              if (item.getType() == 0) {
                                                                  gen.prepartob(5);
                                                                  sp = gen.ob + " - " + gen.eng;
                                                              } else if (item.getType() == 1) {


                                                                  int r2 = (int) (Math.random() * 4);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          //made it so it is only positive now
                                                                          gen1.GenCouldSimp2();
                                                                          sp = gen1.gens + "-" + gen1.gene;
                                                                          break;
                                                                      case 1:
                                                                          object.GenPresSimpModals("could ", "podría ", "podrías ", "podría ", "podríamos ", "podrían ");
                                                                          sp = object.gens + "-" + object.gene;
                                                                          break;
                                                                      case 2:
                                                                          gen1.GenCouldSimp2();
                                                                          sp = negator.negateSentenceSpanish(gen1.gens) + "-" + negator.negateFirstAuxOrModalContracted(gen1.gene);
                                                                          break;
                                                                      case 3:
                                                                          object.GenPresSimpModals("could ", "podría ", "podrías ", "podría ", "podríamos ", "podrían ");
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negateFirstAuxOrModal(object.gene);
                                                                          break;

                                                                  }
                                                              } else if (item.getType() == 2) {
                                                                  //although trans

                                                                  int r = (int) (Math.random() * 3);
                                                                  complemento = "";
                                                                  complement = "";
                                                                  complement2 = "";
                                                                  String oracionsp = "";
                                                                  String oracioneng = "";
                                                                  switch (r) {
                                                                      case 0:
                                                                          object.GenPastSimp();
                                                                          oracionsp = object.gens;
                                                                          oracioneng = object.gene;
                                                                          object2.GenPastSimp();
                                                                          complemento = object2.gens;
                                                                          complement = object2.gene;
                                                                          sp = oracionsp + " aún que " + complemento + "-" + oracioneng + "although " + complement;
                                                                          break;

                                                                      case 1:
                                                                          object.GenPastSimp();
                                                                          oracionsp = negator.negateSentenceSpanish(object.gens);
                                                                          oracioneng = negator.negatePastSimple(object.gene2);
                                                                          object2.GenPastSimp();
                                                                          complemento = object2.gens;
                                                                          complement = object2.gene;

                                                                          sp = oracionsp + " aún que " + complemento + "-" + oracioneng + "although " + complement;

                                                                          break;
                                                                      case 2:
                                                                          object.GenConjFuture("although ", "aun que ");
                                                                          oracionsp = object.gens;
                                                                          oracioneng = object.gene;
                                                                          object2.GenPresSimpSubjunctive();
                                                                          complemento = object2.gens;
                                                                          complement = object2.gene;
                                                                          sp = oracionsp + complemento + "-" + oracioneng + complement;

                                                                          break;

                                                                      default:
                                                                          complemento = "no object activated";
                                                                          complement = "no object activated";
                                                                          break;
                                                                  }
                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 17:
                                                              // do
                                                              if (item.getType() == 0) {
                                                                  gen.pronverb(4);
                                                                  sp = gen.gens + " - " + gen.gene;
                                                              } else if (item.getType() == 1) {

                                                                  int r2 = (int) (Math.random() * 4);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          //made it so it is only positive now
                                                                          gen1.GenCouldCont2();
                                                                          sp = gen1.gens + "-" + gen1.gene;
                                                                          break;
                                                                      case 1:
                                                                          object.GenContTenses("could be ", "could be ", "could be ", "podría estar ", "podrías estar ", "podría estar ", "podríamos estar ", "podrían estar ");
                                                                          sp = object.gens + "-" + object.gene;
                                                                          break;
                                                                      case 2:
                                                                          object.GenContTenses("could be ", "could be ", "could be ", "podría estar ", "podrías estar ", "podría estar ", "podríamos estar ", "podrían estar ");
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negateFirstAuxOrModalContracted(object.gene);
                                                                          break;
                                                                      case 3:
                                                                          gen1.GenCouldCont2();
                                                                          sp = negator.negateSentenceSpanish(gen1.gens) + "-" + negator.negateFirstAuxOrModal(gen1.gene);
                                                                          break;

                                                                  }
                                                              } else if (item.getType() == 2) {
                                                                  //even if trans
                                                                  int r = (int) (Math.random() * 2);
                                                                  complemento = "";
                                                                  complement = "";
                                                                  complement2 = "";
                                                                  String oracionsp = "";
                                                                  String oracioneng = "";

                                                                  switch (r) {
                                                                      case 0:
                                                                          object.GenConj("even if ", "incluso si ");
                                                                          oracionsp = object.gens;
                                                                          oracioneng = object.gene;
                                                                          object2.GenPresSimp();
                                                                          complemento = object2.gens;
                                                                          complement = object2.gene;
                                                                          sp = oracionsp + complemento + "-" + oracioneng + complement;
                                                                          break;

                                                                      case 1:
                                                                          object.GenConjFuture("even if ", "incluso si ");
                                                                          oracionsp = object.gens;
                                                                          oracioneng = object.gene;
                                                                          object2.GenPresSimp();
                                                                          complemento = object2.gens;
                                                                          complement = object2.gene;
                                                                          sp = oracionsp + complemento + "-" + oracioneng + complement;
                                                                          break;

                                                                  }


                                                              } else if (item.getType() == 3) {

                                                              }


                                                              break;
                                                          case 18:
                                                              //apostrofe s
                                                              if (item.getType() == 0) {
                                                                  n.apostropheS();
                                                                  sp = n.gens + " - " + n.gene;
                                                              } else if (item.getType() == 1) {


                                                                  int r2 = (int) (Math.random() * 4);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          //made it so it is only positive now
                                                                          gen1.GenCouldPerf2();
                                                                          sp = gen1.gens + "-" + gen1.gene;
                                                                          break;
                                                                      case 1:
                                                                          object.GenPerfectTenses("could have ", "could have ", "pude haber ", "pudiste haber ", "pudo haber ", "pudimos haber ", "pudieron haber ");
                                                                          sp = object.gens + "-" + object.gene;

                                                                          break;
                                                                      case 2:
                                                                          object.GenPerfectTenses("could have ", "could have ", "pude haber ", "pudiste haber ", "pudo haber ", "pudimos haber ", "pudieron haber ");
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negateFirstAuxOrModalContracted(object.gene);
                                                                          break;
                                                                      case 3:
                                                                          gen1.GenCouldPerf2();
                                                                          sp = negator.negateSentenceSpanish(gen1.gens) + "-" + negator.negateFirstAuxOrModal(gen1.gene);
                                                                          break;
                                                                  }
                                                              } else if (item.getType() == 2) {
                                                                  //once trans
                                                                  int r = 0;
                                                                  complemento = "";
                                                                  complement = "";
                                                                  complement2 = "";
                                                                  String oracionsp = "";
                                                                  String oracioneng = "";


                                                                  object.GenConjFuture("once ", "una vez que ");
                                                                  oracionsp = object.gens;
                                                                  oracioneng = object.gene;
                                                                  object2.GenPresSimpSubjunctive();
                                                                  complemento = object2.gens;
                                                                  complement = object2.gene;
                                                                  sp = oracionsp + complemento + "-" + oracioneng + complement;


                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 19:
                                                              //say
                                                              if (item.getType() == 0) {
                                                                  gen.pronverb(1);
                                                                  sp = gen.gens + " - " + gen.gene;
                                                              } else if (item.getType() == 1) {

                                                                  int r2 = (int) (Math.random() * 4);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          //made it so it is only positive now
                                                                          gen1.GenCouldPerfCont2();
                                                                          sp = gen1.gens + "-" + gen1.gene;
                                                                          break;

                                                                      case 1:
                                                                          object.GenContTenses("could have been ", "could have been ", "could have been ", "podría haber estado ", "podrías haber estado ", "podría haber estado ", "podríamos haber estado ", "podrían haber estado ");
                                                                          sp = object.gens + "-" + object.gene;
                                                                          break;

                                                                      case 2:
                                                                          object.GenContTenses("could have been ", "could have been ", "could have been ", "podría haber estado ", "podrías haber estado ", "podría haber estado ", "podríamos haber estado ", "podrían haber estado ");
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negateFirstAuxOrModal(object.gene);
                                                                          break;

                                                                      case 3:
                                                                          gen1.GenCouldPerfCont2();
                                                                          sp = negator.negateSentenceSpanish(gen1.gens) + "-" + negator.negateFirstAuxOrModal(gen1.gene);
                                                                          break;

                                                                  }
                                                              } else if (item.getType() == 2) {
                                                                  //unless trans
                                                                  complemento = "";
                                                                  complement = "";
                                                                  complement2 = "";
                                                                  String oracionsp = "";
                                                                  String oracioneng = "";

                                                                  object.GenConjFuture2("unless ", "a menos que ");
                                                                  oracionsp = negator.negateSentenceSpanish(object.gens);
                                                                  oracioneng = negator.negateFirstAuxOrModal(object.gene);
                                                                  object2.GenPresSimpSubjunctive();
                                                                  complemento = object2.gens;
                                                                  complement = object2.gene;
                                                                  sp = oracionsp + complemento + "-" + oracioneng + complement;

                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 20:
                                                              //they
                                                              if (item.getType() == 0) {
                                                                  gen.pronverb("ellos ");
                                                                  sp = gen.gens + "- " + gen.gene;
                                                              } else if (item.getType() == 1) {
                                                                  int r2 = (int) (Math.random() * 4);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          //made it so it is only positive now
                                                                          gen1.GenShouldSimp2();
                                                                          sp = gen1.gens + "-" + gen1.gene;
                                                                          break;
                                                                      case 1:
                                                                          object.GenPresSimpModals("should ", "debaría ", "deberías ", "debería ", "deberíamos ", "deberían ");
                                                                          sp = object.gens + "-" + object.gene;
                                                                          break;
                                                                      case 2:
                                                                          gen1.GenShouldSimp2();
                                                                          sp = negator.negateSentenceSpanish(gen1.gens) + "-" + negator.negateFirstAuxOrModalContracted(gen1.gene);
                                                                          break;
                                                                      case 3:
                                                                          object.GenPresSimpModals("should ", "debaría ", "deberías ", "debería ", "deberíamos ", "deberían ");
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negateFirstAuxOrModal(object.gene);
                                                                          break;

                                                                  }

                                                              } else if (item.getType() == 2) {
                                                                  //now that tran
                                                                  complemento = "";
                                                                  complement = "";
                                                                  complement2 = "";
                                                                  String oracionsp = "";
                                                                  String oracioneng = "";
                                                                  object.GenConjFuture("now that ", " ahora que ");
                                                                  oracionsp = negator.negateSentenceSpanish(object.gens);
                                                                  oracioneng = negator.negateFirstAuxOrModalContracted(object.gene);
                                                                  object2.GenPastSimp();
                                                                  complemento = object2.gens;
                                                                  complement = object2.gene;
                                                                  sp = oracionsp + " " + complemento + "-" + oracioneng + " " + complement;

                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 21:
                                                              //this
                                                              if (item.getType() == 0) {
                                                                  gen.adjmethod("this ");
                                                                  sp = gen.gens + "- " + gen.gene;
                                                              } else if (item.getType() == 1) {
                                                                  int r2 = (int) (Math.random() * 4);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          //made it so it is only positive now
                                                                          gen1.GenShouldCont2();
                                                                          sp = gen1.gens + "-" + gen1.gene;
                                                                          break;
                                                                      case 1:
                                                                          object.GenContTenses("should be ", "should be ", "should be ", "debería estar ", "deberías estar ", "debería estar ", "deberíamos estar ", "deberían estar ");
                                                                          sp = object.gens + "-" + object.gene;
                                                                          break;
                                                                      case 2:
                                                                          object.GenContTenses("should be ", "should be ", "should be ", "debería estar ", "deberías estar ", "debería estar ", "deberíamos estar ", "deberían estar ");
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negateFirstAuxOrModalContracted(object.gene);
                                                                          break;
                                                                      case 3:
                                                                          gen1.GenShouldCont2();
                                                                          sp = negator.negateSentenceSpanish(gen1.gens) + "-" + negator.negateFirstAuxOrModal(gen1.gene);
                                                                          break;

                                                                  }
                                                              } else if (item.getType() == 2) {
                                                                  //as long as trans
                                                                  int r = (int) (Math.random() * 2);

                                                                  complemento = "";
                                                                  complement = "";
                                                                  complement2 = "";
                                                                  String oracionsp = "";
                                                                  String oracioneng = "";
                                                                  switch (r) {
                                                                      case 0:
                                                                          object.GenConjFuture("as long as ", "siempre y cuando ");
                                                                          oracionsp = object.gens;
                                                                          oracioneng = object.gene;
                                                                          object2.GenPresSimpSubjunctive();
                                                                          complemento = object2.gens;
                                                                          complement = object2.gene;
                                                                          sp = oracionsp + complemento + "-" + oracioneng + complement;
                                                                          break;

                                                                      case 1:
                                                                          object.GenConjFuture("as long as ", "siempre y cuando ");
                                                                          oracionsp = negator.negateSentenceSpanish(object.gens);
                                                                          oracioneng = negator.negateFirstAuxOrModal(object.gene);
                                                                          object2.GenPresSimpSubjunctive();
                                                                          complemento = object2.gens;
                                                                          complement = object2.gene;
                                                                          sp = oracionsp + " " + complemento + "-" + oracioneng + " " + complement;
                                                                          break;
                                                                  }


                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 22:
                                                              //but
                                                              if (item.getType() == 0) {
                                                                  gen.advpronverb(3);
                                                                  sp = gen.gens + "- " + gen.gene;
                                                              } else if (item.getType() == 1) {

                                                                  int r2 = (int) (Math.random() * 4);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          //made it so it is only positive now
                                                                          gen1.GenShouldPerf2();
                                                                          sp = gen1.gens + "-" + gen1.gene;
                                                                          break;
                                                                      case 1:
                                                                          object.GenPerfectTenses("should have ", "should have ", "debí haber ", "debíste haber ", "debío haber ", "debímos haber ", "debíeron haber ");
                                                                          sp = object.gens + "-" + object.gene;

                                                                          break;
                                                                      case 2:
                                                                          object.GenPerfectTenses("should have ", "should have ", "debí haber ", "debíste haber ", "debío haber ", "debímos haber ", "debíeron haber ");
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negateFirstAuxOrModalContracted(object.gene);
                                                                          break;
                                                                      case 3:
                                                                          gen1.GenShouldPerf2();
                                                                          sp = negator.negateSentenceSpanish(gen1.gens) + "-" + negator.negateFirstAuxOrModal(gen1.gene);
                                                                          break;
                                                                  }


                                                              } else if (item.getType() == 2) {

                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 23:
                                                              //at
                                                              if (item.getType() == 0) {
                                                                  gen.atmeth(8);
                                                                  sp = gen.ob + " - " + gen.eng;
                                                              } else if (item.getType() == 1) {

                                                                  int r2 = (int) (Math.random() * 4);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          //made it so it is only positive now
                                                                          gen1.GenShouldPerfCont2();
                                                                          sp = gen1.gens + "-" + gen1.gene;
                                                                          break;

                                                                      case 1:
                                                                          object.GenContTenses("should have been ", "should have been ", "should have been ", "debería haber estado ", "deberías haber estado ", "debería haber estado ", "deberíamos haber estado ", "deberían haber estado ");
                                                                          sp = object.gens + "-" + object.gene;
                                                                          break;

                                                                      case 2:
                                                                          object.GenContTenses("should have been ", "should have been ", "should have been ", "debería haber estado ", "deberías haber estado ", "debería haber estado ", "deberíamos haber estado ", "deberían haber estado ");
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negateFirstAuxOrModal(object.gene);
                                                                          break;

                                                                      case 3:
                                                                          gen1.GenCouldPerfCont2();
                                                                          sp = negator.negateSentenceSpanish(gen1.gens) + "-" + negator.negateFirstAuxOrModal(gen1.gene);
                                                                          break;

                                                                  }
                                                              } else if (item.getType() == 2) {

                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 24:
                                                              //we
                                                              if (item.getType() == 0) {
                                                                  gen.pronverb("nosotros ");
                                                                  sp = gen.gens + "- " + gen.gene;
                                                              } else if (item.getType() == 1) {

                                                                  int r2 = (int) (Math.random() * 4);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          //made it so it is only positive now
                                                                          gen1.GenMightSimp2();
                                                                          sp = gen1.gens + "-" + gen1.gene;
                                                                          break;
                                                                      case 1:
                                                                          object.GenPresSimpSubjunctive("might ", "quizá ");
                                                                          sp = object.gens + "-" + object.gene;

                                                                          break;
                                                                      case 2:
                                                                          gen1.GenMightSimp2();
                                                                          sp = negator.negateSentenceSpanish(gen1.gens) + "-" + negator.negateFirstAuxOrModal(gen1.gene);

                                                                          break;
                                                                      case 3:
                                                                          object.GenPresSimpSubjunctive("might ", "quizá ");
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negateFirstAuxOrModal(object.gene);


                                                                          break;

                                                                  }


                                                              } else if (item.getType() == 2) {

                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 25:
                                                              //his
                                                              if (item.getType() == 0) {
                                                                  gen.adjmethod("his ");
                                                                  sp = gen.gens + "- " + gen.gene;
                                                              } else if (item.getType() == 1) {

                                                                  int r2 = (int) (Math.random() * 4);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          //made it so it is only positive now
                                                                          gen1.GenMightCont2();
                                                                          sp = gen1.gens + "-" + gen1.gene;
                                                                          break;
                                                                      case 1:
                                                                          object.GenContTenses("might be ", "might be ", "might be ", "quiza esté ", "quiza estés ", "quizá esté ", "quiza estemos ", "quiza estén ");
                                                                          sp = object.gens + "-" + object.gene;
                                                                          break;
                                                                      case 2:
                                                                          object.GenContTenses("might be ", "might be ", "might be ", "quizá esté ", "quizá estés ", "quizá esté ", "quizá estemos ", "quizá estén ");
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negateFirstAuxOrModal(object.gene);
                                                                          break;
                                                                      case 3:
                                                                          gen1.GenMightCont2();
                                                                          sp = negator.negateSentenceSpanish(gen1.gens) + "-" + negator.negateFirstAuxOrModal(gen1.gene);
                                                                          break;

                                                                  }

                                                              } else if (item.getType() == 2) {

                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 26:
                                                              //from
                                                              if (item.getType() == 0) {
                                                                  gen.atmeth(6);
                                                                  sp = gen.ob + " - " + gen.eng;
                                                              } else if (item.getType() == 1) {
                                                                  int r2 = (int) (Math.random() * 4);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          //made it so it is only positive now
                                                                          gen1.GenMightPerf2();
                                                                          sp = gen1.gens + "-" + gen1.gene;
                                                                          break;
                                                                      case 1:
                                                                          object.GenPerfectTenses("might have ", "might have ", "quizá haya ", "quizá hayas ", "quizá haya ", "quizá hayamos ", "quizá hayan ");
                                                                          sp = object.gens + "-" + object.gene;

                                                                          break;
                                                                      case 2:
                                                                          object.GenPerfectTenses("might have ", "might have ", "quizá haya ", "quizá hayas ", "quizá haya ", "quizá hayamos ", "quizá hayan ");
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negateFirstAuxOrModalContracted(object.gene);
                                                                          break;
                                                                      case 3:
                                                                          gen1.GenMightPerf2();
                                                                          sp = negator.negateSentenceSpanish(gen1.gens) + "-" + negator.negateFirstAuxOrModal(gen1.gene);
                                                                          break;
                                                                  }
                                                              } else if (item.getType() == 2) {

                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 27:
                                                              //that determiner
                                                              if (item.getType() == 0) {
                                                                  gen.adjmethod("that ");
                                                                  sp = gen.gens + "- " + gen.gene;
                                                              } else if (item.getType() == 1) {


                                                                  int r2 = (int) (Math.random() * 4);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          //made it so it is only positive now
                                                                          gen1.GenMightPerfCont2();
                                                                          sp = gen1.gens + "-" + gen1.gene;
                                                                          break;

                                                                      case 1:
                                                                          object.GenContTenses("might have been ", "might have been ", "might have been ", "quizá haya estado ", "quizá hayas estado ", "quizá haya estado  ", "quizá hayamos estado  ", "quizá hayan estado  ");
                                                                          sp = object.gens + "-" + object.gene;
                                                                          break;

                                                                      case 2:
                                                                          object.GenContTenses("might have been ", "might have been ", "might have been ", "quizá haya estado ", "quizá hayas estado ", "quizá haya estado  ", "quizá hayamos estado  ", "quizá hayan estado  ");
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negateFirstAuxOrModal(object.gene);
                                                                          break;

                                                                      case 3:
                                                                          gen1.GenMightPerfCont2();
                                                                          sp = negator.negateSentenceSpanish(gen1.gens) + "-" + negator.negateFirstAuxOrModal(gen1.gene);
                                                                          break;

                                                                  }
                                                              } else if (item.getType() == 2) {

                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 28:
                                                              //not
                                                              if (item.getType() == 0) {
                                                                  gen.not();
                                                                  sp = gen.eng;
                                                              } else if (item.getType() == 1) {


                                                                  int r2 = (int) (Math.random() * 4);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          //made it so it is only positive now
                                                                          gen1.GenCanSimp2();
                                                                          sp = gen1.gens + "-" + gen1.gene;
                                                                          break;
                                                                      case 1:
                                                                          object.GenPresSimpModals("can ", "puedo ", "puedes ", "puede ", "podemos ", "pueden ");
                                                                          sp = object.gens + "-" + object.gene;
                                                                          break;
                                                                      case 2:
                                                                          gen1.GenCanSimp2();
                                                                          sp = negator.negateSentenceSpanish(gen1.gens) + "-" + negator.negateFirstAuxOrModal(gen1.gene);
                                                                          break;
                                                                      case 3:
                                                                          object.GenPresSimpModals("can ", "puedo ", "puedes ", "puede ", "podemos ", "pueden ");
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negateFirstAuxOrModal(object.gene);
                                                                          break;

                                                                  }

                                                              } else if (item.getType() == 2) {

                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 29:
                                                              //n t
                                                              if (item.getType() == 0) {
                                                                  gen.nt();
                                                                  sp = gen.eng;
                                                              } else if (item.getType() == 1) {


                                                                  int r2 = (int) (Math.random() * 4);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          //made it so it is only positive now
                                                                          gen1.GenCanCont2();
                                                                          sp = gen1.gens + "-" + gen1.gene;
                                                                          break;
                                                                      case 1:
                                                                          object.GenContTenses("can be ", "can be ", "can be ", "puedo estar ", "puedes estar ", "puede estar ", "podemos estar ", "pueden estar ");
                                                                          sp = object.gens + "-" + object.gene;
                                                                          break;
                                                                      case 2:
                                                                          object.GenContTenses("can be ", "can be ", "can be ", "puedo estar ", "puedes estar ", "puede estar ", "podemos estar ", "pueden estar ");
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negateFirstAuxOrModal(object.gene);
                                                                          break;
                                                                      case 3:
                                                                          gen1.GenCanCont2();
                                                                          sp = negator.negateSentenceSpanish(gen1.gens) + "-" + negator.negateFirstAuxOrModal(gen1.gene);
                                                                          break;

                                                                  }
                                                              } else if (item.getType() == 2) {

                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 30:
                                                              //by
                                                              if (item.getType() == 0) {
                                                                  gen.atmeth(9);
                                                                  sp = gen.ob + " - " + gen.eng;
                                                              } else if (item.getType() == 1) {
                                                                  int r2 = (int) (Math.random() * 4);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          //made it so it is only positive now
                                                                          gen1.GenMustSimp2();
                                                                          sp = gen1.gens + "-" + gen1.gene;
                                                                          break;
                                                                      case 1:
                                                                          object.GenPresSimpModals("must ", "debo ", "debes ", "debe ", "debemos ", "deben ");
                                                                          sp = object.gens + "-" + object.gene;
                                                                          break;
                                                                      case 2:
                                                                          gen1.GenMustSimp2();
                                                                          sp = negator.negateSentenceSpanish(gen1.gens) + "-" + negator.negateFirstAuxOrModal(gen1.gene);
                                                                          break;
                                                                      case 3:
                                                                          object.GenPresSimpModals("must ", "debo ", "debes ", "debe ", "debemos ", "deben ");
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negateFirstAuxOrModal(object.gene);
                                                                          break;

                                                                  }
                                                              } else if (item.getType() == 2) {

                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 31:
                                                              //or
                                                              if (item.getType() == 0) {
                                                                  gen.or();
                                                                  sp = gen.ob + " - " + gen.eng;
                                                              } else if (item.getType() == 1) {


                                                                  int r2 = (int) (Math.random() * 4);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          //made it so it is only positive now
                                                                          gen1.GenMustCont2();
                                                                          sp = gen1.gens + "-" + gen1.gene;
                                                                          break;
                                                                      case 1:
                                                                          object.GenContTenses("must be ", "must be ", "must be ", "debo estar ", "debes estar ", "debe estar ", "debemos estar ", "deben estar ");
                                                                          sp = object.gens + "-" + object.gene;
                                                                          break;
                                                                      case 2:
                                                                          object.GenContTenses("must be ", "must be ", "must be ", "debo estar ", "debes estar ", "debe estar ", "debemos estar ", "deben estar ");
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negateFirstAuxOrModal(object.gene);
                                                                          break;
                                                                      case 3:
                                                                          gen1.GenMustCont2();
                                                                          sp = negator.negateSentenceSpanish(gen1.gens) + "-" + negator.negateFirstAuxOrModal(gen1.gene);
                                                                          break;

                                                                  }
                                                              } else if (item.getType() == 2) {

                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 32:
                                                              //she
                                                              if (item.getType() == 0) {
                                                                  gen.pronverb("ella ");
                                                                  sp = gen.gens + "- " + gen.gene;
                                                              } else if (item.getType() == 1) {

                                                                  int r2 = (int) (Math.random() * 2);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          gen.GenPassives("present simple");
                                                                          sp = gen.gens + "-" + gen.gene;
                                                                          break;

                                                                      case 1:
                                                                          gen.GenPassives("present simple");
                                                                          sp = negator.negateSentenceSpanish(gen.gens) + "-" + negator.negateFirstAuxOrModal(gen.gene);
                                                                          break;


                                                                  }


                                                              } else if (item.getType() == 2) {

                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 33:
                                                              //as conjunction
                                                              if (item.getType() == 0) {
                                                                  Nobles n1 = new Nobles();
                                                                  int pos1 = (int) (Math.random() * 6);
                                                                  n1.GenPresSimpAs(pos1);
                                                                  sp = n1.gens + " - " + n1.gene;
                                                              } else if (item.getType() == 1) {


                                                                  int r2 = (int) (Math.random() * 2);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          gen.GenPassives("present continuous");
                                                                          sp = gen.gens + "-" + gen.gene;
                                                                          break;

                                                                      case 1:
                                                                          gen.GenPassives("present continuous");
                                                                          sp = negator.negateSentenceSpanish(gen.gens) + "-" + negator.negateFirstAuxOrModal(gen.gene);
                                                                          break;


                                                                  }

                                                              } else if (item.getType() == 2) {

                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 34:
                                                              //what determiner
                                                              if (item.getType() == 0) {
                                                                  Nobles n2 = new Nobles();
                                                                  int pos2 = (int) (Math.random() * 6);
                                                                  n2.GenPresSimpWhat(pos2);
                                                                  sp = n2.gens + " - " + n2.gene;
                                                              } else if (item.getType() == 1) {


                                                                  int r2 = (int) (Math.random() * 2);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          gen.GenPassives("present perfect");
                                                                          sp = gen.gens + "-" + gen.gene;
                                                                          break;

                                                                      case 1:
                                                                          gen.GenPassives("present perfect");
                                                                          sp = negator.negateSentenceSpanish(gen.gens) + "-" + negator.negateFirstAuxOrModal(gen.gene);
                                                                          break;


                                                                  }
                                                              } else if (item.getType() == 2) {

                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 35:
                                                              //go
                                                              if (item.getType() == 0) {
                                                                  gen.pronverb(2);
                                                                  sp = gen.gens + " - " + gen.gene;
                                                              } else if (item.getType() == 1) {


                                                                  int r2 = (int) (Math.random() * 2);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          gen.GenPassives("past simple");
                                                                          sp = gen.gens + "-" + gen.gene;
                                                                          break;

                                                                      case 1:
                                                                          gen.GenPassives("past simple");

                                                                          sp = negator.negateSentenceSpanish(gen.gens) + "-" + negator.negateFirstAuxOrModal(gen.gene);
                                                                          break;


                                                                  }
                                                              } else if (item.getType() == 2) {

                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 36:
                                                              //their
                                                              if (item.getType() == 0) {
                                                                  gen.adjmethod("their ");
                                                                  sp = gen.gens + "- " + gen.gene;
                                                              } else if (item.getType() == 1) {
                                                                  int r2 = (int) (Math.random() * 2);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          gen.GenPassives("past continuous");
                                                                          sp = gen.gens + "-" + gen.gene;
                                                                          break;

                                                                      case 1:
                                                                          gen.GenPassives("past continuous");
                                                                          sp = negator.negateSentenceSpanish(gen.gens) + "-" + negator.negateFirstAuxOrModal(gen.gene);
                                                                          break;


                                                                  }
                                                              } else if (item.getType() == 2) {

                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 37:
                                                              //will
                                                              if (item.getType() == 0) {
                                                                  gen.pronverbwill();
                                                                  sp = gen.gens + " - " + gen.gene;
                                                              } else if (item.getType() == 1) {


                                                                  int r2 = (int) (Math.random() * 2);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          gen.GenPassives("past perfect");
                                                                          sp = gen.gens + "-" + gen.gene;
                                                                          break;

                                                                      case 1:
                                                                          gen.GenPassives("past perfect");
                                                                          sp = negator.negateSentenceSpanish(gen.gens) + "-" + negator.negateFirstAuxOrModal(gen.gene);
                                                                          break;


                                                                  }
                                                              } else if (item.getType() == 2) {

                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 38:
                                                              //who
                                                              if (item.getType() == 0) {
                                                                  gen.genWho();
                                                                  sp = gen.gens + " - " + gen.gene;
                                                              } else if (item.getType() == 1) {

                                                                  int r2 = (int) (Math.random() * 2);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          gen.GenPassives("future simple");
                                                                          sp = gen.gens + "-" + gen.gene;
                                                                          break;

                                                                      case 1:
                                                                          gen.GenPassives("future simple");
                                                                          sp = negator.negateSentenceSpanish(gen.gens) + "-" + negator.negateFirstAuxOrModal(gen.gene);
                                                                          break;


                                                                  }

                                                              } else if (item.getType() == 2) {

                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 39:
                                                              //can
                                                              if (item.getType() == 0) {
                                                                  gen.pronverbcan();
                                                                  sp = gen.gens + " - " + gen.gene;
                                                              } else if (item.getType() == 1) {


                                                                  int r2 = (int) (Math.random() * 2);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          gen.GenPassives("would simple");
                                                                          sp = gen.gens + "-" + gen.gene;
                                                                          break;

                                                                      case 1:
                                                                          gen.GenPassives("would simple");
                                                                          sp = negator.negateSentenceSpanish(gen.gens) + "-" + negator.negateFirstAuxOrModal(gen.gene);
                                                                          break;


                                                                  }
                                                              } else if (item.getType() == 2) {

                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 40:
                                                              //get
                                                              if (item.getType() == 0) {
                                                                  gen.pronverb(3);
                                                                  sp = gen.gens + " - " + gen.gene;
                                                              } else if (item.getType() == 1) {


                                                                  int r2 = (int) (Math.random() * 2);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          gen1.GenForTo2();
                                                                          sp = gen1.gens + "-" + gen1.gene;
                                                                          break;

                                                                      case 1:
                                                                          object.GenForTo();
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negateFirstAuxOrModal(object.gene);
                                                                          break;
                                                                  }

                                                              } else if (item.getType() == 2) {

                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 41:
                                                              //if
                                                              if (item.getType() == 0) {
                                                                  gen.pronverbif();
                                                                  sp = gen.gens + " - " + gen.gene;
                                                              } else if (item.getType() == 1) {
                                                                  int r2 = (int) (Math.random() * 3);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          gen1.GenBeUsedTo2();
                                                                          sp = gen1.gens + "-" + gen1.gene;
                                                                          break;
                                                                      case 1:
                                                                          object.GenBeUsedTo("am used to ", "are used to ", "is used to ", "are used to ", "esoy acostumbrado a ", "estas acostumbrado a ", "está acostumbrado a ", "está acostumbrada a ", "estamos acostumbrados a ", "estan acostumbrados a ");
                                                                          sp = object.gens + "-" + object.gene;
                                                                          break;
                                                                      case 2:
                                                                          object.GenBeUsedTo("am used to ", "are used to ", "is used to ", "are used to ", "esoy acostumbrado a ", "estas acostumbrado a ", "está acostumbrado a ", "está acostumbrada a ", "estamos acostumbrados a ", "estan acostumbrados a ");
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negateFirstAuxOrModal(object.gene);
                                                                          break;

                                                                  }

                                                              } else if (item.getType() == 2) {

                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 42:
                                                              //all
                                                              if (item.getType() == 0) {
                                                                  gen.all();
                                                                  sp = gen.gens + " - " + gen.gene;
                                                              } else if (item.getType() == 1) {


                                                                  int r2 = (int) (Math.random() * 3);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          gen1.GenUsedTo2();
                                                                          sp = gen1.gens + "-" + gen1.gene;
                                                                          break;

                                                                      case 1:
                                                                          object.GenHaveTo("used to ", "used to ", "solía ", "solías ", "solía ", "solíamos ", "solían ");
                                                                          sp = object.gens + "-" + object.gene;

                                                                          break;

                                                                      case 2:
                                                                          object.GenHaveTo("use to ", "use to ", "solía ", "solías ", "solía ", "solíamos ", "solían ");

                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negatePastSimple(object.gene);

                                                                          break;


                                                                  }

                                                              } else if (item.getType() == 2) {

                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 43:
                                                              //would
                                                              if (item.getType() == 0) {
                                                                  gen.pronverbwould();
                                                                  sp = gen.gens + " - " + gen.gene;
                                                              } else if (item.getType() == 1) {
                                                                  int r2 = (int) (Math.random() * 4);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          object.GenThereBe();
                                                                          sp = object.gens + "-" + object.gene;
                                                                          break;
                                                                      case 1:
                                                                          object.GenThereBe();
                                                                          sp = negator.negateThereBeSpanish(object.gens) + "-" + negator.negateThereBeWithNo(object.gene);
                                                                          break;
                                                                      case 2:
                                                                          object.GenThereBe();
                                                                          sp = negator.negateThereBeSpanish(object.gens) + "-" + negator.negateFirstAuxOrModal(object.gene);
                                                                          break;
                                                                      case 3:
                                                                          object.GenThereBe();
                                                                          sp = negator.negateThereBeSpanish(object.gens) + "-" + negator.negateFirstAuxOrModalContracted(object.gene);
                                                                          break;

                                                                  }


                                                              } else if (item.getType() == 2) {

                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 44:
                                                              //her
                                                              if (item.getType() == 0) {
                                                                  gen.adjmethod("her ");
                                                                  sp = gen.gens + "- " + gen.gene;
                                                              } else if (item.getType() == 1) {
                                                                  int r2 = (int) (Math.random() * 2);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          object.GenHaveTo("have to ", "has to ", "tengo que ", "tienes que ", "tiene que ", "tenemos que ", "tienen que ");
                                                                          sp = object.gens + "-" + object.gene;
                                                                          break;

                                                                      case 1:
                                                                          object.GenHaveTo("have to ", "have to ", "tengo que ", "tienes que ", "tiene que ", "tenemos que ", "tienen que ");
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negatePresentSimpleContracted(object.gene);
                                                                          break;
                                                                  }
                                                              } else if (item.getType() == 2) {

                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 45:
                                                              //make
                                                              if (item.getType() == 0) {
                                                                  gen.make();
                                                                  sp = gen.gens + " - " + gen.gene;
                                                              } else if (item.getType() == 1) {


                                                                  int r2 = (int) (Math.random() * 3);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          object.GenGoingTo("am going to ", "are going to ", "is going to ", "voy a ", "vas a ", "va a ", "vamos a ", "van a ");
                                                                          sp = object.gens + "-" + object.gene;
                                                                          break;
                                                                      case 1:
                                                                          object.GenGoingTo("am going to ", "are going to ", "is going to ", "voy a ", "vas a ", "va a ", "vamos a ", "van a ");
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negateFirstAuxOrModal(object.gene);
                                                                          break;

                                                                      case 2:
                                                                          object.GenGoingTo("am going to ", "are going to ", "is going to ", "voy a ", "vas a ", "va a ", "vamos a ", "van a ");
                                                                          String goingToNegated = negator.negateFirstAuxOrModal(object.gene);
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negateAndContractPresentContinuous(goingToNegated);
                                                                          break;

                                                                  }
                                                              } else if (item.getType() == 2) {

                                                              } else if (item.getType() == 3) {

                                                              }


                                                              break;
                                                          case 46:
                                                              //about
                                                              if (item.getType() == 0) {
                                                                  gen.prepartob(7);
                                                                  sp = gen.ob + " - " + gen.eng;
                                                              } else if (item.getType() == 1) {

                                                                  int r2 = (int) (Math.random() * 3);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          object.GenGoingTo("was going to ", "were going to ", "was going to ", "iba a ", "ibas a ", "iba a ", "ibamos a ", "iban a ");
                                                                          sp = object.gens + "-" + object.gene;
                                                                          break;
                                                                      case 1:
                                                                          object.GenGoingTo("was going to ", "were going to ", "was going to ", "iba a ", "ibas a ", "iba a ", "ibamos a ", "iban a ");
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negateFirstAuxOrModal(object.gene);
                                                                          break;

                                                                      case 2:
                                                                          object.GenGoingTo("was going to ", "were going to ", "was going to ", "iba a ", "ibas a ", "iba a ", "ibamos a ", "iban a ");
                                                                          String goingToNegated = negator.negateFirstAuxOrModal(object.gene);
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negateAndContractPresentContinuous(goingToNegated);
                                                                          break;

                                                                  }
                                                              } else if (item.getType() == 2) {

                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 47:
                                                              //my
                                                              if (item.getType() == 0) {
                                                                  gen.adjmethod("my ");
                                                                  sp = gen.gens + "- " + gen.gene;
                                                              } else if (item.getType() == 1) {


                                                                  int r2 = (int) (Math.random() * 2);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          object.GenFeelLike("feel like ", "feel like ", "feels like ", "tengo ganas de ", "tienes ganas de ", "tiene ganas de ", "tenemos ganas de ", "tienen ganas de ");
                                                                          sp = object.gens + "-" + object.gene;
                                                                          break;
                                                                      case 1:
                                                                          object.GenFeelLike("feel like ", "feel like ", "feels like ", "tengo ganas de ", "tienes ganas de ", "tiene ganas de ", "tenemos ganas de ", "tienen ganas de ");
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negatePresentSimple(object.gene);
                                                                          break;

                                                                  }

                                                              } else if (item.getType() == 2) {

                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 48:
                                                              //know
                                                              if (item.getType() == 0) {
                                                                  gen.pronverb(5);
                                                                  sp = gen.gens + "- " + gen.gene;
                                                              } else if (item.getType() == 1) {

                                                                  int r2 = (int) (Math.random() * 2);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          object.GenSupposedTo(false);
                                                                          sp = object.gens + " 2. " + object.gens2 + "3. " + object.gens3 + " " + object.gene;
                                                                          break;
                                                                      case 1:
                                                                          object.GenSupposedTo(false);
                                                                          sp = object.gens + " 2. " + object.gens2 + "3. " + object.gens3 + " " + object.gene;
                                                                          sp = negator.negateSentenceSpanishOG(object.gens) + "-" + negator.negateSentenceSpanishOG(object.gens2) + "-" + negator.negateSentenceSpanishOG(object.gens3) + "-" + negator.negateFirstAuxOrModal(object.gene);
                                                                          break;
                                                                  }


                                                              } else if (item.getType() == 2) {

                                                              } else if (item.getType() == 3) {

                                                              }


                                                              break;
                                                          case 49:
                                                              //as preposition
                                                              if (item.getType() == 0) {
                                                                  gen.as();
                                                                  sp = gen.gens + "- " + gen.gene;
                                                              } else if (item.getType() == 1) {
                                                                  int r2 = (int) (Math.random() * 2);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          object.GenSupposedTo(true);
                                                                          sp = object.gens + " 2. " + object.gens2 + "3. " + object.gens3 + " " + object.gene;

                                                                          break;

                                                                      case 1:
                                                                          object.GenSupposedTo(true);
                                                                          sp = object.gens + " 2. " + object.gens2 + "3. " + object.gens3 + " " + object.gene;
                                                                          sp = negator.negateSentenceSpanishOG(object.gens) + "-" + negator.negateSentenceSpanishOG(object.gens2) + "-" + negator.negateSentenceSpanishOG(object.gens3) + "-" + negator.negateFirstAuxOrModal(object.gene);

                                                                          break;
                                                                  }

                                                              } else if (item.getType() == 2) {

                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;

                                                          case 50:
                                                              // there for existance
                                                              if (item.getType() == 0) {
                                                                  object.GenThereBe();
                                                                  sp = object.gens.trim() + " - " + object.gene.trim();
                                                              } else if (item.getType() == 1) {


                                                                  int r2 = (int) (Math.random() * 2);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          object.GenGetStructures();
                                                                          sp = object.gens.trim() + " - " + object.gene.trim();
                                                                          break;

                                                                      case 1:
                                                                          object.GenGetStructures();
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negatePresentSimple(object.gene);

                                                                          break;
                                                                  }

                                                              } else if (item.getType() == 2) {

                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 51:
                                                              // one

                                                              if (item.getType() == 0) {
                                                                  gen.adjmethod("one ");
                                                                  sp = gen.gens + "- " + gen.gene;
                                                              } else if (item.getType() == 1) {
                                                                  //pvpp


                                                                  int r2 = (int) (Math.random() * 3);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          object.GenPvpp();
                                                                          sp = object.gens + "-" + object.gene + "--" + object.gene2;
                                                                          break;

                                                                      case 1:
                                                                          object.GenPvpp();
                                                                          sp = negator.negateSentenceSpanishOG(object.gens) + "-" + negator.negatePresentSimple(object.gene) + "-" + negator.negatePresentSimple(object.gene2);
                                                                          break;
                                                                      case 2:
                                                                          object.GenPvpp();
                                                                          sp = negator.negateSentenceSpanishOG(object.gens) + "-" + negator.negatePresentSimpleContracted(object.gene) + "-" + negator.negatePresentSimpleContracted(object.gene2);
                                                                          break;
                                                                  }
                                                              } else if (item.getType() == 2) {

                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 52:
                                                              // up
                                                              if (item.getType() == 0) {
                                                                  object.GenPresSimpPrepasAdv("up ", "hacia arriba");
                                                                  sp = object.gens + "- " + object.gene;
                                                              } else if (item.getType() == 1) {


                                                                  int r2 = (int) (Math.random() * 3);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          object.GenReflexives();
                                                                          sp = object.gens + "-" + object.gene;
                                                                          break;

                                                                      case 1:
                                                                          object.GenReflexives();
                                                                          sp = negator.negateReflexiveSpanish(object.gens) + "-" + negator.negatePresentSimple(object.gene) + "-" + negator.negatePresentSimple(object.gene);
                                                                          break;
                                                                      case 2:
                                                                          object.GenReflexives();
                                                                          sp = negator.negateReflexiveSpanish(object.gens) + "-" + negator.negatePresentSimpleContracted(object.gene) + "-" + negator.negatePresentSimpleContracted(object.gene);
                                                                          break;
                                                                  }

                                                              } else if (item.getType() == 2) {

                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 53:
                                                              // time noun
                                                              if (item.getType() == 0) {
                                                                  nouns.nounGen("the time ", "el tiempo ");
                                                                  sp = nouns.gens + "- " + nouns.gene;
                                                              } else if (item.getType() == 1) {


                                                                  int r2 = (int) (Math.random() * 3);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          object.GenCausatives();
                                                                          sp = object.gens + "-" + object.gene + " " + object.gene2;
                                                                          break;

                                                                      case 1:
                                                                          object.GenCausatives();
                                                                          sp = negator.negateReflexiveSpanish(object.gens) + "-" + negator.negatePresentSimpleCausativeHave(object.gene);
                                                                          break;
                                                                      case 2:
                                                                          object.GenCausatives();
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negatePresentSimpleContracted(object.gene);
                                                                          break;
                                                                  }
                                                              } else if (item.getType() == 2) {

                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 54:
                                                              // year noun
                                                              if (item.getType() == 0) {
                                                                  nouns.nounGen("the year ", "el año ");
                                                                  sp = nouns.gens + "- " + nouns.gene;
                                                              } else if (item.getType() == 1) {


                                                                  int r2 = (int) (Math.random() * 2);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          object.GenVerbosJuntos();
                                                                          sp = object.gens + "-" + object.gene + "-" + object.gene2;
                                                                          break;

                                                                      case 1:
                                                                          object.GenVerbosJuntos();
                                                                          sp = negator.negateSentenceSpanishOG(object.gens) + "-" + negator.negatePresentSimpleContracted(object.gene) + "-" + negator.negatePresentSimpleContracted(object.gene2);
                                                                          break;

                                                                  }

                                                              } else if (item.getType() == 2) {

                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 55:
                                                              //so as adverb
                                                              if (item.getType() == 0) {
                                                                  nouns.adjAdv("so ", "tan ");
                                                                  sp = nouns.gens + "- " + nouns.gene;
                                                              } else if (item.getType() == 1) {

                                                                  nouns.GenNounAdj();
                                                                  sp = nouns.gens + "-" + nouns.gene;
                                                              } else if (item.getType() == 2) {

                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 56:
                                                              // think
                                                              if (item.getType() == 0) {
                                                                  object.GenPresSimp(pronoun, 7);
                                                                  sp = object.gens + "- " + object.gene;
                                                              } else if (item.getType() == 1) {
                                                                  // verbal adjectives


                                                                  int r2 = (int) (Math.random() * 2);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          gen1.GenVerbalAdjectives();
                                                                          sp = gen1.gens + "-" + gen1.gene;
                                                                          break;

                                                                      case 1:
                                                                          gen1.GenVerbalAdjectives();
                                                                          sp = negator.addNoAfterQue(gen1.gens) + "-" + negator.negateVerbalAdjective(gen1.gene);
                                                                          break;
                                                                  }

                                                              } else if (item.getType() == 2) {

                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 57:
                                                              // see
                                                              if (item.getType() == 0) {
                                                                  object.GenPresSimp(pronoun, 8);
                                                                  sp = object.gens + "- " + object.gene;
                                                              } else if (item.getType() == 1) {
                                                                  // wish past simple


                                                                  int r2 = (int) (Math.random() * 3);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          gen1.GenWishPastSimple2();
                                                                          sp = gen1.gens + "-" + gen1.gene;
                                                                          break;
                                                                      case 1:
                                                                          nouns.GenWish(0);
                                                                          sp = nouns.gens + " = " + nouns.gene;
                                                                          break;
                                                                      case 2:
                                                                          nouns.GenWish(0);
                                                                          sp = negator.negateSentenceSpanish(nouns.gens) + " = " + nouns.gene2; // ya esta negada el gene2 del nouns
                                                                          break;
                                                                  }

                                                              } else if (item.getType() == 2) {

                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 58:
                                                              //which as determiner
                                                              if (item.getType() == 0) {
                                                                  Nobles n3 = new Nobles();
                                                                  int pos3 = (int) (Math.random() * 6);
                                                                  n3.GenPresSimpWhich(pos3);
                                                                  sp = n3.gens + " - " + n3.gene;
                                                              } else if (item.getType() == 1) {

                                                                  int r2 = (int) (Math.random() * 3);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          gen1.GenWishWould2();
                                                                          sp = gen1.gens + "-" + gen1.gene;
                                                                          break;


                                                                      case 1:
                                                                          nouns.GenWish(1);
                                                                          sp = nouns.gens + "-" + nouns.gene;
                                                                          break;
                                                                      case 2:
                                                                          nouns.GenWish(1);
                                                                          sp = negator.negateSentenceSpanish(nouns.gens) + "-" + nouns.gene2;
                                                                          break;

                                                                  }

                                                              } else if (item.getType() == 2) {

                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 59:
                                                              // when
                                                              if (item.getType() == 0) {
                                                                  object.GenPresSimpAdverbs3("when ", "cuando ");
                                                                  sp = object.gens + "- " + object.gene;
                                                              } else if (item.getType() == 1) {

                                                                  int r2 = (int) (Math.random() * 3);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          gen1.GenWishPastPerf2();
                                                                          sp = gen1.gens + "-" + gen1.gene;
                                                                          break;
                                                                      case 1:
                                                                          nouns.GenWish(2);
                                                                          sp = nouns.gens + "-" + nouns.gene;
                                                                          break;

                                                                      case 2:
                                                                          nouns.GenWish(2);
                                                                          sp = negator.negateSentenceSpanish(nouns.gens) + "-" + nouns.gene2;
                                                                          break;
                                                                  }
                                                              } else if (item.getType() == 2) {

                                                              } else if (item.getType() == 3) {

                                                              }
                                                              break;
                                                          case 60:
                                                              // some
                                                              if (item.getType() == 0) {
                                                                  gen.adjmethodP("some ");
                                                                  sp = gen.gens + "- " + gen.gene;
                                                              } else if (item.getType() == 1) {
                                                                  //comparativos
                                                                  int r2 = (int) (Math.random() * 2);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          nouns.GenComparativos();
                                                                          sp = nouns.gens + "-" + nouns.gene;
                                                                          break;
                                                                      case 1:
                                                                          nouns.GenComparativos();
                                                                          sp = negator.negateSentenceSpanishComp(nouns.gens) + "-" + negator.negateFirstAuxOrModalContracted(nouns.gene);
                                                                          break;

                                                                      case 2:
                                                                          nouns.GenComparativos();
                                                                          sp = negator.negateSentenceSpanishComp(nouns.gens) + "-" + negator.negateFirstAuxOrModal(nouns.gene);
                                                                          break;
                                                                  }

                                                              } else if (item.getType() == 2) {

                                                              } else if (item.getType() == 3) {

                                                              }
                                                              break;
                                                          case 61:
                                                              //them

                                                              if (item.getType() == 0) {
                                                                  nouns.genPronoun("them ");
                                                                  sp = nouns.gens + "- " + nouns.gene;
                                                              } else if (item.getType() == 1) {
                                                                  //question structures
                                                                  int verbPos = (int) (Math.random() * nouns.verbsTagged.length);
                                                                  int ob2 = (int) (Math.random() * object.verbObjectsSpanish[verbPos].length);
                                                                  String tempQuestion = nouns.generateQuestion(verbPos, ob2);
                                                                  sp = nouns.genSpanishQuestion(tempQuestion, verbPos, ob2) + " " + tempQuestion;


                                                              } else if (item.getType() == 2) {

                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 62:
                                                              // people noun

                                                              if (item.getType() == 0) {
                                                                  nouns.nounGen("the people ", "la gente ");
                                                                  sp = nouns.gens + "- " + nouns.gene;
                                                              } else if (item.getType() == 1) {
                                                                  //phrasal verbs

                                                                  int r2 = (int) (Math.random() * 2);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          object.GenPresSimpPhrasalVerbs();
                                                                          sp = object.gens + "-" + object.gene;
                                                                          break;
                                                                      case 1:
                                                                          object.GenPresSimpPhrasalVerbs();

                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negatePresentSimple(object.gene);
                                                                          break;
                                                                  }


                                                              } else if (item.getType() == 2) {

                                                              } else if (item.getType() == 3) {

                                                              }
                                                              break;
                                                          case 63:
                                                              if (item.getType() == 0) {
                                                                  // take
                                                                  object.GenPresSimp(pronoun, 9);
                                                                  sp = object.gens + "- " + object.gene;
                                                              } else if (item.getType() == 1) {
                                                                  //reported speech
                                                                  String reporter = "";
                                                                  String reportersp = "";

                                                                  int r2 = (int) (Math.random() * 3);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          gen1.GenReportedSpeech1();
                                                                          sp = gen1.gens + "-" + gen1.gene;
                                                                          break;
                                                                      case 1:
                                                                          int rsrand = (int) (Math.random() * 2);
                                                                          if (rsrand == 1) {
                                                                              reporter = "he said that ";
                                                                              reportersp = "él dijo que ";
                                                                          } else {
                                                                              reporter = "she said that ";
                                                                              reportersp = "ella dijo que ";
                                                                          }
                                                                          object.GenPastSimp();
                                                                          sp = reportersp + object.gens + " " + reporter + object.gene;
                                                                          break;
                                                                      case 2:
                                                                          int rsrand2 = (int) (Math.random() * 2);
                                                                          switch (rsrand2) {
                                                                              case 0:
                                                                                  reporter = "he said that ";
                                                                                  reportersp = "él dijo que ";
                                                                                  break;

                                                                              case 1:
                                                                                  reporter = "she said that ";
                                                                                  reportersp = "ella dijo que ";

                                                                                  break;
                                                                          }

                                                                          object.GenPastSimp();
                                                                          sp = reportersp + negator.negateSentenceSpanishOG(object.gens) + "-" + reporter + negator.negatePastSimple(object.gene2);
                                                                          break;
                                                                  }


                                                              } else if (item.getType() == 2) {

                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 64:


                                                              if (item.getType() == 0) {

                                                                  nouns.genPronoun("me ");
                                                                  sp = nouns.gens + "- " + nouns.gene;
                                                              } else if (item.getType() == 1) {
                                                                  //able to
                                                                  int r2 = (int) (Math.random() * 5);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          gen1.GenAbleTo2();
                                                                          sp = gen1.gens + "-" + gen1.gene;
                                                                          break;

                                                                      case 1:
                                                                          object.GenGoingTo("will be able to ", "will be able to ", "will be able to ", "podré ", "podrás ", "podrá ", "podrémos ", "podrán ");
                                                                          sp = object.gens + "-" + object.gene;
                                                                          break;

                                                                      case 2:
                                                                          object.GenGoingTo("am able to ", "are able to ", "is able to ", "soy capaz de ", "eres capaz de ", "es capaz de ", "somos capaces de ", "son capaces de ");
                                                                          sp = object.gens + "-" + object.gene;
                                                                          break;
                                                                      case 3:
                                                                          object.GenGoingTo("am able to ", "are able to ", "is able to ", "soy capaz de ", "eres capaz de ", "es capaz de ", "somos capaces de ", "son capaces de ");
                                                                          sp = negator.negateSentenceSpanish(object.gens) + "-" + negator.negateFirstAuxOrModal(object.gene);
                                                                          break;
                                                                      case 4:
                                                                          gen1.GenAbleTo2();
                                                                          sp = negator.negateSentenceSpanishOG(gen1.gens) + "-" + negator.negateFirstAuxOrModal(gen1.gene);
                                                                          break;
                                                                  }


                                                              } else if (item.getType() == 2) {

                                                              } else if (item.getType() == 3) {

                                                              }

                                                              break;
                                                          case 65:

                                                              if (item.getType() == 0) {
                                                                  // out as adverb
                                                                  object.GenPresSimpPrepasAdv("out ", "hacia afuera ");
                                                                  sp = object.gens + "- " + object.gene;
                                                              } else if (item.getType() == 1) {
                                                                  //incremento paralelo
                                                                  String moreOrLess = "";
                                                                  String masOmenos = "";
                                                                  String comp = "";
                                                                  int r2 = (int) (Math.random() * 2);
                                                                  switch (r2) {
                                                                      case 0:
                                                                          gen1.GenIncrementoParalelo();
                                                                          sp = gen1.gens + "-" + gen1.gene;
                                                                          break;

                                                                      case 1:
                                                                          int ip = (int) (Math.random() * 2);
                                                                          if (ip == 1) {
                                                                              moreOrLess = "the more ";
                                                                              masOmenos = "entre mas ";
                                                                              comp = "mas ";
                                                                          } else {
                                                                              moreOrLess = "the less ";
                                                                              masOmenos = "entre menos ";
                                                                              comp = "menos ";
                                                                          }
                                                                          object.GenPresSimp();
                                                                          object2.GenPresSimp();
                                                                          String engIncPar = moreOrLess + object.gene + moreOrLess + object2.gene;
                                                                          sp = masOmenos + object.gens + comp + object2.gens + "-" + engIncPar;
                                                                          break;
                                                                  }


                                                              } else if (item.getType() == 2) {

                                                              } else if (item.getType() == 3) {

                                                              }


                                                              break;
                                                          case 66:
                                                              if (item.getType() == 0) {
                                                                  nouns.genPreps("into");
                                                                  sp = nouns.gens + "- " + nouns.gene;
                                                              } else if (item.getType() == 1) {

                                                                  int r2 = (int) (Math.random() * 3);

                                                                  switch (r2) {
                                                                      case 0:
                                                                          nouns.GenRelativeClauses();
                                                                          sp = nouns.gens + "-" + nouns.gene;
                                                                          break;
                                                                      case 1:
                                                                          gen1.GenRelativeClauses1();
                                                                          sp = gen1.gens + "-" + gen1.gene;
                                                                          break;

                                                                      case 2:
                                                                          n.GenRelativeClauses1New();
                                                                          sp = n.gens + "-" + n.gene;
                                                                          break;
                                                                  }

                                                              } else if (item.getType() == 2) {

                                                              } else if (item.getType() == 3) {

                                                              }
                                                              break;

                                                          case 67:

                                                              if (item.getType() == 0) {
                                                                  // just adverb
                                                                  object.GenPresSimpAdverbs("just ", "solo ");
                                                                  sp = object.gens + "- " + object.gene;
                                                              } else if (item.getType() == 1) {
                                                                  nouns.GenJustPhrasalVerbs();
                                                                  sp = nouns.gens + "=" + nouns.gene;


                                                              } else if (item.getType() == 2) {

                                                              } else if (item.getType() == 3) {

                                                              }
                                                              break;
                                                          case 68:

                                                              if (item.getType() == 0) {

                                                                  nouns.genPronoun("him ");
                                                                  sp = nouns.gens + "- " + nouns.gene;
                                                              } else if (item.getType() == 1) {
                                                                  gen1.GenWantYouTo2();
                                                                  sp = gen1.gens+" "+gen1.gene;

                                                              } else if (item.getType() == 2) {

                                                              } else if (item.getType() == 3) {

                                                              }
                                                              break;
                                                          case 69:
                                                              // come
                                                              object.GenPresSimp(pronoun, 10);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 70:
                                                              //my
                                                              gen.adjmethod("your ");
                                                              sp = gen.gens + "- " + gen.gene;
                                                              break;
                                                          case 71:
                                                              // now adverb
                                                              object.GenPresSimpAdverbs2("now ", "ahora ");
                                                              sp = object.gens + "- " + object.gene;

                                                              break;
                                                          case 72:
                                                              // could
                                                              object.GenPresSimpModals("could ", "podría ", "podrías ", "podría ", "podríamos ", "podrían ");
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 73:
                                                              // than
                                                              nouns.GenThan();
                                                              sp = nouns.gens + "- " + nouns.gene;

                                                              break;
                                                          case 74:
                                                              // like
                                                              nouns.genPreps("like");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 75:
                                                              // other
                                                              nouns.adjectiveGen("other ", "otro ", "otra ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 76:
                                                              //then as adverb
                                                              //then adverb
                                                              object.GenPresSimpAdverbs2("then ", "entonces ");
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 77:


                                                              break;
                                                          case 78:
                                                              //my
                                                              gen.adjmethod("its ");
                                                              sp = gen.gens + "- " + gen.gene;
                                                              break;
                                                          case 79:
                                                              // two
                                                              gen.adjmethodP("two ");
                                                              sp = gen.gens + "- " + gen.gene;
                                                              break;
                                                          case 80:
                                                              //my
                                                              gen.adjmethod("our ");
                                                              sp = gen.gens + "- " + gen.gene;
                                                              break;
                                                          case 81:
                                                              // more
                                                              object.GenPresSimpAdverbs2("more ", "mas ");
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 82:
                                                              // these
                                                              gen.adjmethodP("these ");
                                                              sp = gen.gens + "- " + gen.gene;
                                                              break;
                                                          case 83:
                                                              // want
                                                              object.GenPresSimp(pronoun, 11);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 84:
                                                              // way noun
                                                              nouns.nounGen("the way ", "el camino ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 85:
                                                              //my
                                                              gen.adjmethod("no ");
                                                              sp = gen.gens + "- " + gen.gene;
                                                              break;
                                                          case 86:
                                                              // look
                                                              object.GenPresSimp(pronoun, 12);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 87:
                                                              // first
                                                              gen.adjmethod("first ");
                                                              sp = gen.gens + "- " + gen.gene;
                                                              break;
                                                          case 88:
                                                              // also
                                                              object.GenPresSimpAdverbs2("also ", "también ");
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 89:
                                                              // new
                                                              nouns.adjectiveGen("new ", "nuevo ", "nueva ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 90:
                                                              // because conj
                                                              object.GenConj("because ", "por que ");
                                                              gen1.GenPresSimp2();
                                                              complemento = gen1.gens;
                                                              complement = gen1.gene;
                                                              sp = object.gens + " " + complemento + "--" + object.gene + " " + complement;

                                                              break;
                                                          case 91:
                                                              // day- noun
                                                              nouns.nounGen("the day ", "el día ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 92:
                                                              //more
                                                              gen.adjmethodP("more ");
                                                              sp = gen.gens + "- " + gen.gene;
                                                              break;
                                                          case 93:
                                                              // use
                                                              object.GenPresSimp(pronoun, 13);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 94:
                                                              // man
                                                              nouns.nounGen("the man ", "el hombre ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 95:
                                                              // here
                                                              object.GenPresSimpAdverbs2("here ", "aquí ");
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 96:
                                                              // find
                                                              object.GenPresSimp(pronoun, 14);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 97:
                                                              // give
                                                              object.GenPresSimp(pronoun, 15);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 98:
                                                              // thing
                                                              nouns.nounGen("the thing ", "la cosa ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 99:
                                                              // well
                                                              object.GenPresSimpAdverbs2("well ", "bien ");
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 100:
                                                              // many
                                                              gen.adjmethodP("many ");
                                                              sp = gen.gens + "- " + gen.gene;
                                                              break;
                                                          case 101:
                                                              //only
                                                              object.GenPresSimpAdverbs("only ", "solamente ");
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 102:
                                                              // those
                                                              gen.adjmethodP("those ");
                                                              sp = gen.gens + "- " + gen.gene;
                                                              break;
                                                          case 103:
                                                              // tell
                                                              object.GenPresSimp(pronoun, 16);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 104:
                                                              // Code for case 104
                                                              nouns.adjAdv("very ", "muy ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 105:
                                                              //one
                                                              nouns.genPronoun("one ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 106:
                                                              // even
                                                              object.GenPresSimpAdverbs("even ", "incluso ");
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 107:
                                                              //her
                                                              nouns.genPronoun("her ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 108:
                                                              // back
                                                              object.GenPresSimpPrepasAdv("back", "hacia atras");
                                                              sp = object.gens + "-" + object.gene;
                                                              break;
                                                          case 109:
                                                              // any
                                                              gen.adjmethod("any ");
                                                              sp = gen.gens + "- " + gen.gene;
                                                              break;
                                                          case 110:
                                                              //good
                                                              nouns.adjectiveGen("good ", "buen ", "buena ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 111:
                                                              //them
                                                              nouns.genPronoun("us ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 112:
                                                              // through
                                                              nouns.genPreps("through");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 113:
                                                              // woman
                                                              nouns.nounGen("the woman ", "la mujer ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 114:
                                                              //life
                                                              nouns.nounGen("life ", "la vida ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 115:
                                                              //child
                                                              nouns.nounGen("the child ", "el niño ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 116:
                                                              // there
                                                              object.GenPresSimpAdverbs2("there ", "ahí ");
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 117:
                                                              // down
                                                              object.GenPresSimpPrepasAdv("down ", "hacia abajo");
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 118:
                                                              // work noun
                                                              nouns.nounGen("the work ", "el trabajo ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 119:
                                                              //after
                                                              nouns.genPreps("after");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 120:
                                                              // call
                                                              object.GenPresSimp(pronoun, 18);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 121:
                                                              // may
                                                              object.GenMay("may ", "puede que ");
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 122:
                                                              // world
                                                              nouns.nounGen("the world ", "el mundo ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 123:
                                                              // over
                                                              nouns.genPreps("over");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 124:
                                                              // should
                                                              object.GenPresSimpModals("should ", "debería ", "deberías ", "debería ", "deberíamos ", "deberían ");
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 125:
                                                              // still
                                                              object.GenPresSimpAdverbs("still ", "aún ");
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 126:
                                                              // try
                                                              object.GenPresSimp(pronoun, 19);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 127:
                                                              // in
                                                              object.GenPresSimpPrepasAdv("in", "hacia adentrof");
                                                              sp = object.gens + "-" + object.gene;
                                                              break;
                                                          case 128:
                                                              // school
                                                              nouns.nounGen("the school ", "la escuela ");
                                                              sp = nouns.gens + "- " + nouns.gene;

                                                              break;
                                                          case 129:
                                                              // as adverb
                                                              object.GenPresSimpAdverbs3("as ", "En la manera en que ");
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 130:
                                                              // last
                                                              gen.adjmethod("last ");
                                                              sp = gen.gens + "- " + gen.gene;
                                                              break;
                                                          case 131:
                                                              // ask
                                                              object.GenPresSimp(pronoun, 20);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 132:
                                                              // too adverb
                                                              object.GenPresSimpAdverbs2("too ", "tambien ");
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 133:
                                                              // need
                                                              object.GenPresSimp(pronoun, 21);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 134:
                                                              //three
                                                              gen.adjmethodP("three ");
                                                              sp = gen.gens + "- " + gen.gene;
                                                              break;
                                                          case 135:
                                                              // feel
                                                              object.GenPresSimp(pronoun, 22);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 136:
                                                              // when
                                                              object.GenPresSimpAdverbs3("When ", "Cuando ");
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 137:
                                                              // become
                                                              object.GenPresSimp(pronoun, 23);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 138:
                                                              // state-noun
                                                              nouns.nounGen("the state ", "el estado ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 139:
                                                              // never adverb
                                                              object.GenPresSimpAdverbs("never ", "nunca ");
                                                              sp = object.gens + "-" + object.gene;
                                                              break;
                                                          case 140:
                                                              //between
                                                              nouns.genPreps("between");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 141:
                                                              //good
                                                              nouns.adjectiveGen("high ", "alto ", "alta ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 142:
                                                              //them
                                                              nouns.genPronoun("something ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 143:
                                                              // really adverb
                                                              object.GenPresSimpAdverbs("really ", "realmente ");
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 144:
                                                              // most adverb
                                                              nouns.adjAdv2("the most ", "el mas ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 145:
                                                              // another
                                                              gen.adjmethod("another ");
                                                              sp = gen.gens + "- " + gen.gene;
                                                              break;
                                                          case 146:
                                                              gen.uncountableNounsGen();
                                                              sp = gen.gens + "- " + gen.gene;
                                                              break;
                                                          case 147:
                                                              //own
                                                              gen.adjmethod("own ");
                                                              sp = gen.gens + "- " + gen.gene;
                                                              break;
                                                          case 148:
                                                              //family
                                                              nouns.nounGen("the family ", "la familia ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 149:
                                                              // out
                                                              nouns.genPreps("out");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 150:
                                                              // house
                                                              nouns.nounGen("the house ", "la casa ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 151:
                                                              // leave
                                                              object.GenPresSimp(pronoun, 24);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 152:
                                                              // put
                                                              Intrans intrans = new Intrans();
                                                              int in = (int) (Math.random() * intrans.at.length);
                                                              String atArraysp = intrans.aten[in];
                                                              String atArrayeng = intrans.at[in];
                                                              object.GenPresSimp(pronoun, 25);
                                                              sp = object.gens + atArraysp + "- " + object.gene + atArrayeng;
                                                              break;
                                                          case 153:
                                                              //good
                                                              nouns.adjectiveGen("old ", "viejo ", "vieja ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 154:
                                                              // Code for case 154
                                                              nouns.genPreps("on");
                                                              sp = nouns.gens + "-" + nouns.gene;
                                                              break;
                                                          case 155:
                                                              // while conector
                                                              object.GenConj("while ", "mientras que ");
                                                              int r = (int) (Math.random() * 2);
                                                              complemento = "";
                                                              complement = "";
                                                              switch (r) {
                                                                  case 0:
                                                                      object2.GenPresSimp();
                                                                      complemento = object2.gens;
                                                                      complement = object2.gene;
                                                                      break;

                                                                  case 1:
                                                                      gen1.GenPresSimp2();
                                                                      complemento = gen1.gens;
                                                                      complement = gen1.gene;
                                                                      break;
                                                                  default:
                                                                      complemento = "no object activated";
                                                                      complement = "no object activated";
                                                                      break;
                                                              }


                                                              sp = object.gens + complemento + "--" + object.gene + complement;
                                                              break;
                                                          case 156:
                                                              // mean
                                                              object.GenPresSimp(pronoun, 26);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 157:
                                                              // let
                                                              object.GenPresSimp(pronoun, 27);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 158:
                                                              //why
                                                              object.GenPresSimpAdverbs3("why ", "la razón por la cual ");
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 159:
                                                              // president
                                                              nouns.nounGen("the president ", "el presidente ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 160:
                                                              // keep
                                                              object.GenPresSimp(pronoun, 28);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 161:
                                                              // same det
                                                              nouns.adjectiveGen("same ", "mismo ", "misma ");
                                                              sp = nouns.gens + "-" + nouns.gene;
                                                              break;
                                                          case 162:
                                                              //grandioso
                                                              nouns.adjectiveGen("great ", "grandioso ", "grandiosa ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 163:
                                                              // begin
                                                              object.GenPresSimp(pronoun, 29);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 164:
                                                              //grande
                                                              nouns.adjectiveGen("big ", "gran ", "gran ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 165:
                                                              // seem
                                                              object.GenPresSimp(pronoun, 30);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 166:
                                                              // group
                                                              nouns.nounGen("the group ", "el grupo ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 167:
                                                              // country
                                                              nouns.nounGen("the country ", "el país ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 168:
                                                              // talk
                                                              object.GenPresSimp(pronoun, 31);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 169:
                                                              // problem
                                                              nouns.nounGen("the problem ", "el problema ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 170:
                                                              // where
                                                              object.GenConj("where ", "donde ");
                                                              object2.GenPresSimp();
                                                              complemento = object2.gens;
                                                              complement = object2.gene;
                                                              sp = object.gens + " " + complemento + "--" + object.gene + " " + complement;
                                                              break;
                                                          case 171:
                                                              // turn
                                                              object.GenPresSimp(pronoun, 32);
                                                              sp = object.gens + "- " + object.gene;

                                                              break;
                                                          case 172:
                                                              // student
                                                              nouns.nounGen("the student ", "el estudiante ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 173:
                                                              // every
                                                              gen.adjmethod("every ");
                                                              sp = gen.gens + "- " + gen.gene;
                                                              break;
                                                          case 174:
                                                              // hand
                                                              nouns.nounGen("the hand ", "la mano ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 175:
                                                              // help
                                                              object.GenPresSimp(pronoun, 33);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 176:
                                                              // against
                                                              nouns.genPreps("against");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 177:
                                                              // start
                                                              object.GenPresSimp(pronoun, 34);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 178:
                                                              //american
                                                              nouns.adjectiveGen2("american ", "americano ", "americana ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 179:
                                                              // part
                                                              nouns.nounGen("the part ", "la parte ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 180:
                                                              // show
                                                              object.GenPresSimp(pronoun, 35);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 181:
                                                              // about
                                                              object.genAbout();
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 182:
                                                              // over
                                                              object.genOver();
                                                              sp = object.gens + "- " + object.gene;


                                                              break;
                                                          case 183:
                                                              //might
                                                              object.GenPresSimpSubjunctive("might ", "quiza ");
                                                              sp = object.gens + "- " + object.gene;

                                                              break;
                                                          case 184:
                                                              gen.adjmethod("such ");
                                                              sp = gen.gens + "- " + gen.gene;
                                                              break;
                                                          case 185:
                                                              //place
                                                              nouns.nounGen("the place ", "el lugar ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 186:
                                                              // again adverb
                                                              object.GenPresSimpAdverbs2("again ", "otra vez ");
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 187:
                                                              // city
                                                              nouns.nounGen("the city ", "la ciudad ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 188:
                                                              // case
                                                              nouns.nounGen("the case ", "el caso ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 189:
                                                              // most
                                                              gen.adjmethodP("most ");
                                                              sp = gen.gens + "- " + gen.gene;
                                                              break;
                                                          case 190:
                                                              // few
                                                              gen.adjmethodP("few ");
                                                              sp = gen.gens + "- " + gen.gene;
                                                              break;
                                                          case 191:
                                                              // system
                                                              nouns.nounGen("the system ", "el sistema ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 192:
                                                              // week
                                                              nouns.nounGen("the week ", "la semana ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 193:
                                                              // where
                                                              object.GenPresSimpAdverbs3("where ", "En donde ");
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 194:
                                                              // Company
                                                              nouns.nounGen("the company ", "la empresa ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 195:
                                                              gen.adjmethod("each ");
                                                              sp = gen.gens + "- " + gen.gene;
                                                              break;
                                                          case 196:
                                                              // percent
                                                              nouns.nounGen("the percent ", "el porcentaje ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 197:
                                                              // hear
                                                              object.GenPresSimp(pronoun, 36);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 198:
                                                              // so/ conjunction
                                                              object.GenConj("so", "así que ");
                                                              object2.GenPresSimp();
                                                              complemento = object2.gens;
                                                              complement = object2.gene;
                                                              sp = object.gens + " " + complemento + "--" + object.gene + " " + complement;
                                                              break;
                                                          case 199:
                                                              // during
                                                              nouns.genPreps("during");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 200:
                                                              // question
                                                              nouns.nounGen("the question ", "la pregunta ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;

                                                          case 201:
                                                              // Code for case 201
                                                              object.GenConj("right ", "correctamente");
                                                              sp = object.gens + "-" + object.gene;

                                                              break;
                                                          case 202:
                                                              // program
                                                              nouns.nounGen("the program ", "el programa ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 203:
                                                              // work verb
                                                              object.GenPresSimp(pronoun, 17);
                                                              sp = object.gens + "- " + object.gene;

                                                              break;
                                                          case 204:
                                                              // run
                                                              object.GenPresSimp(pronoun, 37);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 205:
                                                              // number
                                                              nouns.nounGen("the number ", "el número ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 206:
                                                              //small
                                                              nouns.adjectiveGen("small ", "pequeño ", "pequeña ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 207:
                                                              // government
                                                              nouns.nounGen("the government ", "el gobierno ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 208:
                                                              // play
                                                              object.GenPresSimp(pronoun, 38);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 209:
                                                              // off
                                                              object.GenOff();
                                                              sp = object.gens + "- " + object.gene;

                                                              break;
                                                          case 210:
                                                              // move
                                                              object.GenPresSimp(pronoun, 39);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 211:
                                                              // like
                                                              object.GenPresSimp(pronoun, 40);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 212:
                                                              // always adverb
                                                              object.GenPresSimpAdverbs("always ", "siempre ");
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 213:
                                                              // night
                                                              nouns.nounGen("the night ", "la noche ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 214:
                                                              // believe
                                                              object.GenPresSimp(pronoun, 41);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 215:
                                                              // today adverb
                                                              object.GenPresSimpAdverbs2("today ", "hoy ");
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 216:
                                                              // hold
                                                              object.GenPresSimp(pronoun, 42);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 217:
                                                              // point- noun
                                                              nouns.nounGen("the point ", "el punto ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 218:
                                                              // live
                                                              object.GenPresSimp(pronoun, 43);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 219:
                                                              // happen
                                                              object.genHappen();
                                                              sp = object.gens + "- " + object.gene;

                                                              break;
                                                          case 220:
                                                              // bring
                                                              object.GenPresSimp(pronoun, 44);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 221:
                                                              //next as number
                                                              gen.adjmethod("next ");
                                                              sp = gen.gens + "- " + gen.gene;
                                                              break;
                                                          case 222:
                                                              // without
                                                              nouns.genPreps("without");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 223:
                                                              // before
                                                              nouns.genPreps("before");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 224:
                                                              //large
                                                              nouns.adjectiveGen2("large ", "grande ", "gran ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 225:
                                                              // must
                                                              object.GenPresSimpModals("must ", "debo ", "debes ", "debe ", "debemos ", "deben ");
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 226:
                                                              // all

                                                              gen.adjmethodP("all");
                                                              sp = gen.gens + "- " + gen.gene;
                                                              break;
                                                          case 227:
                                                              // war
                                                              nouns.nounGen("the war ", "la guerra ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 228:
                                                              // home
                                                              nouns.nounGen("the home ", "el hogar ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 229:
                                                              // under
                                                              nouns.genPreps("under");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 230:
                                                              // room
                                                              nouns.nounGen("the room ", "el cuarto ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 231:
                                                              // fact
                                                              nouns.nounGen("the fact ", "el hecho ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 232:
                                                              // area
                                                              nouns.nounGen("the area ", "la zona ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 233:
                                                              //national
                                                              nouns.adjectiveGen2("national ", "nacional ", "nacional ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 234:
                                                              // write
                                                              object.GenPresSimp(pronoun, 45);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 235:
                                                              // money
                                                              nouns.nounGen("the money ", "el dinero ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 236:
                                                              // right/ noun
                                                              nouns.nounGen("the right ", "el derecho ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 237:
                                                              // story-
                                                              nouns.nounGen("the story ", "la historia ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 238:
                                                              // water- noun
                                                              nouns.nounGen("the water ", "el agua ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 239:
                                                              // mother-
                                                              nouns.nounGen("the mother ", "la madre ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 240:
                                                              //different
                                                              nouns.adjectiveGen2("different ", "diferente ", "diferente ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 241:
                                                              //young
                                                              nouns.adjectiveGen2("young ", "joven ", "joven ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 242:
                                                              // month
                                                              nouns.nounGen("the month ", "el mes ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 243:
                                                              // lot
                                                              nouns.nounGen("the lot ", "el lote ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 244:
                                                              // book
                                                              nouns.nounGen("the book ", "el libro ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 245:
                                                              // eye- noun
                                                              nouns.nounGen("the eye ", "el ojo ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 246:
                                                              // study-noun
                                                              nouns.nounGen("the study ", "el estudio ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 247:
                                                              // job
                                                              nouns.nounGen("the job ", "el trabajo ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 248:
                                                              //kind- noun
                                                              nouns.nounGen("the kind ", "el tipo ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 249:
                                                              // word
                                                              nouns.nounGen("the kind ", "el tipo ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 250:
                                                              //issue- noun
                                                              nouns.nounGen("the issue ", "el tema ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 251:
                                                              // side
                                                              nouns.nounGen("the side ", "el lado ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 252:
                                                              //four
                                                              gen.adjmethodP("four ");
                                                              sp = gen.gens + "- " + gen.gene;
                                                              break;
                                                          case 253:
                                                              // business
                                                              nouns.nounGen("the business ", "el negocio ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 254:
                                                              // though
                                                              object.GenConjFuture("though", "aún que");
                                                              object2.GenPresSimpSubjunctive();
                                                              complemento = object2.gens;
                                                              complement = object2.gene;
                                                              sp = object.gens + " " + complemento + "--" + object.gene + " " + complement;
                                                              break;
                                                          case 255:
                                                              //head-noun
                                                              nouns.nounGen("the head ", "la cabeza ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 256:
                                                              // far
                                                              object.GenPresSimpPrepasAdv("far ", "lejos ");
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 257:
                                                              //long
                                                              nouns.adjectiveGen2("long ", "largo ", "larga ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 258:
                                                              //black
                                                              nouns.adjectiveGen2("black ", "negro ", "negra ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 259:
                                                              // million
                                                              gen.adjmethodP("million");
                                                              sp = gen.gens + "- " + gen.gene;
                                                              break;
                                                          case 260:
                                                              // both
                                                              gen.adjmethodP("both ");
                                                              sp = gen.gens + "- " + gen.gene;
                                                              break;
                                                          case 261:
                                                              //little
                                                              nouns.adjectiveGen2("little ", "chiquito ", "chiquita ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 262:
                                                              // yes
                                                              sp = "yes/ si ";
                                                              break;
                                                          case 263:
                                                              // after
                                                              object.GenConj("after ", "después de que ");
                                                              object2.GenPresSimp();
                                                              complemento = object2.gens;
                                                              complement = object2.gene;
                                                              sp = object.gens + complemento + "--" + object.gene + complement;
                                                              break;
                                                          case 264:
                                                              // since
                                                              object.GenConj("since ", "ya que ");
                                                              object2.GenPresSimp();
                                                              complemento = object2.gens;
                                                              complement = object2.gene;
                                                              sp = object.gens + complemento + "--" + object.gene + complement;
                                                              break;
                                                          case 265:
                                                              // around
                                                              nouns.genPreps("around");
                                                              sp = nouns.gens + "-" + nouns.gene;
                                                              break;
                                                          case 266:
                                                              // long adverb
                                                              object.genLong();
                                                              sp = object.gens + " - " + object.gene;
                                                              break;
                                                          case 267:

                                                              // provide
                                                              object.GenPresSimp(pronoun, 46);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 268:
                                                              // service
                                                              nouns.nounGen("the service ", "el servicio ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 269:
                                                              // important

                                                              nouns.adjectiveGen("important ", "importante ", "importante ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 270:
                                                              // sit
                                                              object.GenPresSimp(pronoun, 47);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 271:
                                                              // away as adverb
                                                              object.GenPresSimpPrepasAdv("away ", "lejos ");
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 272:
                                                              // friend
                                                              nouns.nounGen("the friend ", "el amigo ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 273:
                                                              // however
                                                              object.GenPresSimpAdverbs3("however ", "como sea que ");
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 274:
                                                              // power
                                                              nouns.nounGen("the power ", "el poder ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 275:
                                                              //
                                                              sp = "no/no";
                                                              break;
                                                          case 276:
                                                              // yet adverb
                                                              Nobles nob = new Nobles();
                                                              nob.GenPresPerfVocab("yet ", "todavía ");
                                                              sp = nob.gens + "- " + nob.gene;
                                                              break;
                                                          case 277:
                                                              // father
                                                              nouns.nounGen("the father ", "el padre ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 278:
                                                              // hour
                                                              nouns.nounGen("the hour ", "la hora ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 279:
                                                              // often adverb
                                                              object.GenPresSimpAdverbs2("often ", "seguido ");
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 280:
                                                              // until
                                                              object.GenConjFuture("until", "hasta que");
                                                              object2.GenPresSimpSubjunctive();
                                                              complemento = object2.gens;
                                                              complement = object2.gene;
                                                              sp = object.gens + " " + complemento + "--" + object.gene + " " + complement;
                                                              break;
                                                          case 281:
                                                              //political
                                                              nouns.adjectiveGen("political ", "politico ", "politica ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 282:
                                                              // line
                                                              nouns.nounGen("the line ", "la linea ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 283:
                                                              //end
                                                              nouns.nounGen("the end ", "el fin ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 284:
                                                              // stand
                                                              object.GenPresSimp(pronoun, 48);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 285:
                                                              //among
                                                              nouns.genPreps("among");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 286:
                                                              // game
                                                              nouns.nounGen("the game ", "el juego ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 287:
                                                              //ever adverb
                                                              Nobles nob2 = new Nobles();
                                                              nob2.GenPresPerfVocab("ever ", "nunca ");
                                                              sp = nob2.gens + "- " + nob2.gene;

                                                              break;
                                                          case 288:
                                                              // lose
                                                              object.GenPresSimp(pronoun, 49);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 289:
                                                              //bad
                                                              nouns.adjectiveGen2("bad ", "mal ", "mala ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 290:
                                                              //member
                                                              nouns.nounGen("the member ", "el miembro ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 291:
                                                              // meet
                                                              object.GenPresSimp(pronoun, 50);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 292:
                                                              // pay
                                                              object.GenPresSimp(pronoun, 51);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 293:
                                                              // law
                                                              nouns.nounGen("the law ", "la ley ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 294:
                                                              //almost
                                                              object.GenAlmost("almost ", "casi ");
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 295:
                                                              // car
                                                              nouns.nounGen("the car ", "el carro ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 296:
                                                              // later adverb
                                                              object.GenPresSimpAdverbs2("later ", "mas tarde ");
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 297:
                                                              //much
                                                              object.GenPresSimpAdverbs2("much ", "mucho ");
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 298:
                                                              //name
                                                              nouns.nounGen("the name ", "el nombre ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 299:
                                                              // include
                                                              object.GenPresSimp(pronoun, 52);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 300:
                                                              //five
                                                              gen.adjmethodP("five ");
                                                              sp = gen.gens + "- " + gen.gene;
                                                              break;
                                                          case 301:
                                                              // center
                                                              nouns.nounGen("the center ", "el centro ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 302:
                                                              // once adverb
                                                              object.GenPresSimpAdverbs2("once ", "una vez ");
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 303:
                                                              //university
                                                              nouns.nounGen("the university ", "la universidad ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 304:
                                                              // continue
                                                              object.GenPresSimp(pronoun, 53);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 305:
                                                              // least
                                                              nouns.adjAdv("the least ", "el menos ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 306:
                                                              //real
                                                              nouns.adjectiveGen2("real ", "real ", "real ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 307:
                                                              //white
                                                              nouns.adjectiveGen2("white ", "blanco ", "blanca ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 308:
                                                              // change
                                                              object.GenPresSimp(pronoun, 54);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 309:
                                                              // set
                                                              object.GenPresSimp(pronoun, 55);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 310:
                                                              // several
                                                              gen.adjmethodP("several ");
                                                              sp = gen.gens + "- " + gen.gene;
                                                              break;
                                                          case 311:
                                                              // ago
                                                              object.GenAgo();
                                                              sp = object.gens + "--" + object.gene;
                                                              break;
                                                          case 312:
                                                              // information
                                                              nouns.nounGen("the information ", "la información ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 313:
                                                              //them
                                                              nouns.genPronoun("nothing ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 314:
                                                              // community
                                                              nouns.nounGen("the community ", "la comunidad ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 315:
                                                              //best
                                                              nouns.adjectiveGen("best ", "mejor ", "mejor ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 316:
                                                              //right
                                                              nouns.adjectiveGen2("right ", "correcto ", "correcta ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 317:
                                                              //idea
                                                              nouns.nounGen("the idea ", "la idea ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 318:
                                                              // lead
                                                              object.GenPresSimp(pronoun, 56);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 319:
                                                              //body
                                                              nouns.nounGen("the body ", "el cuerpo ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 320:
                                                              // learn
                                                              object.GenPresSimp(pronoun, 57);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 321:
                                                              // kid
                                                              nouns.nounGen("the kid ", "el niño ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 322:
                                                              // minute.........................................
                                                              nouns.nounGen("the minute ", "el minuto ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 323:
                                                              // table
                                                              nouns.nounGen("the table ", "la mesa ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 324:
                                                              //whether
                                                              object.GenConjFuture("whether", "ya sea que");
                                                              object2.GenPresSimpSubjunctive();
                                                              complemento = object2.gens;
                                                              complement = object2.gene;
                                                              sp = object.gens + " " + complemento + "o no" + "--" + object.gene + " " + complement + "or not";
                                                              break;
                                                          case 325:
                                                              // understand
                                                              object.GenPresSimp(pronoun, 58);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 326:
                                                              // team
                                                              nouns.nounGen("the team ", "el equipo ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 327:
                                                              // back
                                                              nouns.nounGen("the back ", "la espalda ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 328:
                                                              // watch
                                                              object.GenPresSimp(pronoun, 59);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 329:
                                                              //together
                                                              object.GenPresSimpAdverbs2("together ", "juntos ");
                                                              sp = object.gens + "- " + object.gene;

                                                              break;
                                                          case 330:
                                                              // follow
                                                              object.GenPresSimp(pronoun, 60);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 331:
                                                              //around-adverb
                                                              object.GenPresSimpAdverbs2("around ", "al rededor ");
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 332:
                                                              //only
                                                              nouns.adjectiveGen("only ", "único ", "única ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 333:
                                                              // stop
                                                              object.GenPresSimp(pronoun, 61);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 334:
                                                              // face
                                                              nouns.nounGen("the face ", "la cara ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 335:
                                                              //them
                                                              nouns.genPronoun("anything ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 336:
                                                              //public
                                                              nouns.adjectiveGen2("public ", "publico ", "publica ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 337:
                                                              //social
                                                              nouns.adjectiveGen2("social ", "social ", "social ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 338:
                                                              // already as adverb
                                                              genA.GenPastSimp1();
                                                              sp = genA.gens + "ya " + "- " + genA.gene + "already";
                                                              break;
                                                          case 339:
                                                              //parent
                                                              nouns.nounGen("the parent ", "el padre ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 340:
                                                              // speak
                                                              object.GenPresSimp(pronoun, 62);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 341:
                                                              // create
                                                              object.GenPresSimp(pronoun, 63);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 342:
                                                              //office
                                                              nouns.nounGen("the office ", "la oficina ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 343:
                                                              // allow
                                                              object.GenPresSimp(pronoun, 64);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 344:
                                                              //level
                                                              nouns.nounGen("the level ", "el nivel ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 345:
                                                              //read
                                                              object.GenPresSimp(pronoun, 65);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 346:
                                                              // spend
                                                              object.GenPresSimp(pronoun, 66);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 347:
                                                              // person
                                                              nouns.nounGen("the person ", "la persona ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 348:
                                                              // door
                                                              nouns.nounGen("the door ", "la puerta ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 349:
                                                              //sure
                                                              nouns.adjectiveGen("sure ", "seguro ", "segura ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 350:
                                                              // add
                                                              object.GenPresSimp(pronoun, 67);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 351:
                                                              // street
                                                              nouns.nounGen("the street ", "la calle ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 352:
                                                              // such
                                                              nouns.genPreps("such");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 353:
                                                              // history
                                                              nouns.nounGen("the history ", "la historia ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 354:
                                                              //party
                                                              nouns.nounGen("the party ", "la fiesta ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 355:
                                                              // grow
                                                              object.GenPresSimp(pronoun, 68);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 356:
                                                              // reason
                                                              nouns.nounGen("the reason ", "la razón ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 357:
                                                              //morning
                                                              nouns.nounGen("the morning ", "la mañana ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 358:
                                                              // open
                                                              object.GenPresSimp(pronoun, 69);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 359:
                                                              // within
                                                              nouns.genPreps("within");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 360:
                                                              // change
                                                              nouns.nounGen("the change ", "el cambio ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 361:
                                                              //although
                                                              object.GenConjFuture("although", "aún que");
                                                              object2.GenPresSimpSubjunctive();
                                                              complemento = object2.gens;
                                                              complement = object2.gene;
                                                              sp = object.gens + " " + complemento + "--" + object.gene + " " + complement;
                                                              break;
                                                          case 362:
                                                              // walk
                                                              object.GenPresSimp(pronoun, 70);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 363:
                                                              // news
                                                              nouns.nounGen("the news ", "las noticias ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 364:
                                                              // health
                                                              nouns.nounGen("the health ", "la salud ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 365:
                                                              // Court
                                                              nouns.nounGen("the court ", "la corte ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 366:
                                                              // force
                                                              nouns.nounGen("the force ", "la fuerza ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 367:
                                                              //early
                                                              nouns.adjectiveGen("early ", "temprano ", "temprana ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 368:
                                                              //himself
                                                              nouns.genPronoun("himself ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 369:
                                                              // air
                                                              nouns.nounGen("the air ", "el aire ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 370:
                                                              //low
                                                              nouns.adjectiveGen("low ", "bajo ", "baja ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 371:
                                                              // before conjunction
                                                              object.GenConjFuture("before", "antes de que");
                                                              object2.GenPresSimpSubjunctive();
                                                              complemento = object2.gens;
                                                              complement = object2.gene;
                                                              sp = object.gens + " " + complemento + "--" + object.gene + " " + complement;
                                                              break;
                                                          case 372:
                                                              // art
                                                              nouns.nounGen("the art ", "el arte ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 373:
                                                              // result
                                                              nouns.nounGen("the result ", "el resultado ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 374:
                                                              //moment
                                                              nouns.nounGen("the moment ", "el momento ");
                                                              sp = nouns.gens + "- " + nouns.gene;

                                                              break;
                                                          case 375:
                                                              // offer
                                                              object.GenPresSimp(pronoun, 71);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 376:
                                                              gen.adjmethodP("both ");
                                                              sp = gen.gens + "=" + gen.gene;
                                                              break;
                                                          case 377:
                                                              // remember
                                                              object.GenPresSimp(pronoun, 72);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 378:
                                                              // research
                                                              nouns.nounGen("the research ", "la investigación ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 379:
                                                              // enough
                                                              object.GenPresSimpAdverbs2NoObject("enough ", "suficiente ");
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 380:
                                                              // girl
                                                              nouns.nounGen("the girl ", "la niña ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 381:
                                                              //boy
                                                              nouns.nounGen("the boy ", "el   niño ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 382:
                                                              // win
                                                              object.GenPresSimp(pronoun, 73);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 383:
                                                              // food
                                                              nouns.nounGen("the food ", "la comida ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 384:
                                                              // across
                                                              nouns.genPreps("across");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 385:
                                                              // guy
                                                              nouns.nounGen("the guy ", "el tipo ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 386:
                                                              // second
                                                              gen.adjmethod("second ");
                                                              sp = gen.gens + "- " + gen.gene;
                                                              break;
                                                          case 387:
                                                              //able
                                                              nouns.adjectiveGen("able ", "capaz ", "capaz ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 388:
                                                              //toward
                                                              nouns.genPreps("toward");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 389:
                                                              //maybe adverb
                                                              object.GenPresSimpAdverbs("maybe ", "quizá ");
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 390:
                                                              // process
                                                              nouns.nounGen("the process ", "el proceso ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 391:
                                                              // off
                                                              nouns.genPreps("off");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 392:
                                                              //everything
                                                              nouns.genPronoun("everything ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 393:
                                                              // appear
                                                              object.GenPresSimp(pronoun, 74);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 394:
                                                              // age
                                                              nouns.nounGen("the age ", "la edad ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 395:
                                                              //policy
                                                              nouns.nounGen("the policy ", "la politica ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 396:
                                                              // consider
                                                              object.GenPresSimp(pronoun, 75);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 397:
                                                              // including
                                                              nouns.genPreps("including");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 398:
                                                              // probably adverb
                                                              object.GenPresSimpAdverbs("probably ", "probablemente ");
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 399:
                                                              //education
                                                              nouns.nounGen("the education ", "la educación ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 400:
                                                              // love
                                                              object.GenPresSimp(pronoun, 76);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 401:
                                                              //actually
                                                              object.GenPresSimpAdverbs("actually ", "de hecho ");
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 402:
                                                              // buy
                                                              object.GenPresSimp(pronoun, 77);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 403:
                                                              // wait
                                                              object.GenPresSimp(pronoun, 78);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 404:
                                                              // die
                                                              object.GenPresSimp(pronoun, 79);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 405:
                                                              //human
                                                              nouns.adjectiveGen2("human ", "humano ", "humana ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 406:
                                                              // send
                                                              object.GenPresSimp(pronoun, 80);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 407:
                                                              //fee
                                                              nouns.nounGen("the fee ", "la multa ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 408:
                                                              // expect
                                                              object.GenPresSimp(pronoun, 81);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 409:
                                                              // serve
                                                              object.GenPresSimp(pronoun, 82);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 410:
                                                              // sense
                                                              nouns.nounGen("the sense ", "el sentido ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 411:
                                                              // teacher
                                                              nouns.nounGen("the teacher ", "el maestro ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 412:
                                                              // home as adverb
                                                              object.GenPresSimpPrepasAdv("home ", "hacia la casa ");
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 413:
                                                              //market
                                                              nouns.nounGen("the market ", "el mercado ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 414:
                                                              // stay
                                                              object.GenPresSimp(pronoun, 83);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 415:
                                                              // build
                                                              object.GenPresSimp(pronoun, 84);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 416:
                                                              //nation
                                                              nouns.nounGen("the nation ", "la nación ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 417:
                                                              // fall
                                                              object.GenPresSimp(pronoun, 85);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 418:
                                                              // oh
                                                              sp = "oh";
                                                              break;
                                                          case 419:
                                                              // death
                                                              nouns.nounGen("the death ", "la muerte ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 420:
                                                              // plan
                                                              nouns.nounGen("the plan ", "el plan ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 421:
                                                              // interest
                                                              nouns.nounGen("the interest ", "el interes ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 422:
                                                              //someone
                                                              nouns.genPronoun("someone ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 423:
                                                              //experience
                                                              nouns.nounGen("the experience ", "la experiencia ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 424:
                                                              // cut
                                                              object.GenPresSimp(pronoun, 86);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 425:
                                                              // kill
                                                              object.GenPresSimp(pronoun, 87);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 426:
                                                              //behind
                                                              nouns.genPreps("behind");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 427:
                                                              // reach
                                                              object.GenPresSimp(pronoun, 88);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 428:
                                                              gen.adjmethodP("six ");
                                                              sp = gen.gens + "- " + gen.gene;
                                                              break;
                                                          case 429:
                                                              //local
                                                              nouns.adjectiveGen2("local ", "local ", "local ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 430:
                                                              // remain
                                                              object.GenPresSimp(pronoun, 89);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 431:
                                                              //effect
                                                              nouns.nounGen("the effect ", "el efecto ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 432:
                                                              // suggest
                                                              object.GenPresSimp(pronoun, 90);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 433:
                                                              //use
                                                              nouns.nounGen("the use ", "el uso ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 434:
                                                              // control
                                                              nouns.nounGen("the control ", "el control ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 435:
                                                              //perhaps adverb
                                                              object.GenPresSimpAdverbs("perhaps ", "tal vez ");
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 436:
                                                              // raise
                                                              object.GenPresSimp(pronoun, 91);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 437:
                                                              // class
                                                              nouns.nounGen("the class ", "la clase ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 438:
                                                              //late
                                                              nouns.adjectiveGen("late ", "tardado ", "tardada ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 439:
                                                              // little adverb
                                                              object.GenPresSimpAdverbs2NoObject("little ", "poco ");
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 440:
                                                              //major
                                                              nouns.adjectiveGen("major ", "mayor ", "mayor ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 441:
                                                              sp = "yeah";
                                                              break;
                                                          case 442:
                                                              //else adverb
                                                              object.GenElse();
                                                              sp = object.gens + "- " + object.gene;

                                                              break;
                                                          case 443:
                                                              // pass
                                                              object.GenPresSimp(pronoun, 92);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 444:
                                                              //photo
                                                              nouns.nounGen("the photo ", "la foto ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 445:
                                                              // sell
                                                              object.GenPresSimp(pronoun, 93);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 446:
                                                              //themselves
                                                              nouns.genPronoun("themselves ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 447:
                                                              //field
                                                              nouns.nounGen("the field ", "el campo ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 448:
                                                              // college
                                                              nouns.nounGen("the college ", "la universidad ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 449:
                                                              // sometimes adverb
                                                              object.GenPresSimpAdverbs2("sometimes ", "aveces ");
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 450:
                                                              //former
                                                              nouns.adjectiveGen2("former ", "anterior ", "anterior ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 451:
                                                              //development
                                                              nouns.nounGen("the development ", "el desarrollo ");
                                                              sp = nouns.gens + "- " + nouns.gene;

                                                              break;
                                                          case 452:
                                                              // require
                                                              object.GenPresSimp(pronoun, 94);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 453:
                                                              nouns.genPreps("along");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 454:
                                                              //decide
                                                              object.GenPresSimp(pronoun, 95);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 455:
                                                              // security
                                                              nouns.nounGen("the security ", "la seguridad ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 456:
                                                              // up
                                                              object.GenPresSimpPrepasAdv("up ", "hacia arriba");
                                                              sp = object.gens + "-" + object.gene;
                                                              break;
                                                          case 457:
                                                              //possible
                                                              nouns.adjectiveGen("possible ", "posible ", "posible ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 458:
                                                              // effort
                                                              nouns.nounGen("the effort ", "el esfuerzo ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 459:
                                                              // role
                                                              nouns.nounGen("the role ", "el papel ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 460:
                                                              //better
                                                              nouns.adjectiveGen("better ", "mejor ", "mejor ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 461:
                                                              //rate
                                                              nouns.nounGen("the rate ", "la tarifa ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 462:
                                                              //strong
                                                              nouns.adjectiveGen("strong ", "fuerte ", "fuerte ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 463:
                                                              // music
                                                              nouns.nounGen("the music ", "la música ");
                                                              sp = nouns.gens + "- " + nouns.gene;

                                                              break;
                                                          case 464:
                                                              //report verb
                                                              object.GenPresSimp(pronoun, 96);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 465:
                                                              // leader
                                                              nouns.nounGen("the leader ", "el líder ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 466:
                                                              // light
                                                              nouns.nounGen("the light ", "la luz ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 467:
                                                              //whole
                                                              nouns.adjectiveGen("whole ", "completo ", "completa ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 468:
                                                              // voice
                                                              nouns.nounGen("the voice ", "la voz ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 469:
                                                              // color
                                                              nouns.nounGen("the color ", "el color ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 470:
                                                              // heart
                                                              nouns.nounGen("the heart ", "el corazón ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 471:
                                                              //care
                                                              nouns.nounGen("the care ", "el cuidado ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 472:
                                                              // police
                                                              nouns.nounGen("the police ", "la policia ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 473:
                                                              //economic
                                                              nouns.adjectiveGen2("economic ", "economico ", "economica ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 474:
                                                              // wife
                                                              nouns.nounGen("the wife ", "la esposa ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 475:
                                                              // show
                                                              nouns.nounGen("the show ", "el espectáculo ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 476:
                                                              //mind
                                                              nouns.nounGen("the mind ", "la mente ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 477:
                                                              // report
                                                              nouns.nounGen("the report ", "el informe ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 478:
                                                              // finally
                                                              object.GenPresSimpAdverbs("finally ", "finalmente ");
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 479:
                                                              // drug/noun
                                                              nouns.nounGen("the drug ", "la droga ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 480:
                                                              //less
                                                              object.GenPresSimpAdverbs2NoObject("less ", "menos ");
                                                              sp = object.gens + "- " + object.gene;

                                                              break;
                                                          case 481:
                                                              // return
                                                              object.GenPresSimp(pronoun, 97);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 482:
                                                              //according
                                                              nouns.genPreps("according to");
                                                              sp = nouns.gens + "- " + nouns.gene;

                                                              break;
                                                          case 483:
                                                              // pull
                                                              object.GenPresSimp(pronoun, 98);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 484:
                                                              //decision
                                                              nouns.nounGen("the decision ", "la decisión ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 485:
                                                              // explain
                                                              object.GenPresSimp(pronoun, 99);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 486:
                                                              //carry
                                                              object.GenPresSimp(pronoun, 100);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 487:
                                                              // develop
                                                              object.GenPresSimp(pronoun, 101);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 488:
                                                              //view
                                                              nouns.nounGen("the view ", "la vista ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 489:
                                                              //free
                                                              nouns.adjectiveGen("free ", "libre ", "libre ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 490:
                                                              // hope
                                                              object.GenPresSimp(pronoun, 102);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 491:
                                                              //even
                                                              object.GenConjFuture("even if", "incluso si");
                                                              gen1.GenPresSimp2();
                                                              complemento = gen1.gens;
                                                              complement = gen1.gene;
                                                              sp = object.gens + " " + complemento + "--" + object.gene + " " + complement;

                                                              break;
                                                          case 492:
                                                              // drive
                                                              object.GenPresSimp(pronoun, 103);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          case 493:
                                                              // son
                                                              nouns.nounGen("the son ", "el hijo ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 494:
                                                              // arm
                                                              nouns.nounGen("the arm ", "el brazo ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 495:
                                                              // department
                                                              nouns.nounGen("the department ", "el departamento ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 496:
                                                              //true
                                                              nouns.adjectiveGen("true ", "verdadero ", "verdadera ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 497:
                                                              // price
                                                              nouns.nounGen("the price ", "el precio ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 498:
                                                              //military
                                                              nouns.adjectiveGen2("military ", "militar ", "militar ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 499:
                                                              //federal
                                                              nouns.adjectiveGen2("federal ", "federal ", "federal ");
                                                              sp = nouns.gens + "- " + nouns.gene;
                                                              break;
                                                          case 500:
                                                              // break
                                                              object.GenPresSimp(pronoun, 104);
                                                              sp = object.gens + "- " + object.gene;
                                                              break;
                                                          default:
                                                              sp = "no value";
                                                              break;
                                                      }

                                                      holder.ejemplostxt.setText(sp);
                                                      //set views to original state
                                                      holder.masInfoBtn.setBackgroundResource(R.drawable.borde_azul);
                                                      holder.description.setVisibility(View.GONE);

                                                      holder.practicaBtn.setTextColor(Color.BLUE);
                                                      holder.practicaBtn.setBackgroundResource(R.drawable.borde_azul);

                                                      holder.continuarBtn.setVisibility(View.GONE);
                                                      holder.comoDirias.setVisibility(View.GONE);
                                                      holder.mic.setVisibility(View.GONE);
                                                      holder.checarRespBtn.setVisibility(View.GONE);
                                                      holder.respCorrecta.setVisibility(View.GONE);


                                                  }
                                              });
        //BTN  PRACTICAR
        if(prefs.getHasSeenAd()||prefs.getPremium()==1) {
            holder.practicaBtn.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    // set views for practice
                    holder.practicaBtn.setVisibility(View.GONE);
//                    holder.comoDirias.setVisibility(View.VISIBLE);
//                    holder.userInput.setVisibility(View.INVISIBLE);
//                    holder.placeholder.setVisibility(View.INVISIBLE);
//                    holder.mic.setVisibility(View.VISIBLE);
//                    holder.checarRespBtn.setVisibility(View.GONE);
//                    holder.respCorrecta.setVisibility(View.GONE);
//                    if(!holder.userInput.getText().toString().isEmpty()){
//                        holder.userInput.setText("");
//                    }
                    int rv = (int)(Math.random()*subjectsEnglish.length);
                    String pronoun = subjectsEnglish[rv];
                    cerotofifty gen = new cerotofifty();
                    Generator gen1 = new Generator();
                    Generator gen2= new Generator();
                    Generator genA= new Generator();
                    AuxModalNegator negator = new AuxModalNegator();

                    Nobles n = new Nobles();
                    String complemento,complement,complement2;
                    String sp;
                    sp ="no value";
                    switch (position) {
                        case 0:
                            // the
                            if(item.getType()==1){

                                object.GenPresSimp();
                                sp= object.gens ;
                                globalAnswer=object.gene;

                            }else if(item.getType()==0){
                                gen.artob(0);
                                sp=gen.ob ;
                                globalAnswer=gen.eng;
                            }
                            else if(item.getType()==2){
                                object.GenConj("and","y");
                                int r= (int)(Math.random()*2);
                                complemento="";
                                complement="";
                                switch (r){
                                    case 0:
                                        object2.GenPresSimp();
                                        complemento=object2.gens;
                                        complement=object2.gene;
                                        break;

                                    case 1:
                                        gen1.GenPresSimp2();
                                        complemento=gen1.gens;
                                        complement=gen1.gene;
                                        break;
                                    default:
                                        complemento="no object activated";
                                        complement="no object activated";
                                        break;
                                }
                                sp= object.gens+" "+complemento;
                                globalAnswer=object.gene+" "+complement;
                            }
                            break;
                        case 1:
                            // to be
                            if(item.getType()==0){
                                gen.tobe();
                                sp=gen.gens;
                                globalAnswer= gen.gene;
                            }else if(item.getType()==1){

                                int r2 =(int)(Math.random()*4);
                                switch (r2) {
                                    case 0:
                                        // aqui solo deje el positivo por eso se tiene que negar con el metodo
                                        gen1.GenPresCont2();
                                        sp= gen1.gens;
                                        globalAnswer =gen1.gene;
                                        globalAnswer2= negator.contractPresentContinuousPresent(gen1.gene);
                                        break;
                                    case 1:
                                        object.GenContTenses("am ", "are ", "is ","estoy ", "estas ", "esta ", "estamos ", "estan ");
                                        sp= object.gens;
                                        globalAnswer=object.gene;
                                        globalAnswer2=negator.contractPresentContinuousPresent(object.gene);

                                        break;
                                    case 2:
                                        object.GenContTenses("am ", "are ", "is ","estoy ", "estas ", "esta ", "estamos ", "estan ");
                                        // present continuous contracted not negated
                                        String negatedNotContracted  = negator.negateFirstAuxOrModal(object.gene);
                                        String negatedContracted = negator.negateFirstAuxOrModalContracted(object.gene);
                                        String contractedToBeAndNegated = negator.negateAndContractPresentContinuous(negatedNotContracted);

                                        sp = negator.negateSentenceSpanish(object.gens);
                                        globalAnswer=negatedNotContracted;
                                        globalAnswer2=negatedContracted;
                                        globalAnswer3=contractedToBeAndNegated;

                                        break;

                                    case 3:
                                        gen1.GenPresCont2();// present continuous contracted not negated
                                        String negatedNotContracted2  = negator.negateFirstAuxOrModal(gen1.gene);
                                        String negatedContracted2 = negator.negateFirstAuxOrModalContracted(gen1.gene);
                                        String contractedToBeAndNegated2= negator.negateAndContractPresentContinuous(negatedNotContracted2);

                                        sp = negator.negateSentenceSpanish(gen1.gens);
                                        globalAnswer=negatedNotContracted2;
                                        globalAnswer2=negatedContracted2;
                                        globalAnswer3=contractedToBeAndNegated2;

                                        break;
                                }
                            }else if(item.getType()==2){
                                n.GenRelativeClauses1New();
                                sp=n.gens;
                                globalAnswer=n.gene;
                            }else if(item.getType()==3){

                            }

                            break;
                        case 2:
                            // Adapted case 2 logic to mirror case 1's structure
                            if (item.getType() == 0) {
                                gen.advpronverb(4); // Assuming this needs to be called for type 0 in case 2
                                sp = gen.gens ;
                                globalAnswer=gen.gene;
                            } else if (item.getType() == 1) {

                                int r2 = (int)(Math.random()*3);
                                switch (r2){
                                    case 0:
                                        gen1.GenPresPerf2();
                                        sp= gen1.gens ;
                                        globalAnswer=gen1.gene;
                                        globalAnswer2=gen1.gene2;
                                        break;

                                    case 1:
                                        object.GenPerfectTenses("have ", "has ","he ", "has ", "ha ", "hemos ", "han ");
                                        sp= object.gens ;
                                        globalAnswer=object.gene;
                                        globalAnswer2=negator.contractPresentPerfect(object.gene);
                                        break;
                                    case 2:
                                        object.GenPerfectTenses("have ", "has ","he ", "has ", "ha ", "hemos ", "han ");
                                        sp= negator.negateSentenceSpanish(object.gens);
                                        globalAnswer=negator.negateFirstAuxOrModalContracted(object.gene);
                                        globalAnswer2=negator.negateFirstAuxOrModal(object.gene);

                                        break;

                                }


                            } else if (item.getType() == 2) {

                                object.GenConj("but","pero");
                                int r= (int)(Math.random()*2);
                                complemento="";
                                complement="";
                                switch (r){
                                    case 0:
                                        object2.GenPresSimp();
                                        complemento=object2.gens;
                                        complement=object2.gene;
                                        break;

                                    case 1:
                                        gen1.GenPresSimp2();
                                        complemento=gen1.gens;
                                        complement=gen1.gene;
                                        break;
                                    default:
                                        complemento="no object activated";
                                        complement="no object activated";
                                        break;
                                }
                                sp= object.gens+" "+complemento;
                                globalAnswer=object.gene+" "+complement;

                            } else if (item.getType() == 3) {

                            }
                            break;
                        case 3:
                            //of
                            if(item.getType()==0){
                                gen.prepartob(0);
                                sp=gen.ob;
                                globalAnswer=gen.eng;
                            }else if(item.getType()==1){

                                int r2 = (int)(Math.random()*4);
                                switch (r2){
                                    case 0:

                                        //makes only affirmative now
                                        gen1.GenPresPerfCont2();
                                        sp= gen1.gens;
                                        //i have been playing
                                        globalAnswer=gen1.gene;
                                        //i ve been playing
                                        globalAnswer2=negator.contractPresentPerfect(gen1.gene);
                                        break;

                                    case 1:
                                        object.GenContTenses("have been ","have been ", "has been ","he estado ", "has estado ", "ha estado ", "hemos estado ", "han estado ");
                                        sp= object.gens;
                                        //i have been
                                        globalAnswer=object.gene;
                                        //ive been
                                        globalAnswer2=negator.contractPresentPerfect(object.gene);
                                        break;
                                    case 2:
                                        object.GenContTenses("have been ","have been ", "has been ","he estado ", "has estado ", "ha estado ", "hemos estado ", "han estado ");
                                        sp= negator.negateSentenceSpanish(object.gens) ;
                                        // i have not been
                                        globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                        // i havent been
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(object.gene);
                                        // i ve not been
                                        globalAnswer3= negator.contractPresentPerfectIncludingNot(globalAnswer);

                                        break;
                                    case 3:
                                        gen1.GenPresPerfCont2();
                                        sp= negator.negateSentenceSpanish(gen1.gens);
                                        // i have not been
                                        globalAnswer=negator.negateFirstAuxOrModal(gen1.gene);
                                        // i havent been
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(gen1.gene);
                                        // i ve not been
                                        globalAnswer3= negator.contractPresentPerfectIncludingNot(globalAnswer);

                                        break;
                                }

                            }else if(item.getType()==2){
                                object.GenConj("or","o");
                                int r= (int)(Math.random()*2);
                                complemento="";
                                complement="";
                                switch (r){
                                    case 0:
                                        object2.GenPresSimp();
                                        complemento=object2.gens;
                                        complement=object2.gene;
                                        break;

                                    case 1:
                                        gen1.GenPresSimp2();
                                        complemento=gen1.gens;
                                        complement=gen1.gene;
                                        break;
                                    default:
                                        complemento="no object activated";
                                        complement="no object activated";
                                        break;
                                }
                                sp= object.gens+" "+complemento;
                                globalAnswer=object.gene+" "+complement;
                            }else if(item.getType()==3){

                            }

                            break;
                        case 4:
                            //a
                            if(item.getType()==0){
                                gen.artoba();
                                sp=gen.ob ;
                                globalAnswer=gen.eng;
                            }else if(item.getType()==1){
                                int r2 = (int)(Math.random()*3);
                                switch (r2){
                                    case 0:
                                        gen1.GenPastSimp2();
                                        sp= gen1.gens ;
                                        globalAnswer =gen1.gene;
                                        break;
                                    case 1:
                                        object.GenPastSimp();
                                        sp= object.gens ;
                                        globalAnswer=object.gene;
                                        break;
                                    case 2:

                                        object.GenPastSimp();
                                        sp= negator.negateSentenceSpanish(object.gens) ;
                                        globalAnswer=negator.negatePastSimple(object.gene2);

                                        break;
                                }
                            }else if(item.getType()==2){
                                Nobles n1 = new Nobles();
                                int pos1 = (int) (Math.random() * 6);
                                n1.GenPresSimpAs(pos1);
                                int r= (int)(Math.random()*2);
                                complemento="";
                                complement="";
                                switch (r){
                                    case 0:
                                        object2.GenPresSimp();
                                        complemento=object2.gens;
                                        complement=object2.gene;
                                        break;

                                    case 1:
                                        gen1.GenPresSimp2();
                                        complemento=gen1.gens;
                                        complement=gen1.gene;
                                        break;
                                    default:
                                        complemento="no object activated";
                                        complement="no object activated";
                                        break;
                                }

                                sp=n1.gens +complemento;
                                globalAnswer=n1.gene+complement;
                            }else if(item.getType()==3){

                            }

                            break;
                        case 5:
                            // in
                            if(item.getType()==0){
                                gen.prepartob(1);
                                sp=gen.ob ;
                                globalAnswer=gen.eng;
                            }else if(item.getType()==1){
                                int r2 = (int)(Math.random()*4);
                                switch (r2){
                                    case 0:
                                        gen1.GenPastCont2();
                                        sp= gen1.gens;
                                        globalAnswer=gen1.gene;
                                        break;
                                    case 1:
                                        object.GenContTenses("was ", "were ", "was ","estaba ", "estabas ", "estaba ", "estabamos ", "estaban ");
                                        sp= object.gens;
                                        globalAnswer=object.gene;
                                        break;
                                    case 2:
                                        object.GenContTenses("was ", "were ", "was ","estaba ", "estabas ", "estaba ", "estabamos ", "estaban ");
                                        sp= negator.negateSentenceSpanish(object.gens) ;
                                        //i was not
                                        globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                        // i wasnt
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(object.gene);
                                        break;
                                    case 3:
                                        gen1.GenPastCont2();
                                        sp= negator.negateSentenceSpanishOG(gen1.gens);
                                        // i was not
                                        globalAnswer= negator.negateFirstAuxOrModal(gen1.gene);
                                        // i wasnt
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(gen1.gene);

                                        break;

                                }
                            }else if(item.getType()==2){
                                //if trans
                                complemento="";
                                complement="";
                                String oracionsp="";
                                String oracioneng="";
                                int r = (int)(Math.random()*2);
                                switch (r){
                                    case 0:
                                        object.GenConjFuture("if ", "si ");
                                        object2.GenPresSimp();
                                        oracionsp=object.gens;
                                        oracioneng=object.gene;
                                        complemento=object2.gens;
                                        complement=object2.gene;
                                        sp = oracionsp+complemento;
                                        globalAnswer=oracioneng+complement;
                                        break;

                                    case 1:
                                        object.GenConj("if ", "si ");
                                        object2.GenPresSimp();
                                        oracionsp=object.gens;
                                        oracioneng=object.gene;
                                        complemento=object2.gens;
                                        complement=object2.gene;
                                        sp = oracionsp+complemento;
                                        globalAnswer=oracioneng+complement;

                                        break;

                                    default:
                                        sp="no hay valor";
                                        break;
                                }


                            }else if(item.getType()==3){

                            }

                            break;
                        case 6:
                            //to infinitive
                            if(item.getType()==0){
                                gen1.GenInfinitives();
                                sp=gen1.ob ;
                                globalAnswer=gen1.eng;
                            }else if(item.getType()==1){
                                int r2 = (int)(Math.random()*4);
                                switch (r2) {
                                    case 0:
                                        gen1.GenPastPerf2();
                                        sp= gen1.gens ;
                                        globalAnswer=gen1.gene;
                                        globalAnswer2=negator.contractHadOrWould(gen1.gene);
                                        break;
                                    case 1:
                                        object.GenPerfectTenses("had ", "had ","había ","habías ", "había ", "habíamos ", "habían ");
                                        sp = object.gens;
                                        globalAnswer=object.gene;
                                        globalAnswer2=negator.contractHadOrWould(object.gene);
                                        break;
                                    case 2:
                                        object.GenPerfectTenses("had ", "had ","había ","habías ", "había ", "habíamos ", "habían ");
                                        sp = negator.negateSentenceSpanish(object.gens);
                                        // had not
                                        globalAnswer=  negator.negateFirstAuxOrModal(object.gene);
                                        //hadnt
                                        globalAnswer2= negator.negateFirstAuxOrModalContracted(object.gene);
                                        break;
                                    case 3:
                                        gen1.GenPastPerf2();
                                        sp= gen1.gens ;
                                        // had not
                                        globalAnswer= negator.negateFirstAuxOrModal(gen1.gene);
                                        // hadnt
                                        globalAnswer2= negator.negateFirstAuxOrModalContracted(gen1.gene);
                                        break;
                                }
                            }else if(item.getType()==2){
                                //when trans
                                int r= (int)(Math.random()*2);
                                complemento="";
                                complement="";
                                String oracionsp="";
                                String oracioneng="";
                                String oracioneng2=".";
                                switch (r){
                                    case 0:
                                        object.GenConjFuture("when ","cuando ");
                                        object2.GenPresSimpSubjunctive();
                                        complemento=object2.gens;
                                        complement=object2.gene;


                                        oracionsp= object.gens;
                                        oracioneng= object.gene;
                                        oracioneng2=negator.contractWill(object.gene);
                                        break;

                                    case 1:
                                        object.GenConj("when ","cuando ");
                                        gen1.GenPresSimp2();
                                        complemento=gen1.gens;
                                        complement=gen1.gene;
                                        oracioneng2=".";

                                        oracionsp= object.gens;
                                        oracioneng= object.gene;
                                        break;

                                    default:
                                        complemento="no object activated";
                                        complement="no object activated";
                                        break;
                                }

                                sp= oracionsp+complemento;

                                globalAnswer=oracioneng+ complement;
                                globalAnswer2=oracioneng2+complement;


                            }else if(item.getType()==3){

                            }

                            break;
                        case 7:
                            //have
                            if(item.getType()==0){
                                int pos = (int) (Math.random() * 6);
                                n.GenPresSimp(pos,0);
                                sp=n.gens;
                                globalAnswer=n.gene;
                            }else if(item.getType()==1){
                                int r2 = (int)(Math.random()*4);
                                switch (r2){
                                    case 0:
                                        // only positives
                                        gen1.GenPastPerfCont2();
                                        sp= gen1.gens;
                                        globalAnswer=gen1.gene;
                                        globalAnswer2=negator.contractHadOrWould(gen2.gene);
                                        break;
                                    case 1:
                                        object.GenContTenses("had been ","had been ", "had been ","había estado ","habías estado ", "había estado ", "habíamos estado ", "habían estado ");
                                        sp = object.gens;
                                        globalAnswer=object.gene;
                                        globalAnswer2=negator.contractHadOrWould(object.gene);
                                        break;
                                    case 2:
                                        object.GenContTenses("had been ", "had been ","had been ","había estado ","habías estado ", "había estado ", "habíamos estado ", "habían estado ");
                                        sp = negator.negateSentenceSpanish(object.gens);
                                        // had not been
                                        globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                        //hadnt beeen
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(object.gene);

                                        break;
                                    case 3:
                                        gen1.GenPastPerfCont2();
                                        sp= gen1.gens;
                                        // had not been
                                        globalAnswer=negator.negateFirstAuxOrModal(gen1.gene);
                                        //hadnt been
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(gen1.gene);
                                        break;
                                }
                            }else if(item.getType()==2)
                            {
                                //because trans
                                int r= (int)(Math.random()*4);
                                complemento="";
                                complement="";
                                complement2="";
                                String oracionsp="";
                                String oracioneng="";
                                switch (r){
                                    case 0:
                                        object.GenConjFuture("because ","por que ");
                                        object2.GenPresSimp();
                                        complemento=object2.gens;
                                        complement=object2.gene;

                                        oracionsp= object.gens;
                                        oracioneng= object.gene;
                                        sp= oracionsp+complemento;
                                        globalAnswer=oracioneng+ complement;
                                        break;

                                    case 1:
                                        gen1.GenPastSimp2();
                                        gen2.GenPastPerf2();

                                        complemento=gen1.gens;
                                        complement=gen1.gene;

                                        oracionsp= gen2.gens;
                                        oracioneng= gen2.gene;


                                        sp= oracionsp+"por que "+ complemento;
                                        globalAnswer=oracioneng+"because "+ complement;
                                        break;

                                    case 2:
                                        object.GenConj("because ","por que ");
                                        object2.GenPresSimp();
                                        complemento=object2.gens;
                                        complement=object2.gene;

                                        oracionsp= object.gens;
                                        oracioneng= object.gene;
                                        sp= oracionsp+complemento;
                                        globalAnswer=oracioneng+ complement;
                                        break;



                                    case 3:
                                        object.GenConjFuture("because ","por que ");
                                        gen1.GenPresPerf2();
                                        complemento=gen1.gens;
                                        complement=gen1.gene;

                                        oracionsp= object.gens;
                                        oracioneng= object.gene;
                                        sp= oracionsp+complemento;
                                        globalAnswer=oracioneng+ complement;

                                        break;
                                    default:
                                        complemento="no object activated";
                                        complement="no object activated";
                                        break;
                                }

                            }else if(item.getType()==3){

                            }

                            break;
                        case 8:
                            //to preposition
                            if(item.getType()==0){
                                gen.prepartob(2);
                                sp=gen.ob ;
                                globalAnswer=gen.eng;
                            }else if(item.getType()==1){
                                int r2 = (int)(Math.random()*4);
                                switch (r2) {
                                    case 0:
                                        //lo cambie pera que solo diera affirmativo
                                        gen1.GenFutSimp2();
                                        sp= gen1.gens ;
                                        globalAnswer=gen1.gene;
                                        globalAnswer2= negator.contractWill(gen1.gene);

                                        break;
                                    case 1:
                                        object.GenFuture();
                                        sp = object.gens;
                                        globalAnswer=object.gene;
                                        globalAnswer2=negator.contractWill(object.gene) ;
                                        break;
                                    case 2:
                                        // will not
                                        object.GenFuture();
                                        sp = negator.negateSentenceSpanish(object.gens);
                                        // will not
                                        globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                        //wont
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(object.gene);
                                        break;
                                    case 3:
                                        // will not  contracted del generator
                                        gen1.GenFutSimp2();
                                        sp = negator.negateSentenceSpanish(gen1.gens);

                                        //will not
                                        globalAnswer=negator.negateFirstAuxOrModal(gen1.gene);
                                        //wont
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(gen1.gene);

                                        break;

                                }
                            }else if(item.getType()==2){
                                //while trans
                                int r= (int)(Math.random()*2);
                                complemento="";
                                complement="";
                                complement2="";
                                String oracionsp="";
                                String oracioneng="";
                                switch (r){
                                    case 0:
                                        object.GenConjFuture("while ","mientras que ");
                                        object2.GenPresSimpSubjunctive();
                                        complemento=object2.gens;
                                        complement=object2.gene;

                                        oracionsp= object.gens;
                                        oracioneng= object.gene;
                                        sp= oracionsp+complemento;
                                        globalAnswer=oracioneng+ complement;
                                        break;



                                    case 1:
                                        object.GenConj("while ","mientras que ");
                                        object2.GenPresSimp();
                                        complemento=object2.gens;
                                        complement=object2.gene;

                                        oracionsp= object.gens;
                                        oracioneng= object.gene;
                                        sp= oracionsp+complemento;
                                        globalAnswer=oracioneng+ complement;
                                        break;

                                    default:
                                        complemento="no object activated";
                                        complement="no object activated";
                                        break;
                                }

                            }else if(item.getType()==3){

                            }


                            break;
                        case 9:
                            //it
                            if(item.getType()==0){
                                gen.pronverb("eso ");
                                sp= gen.gens;
                                globalAnswer=gen.gene;
                            }else if(item.getType()==1){
                                int r2 = (int)(Math.random()*4);
                                switch (r2){
                                    case 0:
                                        gen1.GenFutCont2();
                                        sp= gen1.gens ;
                                        globalAnswer=gen1.gene;
                                        globalAnswer2= negator.contractWill(gen1.gene);
                                        break;
                                    case 1:
                                        object.GenContTenses("will be ", "will be ","will be ","estaré ", "estarás ", "estará ", "estarémos ", "estarán ");
                                        sp = negator.negateSentenceSpanish(object.gens);
                                        // will not be
                                        globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                        //wont be
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(object.gene);
                                        break;
                                    case 2:
                                        object.GenContTenses("will be ", "will be ","will be ","estaré ", "estarás ", "estará ", "estarémos ", "estarán ");
                                        sp =object.gens;
                                        globalAnswer=   object.gene;
                                        globalAnswer2=negator.contractWill(object.gene);
                                        break;
                                    case 3:
                                        gen1.GenFutCont2();
                                        sp= negator.negateSentenceSpanish(gen1.gens);
                                        // will not
                                        globalAnswer=negator.negateFirstAuxOrModal(gen1.gene);
                                        // wont
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(gen1.gene);
                                        break;

                                }
                            }else if(item.getType()==2){
                                //where trans
                                int r= (int)(Math.random()*2);
                                complemento="";
                                complement="";
                                complement2="";
                                String oracionsp="";
                                String oracioneng="";
                                switch (r){
                                    case 0:
                                        object.GenConjFuture("where ","donde ");
                                        object2.GenPresSimpSubjunctive();
                                        complemento=object2.gens;
                                        complement=object2.gene;

                                        oracionsp= object.gens;
                                        oracioneng= object.gene;
                                        sp= oracionsp+complemento;
                                        globalAnswer=oracioneng+ complement;
                                        break;



                                    case 1:
                                        object.GenConj("where ","donde ");
                                        object2.GenPresSimp();
                                        complemento=object2.gens;
                                        complement=object2.gene;

                                        oracionsp= object.gens;
                                        oracioneng= object.gene;
                                        sp= oracionsp+complemento;
                                        globalAnswer=oracioneng+ complement;
                                        break;

                                    default:
                                        complemento="no object activated";
                                        complement="no object activated";
                                        break;
                                }
                            }else if(item.getType()==3){

                            }

                            break;
                        case 10:
                            //i
                            if(item.getType()==0){
                                gen.pronverb("yo ");
                                sp= gen.gens  ;
                                globalAnswer=gen.gene;
                            }else if(item.getType()==1){
                                int r2 = (int)(Math.random()*4);
                                switch (r2){
                                    case 0:
                                        gen1.GenFutPerf2();
                                        sp= gen1.gens;
                                        globalAnswer=gen1.gene;
                                        globalAnswer2=".";
                                        break;
                                    case 1:
                                        object.GenPerfectTenses("will have ", "will have ","habré ", "habrás ", "habrá ", "habrémos ", "habrán ");
                                        sp = negator.negateSentenceSpanish(object.gens);
                                        //will not have
                                        globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                        //wont have
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(object.gene);
                                        break;
                                    case 2:
                                        gen1.GenFutPerf2();
                                        sp= negator.negateSentenceSpanish(gen1.gens);
                                        globalAnswer=negator.negateFirstAuxOrModal(gen1.gene);
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(gen1.gene);
                                        break;

                                    case 3:
                                        object.GenPerfectTenses("will have ", "will have ","habré ", "habrás ", "habrá ", "habrémos ", "habrán ");
                                        sp=object.gens;
                                        globalAnswer=object.gene;
                                        globalAnswer2=".";

                                        break;

                                }
                            }else if(item.getType()==2){

//so trans
                                int r= (int)(Math.random()*3);
                                complemento="";
                                complement="";
                                complement2="";
                                String oracionsp="";
                                String oracioneng="";
                                switch (r){
                                    case 0:
                                        object.GenPastSimp();
                                        object2.GenPresSimpAdverbs3("so ","asi que ");
                                        complemento=object2.gens;
                                        complement=object2.gene;

                                        oracionsp= object.gens;
                                        oracioneng= object.gene;
                                        sp= oracionsp+complemento;
                                        globalAnswer=oracioneng+ complement;
                                        break;

                                    case 1:
                                        object.GenPresSimp();
                                        object2.GenPresSimpAdverbs3("so ","asi que ");
                                        complemento=object2.gens;
                                        complement=object2.gene;

                                        oracionsp= object.gens;
                                        oracioneng= object.gene;
                                        sp= oracionsp+complemento;
                                        globalAnswer=oracioneng+ complement;
                                        break;
                                    case 2:
                                        object.GenPastSimp();
                                        oracionsp= object.gens;
                                        oracioneng= object.gene;

                                        object2.GenConjFuture("","");
                                        complemento=object2.gens;
                                        complement=object2.gene;

                                        sp= oracionsp+"asi que " +complemento;
                                        globalAnswer=oracioneng+"so "+complement;
                                        break;

                                    default:
                                        complemento="no object activated";
                                        complement="no object activated";
                                        break;
                                }
                            }else if(item.getType()==3){

                            }

                            break;
                        case 11:
                            // that para conectar
                            if(item.getType()==0){
                                int r = (int) (Math.random() * 2);
                                n.GenRelativeClauses1(r);
                                sp=n.gens;
                                globalAnswer=n.gene;
                            }else if(item.getType()==1){
                                int r2 =(int) (Math.random()*4);
                                switch (r2){
                                    case 0:
                                        gen1.GenFutPerfCont2();
                                        sp= gen1.gens;
                                        globalAnswer=gen1.gene;
                                        globalAnswer2=negator.contractWill(gen1.gene);
                                        break;
                                    case 1:
                                        object.GenContTenses("will have been ", "will have been ","will have been ","habré estado ", "habrás estado ", "habrá estado ", "habrémos estado ", "habrán estado ");
                                        sp = negator.negateSentenceSpanish(object.gens) ;
                                        // will not have been
                                        globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                        //wont have been
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(object.gene);
                                        break;
                                    case 2:
                                        gen1.GenFutPerfCont2();
                                        sp= negator.negateSentenceSpanish(gen1.gens);
                                        //will not have been
                                        globalAnswer=negator.negateFirstAuxOrModal(gen1.gene);
                                        // wont have been
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(gen1.gene);
                                        break;
                                    case 3:
                                        object.GenContTenses("will have been ", "will have been ","will have been ","habré estado ", "habrás estado ", "habrá estado ", "habrémos estado ", "habrán estado ");
                                        sp=object.gens;
                                        globalAnswer=object.gene;
                                        globalAnswer2=negator.contractWill(object.gene);
                                        break;

                                }
                            }else if(item.getType()==2){
                                //though trans
                                int r= (int)(Math.random()*3);
                                complemento="";
                                complement="";
                                complement2="";
                                String oracionsp="";
                                String oracioneng="";
                                switch (r){
                                    case 0:
                                        object.GenPastSimp();
                                        oracionsp=object.gens;
                                        oracioneng=object.gene;
                                        object2.GenPastSimp();
                                        complemento=object2.gens;
                                        complement=object2.gene;
                                        sp = oracionsp + " aún que "+complemento;
                                        globalAnswer=oracioneng+"though "+complement;
                                        break;

                                    case 1:

                                        object.GenPastSimp();
                                        oracionsp=negator.negateSentenceSpanish(object.gens);

                                        oracioneng=negator.negatePastSimple(object.gene2);
                                        object2.GenPastSimp();
                                        complemento=         object2.gens;
                                        complement=     object2.gene;

                                        sp = oracionsp + " aún que "+complemento;
                                        globalAnswer=oracioneng+"though "+complement;

                                        break;
                                    case 2:
                                        object.GenConjFuture("though ","aun que ");
                                        oracionsp=object.gens;
                                        oracioneng=object.gene;
                                        object2.GenPresSimpSubjunctive();
                                        complemento=object2.gens;
                                        complement=object2.gene;
                                        sp = oracionsp+complemento;
                                        globalAnswer=oracioneng+complement;

                                        break;

                                    default:
                                        complemento="no object activated";
                                        complement="no object activated";
                                        break;
                                }

                            }else if(item.getType()==3){

                            }

                            break;
                        case 12:
                            //for como prep
                            if(item.getType()==0){
                                gen.prepartob(3);
                                sp=gen.ob ;
                                globalAnswer=gen.eng;
                            }else if(item.getType()==1){
                                int r2 = (int)  (Math.random()*4);
                                switch (r2) {
                                    case 0:
                                        //made it so it is only positive now
                                        gen1.GenWouldSimp2();
                                        sp=gen1.gens;
                                        globalAnswer=gen1.gene;
                                        globalAnswer2=negator.contractHadOrWould(gen1.gene);
                                        break;
                                    case 1:
                                        object.GenWould();
                                        sp = object.gens;
                                        globalAnswer=object.gene;
                                        globalAnswer2=negator.contractHadOrWould(object.gene);
                                        break;
                                    case 2:
                                        gen1.GenWouldSimp2();
                                        sp=negator.negateSentenceSpanish(gen1.gens) ;
                                        //would not
                                        globalAnswer=negator.negateFirstAuxOrModal(gen1.gene);
                                        //wouldnt
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(gen1.gene);

                                        break;
                                    case 3:
                                        object.GenWould();
                                        sp =negator.negateSentenceSpanish(object.gens) ;
                                        //would not
                                        globalAnswer=negator.negateFirstAuxOrModal(object.gene);

                                        //wouldnt
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(object.gene);
                                        break;

                                }
                            }else if(item.getType()==2){
                                //after trans
                                int r= (int)    (Math.random()*3);
                                complemento="";
                                complement="";
                                complement2="";
                                String oracionsp="";
                                String oracioneng="";
                                switch (r){
                                    case 0:
                                        object.GenConjFuture("after ", "después de que ");
                                        oracionsp=object.gens;
                                        oracioneng=object.gene;
                                        object2.GenPresSimpSubjunctive();
                                        complemento = object2.gens;
                                        complement =object2.gene;
                                        sp = oracionsp+complemento;
                                        globalAnswer=oracioneng+complement;

                                        break;

                                    case 1:
                                        object.GenPastSimp();
                                        oracionsp=object.gens;
                                        oracioneng=object.gene;
                                        object2.GenPastSimp();
                                        complemento = object2.gens;
                                        complement =object2.gene;
                                        sp = oracionsp+"después de que "+complemento;
                                        globalAnswer=oracioneng+"after "+complement;
                                        break;

                                    case 2:
                                        object.GenPresSimp();
                                        oracionsp=object.gens;
                                        oracioneng=object.gene;
                                        object2.GenPvpp();
                                        complemento = object2.gens;
                                        complement =object2.gene;
                                        sp = oracionsp+"después de que "+complemento;
                                        globalAnswer=oracioneng+"after "+complement;
                                        break;

                                    default:
                                        complemento="no object activated";
                                        complement="no object activated";
                                        break;
                                }

                            }else if(item.getType()==3){

                            }

                            break;
                        case 13:
                            //you
                            if(item.getType()==0){
                                gen.pronverb("tú ");
                                sp= gen.gens ;
                                globalAnswer=gen.gene;
                            }else if(item.getType()==1){

                                int r2 = (int)  (Math.random()*4);
                                switch (r2) {
                                    case 0:
                                        //made it so it is only positive now
                                        gen1.GenWouldCont2();
                                        sp= gen1.gens ;
                                        globalAnswer=gen1.gene;
                                        globalAnswer2=negator.contractHadOrWould(gen1.gene);
                                        break;
                                    case 1:
                                        object.GenContTenses("would be ","would be ","would be ","estaría ","estarías ","estaría ","estaríamos ","estarían ");
                                        sp=object.gens;
                                        globalAnswer=object.gene;
                                        globalAnswer2=negator.contractHadOrWould(object.gene)   ;
                                        break;
                                    case 2:
                                        object.GenContTenses("would be ","would be ","would be ","estaría ","estarías ","estaría ","estaríamos ","estarían ");
                                        sp=negator.negateSentenceSpanish(object.gens);
                                        //would not be
                                        globalAnswer= negator.negateFirstAuxOrModal(object.gene);
                                        // wouldnt be
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(object.gene);

                                        break;
                                    case 3:
                                        gen1.GenWouldCont2();
                                        sp= negator.negateSentenceSpanish(gen1.gens) ;
                                        //would not be
                                        globalAnswer=negator.negateFirstAuxOrModal(gen1.gene);
                                        // wouldnt be
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(gen1.gene);
                                        break;

                                }
                            }else if(item.getType()==2){
                                //since trans

                                int r= (int) (Math.random()*3);
                                complemento="";
                                complement="";
                                complement2="";
                                String oracionsp="";
                                String oracioneng="";
                                switch (r){
                                    case 0:
                                        object.GenPerfectTenses("have ","has ","he ","has ", "ha ", "hemos ","han ");
                                        oracionsp=object.gens;
                                        oracioneng=object.gene;
                                        object2.GenContTenses("was ", "were ", "was ", "estaba ", "estabas ", "estaba ", "estabamos ", "estaban ");
                                        complemento = object2.gens;
                                        complement=object2.gene;
                                        sp = oracionsp+"desde que "+complemento;
                                        globalAnswer=oracioneng+"since "+complement;
                                        break;

                                    case 1:
                                        object.GenPerfectTenses("had ","had ","había ","habías ", "había ", "habíamos ","habían ");
                                        oracionsp=object.gens;
                                        oracioneng=object.gene;
                                        object2.GenContTenses("was ", "were ", "was ", "estaba ", "estabas ", "estaba ", "estabamos ", "estaban ");
                                        complemento = object2.gens;
                                        complement=object2.gene;
                                        sp = oracionsp+"desde que "+complemento;
                                        globalAnswer=oracioneng+"since "+complement;
                                        break;

                                    case 2:
                                        object.GenPastSimp();
                                        oracionsp=object.gens;
                                        oracioneng=object.gene;
                                        object2.GenContTenses("was ", "were ", "was ", "estaba ", "estabas ", "estaba ", "estabamos ", "estaban ");
                                        complemento = object2.gens;
                                        complement=object2.gene;
                                        sp = oracionsp+"desde que "+complemento;
                                        globalAnswer=oracioneng+"since "+complement;
                                        break;

                                    default:
                                        complemento="no object activated";
                                        complement="no object activated";
                                        break;
                                }

                            }else if(item.getType()==3){

                            }

                            break;
                        case 14:
                            //he
                            if(item.getType()==0){
                                gen.pronverb("él ");
                                sp= gen.gens ;
                                globalAnswer=gen.gene;
                            }else if(item.getType()==1){
                                int r2 = (int)  (Math.random()*4);
                                switch (r2) {
                                    case 0:
                                        //made it so it is only positive now
                                        gen1.GenWouldPerf2();
                                        sp= gen1.gens ;
                                        // i would have
                                        globalAnswer=gen1.gene;
                                        // i[d have
                                        globalAnswer2=negator.applyContractionModalsHave(gen1.gene);
                                        break;
                                    case 1:
                                        object.GenPerfectTenses("would have ","would have ","habría ","habrías ", "habría ", "habríamos ", "habrían ");
                                        sp=object.gens;
                                        // would have
                                        globalAnswer=object.gene;
                                        // [d have
                                        globalAnswer2=negator.applyContractionModalsHave(object.gene);
                                        break;
                                    case 2:
                                        object.GenPerfectTenses("would have ","would have ","habría ","habrías ", "habría ", "habríamos ", "habrían ");
                                        sp =negator.negateSentenceSpanish(object.gens);
                                        // would not have
                                        globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                        // wouldnt have
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(object.gene);
                                        break;
                                    case 3:
                                        gen1.GenWouldPerf2();
                                        sp= negator.negateSentenceSpanish(gen1.gens) ;
                                        // would not have
                                        globalAnswer=negator.negateFirstAuxOrModal(gen1.gene);

                                        //wouldnt have
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(gen1.gene);
                                        break;
                                }
                            }else if(item.getType()==2){
                                //until trans

                                int r= (int) (Math.random()*2);
                                complemento="";
                                complement="";
                                complement2="";
                                String oracionsp="";
                                String oracioneng="";
                                switch (r){
                                    case 0:
                                        object2.GenContTenses("was ", "were ", "was ", "estaba ", "estabas ", "estaba ", "estabamos ", "estaban ");
                                        oracionsp=object2.gens;
                                        oracioneng=object2.gene;
                                        object.GenPastSimp();
                                        complemento=object.gens;
                                        complement=object.gene;
                                        sp=oracionsp+"hasta que "+complemento ;
                                        globalAnswer=oracioneng+"until "+complement;
                                        break;

                                    case 1:
                                        object2.GenContTenses("was ", "were ", "was ", "estaba ", "estabas ", "estaba ", "estabamos ", "estaban ");
                                        oracionsp=object2.gens;
                                        oracioneng=object2.gene;
                                        object.GenPvppPast();
                                        complemento=object.gens;
                                        complement=object.gene;
                                        sp=oracionsp+"hasta que "+complemento ;
                                        globalAnswer=oracioneng+"until "+complement;
                                        break;


                                    default:
                                        complemento="no object activated";
                                        complement="no object activated";
                                        break;
                                }

                            }else if(item.getType()==3){

                            }

                            break;
                        case 15:
                            //with
                            if(item.getType()==0){
                                gen.prepartob(4);
                                sp=gen.ob ;
                                globalAnswer=gen.eng;
                            }else if(item.getType()==1){
                                int r2 = (int)  (Math.random()*4);
                                switch (r2) {
                                    case 0:
                                        //made it so it is only positive now
                                        gen1.GenWouldPerfCont2();
                                        sp= gen1.gens ;
                                        globalAnswer= gen1.gene;
                                        globalAnswer2=negator.applyContractionModalsHave(gen1.gene);
                                        break;

                                    case 1:
                                        object.GenContTenses("would have been ","would have been ","would have been ","habría estado ","habrías estado ","habría estado ","habríamos estado ","habrían estado ");
                                        sp=object.gens ;
                                        //would have been
                                        globalAnswer=object.gene;
                                        globalAnswer2=negator.applyContractionModalsHave(object.gene);
                                        break;

                                    case 2:
                                        object.GenContTenses("would have been ","would have been ","would have been ","habría estado ","habrías estado ","habría estado ","habríamos estado ","habrían estado ");
                                        sp=negator.negateSentenceSpanish(object.gens) ;
                                        // wouldnot
                                        globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                        // wouldnt have been
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(object.gene);
                                        break;

                                    case 3:
                                        gen1.GenWouldPerfCont2();
                                        sp= negator.negateSentenceSpanish(gen1.gens);
                                        //would not
                                        globalAnswer=negator.negateFirstAuxOrModal(gen1.gene);
                                        // wouldnt have
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(gen1.gene);
                                        break;

                                }
                            }else if(item.getType()==2){
                                //whether trans
                                object.GenConjFuture("whether", "ya sea que");
                                object2.GenPresSimpSubjunctive();
                                complemento= object2.gens;
                                complement = object2.gene;
                                sp = object.gens+" "+ complemento+"o no" ;
                                globalAnswer=object.gene+" "+complement+"or not";

                            }else if(item.getType()==3){

                            }

                            break;
                        case 16:
                            //on
                            if(item.getType()==0){
                                gen.prepartob(5);
                                sp=gen.ob ;
                                globalAnswer=gen.eng;
                            }else if(item.getType()==1){
                                int r2 = (int)  (Math.random()*4);
                                switch (r2) {
                                    case 0:
                                        //made it so it is only positive now
                                        gen1.GenCouldSimp2();
                                        sp= gen1.gens ;
                                        globalAnswer=gen1.gene;
                                        globalAnswer2=".";
                                        break;
                                    case 1:
                                        object.GenPresSimpModals("could ", "podría ", "podrías ", "podría ", "podríamos ", "podrían ");
                                        sp= object.gens;
                                        globalAnswer=object.gene;
                                        globalAnswer2=".";
                                        break;
                                    case 2:
                                        gen1.GenCouldSimp2();
                                        sp= negator.negateSentenceSpanish(gen1.gens);
                                        globalAnswer=negator.negateFirstAuxOrModalContracted(gen1.gene);
                                        globalAnswer2=negator.negateFirstAuxOrModal(gen1.gene);
                                        break;
                                    case 3:
                                        object.GenPresSimpModals("could ", "podría ", "podrías ", "podría ", "podríamos ", "podrían ");
                                        sp=negator.negateSentenceSpanish(object.gens) ;
                                        globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(object.gene);
                                        break;

                                }
                            }else if(item.getType()==2){
                                //although trans
                                int r= (int)(Math.random()*3);
                                complemento="";
                                complement="";
                                complement2="";
                                String oracionsp="";
                                String oracioneng="";
                                switch (r){
                                    case 0:
                                        object.GenPastSimp();
                                        oracionsp=object.gens;
                                        oracioneng=object.gene;
                                        object2.GenPastSimp();
                                        complemento=object2.gens;
                                        complement=object2.gene;
                                        sp = oracionsp + " aún que "+complemento ;
                                        globalAnswer=oracioneng+"although "+complement;
                                        break;

                                    case 1:
                                        object.GenPastSimp();
                                        oracionsp=negator.negateSentenceSpanish(object.gens);
                                        oracioneng=negator.negatePastSimple(object.gene2);
                                        object2.GenPastSimp();
                                        complemento=         object2.gens;
                                        complement=     object2.gene;

                                        sp = oracionsp + " aún que "+complemento ;
                                        globalAnswer=oracioneng+"although "+complement;

                                        break;
                                    case 2:
                                        object.GenConjFuture("although ","aun que ");
                                        oracionsp=object.gens;
                                        oracioneng=object.gene;
                                        object2.GenPresSimpSubjunctive();
                                        complemento=object2.gens;
                                        complement=object2.gene;
                                        sp = oracionsp+complemento;
                                        globalAnswer=oracioneng+complement;

                                        break;

                                    default:
                                        complemento="no object activated";
                                        complement="no object activated";
                                        break;
                                }

                            }else if(item.getType()==3){

                            }

                            break;
                        case 17:
                            // do
                            if(item.getType()==0){
                                gen.pronverb(4);
                                sp=gen.gens ;
                                globalAnswer=gen.gene;
                            }else if(item.getType()==1){
                                int r2 = (int)  (Math.random()*4);
                                switch (r2) {
                                    case 0:
                                        //made it so it is only positive now
                                        gen1.GenCouldCont2();
                                        sp= gen1.gens ;
                                        globalAnswer=gen1.gene;
                                        globalAnswer2=".";
                                        break;
                                    case 1:
                                        object.GenContTenses("could be ","could be ","could be ","podría estar ","podrías estar ","podría estar ","podríamos estar ","podrían estar ");
                                        sp=object.gens;
                                        globalAnswer=object.gene;
                                        globalAnswer2=".";
                                        break;
                                    case 2:
                                        object.GenContTenses("could be ","could be ","could be ","podría estar ","podrías estar ","podría estar ","podríamos estar ","podrían estar ");
                                        sp=negator.negateSentenceSpanish(object.gens);
                                        globalAnswer=negator.negateFirstAuxOrModalContracted(object.gene);
                                        globalAnswer2=negator.negateFirstAuxOrModal(object.gene);
                                        break;
                                    case 3:
                                        gen1.GenCouldCont2();
                                        sp= negator.negateSentenceSpanish(gen1.gens) ;
                                        globalAnswer=negator.negateFirstAuxOrModal(gen1.gene);
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(gen1.gene);
                                        break;

                                }
                            }else if(item.getType()==2){
                                //even if trans
                                int r= (int)(Math.random()*2);
                                complemento="";
                                complement="";
                                complement2="";
                                String oracionsp="";
                                String oracioneng="";
                                switch (r){
                                    case 0:
                                        object.GenConj("even if ","incluso si ");
                                        oracionsp= object.gens;
                                        oracioneng=object.gene;
                                        object2.GenPresSimp();
                                        complemento=object2.gens;
                                        complement =object2.gene;
                                        sp=oracionsp+complemento;
                                        globalAnswer=oracioneng+complement;
                                        break;

                                    case 1:
                                        object.GenConjFuture("even if ","incluso si ");
                                        oracionsp= object.gens;
                                        oracioneng=object.gene;
                                        object2.GenPresSimp();
                                        complemento=object2.gens;
                                        complement =object2.gene;
                                        sp=oracionsp+complemento;
                                        globalAnswer=oracioneng+complement;
                                        break;

                                }


                            }else if(item.getType()==3){

                            }


                            break;
                        case 18:
                            //apostrofe s
                            if(item.getType()==0){
                                n.apostropheS();
                                sp = n.gens;
                                globalAnswer=n.gene;
                            }else if(item.getType()==1){
                                int r2 = (int)  (Math.random()*4);
                                switch (r2) {
                                    case 0:
                                        //made it so it is only positive now
                                        gen1.GenCouldPerf2();
                                        sp= gen1.gens ;
                                        // could have
                                        globalAnswer=gen1.gene;

                                        // couldve
                                        globalAnswer2=negator.applyContractionModalsHave(gen1.gene);
                                        break;
                                    case 1:
                                        object.GenPerfectTenses("could have ","could have ","pude haber ","pudiste haber ", "pudo haber ", "pudimos haber ", "pudieron haber ");
                                        sp=object.gens;
                                        // could have
                                        globalAnswer=object.gene;
                                        // couldve
                                        globalAnswer2=negator.applyContractionModalsHave(object.gene);
                                        break;
                                    case 2:
                                        object.GenPerfectTenses("could have ","could have ","pude haber ","pudiste haber ", "pudo haber ", "pudimos haber ", "pudieron haber ");
                                        sp =negator.negateSentenceSpanish(object.gens) ;
                                        //couldnt
                                        globalAnswer=negator.negateFirstAuxOrModalContracted(object.gene);
                                        //could not
                                        globalAnswer2=negator.negateFirstAuxOrModal(object.gene);
                                        break;
                                    case 3:
                                        gen1.GenCouldPerf2();
                                        sp= negator.negateSentenceSpanish(gen1.gens) ;
                                        // couldnt
                                        globalAnswer=negator.negateFirstAuxOrModal(gen1.gene);
                                        // could not
                                        globalAnswer2= negator.negateFirstAuxOrModalContracted(gen1.gene);
                                        break;
                                }
                            }else if(item.getType()==2){
                                //once trans


                                String oracionsp="";
                                String oracioneng="";


                                object.GenConjFuture("once ","una vez que ");
                                oracionsp= object.gens;
                                oracioneng=object.gene;
                                object2.GenPresSimpSubjunctive();
                                complemento=object2.gens;
                                complement =object2.gene;
                                sp=oracionsp+complemento;
                                globalAnswer=oracioneng+complement;




                            }else if(item.getType()==3){

                            }

                            break;
                        case 19:
                            //say
                            if(item.getType()==0){
                                gen.pronverb(1);
                                sp=gen.gens ;
                                globalAnswer=gen.gene;
                            }else if(item.getType()==1){
                                int r2 = (int)  (Math.random()*4);
                                switch (r2) {
                                    case 0:
                                        //made it so it is only positive now
                                        gen1.GenCouldPerfCont2();
                                        sp= gen1.gens;
                                        // could have
                                        globalAnswer=gen1.gene;
                                        // couldve
                                        globalAnswer2=negator.applyContractionModalsHave(gen1.gene);
                                        break;

                                    case 1:
                                        object.GenContTenses("could have been ","could have been ","could have been ","podría haber estado ","podrías haber estado ","podría haber estado ","podríamos haber estado ","podrían haber estado ");
                                        sp=object.gens ;
                                        globalAnswer=object.gene;
                                        globalAnswer2=negator.applyContractionModalsHave(object.gene);
                                        break;

                                    case 2:
                                        object.GenContTenses("could have been ","could have been ","could have been ","podría haber estado ","podrías haber estado ","podría haber estado ","podríamos haber estado ","podrían haber estado ");
                                        sp=negator.negateSentenceSpanish(object.gens) ;
                                        // could have
                                        globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                        // couldnt have
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(object.gene);
                                        break;

                                    case 3:
                                        gen1.GenCouldPerfCont2();
                                        sp= negator.negateSentenceSpanish(gen1.gens) ;
                                        globalAnswer=negator.negateFirstAuxOrModal(gen1.gene);
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(gen1.gene);
                                        break;

                                }
                            }else if(item.getType()==2){
                                //unless trans
                                complemento="";
                                complement="";
                                complement2="";
                                String oracionsp="";
                                String oracioneng="";

                                object.GenConjFuture2("unless  ","a menos que ");
                                oracionsp= negator.negateSentenceSpanish(object.gens) ;
                                oracioneng=negator.negateFirstAuxOrModalContracted(object.gene);
                                object2.GenPresSimpSubjunctive();
                                complemento=object2.gens;
                                complement =object2.gene;
                                sp=oracionsp+" "+ complemento;
                                globalAnswer=oracioneng+ " "+complement;

                            }else if(item.getType()==3){

                            }

                            break;
                        case 20:
                            //they
                            if(item.getType()==0){
                                gen.pronverb("ellos ");
                                sp= gen.gens   ;
                                globalAnswer=gen.gene;
                            }else if(item.getType()==1){
                                int r2 = (int)  (Math.random()*4);
                                switch (r2) {
                                    case 0:
                                        //made it so it is only positive now
                                        gen1.GenShouldSimp2();
                                        sp= gen1.gens ;
                                        globalAnswer=gen1.gene;
                                        globalAnswer2=".";
                                        break;
                                    case 1:
                                        object.GenPresSimpModals("should ", "debaría ", "deberías ", "debería ", "deberíamos ", "deberían ");
                                        sp= object.gens;
                                        globalAnswer=object.gene;
                                        globalAnswer2=".";
                                        break;
                                    case 2:
                                        gen1.GenShouldSimp2();
                                        sp= negator.negateSentenceSpanish(gen1.gens) ;
                                        // shouldnt
                                        globalAnswer=negator.negateFirstAuxOrModalContracted(gen1.gene);
                                        // should not
                                        globalAnswer2=negator.negateFirstAuxOrModal(gen1.gene);

                                        break;
                                    case 3:
                                        object.GenPresSimpModals("should ", "debaría ", "deberías ", "debería ", "deberíamos ", "deberían ");
                                        sp=negator.negateSentenceSpanish(object.gens) ;
                                        //should not
                                        globalAnswer=negator.negateFirstAuxOrModal(object.gene);

                                        //shouldnt
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(object.gene);
                                        break;

                                }
                            }else if(item.getType()==2){
                                //now that tran
                                complemento="";
                                complement="";
                                complement2="";
                                String oracionsp="";
                                String oracioneng="";
                                object.GenConjFuture2("now that ", " ahora que ");
                                oracionsp= negator.negateSentenceSpanish(object.gens) ;
                                oracioneng=negator.negateFirstAuxOrModalContracted(object.gene);
                                object2.GenPastSimp();
                                complemento=object2.gens;
                                complement =object2.gene;
                                sp=oracionsp+" "+complemento;
                                globalAnswer=oracioneng+" "+complement;


                            }else if(item.getType()==3){

                            }

                            break;
                        case 21:
                            //this
                            if(item.getType()==0){
                                gen.adjmethod("this ");
                                sp= gen.gens;
                                globalAnswer=gen.gene;
                            }else if(item.getType()==1){
                                int r2 = (int)  (Math.random()*4);
                                switch (r2) {
                                    case 0:
                                        //made it so it is only positive now
                                        gen1.GenShouldCont2();
                                        sp= gen1.gens;
                                        globalAnswer=gen1.gene;
                                        globalAnswer2=".";
                                        break;
                                    case 1:
                                        object.GenContTenses("should be ","should be ","should be ","debería estar ","deberías estar ","debería estar ","deberíamos estar ","deberían estar ");
                                        sp=object.gens;
                                        globalAnswer=object.gene;
                                        globalAnswer2=".";
                                        break;
                                    case 2:
                                        object.GenContTenses("should be ","should be ","should be ","debería estar ","deberías estar ","debería estar ","deberíamos estar ","deberían estar ");
                                        sp=negator.negateSentenceSpanish(object.gens);
                                        //shouldnt be
                                        globalAnswer=negator.negateFirstAuxOrModalContracted(object.gene);
                                        //should not be
                                        globalAnswer2=negator.negateFirstAuxOrModal(object.gene);
                                        break;
                                    case 3:
                                        gen1.GenShouldCont2();
                                        sp= negator.negateSentenceSpanish(gen1.gens);
                                        //should not be
                                        globalAnswer=negator.negateFirstAuxOrModal(gen1.gene);
                                        //shouldnt be
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(gen1.gene);
                                        break;

                                }
                            }else if(item.getType()==2){
                                //as long as trans
                                int r= (int)(Math.random()*2);

                                complemento="";
                                complement="";
                                complement2="";
                                String oracionsp="";
                                String oracioneng="";
                                switch (r){
                                    case 0:
                                        object.GenConjFuture("as long as ","siempre y cuando ");
                                        oracionsp= object.gens;
                                        oracioneng=object.gene;
                                        object2.GenPresSimpSubjunctive();
                                        complemento=object2.gens;
                                        complement =object2.gene;
                                        sp=oracionsp+complemento;
                                        globalAnswer=oracioneng+complement;
                                        break;

                                    case 1:
                                        object.GenConjFuture2("as long as ","siempre y cuando ");
                                        oracionsp= negator.negateSentenceSpanish(object.gens);
                                        oracioneng= negator.negateFirstAuxOrModalContracted(object.gene);
                                        object2.GenPresSimpSubjunctive();
                                        complemento=object2.gens;
                                        complement =object2.gene;
                                        sp=oracionsp+" "+complemento;
                                        globalAnswer=oracioneng+" "+complement;
                                        break;
                                }

                            }else if(item.getType()==3){

                            }

                            break;
                        case 22:
                            //but
                            if(item.getType()==0){
                                gen.advpronverb(3);
                                sp= gen.gens ;
                                globalAnswer=gen.gene;
                            }else if(item.getType()==1){

                                int r2 = (int)  (Math.random()*4);
                                switch (r2) {
                                    case 0:
                                        //made it so it is only positive now
                                        gen1.GenShouldPerf2();
                                        sp= gen1.gens ;
                                        //should have
                                        globalAnswer=gen1.gene;
                                        //shouldve
                                        globalAnswer2=negator.applyContractionModalsHave(gen1.gene);
                                        break;
                                    case 1:
                                        object.GenPerfectTenses("should have ","should have ","debí haber ","debíste haber ", "debío haber ", "debímos haber ", "debíeron haber ");
                                        sp=object.gens ;
                                        //should have
                                        globalAnswer=object.gene;
                                        //shouldve
                                        globalAnswer2=negator.applyContractionModalsHave(object.gene);

                                        break;
                                    case 2:
                                        object.GenPerfectTenses("should have ","should have ","debí haber ","debíste haber ", "debío haber ", "debímos haber ", "debíeron haber ");
                                        sp =negator.negateSentenceSpanish(object.gens) ;
                                        //shouldnt have
                                        globalAnswer=negator.negateFirstAuxOrModalContracted(object.gene);
                                        //should not have
                                        globalAnswer2=negator.negateFirstAuxOrModal(object.gene);
                                        break;
                                    case 3:
                                        gen1.GenShouldPerf2();
                                        sp= negator.negateSentenceSpanish(gen1.gens) ;
                                        //should not have
                                        globalAnswer=negator.negateFirstAuxOrModal(gen1.gene);
                                        // shouldnt have
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(gen1.gene);
                                        break;
                                }

                            }else if(item.getType()==2){

                            }else if(item.getType()==3){

                            }

                            break;
                        case 23:
                            //at
                            if(item.getType()==0){
                                gen.atmeth(8);
                                sp=gen.ob ;
                                globalAnswer=gen.eng;
                            }else if(item.getType()==1){
                                int r2 = (int)  (Math.random()*4);
                                switch (r2) {
                                    case 0:
                                        //made it so it is only positive now
                                        gen1.GenShouldPerfCont2();
                                        sp= gen1.gens ;
                                        //should have been
                                        globalAnswer=gen1.gene;
                                        // shouldve been
                                        globalAnswer2=negator.applyContractionModalsHave(gen1.gene);
                                        break;

                                    case 1:
                                        object.GenContTenses("should have been ","should have been ","should have been ","debería haber estado ","deberías haber estado ","debería haber estado ","deberíamos haber estado ","deberían haber estado ");
                                        sp=object.gens ;
                                        globalAnswer=object.gene;
                                        globalAnswer2=negator.applyContractionModalsHave(object.gene);
                                        break;

                                    case 2:
                                        object.GenContTenses("should have been ","should have been ","should have been ","debería haber estado ","deberías haber estado ","debería haber estado ","deberíamos haber estado ","deberían haber estado ");
                                        sp=negator.negateSentenceSpanish(object.gens) ;
                                        //should have been
                                        globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                        // shouldnt have been
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(object.gene);

                                        break;

                                    case 3:
                                        gen1.GenShouldPerfCont2();
                                        sp= negator.negateSentenceSpanish(gen1.gens) ;
                                        //should not have
                                        globalAnswer=negator.negateFirstAuxOrModal(gen1.gene);
                                        // shouldnt have been
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(gen1.gene);
                                        break;

                                }
                            }else if(item.getType()==2){

                            }else if(item.getType()==3){

                            }

                            break;
                        case 24:
                            //we
                            if(item.getType()==0){
                                gen.pronverb("nosotros ");
                                sp= gen.gens ;
                                globalAnswer=gen.gene;
                            }else if(item.getType()==1){
                                int r2 = (int)  (Math.random()*4);
                                switch (r2) {
                                    case 0:
                                        //made it so it is only positive now
                                        gen1.GenMightSimp2();
                                        sp= gen1.gens ;
                                        globalAnswer=gen1.gene;
                                        globalAnswer2=".";
                                        break;
                                    case 1:
                                        object.GenPresSimpSubjunctive("might ", "quizá ");
                                        sp=object.gens;
                                        globalAnswer=object.gene;
                                        globalAnswer2=".";

                                        break;
                                    case 2:
                                        gen1.GenMightSimp2();
                                        sp=negator.negateSentenceSpanish(gen1.gens) ;
                                        globalAnswer=negator.negateFirstAuxOrModal(gen1.gene);
                                        globalAnswer2=".";

                                        break;
                                    case 3:
                                        object.GenPresSimpSubjunctive("might ", "quizá ");
                                        sp=negator.negateSentenceSpanish(object.gens) ;
                                        globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                        globalAnswer2=".";
                                        break;

                                }
                            }else if(item.getType()==2){

                            }else if(item.getType()==3){

                            }
                            break;



                        case 25:
                            //his
                            if(item.getType()==0){
                                gen.adjmethod("his ");
                                sp= gen.gens ;

                                globalAnswer=gen.gene;
                            }else if(item.getType()==1){
                                int r2 = (int)  (Math.random()*4);
                                switch (r2) {
                                    case 0:
                                        //made it so it is only positive now
                                        gen1.GenMightCont2();
                                        sp= gen1.gens;
                                        globalAnswer=gen1.gene;
                                        globalAnswer2=".";
                                        break;
                                    case 1:
                                        object.GenContTenses("might be ","might be ","might be ","quiza esté ","quiza estés ","quizá esté ","quiza estemos ","quiza estén ");
                                        sp=object.gens;
                                        globalAnswer=object.gene;
                                        globalAnswer2=".";
                                        break;
                                    case 2:
                                        object.GenContTenses("might be ","might be ","might be ","quizá esté ","quizá estés ","quizá esté ","quizá estemos ","quizá estén ");
                                        sp=negator.negateSentenceSpanish(object.gens);
                                        globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                        globalAnswer2=".";
                                        break;
                                    case 3:
                                        gen1.GenMightCont2();
                                        sp= negator.negateSentenceSpanish(gen1.gens) ;
                                        globalAnswer=negator.negateFirstAuxOrModal(gen1.gene);
                                        globalAnswer2=".";
                                        break;

                                }
                            }else if(item.getType()==2){

                            }else if(item.getType()==3){

                            }

                            break;
                        case 26:
                            //from
                            if(item.getType()==0){
                                gen.atmeth(6);
                                sp=gen.ob ;
                                globalAnswer=gen.eng;
                            }else if(item.getType()==1){
                                int r2 = (int)  (Math.random()*4);
                                switch (r2) {
                                    case 0:
                                        //made it so it is only positive now
                                        gen1.GenMightPerf2();
                                        sp= gen1.gens ;
                                        // might have
                                        globalAnswer=gen1.gene;
                                        //mightve
                                        globalAnswer2=negator.applyContractionModalsHave(gen1.gene);
                                        break;
                                    case 1:
                                        object.GenPerfectTenses("might have ","might have ","quizá haya ","quizá hayas ", "quizá haya ", "quizá hayamos ", "quizá hayan ");
                                        sp=object.gens;
                                        //might have
                                        globalAnswer=object.gene;

                                        //might have
                                        globalAnswer2=negator.applyContractionModalsHave(object.gene);

                                        break;
                                    case 2:
                                        object.GenPerfectTenses("might have ","might have ","quizá haya ","quizá hayas ", "quizá haya ", "quizá hayamos ", "quizá hayan ");
                                        sp =negator.negateSentenceSpanish(object.gens);
                                        globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                        globalAnswer2=".";
                                        break;
                                    case 3:
                                        gen1.GenMightPerf2();
                                        sp= negator.negateSentenceSpanish(gen1.gens) ;
                                        globalAnswer=negator.negateFirstAuxOrModal(gen1.gene);
                                        globalAnswer2=".";
                                        break;
                                }
                            }else if(item.getType()==2){

                            }else if(item.getType()==3){

                            }

                            break;
                        case 27:
                            //that determiner
                            if(item.getType()==0){
                                gen.adjmethod("that ");
                                sp= gen.gens;
                                globalAnswer=gen.gene;
                            }else if(item.getType()==1){
                                int r2 = (int)  (Math.random()*4);
                                switch (r2) {
                                    case 0:
                                        //made it so it is only positive now
                                        gen1.GenMightPerfCont2();
                                        sp= gen1.gens;
                                        globalAnswer=gen1.gene;
                                        // mightve
                                        globalAnswer2=negator.applyContractionModalsHave(gen1.gene);
                                        break;

                                    case 1:
                                        object.GenContTenses("might have been ","might have been ","might have been ","quizá haya estado ","quizá hayas estado ","quizá haya estado  ","quizá hayamos estado  ","quizá hayan estado  ");
                                        sp=object.gens;
                                        // might have
                                        globalAnswer=object.gene;
                                        //mightve
                                        globalAnswer2=negator.applyContractionModalsHave(object.gene);
                                        break;

                                    case 2:
                                        object.GenContTenses("might have been ","might have been ","might have been ","quizá haya estado ","quizá hayas estado ","quizá haya estado  ","quizá hayamos estado  ","quizá hayan estado  ");
                                        sp=negator.negateSentenceSpanish(object.gens) ;
                                        globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                        globalAnswer2=".";
                                        break;

                                    case 3:
                                        gen1.GenMightPerfCont2();
                                        sp= negator.negateSentenceSpanish(gen1.gens);
                                        globalAnswer=negator.negateFirstAuxOrModal(gen1.gene);
                                        globalAnswer2=".";
                                        break;

                                }
                            }else if(item.getType()==2){

                            }else if(item.getType()==3){

                            }

                            break;
                        case 28:
                            //not
                            if(item.getType()==0){
                                gen.not();
                                sp= "no podemos practicar esta ya que no hay sujetos";
                                ;
                                globalAnswer="no";
                            }else if(item.getType()==1){
                                int r2 = (int)  (Math.random()*4);
                                switch (r2) {
                                    case 0:
                                        //made it so it is only positive now
                                        gen1.GenCanSimp2();
                                        sp= gen1.gens ;
                                        globalAnswer=gen1.gene;
                                        globalAnswer2=".";
                                        break;
                                    case 1:
                                        object.GenPresSimpModals("can ", "puedo ", "puedes ", "puede ", "podemos ", "pueden ");
                                        sp= object.gens;
                                        globalAnswer=object.gene;
                                        globalAnswer2=".";
                                        break;
                                    case 2:
                                        gen1.GenCanSimp2();
                                        sp= negator.negateSentenceSpanish(gen1.gens) ;
                                        globalAnswer=negator.negateFirstAuxOrModal(gen1.gene);
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(gen1.gene);
                                        break;
                                    case 3:
                                        object.GenPresSimpModals("can ", "puedo ", "puedes ", "puede ", "podemos ", "pueden ");
                                        sp=negator.negateSentenceSpanish(object.gens) ;
                                        globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(object.gene);
                                        break;

                                }
                            }else if(item.getType()==2){

                            }else if(item.getType()==3){

                            }

                            break;
                        case 29:
                            //n t
                            if(item.getType()==0){
                                gen.nt();
                                sp= "no podemos practicar esta ya que no hay sujetos :( ";
                            }else if(item.getType()==1){
                                int r2 = (int)  (Math.random()*4);
                                switch (r2) {
                                    case 0:
                                        //made it so it is only positive now
                                        gen1.GenCanCont2();
                                        sp= gen1.gens ;
                                        globalAnswer=gen1.gene;
                                        globalAnswer2=".";
                                        break;
                                    case 1:
                                        object.GenContTenses("can be ","can be ","can be ","puedo estar ","puedes estar ","puede estar ","podemos estar ","pueden estar ");
                                        sp=object.gens;
                                        globalAnswer=object.gene;
                                        globalAnswer2=".";
                                        break;
                                    case 2:
                                        object.GenContTenses("can be ","can be ","can be ","puedo estar ","puedes estar ","puede estar ","podemos estar ","pueden estar ");
                                        sp=negator.negateSentenceSpanish(object.gens);
                                        //cannot
                                        globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                        // can[t be
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(object.gene);
                                        break;
                                    case 3:
                                        gen1.GenCanCont2();
                                        sp= negator.negateSentenceSpanish(gen1.gens) ;
                                        globalAnswer=negator.negateFirstAuxOrModal(gen1.gene);
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(gen1.gene);
                                        break;

                                }
                            }else if(item.getType()==2){

                            }else if(item.getType()==3){

                            }

                            break;
                        case 30:
                            //by
                            if(item.getType()==0){
                                gen.atmeth(9);
                                sp=gen.ob ;
                                globalAnswer=gen.eng;
                            }else if(item.getType()==1){
                                int r2 = (int)  (Math.random()*4);
                                switch (r2) {
                                    case 0:
                                        //made it so it is only positive now
                                        gen1.GenMustSimp2();
                                        sp= gen1.gens ;
                                        globalAnswer= gen1.gene;
                                        globalAnswer2=".";
                                        break;
                                    case 1:
                                        object.GenPresSimpModals("must ", "debo ", "debes ", "debe ", "debemos ", "deben ");
                                        sp= object.gens;
                                        globalAnswer=object.gene;
                                        globalAnswer2=".";
                                        break;
                                    case 2:
                                        gen1.GenMustSimp2();
                                        sp= negator.negateSentenceSpanish(gen1.gens);
                                        globalAnswer=negator.negateFirstAuxOrModal(gen1.gene);
                                        globalAnswer2=".";
                                        break;
                                    case 3:
                                        object.GenPresSimpModals("must ", "debo ", "debes ", "debe ", "debemos ", "deben ");
                                        sp=negator.negateSentenceSpanish(object.gens) ;
                                        globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                        globalAnswer2=".";
                                        break;

                                }
                            }else if(item.getType()==2){

                            }else if(item.getType()==3){

                            }

                            break;
                        case 31:
                            //or
                            if(item.getType()==0){
                                gen.or();
                                sp=gen.ob ;
                                globalAnswer=gen.eng;
                            }else if(item.getType()==1){
                                int r2 = (int)  (Math.random()*4);
                                switch (r2) {
                                    case 0:
                                        //made it so it is only positive now
                                        gen1.GenMustCont2();
                                        sp= gen1.gens;
                                        globalAnswer=gen1.gene;
                                        globalAnswer2="/";
                                        break;
                                    case 1:
                                        object.GenContTenses("must be ","must be ","must be ","debo estar ","debes estar ","debe estar ","debemos estar ","deben estar ");
                                        sp=object.gens;
                                        globalAnswer=object.gene;
                                        globalAnswer2=".";
                                        break;
                                    case 2:
                                        object.GenContTenses("must be ","must be ","must be ","debo estar ","debes estar ","debe estar ","debemos estar ","deben estar ");
                                        sp=negator.negateSentenceSpanish(object.gens);
                                        globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                        globalAnswer2=".";
                                        break;
                                    case 3:
                                        gen1.GenMustCont2();
                                        sp= negator.negateSentenceSpanish(gen1.gens) ;
                                        globalAnswer=negator.negateFirstAuxOrModal(gen1.gene);
                                        globalAnswer2=".";
                                        break;

                                }
                            }else if(item.getType()==2){

                            }else if(item.getType()==3){

                            }

                            break;
                        case 32:
                            //she
                            if(item.getType()==0){
                                gen.pronverb("ella ");
                                sp= gen.gens;
                                globalAnswer=gen.gene;
                            }else if(item.getType()==1){
                                int r2 = (int)  (Math.random()*2);
                                switch (r2) {
                                    case 0:
                                        gen.GenPassives("present simple");
                                        sp= gen.gens;
                                        // not contracted he is arrested
                                        globalAnswer=gen.gene;
                                        // contracted hes arrested by ...
                                        globalAnswer2=negator.contractPresentContinuousPresent(gen.gene);
                                        globalAnswer3=".";
                                        break;
                                    case 1:
                                        gen.GenPassives("present simple");
                                        sp= negator.negateSentenceSpanish(gen.gens);
                                        //not contracted he is not arrested
                                        globalAnswer=negator.negateFirstAuxOrModal(gen.gene);
                                        // contracted he isnt arrested
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(gen.gene);
                                        // hes not/ to be contracted
                                        globalAnswer3=negator.negateAndContractPresentContinuous(globalAnswer);
                                        break;
                                }


                            }else if(item.getType()==2){

                            }else if(item.getType()==3){

                            }

                            break;
                        case 33:
                            //as conjunction
                            if(item.getType()==0){
                                Nobles n1 = new Nobles();
                                int pos1 = (int) (Math.random() * 6);
                                n1.GenPresSimpAs(pos1);
                                sp=n1.gens;
                                globalAnswer=n1.gene;
                            }else if(item.getType()==1){
                                int r2 = (int)  (Math.random()*2);
                                switch (r2){
                                    case 0:
                                        gen.GenPassives("present continuous");
                                        sp= gen.gens;
                                        globalAnswer=gen.gene;
                                        globalAnswer2=negator.contractPresentContinuousPresent(gen.gene);
                                        globalAnswer3=".";
                                        break;

                                    case 1:
                                        gen.GenPassives("present continuous");
                                        sp= negator.negateSentenceSpanish(gen.gens);
                                        globalAnswer=negator.negateFirstAuxOrModal(gen.gene);
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(gen.gene);
                                        globalAnswer3=negator.negateAndContractPresentContinuous(globalAnswer);

                                        break;


                                }
                            }else if(item.getType()==2){

                            }else if(item.getType()==3){

                            }

                            break;
                        case 34:
                            //what determiner
                            if(item.getType()==0){
                                Nobles n2 = new Nobles();
                                int pos2 = (int) (Math.random() * 6);
                                n2.GenPresSimpWhat(pos2);
                                sp=n2.gens ;
                                globalAnswer=n2.gene;
                            }else if(item.getType()==1){
                                int r2 = (int)  (Math.random()*2);
                                switch (r2){
                                    case 0:
                                        gen.GenPassives("present perfect");
                                        sp= gen.gens;
                                        globalAnswer=gen.gene;
                                        globalAnswer2=negator.contractPresentPerfect(gen.gene);
                                        globalAnswer3=".";
                                        break;

                                    case 1:
                                        gen.GenPassives("present perfect");
                                        sp= negator.negateSentenceSpanish(gen.gens);
                                        globalAnswer=negator.negateFirstAuxOrModal(gen.gene);
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(gen.gene);
                                        globalAnswer3=negator.contractPresentPerfectIncludingNot(globalAnswer);
                                        break;


                                }
                            }else if(item.getType()==2){

                            }else if(item.getType()==3){

                            }

                            break;
                        case 35:
                            //go
                            if(item.getType()==0){
                                gen.pronverb(2);
                                sp = gen.gens;
                                globalAnswer=gen.gene;
                            }else if(item.getType()==1){
                                int r2 = (int)  (Math.random()*2);
                                switch (r2){
                                    case 0:
                                        gen.GenPassives("past simple");
                                        sp= gen.gens;
                                        // the girl was
                                        globalAnswer=gen.gene;
                                        // no contraction
                                        globalAnswer2=".";

                                        break;

                                    case 1:
                                        gen.GenPassives("past simple");
                                        sp= negator.negateSentenceSpanish(gen.gens);
                                        //was not
                                        globalAnswer=negator.negateFirstAuxOrModal(gen.gene);
                                        // wasnt
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(gen.gene);
                                        break;


                                }
                            }else if(item.getType()==2){

                            }else if(item.getType()==3){

                            }

                            break;
                        case 36:
                            //their
                            if(item.getType()==0){
                                gen.adjmethod("their ");
                                sp= gen.gens;
                                globalAnswer=gen.gene;
                            }else if(item.getType()==1){
                                int r2 = (int)  (Math.random()*2);
                                switch (r2){
                                    case 0:
                                        gen.GenPassives("past continuous");
                                        sp= gen.gens;
                                        // was being
                                        globalAnswer=gen.gene;
                                        globalAnswer2=".";

                                        break;

                                    case 1:
                                        gen.GenPassives("past continuous");
                                        sp= negator.negateSentenceSpanish(gen.gens);
                                        //was not
                                        globalAnswer=negator.negateFirstAuxOrModal(gen.gene);
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(gen.gene);
                                        break;


                                }

                            }else if(item.getType()==2){

                            }else if(item.getType()==3){

                            }

                            break;
                        case 37:
                            //will
                            if(item.getType()==0){
                                gen.pronverbwill();
                                sp= gen.gens;
                                globalAnswer=gen.gene;
                            }else if(item.getType()==1){
                                int r2 = (int)  (Math.random()*2);
                                switch (r2){
                                    case 0:
                                        gen.GenPassives("past perfect");
                                        sp= gen.gens;
                                        globalAnswer=gen.gene;
                                        globalAnswer2=".";
                                        break;
                                    case 1:
                                        gen.GenPassives("past perfect");
                                        sp= negator.negateSentenceSpanish(gen.gens);
                                        globalAnswer=negator.negateFirstAuxOrModal(gen.gene);
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(gen.gene);
                                        break;


                                }
                            }else if(item.getType()==2){

                            }else if(item.getType()==3){

                            }

                            break;
                        case 38:
                            //who
                            if(item.getType()==0){
                                gen.genWho();
                                sp= gen.gens;
                                globalAnswer=gen.gene;
                            }else if(item.getType()==1){
                                int r2 = (int)  (Math.random()*2);
                                switch (r2){
                                    case 0:
                                        gen.GenPassives("future simple");
                                        sp= gen.gens;
                                        globalAnswer=gen.gene;
                                        globalAnswer2=negator.contractWill(gen.gene);
                                        break;

                                    case 1:
                                        gen.GenPassives("future simple");
                                        sp= negator.negateSentenceSpanish(gen.gens);
                                        globalAnswer=negator.negateFirstAuxOrModal(gen.gene);
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(gen.gene);
                                        break;


                                }
                            }else if(item.getType()==2){

                            }else if(item.getType()==3){

                            }

                            break;
                        case 39:
                            //can
                            if(item.getType()==0){
                                gen.pronverbcan();
                                sp= gen.gens;
                                globalAnswer=gen.gene;
                            }else if(item.getType()==1){
                                int r2 = (int)  (Math.random()*2);
                                switch (r2){
                                    case 0:
                                        gen.GenPassives("would simple");
                                        sp= gen.gens;
                                        // he would be
                                        globalAnswer=gen.gene;
                                        // he d be
                                        globalAnswer2=negator.contractHadOrWould(gen.gene);
                                        break;
                                    case 1:
                                        gen.GenPassives("would simple");
                                        sp= negator.negateSentenceSpanish(gen.gens);
                                        globalAnswer=negator.negateFirstAuxOrModal(gen.gene);
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(gen.gene);
                                        break;


                                }
                            }else if(item.getType()==2){

                            }else if(item.getType()==3){

                            }

                            break;
                        case 40:
                            //get
                            if(item.getType()==0){
                                gen.pronverb(3);
                                sp= gen.gens;
                                globalAnswer=gen.gene;
                            }else if(item.getType()==1) {
                                int r2 = (int)  (Math.random()*3);
                                switch (r2){
                                    case 0:
                                        gen1.GenForTo2();
                                        sp= gen1.gens ;
                                        globalAnswer=gen1.gene;
                                        break;

                                    case 1:
                                        object.GenForTo();
                                        sp= negator.negateSentenceSpanish(object.gens);
                                        globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                        break;
                                    case 2:
                                        object.GenForTo();
                                        sp=object.gens;
                                        globalAnswer=object.gene;
                                        break;
                                }
                            }else if(item.getType()==2){

                            }else if(item.getType()==3){

                            }

                            break;
                        case 41:
                            //if
                            if(item.getType()==0){
                                gen.pronverbif();
                                sp= gen.gens;
                                globalAnswer=gen.gene;
                            }else if(item.getType()==1){
                                int r2 = (int) (Math.random()*4);
                                switch (r2){
                                    case 0:
                                        gen1.GenBeUsedTo2();
                                        sp= gen1.gens ;
                                        globalAnswer  = gen1.gene;
                                        globalAnswer2 = negator.contractPresentContinuousPresent(gen1.gene);
                                        globalAnswer3=".";
                                        break;
                                    case 1:
                                        object.GenBeUsedTo("am used to ", "are used to ","is used to ","are used to ","esoy acostumbrado a ", "estas acostumbrado a ", "está acostumbrado a ","está acostumbrada a ","estamos acostumbrados a ", "estan acostumbrados a ");
                                        sp=object.gens;
                                        globalAnswer=object.gene;
                                        globalAnswer2=negator.contractPresentContinuousPresent(object.gene);
                                        globalAnswer3=".";
                                        break;
                                    case 2:
                                        object.GenBeUsedTo("am used to ", "are used to ","is used to ","are used to ","esoy acostumbrado a ", "estas acostumbrado a ", "está acostumbrado a ","está acostumbrada a ","estamos acostumbrados a ", "estan acostumbrados a ");
                                        sp=negator.negateSentenceSpanish(object.gens);
                                        // he is not used to
                                        globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                        //he isnt used to
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(object.gene);
                                        // hes not used to
                                        globalAnswer3=negator.negateAndContractPresentContinuous(globalAnswer);
                                        break;

                                    case 3:
                                        gen1.GenBeUsedTo2();
                                        sp= negator.negateSentenceSpanish(gen1.gens);
                                        globalAnswer  = negator.negateFirstAuxOrModal(gen1.gene);
                                        globalAnswer2 = negator.negateFirstAuxOrModalContracted(gen1.gene);
                                        globalAnswer3=negator.negateAndContractPresentContinuous(globalAnswer);
                                        break;

                                }
                            }else if(item.getType()==2){

                            }else if(item.getType()==3){

                            }

                            break;
                        case 42:
                            //all
                            if(item.getType()==0){
                                gen.all();
                                sp= gen.gens;
                                globalAnswer=gen.gene;
                            }else if(item.getType()==1){
                                int r2 = (int) (Math.random()*3);
                                switch (r2){
                                    case 0:
                                        gen1.GenUsedTo2();
                                        sp= gen1.gens;
                                        globalAnswer=gen1.gene;

                                        break;

                                    case 1:
                                        object.GenHaveTo("used to ","used to ","solía ", "solías ", "solía ", "solíamos ", "solían ");
                                        sp= object.gens;
                                        globalAnswer=object.gene;

                                        break;

                                    case 2:
                                        object.GenHaveTo("use to ","use to ","solía ", "solías ", "solía ", "solíamos ", "solían ");
                                        sp= negator.negateSentenceSpanish(object.gens );
                                        globalAnswer=negator.negatePastSimple(object.gene);

                                        break;

                                }
                            }else if(item.getType()==2){

                            }else if(item.getType()==3){

                            }
                            break;
                        case 43:
                            //would
                            if(item.getType()==0){
                                gen.pronverbwould();
                                sp= gen.gens;
                                globalAnswer=gen.gene;
                            }else if(item.getType()==1){
                                int r2=(int)(Math.random()*2);
                                switch (r2){
                                    case 0:
                                        object.GenThereBe();
                                        sp = object.gens;
                                        globalAnswer=object.gene;
                                        globalAnswer2=".";
                                        globalAnswer3=".";
                                        break;
                                    case 1:
                                        object.GenThereBe();
                                        sp = negator.negateThereBeSpanish(object.gens);
                                        globalAnswer= negator.negateThereBeWithNo(object.gene);
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(object.gene);
                                        globalAnswer3=negator.negateFirstAuxOrModal(object.gene);

                                        break;

                                }
                            }else if(item.getType()==2){

                            }else if(item.getType()==3){

                            }

                            break;
                        case 44:
                            //her
                            if(item.getType()==0){
                                gen.adjmethod("her ");
                                sp= gen.gens;
                                globalAnswer=gen.gene;
                            }else if(item.getType()==1){
                                int r2 = (int) (Math.random()*2);
                                switch (r2){
                                    case 0:
                                        object.GenHaveTo("have to ","has to ","tengo que ","tienes que ","tiene que ","tenemos que ","tienen que ");
                                        sp = object.gens;
                                        globalAnswer=object.gene;
                                        break;

                                    case 1:
                                        object.GenHaveTo("have to ","have to ","tengo que ","tienes que ","tiene que ","tenemos que ","tienen que ");
                                        sp=negator.negateSentenceSpanish(object.gens);
                                        globalAnswer=negator.negatePresentSimpleContracted(object.gene);
                                        break;
                                }
                            }else if(item.getType()==2){

                            }else if(item.getType()==3){

                            }

                            break;
                        case 45:
                            //make
                            if(item.getType()==0){
                                gen.make();
                                sp= gen.gens;
                                globalAnswer=gen.gene;
                            }else if(item.getType()==1){
                                int r2 = (int) (Math.random()*2);
                                switch (r2){
                                    case 0:
                                        object.GenGoingTo("am going to ","are going to ","is going to ","voy a ","vas a ","va a ","vamos a ", "van a ");
                                        sp = object.gens;
                                        globalAnswer=object.gene;
                                        globalAnswer2=".";
                                        globalAnswer3=".";
                                        break;
                                    case 1:
                                        object.GenGoingTo("am going to ","are going to ","is going to ","voy a ","vas a ","va a ","vamos a ", "van a ");
                                        sp=negator.negateSentenceSpanish(object.gens);
                                        // he is not
                                        globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                        // he isnt going to
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(object.gene);
                                        // hes not going to
                                        globalAnswer3=negator.negateAndContractPresentContinuous(globalAnswer);
                                        break;

                                }
                            }else if(item.getType()==2){

                            }else if(item.getType()==3){

                            }


                            break;
                        case 46:
                            //about
                            if(item.getType()==0){
                                gen.prepartob(7);
                                sp  = gen.ob;
                                globalAnswer=gen.eng;
                            }else if(item.getType()==1){

                                int r2 = (int) (Math.random()*2);
                                switch (r2){
                                    case 0:
                                        object.GenGoingTo("was going to ","were going to ","was going to ","iba a ","ibas a ","iba a ","ibamos a ", "iban a ");
                                        sp = object.gens;
                                        globalAnswer=object.gene;
                                        globalAnswer2=".";
                                        break;
                                    case 1:
                                        object.GenGoingTo("was going to ","were going to ","was going to ","iba a ","ibas a ","iba a ","ibamos a ", "iban a ");
                                        sp=negator.negateSentenceSpanish(object.gens);
                                        // i was not
                                        globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                        // i wasnt
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(object.gene);
                                        break;
                                }
                            }else if(item.getType()==2){

                            }else if(item.getType()==3){

                            }

                            break;
                        case 47:
                            //my
                            if(item.getType()==0){
                                gen.adjmethod("my ");
                                sp= gen.gens;
                                globalAnswer=gen.gene;
                            }else if(item.getType()==1){
                                int r2 = (int) (Math.random()*2);
                                switch (r2){
                                    case 0:
                                        object.GenFeelLike("feel like ","feel like ","feels like ","tengo ganas de ","tienes ganas de ","tiene ganas de ","tenemos ganas de ", "tienen ganas de ");
                                        sp = object.gens;
                                        globalAnswer=object.gene;
                                        globalAnswer2=".";
                                        break;
                                    case 1:
                                        object.GenFeelLike("feel like ","feel like ","feels like ","tengo ganas de ","tienes ganas de ","tiene ganas de ","tenemos ganas de ", "tienen ganas de ");
                                        sp = negator.negateSentenceSpanish(object.gens);
                                        globalAnswer=negator.negatePresentSimple(object.gene);
                                        globalAnswer2=negator.negatePresentSimpleContracted(object.gene);
                                        break;
                                }
                            }else if(item.getType()==2){

                            }else if(item.getType()==3){

                            }

                            break;
                        case 48:
                            //know
                            if(item.getType()==0){
                                gen.pronverb(5);
                                sp= gen.gens;
                                globalAnswer=gen.gene;
                            }else if(item.getType()==1){
                                int r2= (int) (Math.random()*2);
                                int sprand=(int)(Math.random()*3);
                                switch (r2){
                                    case 0:
                                        object.GenSupposedTo(false);
                                        switch (sprand){
                                            case 0:
                                                sp=object.gens;
                                                break;

                                            case 1:
                                                sp=object.gens2;                                              break;

                                            case 2:
                                                sp=object.gens3 ;
                                                break;
                                        }
                                        // he is suposed to
                                        globalAnswer=object.gene;
                                        // hes supposed to
                                        globalAnswer2=negator.contractPresentContinuousPresent(object.gene);
                                        globalAnswer3=".";
                                        break;
                                    case 1:
                                        object.GenSupposedTo(false);
                                        switch (sprand){
                                            case 0:
                                                sp=negator.negateSentenceSpanishOG(object.gens);
                                                break;

                                            case 1:
                                                sp=negator.negateSentenceSpanishOG(object.gens2);
                                                break;

                                            case 2:
                                                sp=negator.negateSentenceSpanishOG(object.gens3);
                                                break;
                                        }
                                        // he is not supposed to
                                        globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                        // he isnt supposed to
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(object.gene);
                                        // hes not suppsoed to
                                        globalAnswer3=negator.negateAndContractPresentContinuous(globalAnswer);
                                        break;
                                }
                            }else if(item.getType()==2){

                            }else if(item.getType()==3){

                            }


                            break;
                        case 49:
                            //as preposition
                            if(item.getType()==0){
                                gen.as();
                                sp= gen.gens;
                                globalAnswer=gen.gene;
                            }else if(item.getType()==1){
                                int r2= (int) (Math.random()*2);
                                int sprand=(int)(Math.random()*3);
                                switch (r2){
                                    case 0:
                                        object.GenSupposedTo(true);
                                        switch (sprand){
                                            case 0:
                                                sp=object.gens;
                                                break;

                                            case 1:
                                                sp=object.gens2;                                              break;

                                            case 2:
                                                sp=object.gens3 ;
                                                break;
                                        }
                                        // he was suposed to
                                        globalAnswer=object.gene;

                                        globalAnswer2=".";
                                        globalAnswer3=".";
                                        break;
                                    case 1:
                                        object.GenSupposedTo(true);
                                        switch (sprand){
                                            case 0:
                                                sp=negator.negateSentenceSpanishOG(object.gens);
                                                break;

                                            case 1:
                                                sp=negator.negateSentenceSpanishOG(object.gens2);
                                                break;

                                            case 2:
                                                sp=negator.negateSentenceSpanishOG(object.gens3);
                                                break;
                                        }
                                        // he was not supposed to
                                        globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                        // he wasnt supposed to
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(object.gene);
                                        //
                                        globalAnswer3=".";
                                        break;
                                }
                            }else if(item.getType()==2){

                            }else if(item.getType()==3){

                            }

                            break;

                        case 50:
                            // there for existance
                            if(item.getType()==0){
                                object.GenThereBe();
                                sp= object.gens.trim();
                                globalAnswer=object.gene.trim();
                            }else if(item.getType()==1){
                                int r2= (int)   (Math.random()*2);
                                switch (r2){
                                    case 0:
                                        object.GenGetStructures();
                                        sp= object.gens.trim();
                                        globalAnswer=object.gene.trim();
                                        globalAnswer2=".";
                                        break;

                                    case 1:
                                        object.GenGetStructures();
                                        sp = negator.negateSentenceSpanish(object.gens);
                                        globalAnswer=negator.negatePresentSimple(object.gene);
                                        globalAnswer2=negator.negatePresentSimpleContracted(object.gene);

                                        break;
                                }
                            }else if(item.getType()==2){

                            }else if(item.getType()==3){

                            }

                            break;
                        case 51:
                            // one

                            if(item.getType()==0){
                                gen.adjmethod("one ");
                                sp= gen.gens;
                                globalAnswer=gen.gene;
                            }else if(item.getType()==1){
                                //pvpp
                                int r2= (int)   (Math.random()*2);
                                switch (r2){
                                    case 0:
                                        object.GenPvpp();
                                        sp = object.gens;
                                        globalAnswer=object.gene;
                                        globalAnswer2=object.gene2;
                                        globalAnswer3="/";
                                        break;

                                    case 1:
                                        object.GenPvpp();
                                        sp=negator.negateSentenceSpanishOG(object.gens);
                                        globalAnswer=negator.negatePresentSimple(object.gene);
                                        globalAnswer2=negator.negatePresentSimpleContracted(object.gene2);
                                        globalAnswer3=negator.negatePresentSimpleContracted(object.gene);
                                        break;

                                }
                            }else if(item.getType()==2){

                            }else if(item.getType()==3){

                            }

                            break;
                        case 52:
                            // up
                            if(item.getType()==0){
                                object.GenPresSimpPrepasAdv("up ", "hacia arriba");
                                sp= object.gens;
                                globalAnswer=object.gene;
                            }else if(item.getType()==1){
                                int r2= (int)   (Math.random()*2);
                                switch (r2){
                                    case 0:
                                        object.GenReflexives();
                                        sp = object.gens;
                                        globalAnswer=object.gene;
                                        globalAnswer2=".";
                                        break;
                                    case 1:
                                        object.GenReflexives();
                                        sp=negator.negateReflexiveSpanish(object.gens);
                                        globalAnswer=negator.negatePresentSimple(object.gene);
                                        globalAnswer2=negator.negatePresentSimpleContracted(object.gene);
                                        break;
                                }
                            }else if(item.getType()==2){

                            }else if(item.getType()==3){

                            }

                            break;
                        case 53:
                            // time noun
                            if(item.getType()==0){
                                nouns.nounGen("the time ","el tiempo ");
                                sp = nouns.gens;
                                globalAnswer=nouns.gene;
                            }else if(item.getType()==1){
                                int r2= (int) (Math.random()*2);
                                switch (r2){
                                    case 0:
                                        object.GenCausatives();
                                        sp =object.gens;
                                        globalAnswer=object.gene;
                                        globalAnswer2=object.gene2;
                                        globalAnswer3=".";
                                        break;

                                    case 1:
                                        object.GenCausatives();
                                        sp=negator.negateReflexiveSpanish(object.gens);
                                        globalAnswer=negator.negatePresentSimpleCausativeHave(object.gene);
                                        globalAnswer2=negator.negatePresentSimpleContracted(object.gene);
                                        globalAnswer3=negator.negatePresentSimpleContracted(object.gene2);
                                        break;

                                }
                            }else if(item.getType()==2){

                            }else if(item.getType()==3){

                            }

                            break;
                        case 54:
                            // year noun
                            if(item.getType()==0){
                                nouns.nounGen("the year ","el año ");
                                sp = nouns.gens;
                                globalAnswer=nouns.gene;
                            }else if(item.getType()==1){
                                int r2=  (int)(Math.random()*2);
                                switch (r2){
                                    case 0:
                                        object.GenVerbosJuntos();
                                        sp =object.gens;
                                        // i like to go
                                        globalAnswer=object.gene;
                                        // i like going
                                        globalAnswer2=object.gene2;
                                        break;

                                    case 1:
                                        object.GenVerbosJuntos();

                                        sp=negator.negateSentenceSpanishOG(object.gens);
                                        // i don like to go
                                        globalAnswer=negator.negatePresentSimpleContracted(object.gene);
                                        // i dont like going
                                        globalAnswer2=negator.negatePresentSimpleContracted(object.gene2);
                                        break;

                                }
                            }else if(item.getType()==2){

                            }else if(item.getType()==3){

                            }

                            break;
                        case 55:
                            //so as adverb
                            if(item.getType()==0){
                                nouns.adjAdv("so ","tan ");
                                sp = nouns.gens;
                                globalAnswer=nouns.gene;
                            }else if(item.getType()==1){
                                nouns.GenNounAdj();
                                sp = nouns.gens;
                                globalAnswer=nouns.gene;
                            }else if(item.getType()==2){

                            }else if(item.getType()==3){

                            }

                            break;
                        case 56:
                            // think
                            if(item.getType()==0){
                                object.GenPresSimp(pronoun,7);
                                sp= object.gens;
                                globalAnswer=object.gene;
                            }else if(item.getType()==1){
                                // verbal adjectives
                                int r2 = (int)  (Math.random()*2);
                                switch (r2){
                                    case 0:
                                        gen1.GenVerbalAdjectives();
                                        sp = gen1.gens;
                                        globalAnswer=gen1.gene;
                                        break;

                                    case 1:
                                        gen1.GenVerbalAdjectives();
                                        sp = negator.addNoAfterQue(gen1.gens);
                                        globalAnswer=negator.negateVerbalAdjective(gen1.gene);
                                        break;
                                }
                            }else if(item.getType()==2){

                            }else if(item.getType()==3){

                            }

                            break;
                        case 57:
                            // see
                            if(item.getType()==0){
                                object.GenPresSimp(pronoun,8);
                                sp= object.gens;
                                globalAnswer=object.gene;
                            }else if(item.getType()==1){
                                // wish past simple
                                int r2= (int)(Math.random()*3);
                                switch (r2){
                                    case 0:
                                        gen1.GenWishPastSimple2();
                                        sp = gen1.gens;
                                        globalAnswer=gen1.gene;
                                        break;
                                    case 1:
                                        nouns.GenWish(0);
                                        sp = nouns.gens;
                                        globalAnswer=nouns.gene;
                                        break;
                                    case 2:
                                        nouns.GenWish(0);
                                        sp = negator.negateSentenceSpanish(nouns.gens) ;
                                        globalAnswer=nouns.gene2; // ya esta negada el gene2 del nouns
                                        break;
                                }
                            }else if(item.getType()==2){

                            }else if(item.getType()==3){

                            }

                            break;
                        case 58:
                            //which as determiner
                            if(item.getType()==0){
                                Nobles n3 = new Nobles();
                                int pos3 = (int) (Math.random() * 6);
                                n3.GenPresSimpWhich(pos3);
                                sp=n3.gens ;
                                globalAnswer=n3.gene;
                            }else if(item.getType()==1){
                                int r2= (int) (Math.random()*3);
                                switch (r2){
                                    case 0:
                                        gen1.GenWishWould2();
                                        sp = gen1.gens;
                                        globalAnswer=gen1.gene;
                                        break;
                                    case 1:
                                        nouns.GenWish(1);
                                        sp=nouns.gens;
                                        globalAnswer=nouns.gene;
                                        break;
                                    case 2:
                                        nouns.GenWish(1);
                                        sp= negator.negateSentenceSpanish(nouns.gens);
                                        globalAnswer=nouns.gene2;//already negated gene2
                                        break;
                                }

                            }else if(item.getType()==2){

                            }else if(item.getType()==3){

                            }

                            break;
                        case 59:
                            // when
                            if(item.getType()==0){
                                object.GenPresSimpAdverbs3("when ","cuando ");
                                sp= object.gens;
                                globalAnswer=object.gene;
                            }else if(item.getType()==1){
                                int r2= (int)   (Math.random()*3);
                                switch (r2){
                                    case 0:
                                        gen1.GenWishPastPerf2();
                                        sp= gen1.gens;
                                        globalAnswer=gen1.gene;
                                        break;
                                    case 1:
                                        nouns.GenWish(2);
                                        sp=nouns.gens;
                                        globalAnswer=nouns.gene;
                                        break;

                                    case 2:
                                        nouns.GenWish(2);
                                        sp=negator.negateSentenceSpanish(nouns.gens);
                                        globalAnswer=nouns.gene2;
                                        break;
                                }
                            }else if(item.getType()==2){

                            }else if(item.getType()==3){

                            }
                            break;
                        case 60:
                            // some


                            if(item.getType()==0){
                                gen.adjmethodP("some ");
                                sp= gen.gens;
                                globalAnswer=gen.gene;
                            }else if(item.getType()==1){
                                int r2= (int)   (Math.random()*2);
                                switch (r2){
                                    case 0:
                                        nouns.GenComparativos();
                                        sp=nouns.gens;
                                        // i am
                                        globalAnswer=nouns.gene;
                                        //im
                                        globalAnswer2=negator.contractPresentContinuousPresent(nouns.gene);
                                        globalAnswer3=".";
                                        break;
                                    case 1:
                                        nouns.GenComparativos();
                                        sp = negator.negateSentenceSpanishComp(nouns.gens);
                                        // he is not
                                        globalAnswer=negator.negateFirstAuxOrModal(nouns.gene);
                                        // he isnt
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(nouns.gene);
                                        //he s not
                                        globalAnswer3= negator.negateAndContractPresentContinuous(globalAnswer);
                                        break;


                                }

                            }else if(item.getType()==2){

                            }else if(item.getType()==3){

                            }
                            break;
                        case 61:
                            //them

                            if(item.getType()==0){
                                nouns.genPronoun("them ");
                                sp = nouns.gens;
                                globalAnswer=nouns.gene;
                            }else if(item.getType()==1){
                                //question structures
                                int verbPos=(int)(Math.random()*nouns.verbsTagged.length);
                                int ob2=(int)(Math.random()* object.verbObjectsSpanish[verbPos].length);
                                String tempQuestion= nouns.generateQuestion(verbPos,ob2);
                                sp=nouns.genSpanishQuestion(tempQuestion,verbPos,ob2);
                                globalAnswer=tempQuestion;

                            }else if(item.getType()==2){

                            }else if(item.getType()==3){

                            }

                            break;
                        case 62:
                            // people noun

                            if(item.getType()==0){
                                nouns.nounGen("the people ","la gente ");
                                sp = nouns.gens;
                                globalAnswer=nouns.gene;
                            }else if(item.getType()==1){
                                //phrasal verbs
                                int r2= (int)   (Math.random()*2);
                                switch (r2){
                                    case 0:
                                        object.GenPresSimpPhrasalVerbs();
                                        sp= object.gens;
                                        globalAnswer=object.gene;
                                        globalAnswer2=".";
                                        break;
                                    case 1:
                                        object.GenPresSimpPhrasalVerbs();
                                        sp = negator.negateSentenceSpanish(object.gens);
                                        globalAnswer=negator.negatePresentSimple(object.gene);
                                        globalAnswer2=negator.negatePresentSimpleContracted(object.gene);
                                        break;
                                }
                            }else if(item.getType()==2){

                            }else if(item.getType()==3){

                            }
                            break;
                        case 63:
                            if(item.getType()==0){
                                // take
                                object.GenPresSimp(pronoun,9);
                                sp= object.gens;
                                globalAnswer=object.gene;
                            }else if(item.getType()==1){
                                //reported speech
                                String reporter="";
                                String reportersp="";
                                int r2= (int)(Math.random()*3);
                                switch (r2){
                                    case 0:
                                        gen1.GenReportedSpeech1();
                                        sp = gen1.gens;
                                        globalAnswer=gen1.gene;
                                        break;
                                    case 1:
                                        int rsrand=(int) (Math.random()*2);
                                        if(rsrand==1){
                                            reporter = "he said that " ;
                                            reportersp = "él dijo que " ;
                                        }else {
                                            reporter = "she said that ";
                                            reportersp = "ella dijo que ";
                                        }
                                        object.GenPastSimp();
                                        sp= reportersp + object.gens;
                                        globalAnswer=reporter+object.gene;
                                        break;
                                    case 2:
                                        int rsrand2=(int) (Math.random()*2);
                                        if(rsrand2==1){
                                            reporter = "he said that " ;
                                            reportersp = "él dijo que " ;
                                        }else {
                                            reporter = "she said that ";
                                            reportersp = "ella dijo que ";
                                        }
                                        object.GenPastSimp();
                                        sp= reportersp +negator.negateSentenceSpanishOG(object.gens) ;
                                        globalAnswer=reporter+negator.negatePastSimple(object.gene2);
                                        break;
                                }

                            }else if(item.getType()==2){

                            }else if(item.getType()==3){

                            }



                            break;
                        case 64:


                            if(item.getType()==0){

                                nouns.genPronoun("me ");
                                sp = nouns.gens;
                                globalAnswer=nouns.gene;
                            }else if(item.getType()==1){
                                int r2= (int)   (Math.random()*5);
                                switch (r2){
                                    case 0:
                                        gen1.GenAbleTo2();
                                        sp = gen1.gens;
                                        //i am
                                        globalAnswer=gen1.gene;
                                        // im
                                        globalAnswer2=negator.contractPresentContinuousPresent(gen1.gene);
                                        globalAnswer3=".";
                                        break;

                                    case 1:
                                        object.GenGoingTo("will be able to ","will be able to ","will be able to ","podré ","podrás ", "podrá ", "podrémos ", "podrán ");
                                        sp=object.gens;
                                        // i will
                                        globalAnswer=object.gene;
                                        // ill be
                                        globalAnswer2=negator.contractWill(object.gene);

                                        globalAnswer3=".";
                                        break;

                                    case 2:
                                        object.GenGoingTo("am able to ","are able to ","is able to ","soy capaz de ","eres capaz de ", "es capaz de ", "somos capaces de ", "son capaces de ");
                                        sp=object.gens;
                                        //he is
                                        globalAnswer=object.gene;
                                        // hes
                                        globalAnswer2= negator.contractPresentContinuousPresent(object.gene);

                                        globalAnswer3=".";
                                        break;
                                    case 3:
                                        object.GenGoingTo("am able to ","are able to ","is able to ","soy capaz de ","eres capaz de ", "es capaz de ", "somos capaces de ", "son capaces de ");
                                        sp=negator.negateSentenceSpanish(object.gens);
                                        // i am not
                                        globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                        // he isnt
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(object.gene);
                                        // hes not
                                        globalAnswer3=negator.negateAndContractPresentContinuous(globalAnswer);
                                        break;
                                    case 4:
                                        gen1.GenAbleTo2();
                                        sp = negator.negateSentenceSpanishOG(gen1.gens);
                                        // he is not
                                        globalAnswer=negator.negateFirstAuxOrModal(gen1.gene);
                                        // he isnt
                                        globalAnswer2=negator.negateFirstAuxOrModalContracted(gen1.gene);
                                        // hes not
                                        globalAnswer3=negator.negateAndContractPresentContinuous(globalAnswer);

                                        break;
                                }


                            }else if(item.getType()==2){

                            }else if(item.getType()==3){

                            }

                            break;
                        case 65:

                            if(item.getType()==0){
                                // out as adverb
                                object.GenPresSimpPrepasAdv("out ", "hacia afuera ");
                                sp= object.gens;
                                globalAnswer=object.gene;
                            }else if(item.getType()==1){
                                //incremento paralelo
                                gen1.GenIncrementoParalelo();
                                sp = gen1.gens;
                                globalAnswer=gen1.gene;


                            }else if(item.getType()==2){

                            }else if(item.getType()==3){

                            }


                            break;
                        case 66:


                            if(item.getType()==0){
                                nouns.genPreps("into");
                                sp = nouns.gens;
                                globalAnswer=nouns.gene;
                            }else if(item.getType()==1){
                                int r2= (int) (Math.random()*3);
                                switch (r2){
                                    case 0:
                                        nouns.GenRelativeClauses();
                                        sp=nouns.gens;
                                        globalAnswer=nouns.gene;
                                        break;
                                    case 1:
                                        gen1.GenRelativeClauses1();
                                        sp= gen1.gens;
                                        globalAnswer=gen1.gene;
                                        break;

                                    case 2:
                                        n.GenRelativeClauses1New();
                                        sp=n.gens;
                                        globalAnswer=n.gene;
                                        break;
                                }



                            }else if(item.getType()==2){

                            }else if(item.getType()==3){

                            }
                            break;
                        case 67:

                            if(item.getType()==0){
                                // just adverb
                                object.GenPresSimpAdverbs("just ","solo ");
                                sp= object.gens;
                                globalAnswer=object.gene;
                            }else if(item.getType()==1){

                                nouns.GenJustPhrasalVerbs();
                                sp= nouns.gens;
                                globalAnswer=nouns.gene;

                            }else if(item.getType()==2){

                            }else if(item.getType()==3){

                            }
                            break;
                        case 68:

                            if(item.getType()==0){

                                nouns.genPronoun("him ");
                                sp = nouns.gens;
                                globalAnswer=nouns.gene;
                            }else if(item.getType()==1){
                                //want to
                                gen1.GenWantYouTo2();
                                sp = gen1.gens;
                                globalAnswer=gen1.gene;


                            }else if(item.getType()==2){

                            }else if(item.getType()==3){

                            }
                            break;
                        case 69:
                            // come
                            object.GenPresSimp(pronoun,10);
                            sp= object.gens;
                            globalAnswer=object.gene;
                            break;
                        case 70:
                            //my
                            gen.adjmethod("your ");
                            sp= gen.gens;
                            globalAnswer=gen.gene;
                            break;
                        case 71:
                            // now adverb
                            object.GenPresSimpAdverbs2("now ","ahora ");
                            sp= object.gens;
                            globalAnswer=object.gene;

                            break;
                        case 72:
                            // could
                            object.GenPresSimpModals("could ","podría ","podrías ","podría ","podríamos ","podrían ");
                            sp= object.gens;
                            globalAnswer=object.gene;
                            break;
                        case 73:
                            // than
                            nouns.GenThan();
                            sp = nouns.gens;
                            globalAnswer=nouns.gene;

                            break;
                        case 74:
                            // like
                            nouns.genPreps("like");
                            sp = nouns.gens;
                            globalAnswer=nouns.gene;
                            break;
                        case 75:
                            // other
                            nouns.adjectiveGen("other ","otro ","otra ");
                            sp = nouns.gens ;
                            globalAnswer=nouns.gene;
                            break;
                        case 76:
                            //then as adverb
                            //then adverb
                            object.GenPresSimpAdverbs2("then ","entonces ");
                            sp= object.gens;
                            globalAnswer=object.gene;
                            break;
                        case 77:
                            //how adverb


                            break;
                        case 78:
                            //my
                            gen.adjmethod("its ");
                            sp= gen.gens;
                            globalAnswer=gen.gene;
                            break;
                        case 79:
                            // two
                            gen.adjmethodP("two ");
                            sp= gen.gens;
                            globalAnswer=gen.gene;
                            break;
                        case 80:
                            //my
                            gen.adjmethod("our ");
                            sp= gen.gens;
                            globalAnswer=gen.gene;
                            break;
                        case 81:
                            // more
                            object.GenPresSimpAdverbs2("more ","mas ");
                            sp = object.gens;
                            globalAnswer=object.gene;
                            break;
                        case 82:
                            // these
                            gen.adjmethodP("these ");
                            sp= gen.gens;
                            globalAnswer=gen.gene;
                            break;
                        case 83:
                            // want
                            object.GenPresSimp(pronoun,11);
                            sp = object.gens; // Removed the "+"-"+" part and added a semicolon as requested.
                            globalAnswer = object.gene; // Assigning object.gene to globalAnswer as per your instructions.
                            break; //
                        case 84:
                            nouns.nounGen("the way ","el camino ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;

                        case 85:
                            gen.adjmethod("no ");
                            sp = gen.gens;
                            globalAnswer = gen.gene;
                            break;
                        case 86:
                            object.GenPresSimp(pronoun,12);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 87:
                            gen.adjmethod("first ");
                            sp = gen.gens;
                            globalAnswer = gen.gene;
                            break;
                        case 88:
                            object.GenPresSimpAdverbs2("also ", "también ");
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 89:
                            nouns.adjectiveGen("new ", "nuevo ", "nueva ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;

                        case 90:
                            // because conj
                            object.GenConj("because ", "por que ");
                            gen1.GenPresSimp2();
                            complemento= gen1.gens;
                            complement = gen1.gene;
                            sp = object.gens+" "+ complemento;
                            globalAnswer=object.gene+" "+complement;

                            break;
                        case 91:
                            nouns.nounGen("the day ", "el día ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 92:
                            gen.adjmethodP("more ");
                            sp = gen.gens;
                            globalAnswer = gen.gene;
                            break;
                        case 93:
                            object.GenPresSimp(pronoun, 13);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 94:
                            nouns.nounGen("the man ", "el hombre ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 95:
                            object.GenPresSimpAdverbs2("here ", "aquí ");
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 96:
                            object.GenPresSimp(pronoun, 14);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 97:
                            object.GenPresSimp(pronoun, 15);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 98:
                            nouns.nounGen("the thing ", "la cosa ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 99:
                            object.GenPresSimpAdverbs2("well ", "bien ");
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 100:
                            gen.adjmethodP("many ");
                            sp = gen.gens;
                            globalAnswer = gen.gene;
                            break;

                        case 101:
                            object.GenPresSimpAdverbs("only ", "solamente ");
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 102:
                            gen.adjmethodP("those ");
                            sp = gen.gens;
                            globalAnswer = gen.gene;
                            break;
                        case 103:
                            object.GenPresSimp(pronoun, 16);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 104:
                            nouns.adjAdv("very ", "muy ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 105:
                            nouns.genPronoun("one ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 106:
                            object.GenPresSimpAdverbs("even ", "incluso ");
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 107:
                            nouns.genPronoun("her ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 108:
                            object.GenPresSimpPrepasAdv("back", "hacia atras");
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 109:
                            gen.adjmethod("any ");
                            sp = gen.gens;
                            globalAnswer = gen.gene;
                            break;
                        case 110:
                            nouns.adjectiveGen("good ", "buen ", "buena ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;

                        case 111:
                            nouns.genPronoun("us ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 112:
                            nouns.genPreps("through");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 113:
                            nouns.nounGen("the woman ", "la mujer ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 114:
                            nouns.nounGen("life ", "la vida ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 115:
                            nouns.nounGen("the child ", "el niño ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 116:
                            object.GenPresSimpAdverbs2("there ", "ahí ");
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 117:
                            // down
                            object.GenPresSimpPrepasAdv("down ", "hacia abajo");
                            sp= object.gens;
                            globalAnswer=object.gene;
                            break;
                        case 118:
                            nouns.nounGen("the work ", "el trabajo ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 119:
                            nouns.genPreps("after");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 120:
                            object.GenPresSimp(pronoun, 18);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;

                        case 121:
                            // may
                            object.GenMay("may ","puede que ");
                            sp= object.gens;
                            globalAnswer= object.gene;
                            break;
                        case 122:
                            nouns.nounGen("the world ", "el mundo ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 123:
                            nouns.genPreps("over");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 124:
                            object.GenPresSimpModals("should ", "debería ", "deberías ", "debería ", "deberíamos ", "deberían ");
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 125:
                            object.GenPresSimpAdverbs("still ", "aún ");
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 126:
                            object.GenPresSimp(pronoun, 19);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 127:
                            object.GenPresSimpPrepasAdv("in", "hacia adentro ");
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 128:
                            nouns.nounGen("the school ", "la escuela ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 129:
                            object.GenPresSimpAdverbs3("as ", "En la manera en que ");
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 130:
                            gen.adjmethod("last ");
                            sp = gen.gens;
                            globalAnswer = gen.gene;
                            break;

                        case 131:
                            object.GenPresSimp(pronoun, 20);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 132:
                            object.GenPresSimpAdverbs2("too ", "tambien ");
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 133:
                            object.GenPresSimp(pronoun, 21);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 134:
                            gen.adjmethodP("three ");
                            sp = gen.gens;
                            globalAnswer = gen.gene;
                            break;
                        case 135:
                            object.GenPresSimp(pronoun, 22);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 136:
                            object.GenPresSimpAdverbs3("When ", "Cuando ");
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 137:
                            object.GenPresSimp(pronoun, 23);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 138:
                            nouns.nounGen("The state ", "El estado ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 139:
                            object.GenPresSimpAdverbs("never ", "nunca ");
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 140:
                            nouns.genPreps("between");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;

                        case 141:
                            nouns.adjectiveGen("high ", "alto ", "alta ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 142:
                            nouns.genPronoun("something ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 143:
                            object.GenPresSimpAdverbs("really ", "realmente ");
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 144:
                            nouns.adjAdv2("the most ", "el mas ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 145:
                            gen.adjmethod("another ");
                            sp = gen.gens;
                            globalAnswer = gen.gene;
                            break;
                        case 146:
                            gen.uncountableNounsGen();
                            sp = gen.gens;
                            globalAnswer = gen.gene;
                            break;
                        case 147:
                            gen.adjmethod("own ");
                            sp = gen.gens;
                            globalAnswer = gen.gene;
                            break;
                        case 148:
                            nouns.nounGen("the family ", "la familia ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 149:
                            nouns.genPreps("out");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 150:
                            nouns.nounGen("the house ", "la casa ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;

                        case 151:
                            object.GenPresSimp(pronoun, 24);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 152:
                            Intrans intrans = new Intrans();
                            int in =(int)(Math.random()*intrans.at.length);
                            String atArraysp=intrans.aten[in];
                            String atArrayeng=intrans.at[in];
                            object.GenPresSimp(pronoun, 25);
                            sp = object.gens+ atArraysp;
                            globalAnswer = object.gene+atArrayeng;
                            break;
                        case 153:
                            nouns.adjectiveGen("old ", "viejo ", "vieja ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 154:
                            nouns.genPreps("on");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 155:
                            object.GenConj("while ", "mientras que ");
                            object2.GenPresSimp();
                            sp = object.gens + object2.gens;
                            globalAnswer=object.gene + object2.gene;
                            break;
                        case 156:
                            object.GenPresSimp(pronoun, 26);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 157:
                            object.GenPresSimp(pronoun, 27);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 158:
                            object.GenPresSimpAdverbs3("why ", "la razón por la cual ");
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 159:
                            nouns.nounGen("the president ", "el presidente ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 160:
                            object.GenPresSimp(pronoun, 28);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;

                        case 161:
                            nouns.adjectiveGen("same ", "mismo ", "misma ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 162:
                            nouns.adjectiveGen("great ", "grandioso ", "grandiosa ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 163:
                            object.GenPresSimp(pronoun, 29);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 164:
                            nouns.adjectiveGen("big ", "gran ", "gran ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 165:
                            object.GenPresSimp(pronoun, 30);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 166:
                            nouns.nounGen("the group ", "el grupo ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 167:
                            nouns.nounGen("the country ", "el país ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 168:
                            object.GenPresSimp(pronoun, 31);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 169:
                            nouns.nounGen("the problem ", "el problema ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;

                        case 170:
                            // where
                            object.GenConj("where ", "donde ");
                            object2.GenPresSimp();
                            complemento= object2.gens;
                            complement = object2.gene;
                            sp = object.gens+complemento;
                            globalAnswer=object.gene+complement;
                            break;
                        case 171:
                            object.GenPresSimp(pronoun, 32);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 172:
                            nouns.nounGen("the student ", "el estudiante ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 173:
                            gen.adjmethod("every ");
                            sp = gen.gens;
                            globalAnswer = gen.gene;
                            break;
                        case 174:
                            nouns.nounGen("the hand ", "la mano ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 175:
                            object.GenPresSimp(pronoun, 33);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 176:
                            nouns.genPreps("against");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 177:
                            object.GenPresSimp(pronoun, 34);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 178:
                            nouns.adjectiveGen2("american ", "americano ", "americana ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 179:
                            nouns.nounGen("the part ", "la parte ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 180:
                            object.GenPresSimp(pronoun, 35);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;

                        case 181:
                            object.genAbout();
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 182:
                            object.genOver();
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 183:
                            object.GenPresSimpSubjunctive("might ", "quiza ");
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 184:
                            gen.adjmethod("such ");
                            sp = gen.gens;
                            globalAnswer = gen.gene;
                            break;
                        case 185:
                            nouns.nounGen("the place ", "el lugar ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 186:
                            object.GenPresSimpAdverbs2("again ", "otra vez ");
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 187:
                            nouns.nounGen("the city ", "la ciudad ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 188:
                            nouns.nounGen("the case ", "el caso ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 189:
                            gen.adjmethodP("most ");
                            sp = gen.gens;
                            globalAnswer = gen.gene;
                            break;
                        case 190:
                            gen.adjmethodP("few ");
                            sp = gen.gens;
                            globalAnswer = gen.gene;
                            break;

                        case 191:
                            nouns.nounGen("the system ", "el sistema ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 192:
                            nouns.nounGen("the week ", "la semana ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 193:
                            object.GenPresSimpAdverbs3("where ", "en donde ");
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 194:
                            nouns.nounGen("the company ", "la empresa ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 195:
                            gen.adjmethod("each ");
                            sp = gen.gens;
                            globalAnswer = gen.gene;
                            break;
                        case 196:
                            nouns.nounGen("the percent ", "el porcentaje ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 197:
                            object.GenPresSimp(pronoun, 36);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;

                        case 198:
                            // so/ conjunction
                            object.GenConj("so", "así que ");
                            object2.GenPresSimp();
                            complemento= object2.gens;
                            complement = object2.gene;
                            sp = object.gens+" "+ complemento;
                            globalAnswer=object.gene+" "+complement;
                            break;
                        case 199:
                            nouns.genPreps("during");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 200:
                            nouns.nounGen("the question ", "la pregunta ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 201:
                            // right/adverb
                            object.GenConj("right ", "correctamente");
                            sp=object.gens;
                            globalAnswer=object.gene;
                            break;
                        case 202:
                            nouns.nounGen("the program ", "el programa ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 203:
                            object.GenPresSimp(pronoun, 17);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 204:
                            object.GenPresSimp(pronoun, 37);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 205:
                            nouns.nounGen("the number ", "el número ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 206:
                            nouns.adjectiveGen("small ", "pequeño ", "pequeña ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 207:
                            nouns.nounGen("the government ", "el gobierno ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 208:
                            object.GenPresSimp(pronoun, 38);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 209:
                            object.GenOff();
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 210:
                            object.GenPresSimp(pronoun, 39);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;

                        case 211:
                            object.GenPresSimp(pronoun, 40);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 212:
                            object.GenPresSimpAdverbs("always ", "siempre ");
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 213:
                            nouns.nounGen("the night ", "la noche ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 214:
                            object.GenPresSimp(pronoun, 41);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 215:
                            object.GenPresSimpAdverbs2("today ", "hoy ");
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 216:
                            object.GenPresSimp(pronoun, 42);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 217:
                            nouns.nounGen("the point ", "el punto ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 218:
                            object.GenPresSimp(pronoun, 43);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 219:
                            object.genHappen();
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 220:
                            object.GenPresSimp(pronoun, 44);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;

                        case 221:
                            gen.adjmethod("next ");
                            sp = gen.gens;
                            globalAnswer = gen.gene;
                            break;
                        case 222:
                            nouns.genPreps("without");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 223:
                            nouns.genPreps("before");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 224:
                            nouns.adjectiveGen2("large ", "grande ", "gran ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 225:
                            object.GenPresSimpModals("must ", "debo ", "debes ", "debe ", "debemos ", "deben ");
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 226:
                            gen.adjmethodP("all");
                            sp = gen.gens;
                            globalAnswer = gen.gene;
                            break;
                        case 227:
                            nouns.nounGen("the war ", "la guerra ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 228:
                            nouns.nounGen("the home ", "el hogar ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 229:
                            nouns.genPreps("under");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 230:
                            nouns.nounGen("the room ", "el cuarto ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;

                        case 231:
                            nouns.nounGen("the fact ", "el hecho ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 232:
                            nouns.nounGen("the area ", "la zona ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 233:
                            nouns.adjectiveGen2("national ", "nacional ", "nacional ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 234:
                            object.GenPresSimp(pronoun, 45);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 235:
                            nouns.nounGen("the money ", "el dinero ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 236:
                            nouns.nounGen("the right ", "el derecho ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 237:
                            nouns.nounGen("the story ", "la historia ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 238:
                            nouns.nounGen("the water ", "el agua ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 239:
                            nouns.nounGen("the mother ", "la madre ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 240:
                            nouns.adjectiveGen2("different ", "diferente ", "diferente ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;

                        case 241:
                            nouns.adjectiveGen2("young ", "joven ", "joven ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 242:
                            nouns.nounGen("the month ", "el mes ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 243:
                            nouns.nounGen("the lot ", "el lote ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 244:
                            nouns.nounGen("the book ", "el libro ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 245:
                            nouns.nounGen("the eye ", "el ojo ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 246:
                            nouns.nounGen("the study ", "el estudio ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 247:
                            nouns.nounGen("the job ", "el trabajo ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 248:
                            nouns.nounGen("the kind ", "el tipo ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 249:
                            // Note: This seems to be a repeat of case 248 with an incorrect description. Adjusting to "the word", "la palabra".
                            nouns.nounGen("the word ", "la palabra ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 250:
                            nouns.nounGen("the issue ", "el tema ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 251:
                            nouns.nounGen("the side ", "el lado ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 252:
                            gen.adjmethodP("four ");
                            sp = gen.gens;
                            globalAnswer = gen.gene;
                            break;
                        case 253:
                            nouns.nounGen("the business ", "el negocio ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;

                        case 254:
                            // though
                            object.GenConjFuture("though", "aún que");
                            object2.GenPresSimpSubjunctive();
                            complemento= object2.gens;
                            complement = object2.gene;
                            sp = object.gens+" "+ complemento;
                            globalAnswer=object.gene+" "+complement;
                            break;
                        case 255:
                            nouns.nounGen("the head ", "la cabeza ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 256:
                            object.GenPresSimpAdverbs2("far ", "lejos ");
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 257:
                            nouns.adjectiveGen2("long ", "largo ", "larga ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 258:
                            nouns.adjectiveGen2("black ", "negro ", "negra ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 259:
                            gen.adjmethodP("million");
                            sp = gen.gens;
                            globalAnswer = gen.gene;
                            break;
                        case 260:
                            gen.adjmethodP("both ");
                            sp = gen.gens;
                            globalAnswer = gen.gene;
                            break;
                        case 261:
                            nouns.adjectiveGen2("little ", "chiquito ", "chiquita ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;

                        case 262:
                            // yes
                            sp="yes/ si ";
                            break;
                        case 263:
                            // after
                            object.GenConj("after ", " después de que ");
                            object2.GenPresSimp();
                            complemento= object2.gens;
                            complement = object2.gene;
                            sp = object.gens+ complemento;
                            globalAnswer=object.gene+complement;
                            break;
                        case 264:
                            // since
                            object.GenConj("since ", "ya que ");
                            object2.GenPresSimp();
                            complemento= object2.gens;
                            complement = object2.gene;
                            sp = object.gens+complemento;
                            globalAnswer=object.gene+complement;
                            break;
                        case 265:
                            nouns.genPreps("around");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 266:
                            // Adjusted to reflect the intended "around" functionality; assuming a placeholder method was mentioned.
                            // If "genLong" was intended for "long", this case requires clarification or adjustment to fit "around".
                            object.genLong(); // Placeholder for the correct functionality.
                            sp = object.gens ;
                            globalAnswer=object.gene;
                            break;
                        case 267:
                            object.GenPresSimp(pronoun, 46);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 268:
                            nouns.nounGen("the service ", "el servicio ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 269:
                            nouns.adjectiveGen("important ", "importante ", "importante ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 270:
                            object.GenPresSimp(pronoun, 47);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 271:
                            object.GenPresSimpPrepasAdv("away ", "lejos ");
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 272:
                            nouns.nounGen("the friend ", "el amigo ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 273:
                            object.GenPresSimpAdverbs3("however ", "como sea que ");
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 274:
                            nouns.nounGen("the power ", "el poder ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;

                        case 275:
                            //
                            sp="no/no";
                            break;
                        case 276:
                            // yet adverb
                            Nobles nob = new Nobles();
                            nob.GenPresPerfVocab("yet ", "todavía ");
                            sp = nob.gens;
                            globalAnswer=nob.gene;
                            break;
                        case 277:
                            // father
                            nouns.nounGen("the father ","el padre ");
                            sp = nouns.gens;
                            globalAnswer=nouns.gene;
                            break;
                        case 278:
                            // hour
                            nouns.nounGen("the hour ","la hora ");
                            sp = nouns.gens;
                            globalAnswer=nouns.gene;
                            break;
                        case 279:
                            // often adverb
                            object.GenPresSimpAdverbs2("often ","seguido ");
                            sp = object.gens;
                            globalAnswer=object.gene;
                            break;
                        case 280:
                            // until
                            object.GenConjFuture("until", "hasta que");
                            object2.GenPresSimpSubjunctive();
                            complemento= object2.gens;
                            complement = object2.gene;
                            sp = object.gens+" "+ complemento;
                            globalAnswer=object.gene+" "+complement;
                            break;
                        case 281:
                            //political
                            nouns.adjectiveGen("political ","politico ","politica ");
                            sp = nouns.gens ;
                            globalAnswer=nouns.gene;
                            break;
                        case 282:
                            // line
                            nouns.nounGen("the line ","la linea ");
                            sp = nouns.gens;
                            globalAnswer=nouns.gene;
                            break;
                        case 283:
                            //end
                            nouns.nounGen("the end ","el fin ");
                            sp = nouns.gens;
                            globalAnswer=nouns.gene;
                            break;
                        case 284:
                            // stand
                            object.GenPresSimp(pronoun,48);
                            sp= object.gens;
                            globalAnswer=object.gene;
                            break;
                        case 285:
                            //among
                            nouns.genPreps("among");
                            sp = nouns.gens;
                            globalAnswer=nouns.gene;
                            break;
                        case 286:
                            // game
                            nouns.nounGen("the game ","el juego ");
                            sp = nouns.gens;
                            globalAnswer=nouns.gene;
                            break;
                        case 287:
                            //ever adverb
                            Nobles nob2 = new Nobles();
                            nob2.GenPresPerfVocab("ever ", "nunca ");
                            sp = nob2.gens;
                            globalAnswer=nob2.gene;

                            break;
                        case 288:
                            // lose
                            object.GenPresSimp(pronoun,49);
                            sp= object.gens;
                            globalAnswer=object.gene;
                            break;
                        case 289:
                            //bad
                            nouns.adjectiveGen2("bad ","mal ","mala ");
                            sp = nouns.gens ;
                            globalAnswer=nouns.gene;
                            break;
                        case 290:
                            //member
                            nouns.nounGen("the member ","el miembro ");
                            sp = nouns.gens;
                            globalAnswer=nouns.gene;
                            break;
                        case 291:
                            // meet
                            object.GenPresSimp(pronoun,50);
                            sp= object.gens;
                            globalAnswer=object.gene;
                            break;
                        case 292:
                            // pay
                            object.GenPresSimp(pronoun,51);
                            sp= object.gens;

                            globalAnswer=object.gene;
                            break;
                        case 293:
                            // law
                            nouns.nounGen("the law ","la ley ");
                            sp = nouns.gens;
                            globalAnswer=nouns.gene;
                            break;
                        case 294:
                            //almost
                            object.GenAlmost("almost ", "casi ");
                            sp= object.gens;
                            globalAnswer=object.gene;
                            break;
                        case 295:
                            // car
                            nouns.nounGen("the car ","el carro ");
                            sp = nouns.gens;
                            globalAnswer=nouns.gene;
                            break;
                        case 296:
                            // later adverb
                            object.GenPresSimpAdverbs2("later ","mas tarde ");
                            sp = object.gens;
                            globalAnswer=object.gene;
                            break;
                        case 297:
                            //much
                            object.GenPresSimpAdverbs2("much ","mucho ");
                            sp = object.gens;
                            globalAnswer=object.gene;
                            break;
                        case 298:
                            //name
                            nouns.nounGen("the name ","el nombre ");
                            sp = nouns.gens;
                            globalAnswer=nouns.gene;
                            break;
                        case 299:
                            // include
                            object.GenPresSimp(pronoun,52);
                            sp= object.gens;
                            globalAnswer=object.gene;
                            break;
                        case 300:
                            //five
                            gen.adjmethodP("five ");
                            sp= gen.gens;
                            globalAnswer=gen.gene;
                            break;
                        case 301:
                            // center
                            nouns.nounGen("the center ","el centro ");
                            sp = nouns.gens;
                            globalAnswer=nouns.gene;
                            break;
                        case 302:
                            // once adverb
                            object.GenPresSimpAdverbs2("once ","una vez ");
                            sp = object.gens;
                            globalAnswer=object.gene;
                            break;
                        case 303:
                            //university
                            nouns.nounGen("the university ","la universidad ");
                            sp = nouns.gens;
                            globalAnswer =nouns.gene;
                            break;
                        case 304:
                            // continue
                            object.GenPresSimp(pronoun,53);
                            sp= object.gens;
                            globalAnswer=object.gene;
                            break;
                        case 305:
                            // least
                            nouns.adjAdv("the least ","el menos ");
                            sp = nouns.gens;
                            globalAnswer=nouns.gene;
                            break;
                        case 306:
                            //real
                            nouns.adjectiveGen2("real ","real ","real ");
                            sp = nouns.gens ;
                            globalAnswer=nouns.gene;
                            break;
                        case 307:
                            nouns.adjectiveGen2("white ", "blanco ", "blanca ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 308:
                            object.GenPresSimp(pronoun, 54);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 309:
                            object.GenPresSimp(pronoun, 55);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 310:
                            gen.adjmethodP("several ");
                            sp = gen.gens;
                            globalAnswer = gen.gene;
                            break;
                        case 311:
                            object.GenAgo();
                            sp = object.gens;
                            globalAnswer=object.gene;
                            break;
                        case 312:
                            nouns.nounGen("the information ", "la información ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 313:
                            nouns.genPronoun("nothing ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 314:
                            nouns.nounGen("the community ", "la comunidad ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 315:
                            nouns.adjectiveGen("best ", "mejor ", "mejor ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 316:
                            nouns.adjectiveGen2("right ", "correcto ", "correcta ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 317:
                            nouns.nounGen("the idea ", "la idea ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 318:
                            object.GenPresSimp(pronoun, 56);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 319:
                            nouns.nounGen("the body ", "el cuerpo ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 320:
                            object.GenPresSimp(pronoun, 57);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;

                        case 321:
                            nouns.nounGen("the kid ", "el niño ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 322:
                            nouns.nounGen("the minute ", "el minuto ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 323:
                            nouns.nounGen("the table ", "la mesa ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 324:
                            // Assuming the presence of a method to handle conditional or future conjunctive scenarios.
                            // The provided adaptation reflects a hypothetical implementation based on your description.
                            object.GenConjFuture("whether", "ya sea que");
                            object2.GenPresSimpSubjunctive(); // Assuming a placeholder for actual method implementation.
                            complemento = object2.gens;
                            complement = object2.gene;
                            sp = object.gens + " " + complemento + "o no";
                            globalAnswer=object.gene + " " + complement + "or not";
                            break;
                        case 325:
                            object.GenPresSimp(pronoun, 58);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 326:
                            nouns.nounGen("the team ", "el equipo ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 327:
                            nouns.nounGen("the back ", "la espalda ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 328:
                            object.GenPresSimp(pronoun, 59);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 329:
                            object.GenPresSimpAdverbs2("together ", "juntos ");
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 330:
                            object.GenPresSimp(pronoun, 60);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;

                        case 331:
                            object.GenPresSimpAdverbs2("around ", "al rededor ");
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 332:
                            nouns.adjectiveGen("only ", "único ", "única ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 333:
                            object.GenPresSimp(pronoun, 61);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 334:
                            nouns.nounGen("the face ", "la cara ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 335:
                            nouns.genPronoun("anything ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 336:
                            nouns.adjectiveGen2("public ", "publico ", "publica ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 337:
                            nouns.adjectiveGen2("social ", "social ", "social ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 338:
                            genA.GenPastSimp1(); // Placeholder for actual implementation.
                            sp = genA.gens + "ya ";
                            globalAnswer=genA.gene + "already";
                            break;
                        case 339:
                            nouns.nounGen("the parent ", "el padre ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 340:
                            object.GenPresSimp(pronoun, 62);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 341:
                            object.GenPresSimp(pronoun, 63);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 342:
                            nouns.nounGen("the office ", "la oficina ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 343:
                            object.GenPresSimp(pronoun, 64);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 344:
                            nouns.nounGen("the level ", "el nivel ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 345:
                            object.GenPresSimp(pronoun, 65);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 346:
                            object.GenPresSimp(pronoun, 66);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 347:
                            nouns.nounGen("the person ", "la persona ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 348:
                            nouns.nounGen("the door ", "la puerta ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 349:
                            nouns.adjectiveGen("sure ", "seguro ", "segura ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 350:
                            object.GenPresSimp(pronoun, 67);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;

                        case 351:
                            // street
                            nouns.nounGen("the street ","la calle ");
                            sp = nouns.gens;
                            globalAnswer=nouns.gene;
                            break;
                        case 352:
                            // such
                            nouns.genPreps("such");
                            sp = nouns.gens;
                            globalAnswer=nouns.gene;
                            break;
                        case 353:
                            // history
                            nouns.nounGen("the history ","la historia ");
                            sp = nouns.gens;
                            globalAnswer=nouns.gene;
                            break;
                        case 354:
                            //party
                            nouns.nounGen("the party ","la fiesta ");
                            sp = nouns.gens;
                            globalAnswer=nouns.gene;
                            break;
                        case 355:
                            // grow
                            object.GenPresSimp(pronoun,68);
                            sp= object.gens;
                            globalAnswer=object.gene;
                            break;
                        case 356:
                            // reason
                            nouns.nounGen("the reason ","la razón ");
                            sp = nouns.gens;
                            globalAnswer=nouns.gene;
                            break;
                        case 357:
                            //morning
                            nouns.nounGen("the morning ","la mañana ");
                            sp = nouns.gens;
                            globalAnswer=nouns.gene;
                            break;
                        case 358:
                            // open
                            object.GenPresSimp(pronoun,69);
                            sp= object.gens;
                            globalAnswer=object.gene;
                            break;
                        case 359:
                            // within
                            nouns.genPreps("within");
                            sp = nouns.gens;
                            globalAnswer=nouns.gene;
                            break;
                        case 360:
                            // change
                            nouns.nounGen("the change ","el cambio ");
                            sp = nouns.gens;
                            globalAnswer=nouns.gene;
                            break;
                        case 361:
                            //although
                            object.GenConjFuture("although", "aún que");
                            object2.GenPresSimpSubjunctive();
                            complemento= object2.gens;
                            complement = object2.gene;
                            sp = object.gens+" "+ complemento;
                            globalAnswer=object.gene+" "+complement;
                            break;
                        case 362:
                            // walk
                            object.GenPresSimp(pronoun,70);
                            sp= object.gens;
                            globalAnswer=object.gene;
                            break;
                        case 363:
                            // news
                            nouns.nounGen("the news ","las noticias ");
                            sp = nouns.gens;
                            globalAnswer=nouns.gene;
                            break;
                        case 364:
                            nouns.nounGen("the health ", "la salud ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 365:
                            nouns.nounGen("the court ", "la corte ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 366:
                            nouns.nounGen("the force ", "la fuerza ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 367:
                            nouns.adjectiveGen("early ", "temprano ", "temprana ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 368:
                            nouns.genPronoun("himself ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 369:
                            nouns.nounGen("the air ", "el aire ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 370:
                            nouns.adjectiveGen("low ", "bajo ", "baja ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;

                        case 371:
                            // before conjunction
                            object.GenConjFuture("before", "antes de que");
                            object2.GenPresSimpSubjunctive();
                            complemento= object2.gens;
                            complement = object2.gene;
                            sp = object.gens+" "+ complemento;
                            globalAnswer=object.gene+" "+complement;
                            break;
                        case 372:
                            nouns.nounGen("the art ", "el arte ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 373:
                            nouns.nounGen("the result ", "el resultado ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;

                        case 374:
                            nouns.nounGen("the moment ", "el momento ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 375:
                            object.GenPresSimp(pronoun, 71);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 376:
                            gen.adjmethodP("both ");
                            sp = gen.gens;
                            globalAnswer = gen.gene;
                            break;
                        case 377:
                            object.GenPresSimp(pronoun, 72);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 378:
                            nouns.nounGen("the research ", "la investigación ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 379:
                            object.GenPresSimpAdverbs2NoObject("enough ", "suficiente ");
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 380:
                            nouns.nounGen("the girl ", "la niña ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 381:
                            nouns.nounGen("the boy ", "el niño ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 382:
                            object.GenPresSimp(pronoun, 73);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 383:
                            nouns.nounGen("the food ", "la comida ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 384:
                            nouns.genPreps("across");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 385:
                            nouns.nounGen("the guy ", "el tipo ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 386:
                            gen.adjmethod("second ");
                            sp = gen.gens;
                            globalAnswer = gen.gene;
                            break;
                        case 387:
                            nouns.adjectiveGen("able ", "capaz ", "capaz ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 388:
                            nouns.genPreps("toward");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 389:
                            object.GenPresSimpAdverbs("maybe ", "quizá ");
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 390:
                            nouns.nounGen("the process ", "el proceso ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 391:
                            nouns.genPreps("off");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 392:
                            nouns.genPronoun("everything ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 393:
                            object.GenPresSimp(pronoun, 74);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 394:
                            nouns.nounGen("the age ", "la edad ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 395:
                            nouns.nounGen("the policy ", "la política ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 396:
                            object.GenPresSimp(pronoun, 75);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 397:
                            nouns.genPreps("including");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 398:
                            object.GenPresSimpAdverbs("probably ", "probablemente ");
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 399:
                            nouns.nounGen("the education ", "la educación ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 400:
                            object.GenPresSimp(pronoun, 76);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;

                        case 401:
                            object.GenPresSimpAdverbs("actually ", "de hecho ");
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 402:
                            object.GenPresSimp(pronoun, 77);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 403:
                            object.GenPresSimp(pronoun, 78);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 404:
                            object.GenPresSimp(pronoun, 79);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 405:
                            nouns.adjectiveGen2("human ", "humano ", "humana ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 406:
                            object.GenPresSimp(pronoun, 80);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 407:
                            nouns.nounGen("the fee ", "la multa ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 408:
                            object.GenPresSimp(pronoun, 81);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 409:
                            object.GenPresSimp(pronoun, 82);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 410:
                            nouns.nounGen("the sense ", "el sentido ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 411:
                            nouns.nounGen("the teacher ", "el maestro ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 412:
                            object.GenPresSimpPrepasAdv("home ", "hacia la casa ");
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 413:
                            nouns.nounGen("the market ", "el mercado ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 414:
                            object.GenPresSimp(pronoun, 83);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 415:
                            object.GenPresSimp(pronoun, 84);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 416:
                            nouns.nounGen("the nation ", "la nación ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 417:
                            object.GenPresSimp(pronoun, 85);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 418:
                            // Case 418 seems to be a placeholder or unique case without specific instructions.
                            sp = "oh";
                            break;
                        case 419:
                            nouns.nounGen("the death ", "la muerte ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 420:
                            nouns.nounGen("the plan ", "el plan ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;

                        case 421:
                            nouns.nounGen("the interest ", "el interés ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 422:
                            nouns.genPronoun("someone ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 423:
                            nouns.nounGen("the experience ", "la experiencia ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 424:
                            object.GenPresSimp(pronoun, 86);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 425:
                            object.GenPresSimp(pronoun, 87);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 426:
                            nouns.genPreps("behind");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 427:
                            object.GenPresSimp(pronoun, 88);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 428:
                            gen.adjmethodP("six ");
                            sp = gen.gens;
                            globalAnswer = gen.gene;
                            break;
                        case 429:
                            nouns.adjectiveGen2("local ", "local ", "local ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 430:
                            object.GenPresSimp(pronoun, 89);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 431:
                            nouns.nounGen("the effect ", "el efecto ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 432:
                            object.GenPresSimp(pronoun, 90);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 433:
                            nouns.nounGen("the use ", "el uso ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 434:
                            nouns.nounGen("the control ", "el control ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 435:
                            object.GenPresSimpAdverbs("perhaps ", "tal vez ");
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 436:
                            object.GenPresSimp(pronoun, 91);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 437:
                            nouns.nounGen("the class ", "la clase ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 438:
                            nouns.adjectiveGen("late ", "tardado ", "tardada ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 439:
                            object.GenPresSimpAdverbs2NoObject("little ", "poco ");
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 440:
                            nouns.adjectiveGen("major ", "mayor ", "mayor ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;

                        case 441:
                            sp="yeah";
                            break;
                        case 442:
                            // Assuming object.GenElse() exists for handling "else" as an adverb scenario. Adjusting for conceptual consistency.
                            object.GenElse();
                            sp = object.gens ;
                            globalAnswer=object.gene;
                            break;
                        case 443:
                            object.GenPresSimp(pronoun, 92);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 444:
                            nouns.nounGen("the photo ", "la foto ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 445:
                            object.GenPresSimp(pronoun, 93);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 446:
                            nouns.genPronoun("themselves ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 447:
                            nouns.nounGen("the field ", "el campo ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 448:
                            nouns.nounGen("the college ", "la universidad ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 449:
                            object.GenPresSimpAdverbs2("sometimes ", "a veces ");
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 450:
                            nouns.adjectiveGen2("former ", "anterior ", "anterior ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 451:
                            nouns.nounGen("the development ", "el desarrollo ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 452:
                            object.GenPresSimp(pronoun, 94);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 453:
                            nouns.genPreps("along");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 454:
                            object.GenPresSimp(pronoun, 95);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 455:
                            nouns.nounGen("the security ", "la seguridad ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 456:
                            object.GenPresSimpPrepasAdv("up ", "hacia arriba");
                            sp= object.gens;
                            globalAnswer=object.gene;
                            break;
                        case 457:
                            nouns.adjectiveGen("possible ", "posible ", "posible ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 458:
                            nouns.nounGen("the effort ", "el esfuerzo ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 459:
                            nouns.nounGen("the role ", "el papel ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 460:
                            nouns.adjectiveGen("better ", "mejor ", "mejor ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;

                        case 461:
                            nouns.nounGen("the rate ", "la tarifa ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 462:
                            nouns.adjectiveGen("strong ", "fuerte ", "fuerte ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 463:
                            nouns.nounGen("the music ", "la música ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 464:
                            object.GenPresSimp(pronoun, 96);
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 465:
                            nouns.nounGen("the leader ", "el líder ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 466:
                            nouns.nounGen("the light ", "la luz ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 467:
                            nouns.adjectiveGen("whole ", "completo ", "completa ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 468:
                            nouns.nounGen("the voice ", "la voz ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 469:
                            nouns.nounGen("the color ", "el color ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 470:
                            nouns.nounGen("the heart ", "el corazón ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 471:
                            nouns.nounGen("the care ", "el cuidado ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 472:
                            nouns.nounGen("the police ", "la policía ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 473:
                            nouns.adjectiveGen2("economic ", "económico ", "económica ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 474:
                            nouns.nounGen("the wife ", "la esposa ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 475:
                            nouns.nounGen("the show ", "el espectáculo ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 476:
                            nouns.nounGen("the mind ", "la mente ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 477:
                            nouns.nounGen("the report ", "el informe ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 478:
                            object.GenPresSimpAdverbs("finally ", "finalmente ");
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;
                        case 479:
                            nouns.nounGen("the drug ", "la droga ");
                            sp = nouns.gens;
                            globalAnswer = nouns.gene;
                            break;
                        case 480:
                            object.GenPresSimpAdverbs2NoObject("less ", "menos ");
                            sp = object.gens;
                            globalAnswer = object.gene;
                            break;

                        case 481:
                            // return
                            object.GenPresSimp(pronoun,97);
                            sp= object.gens;
                            globalAnswer=object.gene;
                            break;
                        case 482:
                            //according
                            nouns.genPreps("according to");
                            sp = nouns.gens;
                            globalAnswer=nouns.gene;

                            break;
                        case 483:
                            // pull
                            object.GenPresSimp(pronoun,98);
                            sp= object.gens;
                            globalAnswer=object.gene;
                            break;
                        case 484:
                            //decision
                            nouns.nounGen("the decision ","la decisión ");
                            sp = nouns.gens;
                            globalAnswer=nouns.gene;
                            break;
                        case 485:
                            // explain
                            object.GenPresSimp(pronoun,99);
                            sp= object.gens;
                            globalAnswer=object.gene;
                            break;
                        case 486:
                            //carry
                            object.GenPresSimp(pronoun,100);
                            sp= object.gens;
                            globalAnswer=object.gene;
                            break;
                        case 487:
                            // develop
                            object.GenPresSimp(pronoun,101);
                            sp= object.gens;
                            globalAnswer=object.gene;
                            break;
                        case 488:
                            //view
                            nouns.nounGen("the view ","la vista ");
                            sp = nouns.gens;
                            globalAnswer=nouns.gene;
                            break;
                        case 489:
                            //free
                            nouns.adjectiveGen("free ","libre ","libre ");
                            sp = nouns.gens;
                            globalAnswer=nouns.gene;
                            break;
                        case 490:
                            // hope
                            object.GenPresSimp(pronoun,102);
                            sp= object.gens;
                            globalAnswer=object.gene;
                            break;
                        case 491:
                            //even
                            object.GenConjFuture("even if", "incluso si");
                            gen1.GenPresSimp2();
                            complemento= gen1.gens;
                            complement = gen1.gene;
                            sp = object.gens+" "+ complemento;
                            globalAnswer=object.gene+" "+complement;

                            break;
                        case 492:
                            // drive
                            object.GenPresSimp(pronoun,103);
                            sp= object.gens;
                            globalAnswer=object.gene;
                            break;
                        case 493:
                            // son
                            nouns.nounGen("the son ","el hijo ");
                            sp = nouns.gens;
                            globalAnswer=nouns.gene;
                            break;
                        case 494:
                            // arm
                            nouns.nounGen("the arm ","el brazo ");
                            sp = nouns.gens;
                            globalAnswer=nouns.gene;
                            break;
                        case 495:
                            // department
                            nouns.nounGen("the department ","el departamento ");
                            sp = nouns.gens;
                            globalAnswer=nouns.gene;
                            break;
                        case 496:
                            //true
                            nouns.adjectiveGen("true ","verdadero ","verdadera ");
                            sp = nouns.gens;
                            globalAnswer=nouns.gene;
                            break;
                        case 497:
                            // price
                            nouns.nounGen("the price ","el precio ");
                            sp = nouns.gens;
                            globalAnswer=nouns.gene;
                            break;
                        case 498:
                            //military
                            nouns.adjectiveGen2("military ","militar ","militar ");
                            sp = nouns.gens;
                            globalAnswer=nouns.gene;
                            break;
                        case 499:
                            //federal
                            nouns.adjectiveGen2("federal ","federal ","federal ");
                            sp = nouns.gens;
                            globalAnswer=nouns.gene;
                            break;
                        case 500:
                            // break
                            object.GenPresSimp(pronoun,104);
                            sp= object.gens;
                            globalAnswer=object.gene;
                            break;
                        default:
                            sp= "no value";
                            break;
                    }


                    holder.comoDirias.setText(sp);
                    sayThis(v,"como dirías " +sp,new Locale("es", "MX"));


                    // set views back
                    holder.masInfoBtn.setBackgroundResource(R.drawable.borde_azul);
                    //holder.ejemplosBtn.setTextColor(Color.BLUE);
                    holder.ejemplosBtn.setBackgroundResource(R.drawable.borde_azul);
                    holder.description.setVisibility(View.GONE);
                    holder.ejemplostxt.setVisibility(View.GONE);
                    holder.continuarBtn.setVisibility(View.GONE);

                }
            });
        }
        //BTN PRACTICAR FREE
        else  {
            holder.practicaBtn.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View view) {
                    showRewardedAd(holder,position);
                }
            });
        }




        holder.continuarBtn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick (View v) {
                holder.continuarBtn.setVisibility(View.GONE);
                holder.respCorrecta.setVisibility(View.GONE);
                holder.mic.setVisibility(View.VISIBLE);
                holder.comoDirias.setVisibility(View.VISIBLE);
                holder.userInput.setVisibility(View.INVISIBLE);
                holder.placeholder.setVisibility(View.INVISIBLE);
                holder.practicaBtn.setVisibility(View.GONE);
                if(!holder.userInput.getText().toString().isEmpty()){
                    holder.userInput.setText("");
                }
                int rv = (int)(Math.random()*subjectsEnglish.length);
                String pronoun = subjectsEnglish[rv];
                cerotofifty gen = new cerotofifty();
                Generator gen1 = new Generator();
                Generator genA = new Generator();
                Generator gen2 = new Generator();
                AuxModalNegator negator = new AuxModalNegator();
                Nobles n = new Nobles();
                String complemento,complement,complement2;
                String sp;
                sp="no value";
                switch (position)  {
                    case 0:
                        // the
                        if(item.getType()==1){

                            object.GenPresSimp();
                            sp= object.gens ;
                            globalAnswer=object.gene;

                        }else if(item.getType()==0){
                            gen.artob(0);
                            sp=gen.ob ;
                            globalAnswer=gen.eng;
                        }
                        else if(item.getType()==2){
                            object.GenConj("and","y");
                            int r= (int)(Math.random()*2);
                            complemento="";
                            complement="";
                            switch (r){
                                case 0:
                                    object2.GenPresSimp();
                                    complemento=object2.gens;
                                    complement=object2.gene;
                                    break;

                                case 1:
                                    gen1.GenPresSimp2();
                                    complemento=gen1.gens;
                                    complement=gen1.gene;
                                    break;
                                default:
                                    complemento="no object activated";
                                    complement="no object activated";
                                    break;
                            }
                            sp= object.gens+" "+complemento;
                            globalAnswer=object.gene+" "+complement;
                        }
                        break;
                    case 1:
                        // to be
                        if(item.getType()==0){
                            gen.tobe();
                            sp=gen.gens;
                            globalAnswer= gen.gene;
                        }else if(item.getType()==1){

                            int r2 =(int)(Math.random()*4);
                            switch (r2) {
                                case 0:
                                    // aqui solo deje el positivo por eso se tiene que negar con el metodo
                                    gen1.GenPresCont2();
                                    sp= gen1.gens;
                                    globalAnswer =gen1.gene;
                                    globalAnswer2= negator.contractPresentContinuousPresent(gen1.gene);
                                    break;
                                case 1:
                                    object.GenContTenses("am ", "are ", "is ","estoy ", "estas ", "esta ", "estamos ", "estan ");
                                    sp= object.gens;
                                    globalAnswer=object.gene;
                                    globalAnswer2=negator.contractPresentContinuousPresent(object.gene);

                                    break;
                                case 2:
                                    object.GenContTenses("am ", "are ", "is ","estoy ", "estas ", "esta ", "estamos ", "estan ");
                                    // present continuous contracted not negated
                                    String negatedNotContracted  = negator.negateFirstAuxOrModal(object.gene);
                                    String negatedContracted = negator.negateFirstAuxOrModalContracted(object.gene);
                                    String contractedToBeAndNegated = negator.negateAndContractPresentContinuous(negatedNotContracted);

                                    sp = negator.negateSentenceSpanish(object.gens);
                                    globalAnswer=negatedNotContracted;
                                    globalAnswer2=negatedContracted;
                                    globalAnswer3=contractedToBeAndNegated;

                                    break;

                                case 3:
                                    gen1.GenPresCont2();// present continuous contracted not negated
                                    String negatedNotContracted2  = negator.negateFirstAuxOrModal(gen1.gene);
                                    String negatedContracted2 = negator.negateFirstAuxOrModalContracted(gen1.gene);
                                    String contractedToBeAndNegated2= negator.negateAndContractPresentContinuous(negatedNotContracted2);

                                    sp = negator.negateSentenceSpanish(gen1.gens);
                                    globalAnswer=negatedNotContracted2;
                                    globalAnswer2=negatedContracted2;
                                    globalAnswer3=contractedToBeAndNegated2;

                                    break;
                            }
                        }else if(item.getType()==2){
                            n.GenRelativeClauses1New();
                            sp=n.gens;
                            globalAnswer=n.gene;
                        }else if(item.getType()==3){

                        }

                        break;
                    case 2:
                        // Adapted case 2 logic to mirror case 1's structure
                        if (item.getType() == 0) {
                            gen.advpronverb(4); // Assuming this needs to be called for type 0 in case 2
                            sp = gen.gens ;
                            globalAnswer=gen.gene;
                        } else if (item.getType() == 1) {

                            int r2 = (int)(Math.random()*3);
                            switch (r2){
                                case 0:
                                    gen1.GenPresPerf2();
                                    sp= gen1.gens ;
                                    globalAnswer=gen1.gene;
                                    globalAnswer2=gen1.gene2;
                                    break;

                                case 1:
                                    object.GenPerfectTenses("have ", "has ","he ", "has ", "ha ", "hemos ", "han ");
                                    sp= object.gens ;
                                    globalAnswer=object.gene;
                                    globalAnswer2=negator.contractPresentPerfect(object.gene);
                                    break;
                                case 2:
                                    object.GenPerfectTenses("have ", "has ","he ", "has ", "ha ", "hemos ", "han ");
                                    sp= negator.negateSentenceSpanish(object.gens);
                                    globalAnswer=negator.negateFirstAuxOrModalContracted(object.gene);
                                    globalAnswer2=negator.negateFirstAuxOrModal(object.gene);

                                    break;

                            }


                        } else if (item.getType() == 2) {

                            object.GenConj("but","pero");
                            int r= (int)(Math.random()*2);
                            complemento="";
                            complement="";
                            switch (r){
                                case 0:
                                    object2.GenPresSimp();
                                    complemento=object2.gens;
                                    complement=object2.gene;
                                    break;

                                case 1:
                                    gen1.GenPresSimp2();
                                    complemento=gen1.gens;
                                    complement=gen1.gene;
                                    break;
                                default:
                                    complemento="no object activated";
                                    complement="no object activated";
                                    break;
                            }
                            sp= object.gens+" "+complemento;
                            globalAnswer=object.gene+" "+complement;

                        } else if (item.getType() == 3) {

                        }
                        break;
                    case 3:
                        //of
                        if(item.getType()==0){
                            gen.prepartob(0);
                            sp=gen.ob;
                            globalAnswer=gen.eng;
                        }else if(item.getType()==1){

                            int r2 = (int)(Math.random()*4);
                            switch (r2){
                                case 0:

                                    //makes only affirmative now
                                    gen1.GenPresPerfCont2();
                                    sp= gen1.gens;
                                    //i have been playing
                                    globalAnswer=gen1.gene;
                                    //i ve been playing
                                    globalAnswer2=negator.contractPresentPerfect(gen1.gene);
                                    break;

                                case 1:
                                    object.GenContTenses("have been ","have been ", "has been ","he estado ", "has estado ", "ha estado ", "hemos estado ", "han estado ");
                                    sp= object.gens;
                                    //i have been
                                    globalAnswer=object.gene;
                                    //ive been
                                    globalAnswer2=negator.contractPresentPerfect(object.gene);
                                    break;
                                case 2:
                                    object.GenContTenses("have been ","have been ", "has been ","he estado ", "has estado ", "ha estado ", "hemos estado ", "han estado ");
                                    sp= negator.negateSentenceSpanish(object.gens) ;
                                    // i have not been
                                    globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                    // i havent been
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(object.gene);
                                    // i ve not been
                                    globalAnswer3= negator.contractPresentPerfectIncludingNot(globalAnswer);

                                    break;
                                case 3:
                                    gen1.GenPresPerfCont2();
                                    sp= negator.negateSentenceSpanish(gen1.gens);
                                    // i have not been
                                    globalAnswer=negator.negateFirstAuxOrModal(gen1.gene);
                                    // i havent been
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(gen1.gene);
                                    // i ve not been
                                    globalAnswer3= negator.contractPresentPerfectIncludingNot(globalAnswer);

                                    break;
                            }

                        }else if(item.getType()==2){
                            object.GenConj("or","o");
                            int r= (int)(Math.random()*2);
                            complemento="";
                            complement="";
                            switch (r){
                                case 0:
                                    object2.GenPresSimp();
                                    complemento=object2.gens;
                                    complement=object2.gene;
                                    break;

                                case 1:
                                    gen1.GenPresSimp2();
                                    complemento=gen1.gens;
                                    complement=gen1.gene;
                                    break;
                                default:
                                    complemento="no object activated";
                                    complement="no object activated";
                                    break;
                            }
                            sp= object.gens+" "+complemento;
                            globalAnswer=object.gene+" "+complement;
                        }else if(item.getType()==3){

                        }

                        break;
                    case 4:
                        //a
                        if(item.getType()==0){
                            gen.artoba();
                            sp=gen.ob ;
                            globalAnswer=gen.eng;
                        }else if(item.getType()==1){
                            int r2 = (int)(Math.random()*3);
                            switch (r2){
                                case 0:
                                    gen1.GenPastSimp2();
                                    sp= gen1.gens ;
                                    globalAnswer =gen1.gene;
                                    break;
                                case 1:
                                    object.GenPastSimp();
                                    sp= object.gens ;
                                    globalAnswer=object.gene;
                                    break;
                                case 2:

                                    object.GenPastSimp();
                                    sp= negator.negateSentenceSpanish(object.gens) ;
                                    globalAnswer=negator.negatePastSimple(object.gene2);

                                    break;
                            }
                        }else if(item.getType()==2){
                            Nobles n1 = new Nobles();
                            int pos1 = (int) (Math.random() * 6);
                            n1.GenPresSimpAs(pos1);
                            int r= (int)(Math.random()*2);
                            complemento="";
                            complement="";
                            switch (r){
                                case 0:
                                    object2.GenPresSimp();
                                    complemento=object2.gens;
                                    complement=object2.gene;
                                    break;

                                case 1:
                                    gen1.GenPresSimp2();
                                    complemento=gen1.gens;
                                    complement=gen1.gene;
                                    break;
                                default:
                                    complemento="no object activated";
                                    complement="no object activated";
                                    break;
                            }

                            sp=n1.gens +complemento;
                            globalAnswer=n1.gene+complement;
                        }else if(item.getType()==3){

                        }

                        break;
                    case 5:
                        // in
                        if(item.getType()==0){
                            gen.prepartob(1);
                            sp=gen.ob ;
                            globalAnswer=gen.eng;
                        }else if(item.getType()==1){
                            int r2 = (int)(Math.random()*4);
                            switch (r2){
                                case 0:
                                    gen1.GenPastCont2();
                                    sp= gen1.gens;
                                    globalAnswer=gen1.gene;
                                    break;
                                case 1:
                                    object.GenContTenses("was ", "were ", "was ","estaba ", "estabas ", "estaba ", "estabamos ", "estaban ");
                                    sp= object.gens;
                                    globalAnswer=object.gene;
                                    break;
                                case 2:
                                    object.GenContTenses("was ", "were ", "was ","estaba ", "estabas ", "estaba ", "estabamos ", "estaban ");
                                    sp= negator.negateSentenceSpanish(object.gens) ;
                                    //i was not
                                    globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                    // i wasnt
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(object.gene);
                                    break;
                                case 3:
                                    gen1.GenPastCont2();
                                    sp= negator.negateSentenceSpanishOG(gen1.gens);
                                    // i was not
                                    globalAnswer= negator.negateFirstAuxOrModal(gen1.gene);
                                    // i wasnt
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(gen1.gene);

                                    break;

                            }
                        }else if(item.getType()==2){
                            //if trans
                            complemento="";
                            complement="";
                            String oracionsp="";
                            String oracioneng="";
                            int r = (int)(Math.random()*2);
                            switch (r){
                                case 0:
                                    object.GenConjFuture("if ", "si ");
                                    object2.GenPresSimp();
                                    oracionsp=object.gens;
                                    oracioneng=object.gene;
                                    complemento=object2.gens;
                                    complement=object2.gene;
                                    sp = oracionsp+complemento;
                                    globalAnswer=oracioneng+complement;
                                    break;

                                case 1:
                                    object.GenConj("if ", "si ");
                                    object2.GenPresSimp();
                                    oracionsp=object.gens;
                                    oracioneng=object.gene;
                                    complemento=object2.gens;
                                    complement=object2.gene;
                                    sp = oracionsp+complemento;
                                    globalAnswer=oracioneng+complement;

                                    break;

                                default:
                                    sp="no hay valor";
                                    break;
                            }


                        }else if(item.getType()==3){

                        }

                        break;
                    case 6:
                        //to infinitive
                        if(item.getType()==0){
                            gen1.GenInfinitives();
                            sp=gen1.ob ;
                            globalAnswer=gen1.eng;
                        }else if(item.getType()==1){
                            int r2 = (int)(Math.random()*4);
                            switch (r2) {
                                case 0:
                                    gen1.GenPastPerf2();
                                    sp= gen1.gens ;
                                    globalAnswer=gen1.gene;
                                    break;
                                case 1:
                                    object.GenPerfectTenses("had ", "had ","había ","habías ", "había ", "habíamos ", "habían ");
                                    sp = object.gens;
                                    globalAnswer=object.gene;
                                    break;
                                case 2:
                                    object.GenPerfectTenses("had ", "had ","había ","habías ", "había ", "habíamos ", "habían ");
                                    sp = negator.negateSentenceSpanish(object.gens);
                                    // had not
                                    globalAnswer=  negator.negateFirstAuxOrModal(object.gene);
                                    //hadnt
                                    globalAnswer2= negator.negateFirstAuxOrModalContracted(object.gene);
                                    break;
                                case 3:
                                    gen1.GenPastPerf2();
                                    sp= gen1.gens ;
                                    // had not
                                    globalAnswer= negator.negateFirstAuxOrModal(gen1.gene);
                                    // hadnt
                                    globalAnswer2= negator.negateFirstAuxOrModalContracted(gen1.gene);
                                    break;
                            }
                        }else if(item.getType()==2){
                            //when trans
                            int r= (int)(Math.random()*2);
                            complemento="";
                            complement="";
                            String oracionsp="";
                            String oracioneng="";
                            String oracioneng2=".";
                            switch (r){
                                case 0:
                                    object.GenConjFuture("when ","cuando ");
                                    object2.GenPresSimpSubjunctive();
                                    complemento=object2.gens;
                                    complement=object2.gene;


                                    oracionsp= object.gens;
                                    oracioneng= object.gene;
                                    oracioneng2=negator.contractWill(object.gene);
                                    break;

                                case 1:
                                    object.GenConj("when ","cuando ");
                                    gen1.GenPresSimp2();
                                    complemento=gen1.gens;
                                    complement=gen1.gene;
                                    oracioneng2=".";

                                    oracionsp= object.gens;
                                    oracioneng= object.gene;
                                    break;

                                default:
                                    complemento="no object activated";
                                    complement="no object activated";
                                    break;
                            }

                            sp= oracionsp+complemento;

                            globalAnswer=oracioneng+ complement;
                            globalAnswer2=oracioneng2+complement;



                        }else if(item.getType()==3){

                        }

                        break;
                    case 7:
                        //have
                        if(item.getType()==0){
                            int pos = (int) (Math.random() * 6);
                            n.GenPresSimp(pos,0);
                            sp=n.gens;
                            globalAnswer=n.gene;
                        }else if(item.getType()==1){
                            int r2 = (int)(Math.random()*4);
                            switch (r2){
                                case 0:
                                    // only positives
                                    gen1.GenPastPerfCont2();
                                    sp= gen1.gens;
                                    globalAnswer=gen1.gene;
                                    break;
                                case 1:
                                    object.GenContTenses("had been ","had been ", "had been ","había estado ","habías estado ", "había estado ", "habíamos estado ", "habían estado ");
                                    sp = object.gens+"-"+object.gene;
                                    break;
                                case 2:
                                    object.GenContTenses("had been ", "had been ","had been ","había estado ","habías estado ", "había estado ", "habíamos estado ", "habían estado ");
                                    sp = negator.negateSentenceSpanish(object.gens);
                                    // had not been
                                    globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                    //hadnt beeen
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(object.gene);

                                    break;
                                case 3:
                                    gen1.GenPastPerfCont2();
                                    sp= gen1.gens;
                                    // had not been
                                    globalAnswer=negator.negateFirstAuxOrModal(gen1.gene);
                                    //hadnt been
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(gen1.gene);
                                    break;
                            }
                        }else if(item.getType()==2){
                            //because trans
                            int r= (int)(Math.random()*4);
                            complemento="";
                            complement="";
                            complement2="";
                            String oracionsp="";
                            String oracioneng="";
                            switch (r){
                                case 0:
                                    object.GenConjFuture("because ","por que ");
                                    object2.GenPresSimp();
                                    complemento=object2.gens;
                                    complement=object2.gene;

                                    oracionsp= object.gens;
                                    oracioneng= object.gene;
                                    sp= oracionsp+complemento;
                                    globalAnswer=oracioneng+ complement;
                                    break;

                                case 1:
                                    gen1.GenPastSimp2();
                                    gen2.GenPastPerf2();

                                    complemento=gen1.gens;
                                    complement=gen1.gene;

                                    oracionsp= gen2.gens;
                                    oracioneng= gen2.gene;


                                    sp= oracionsp+"por que "+ complemento;
                                    globalAnswer=oracioneng+"because "+ complement;
                                    break;

                                case 2:
                                    object.GenConj("because ","por que ");
                                    object2.GenPresSimp();
                                    complemento=object2.gens;
                                    complement=object2.gene;

                                    oracionsp= object.gens;
                                    oracioneng= object.gene;
                                    sp= oracionsp+complemento;
                                    globalAnswer=oracioneng+ complement;
                                    break;



                                case 3:
                                    object.GenConjFuture("because ","por que ");
                                    gen1.GenPresPerf2();
                                    complemento=gen1.gens;
                                    complement=gen1.gene;

                                    oracionsp= object.gens;
                                    oracioneng= object.gene;
                                    sp= oracionsp+complemento;
                                    globalAnswer=oracioneng+ complement;

                                    break;
                                default:
                                    complemento="no object activated";
                                    complement="no object activated";
                                    break;
                            }

                        }else if(item.getType()==3){

                        }

                        break;
                    case 8:
                        //to preposition
                        if(item.getType()==0){
                            gen.prepartob(2);
                            sp=gen.ob ;
                            globalAnswer=gen.eng;
                        }else if(item.getType()==1){
                            int r2 = (int)(Math.random()*4);
                            switch (r2) {
                                case 0:
                                    //lo cambie pera que solo diera affirmativo
                                    gen1.GenFutSimp2();
                                    sp= gen1.gens ;
                                    globalAnswer=gen1.gene;
                                    globalAnswer2= negator.contractWill(gen1.gene);

                                    break;
                                case 1:
                                    object.GenFuture();
                                    sp = object.gens;
                                    globalAnswer=object.gene;
                                    globalAnswer2=negator.contractWill(object.gene) ;
                                    break;
                                case 2:
                                    // will not
                                    object.GenFuture();
                                    sp = negator.negateSentenceSpanish(object.gens);
                                    // will not
                                    globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                    //wont
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(object.gene);
                                    break;
                                case 3:
                                    // will not  contracted del generator
                                    gen1.GenFutSimp2();
                                    sp = negator.negateSentenceSpanish(gen1.gens);

                                    //will not
                                    globalAnswer=negator.negateFirstAuxOrModal(gen1.gene);
                                    //wont
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(gen1.gene);

                                    break;

                            }
                        }else if(item.getType()==2){
                            //while trans
                            int r= (int)(Math.random()*2);
                            complemento="";
                            complement="";
                            complement2="";
                            String oracionsp="";
                            String oracioneng="";
                            switch (r){
                                case 0:
                                    object.GenConjFuture("while ","mientras que ");
                                    object2.GenPresSimpSubjunctive();
                                    complemento=object2.gens;
                                    complement=object2.gene;

                                    oracionsp= object.gens;
                                    oracioneng= object.gene;
                                    sp= oracionsp+complemento;
                                    globalAnswer=oracioneng+ complement;
                                    break;



                                case 1:
                                    object.GenConj("while ","mientras que ");
                                    object2.GenPresSimp();
                                    complemento=object2.gens;
                                    complement=object2.gene;

                                    oracionsp= object.gens;
                                    oracioneng= object.gene;
                                    sp= oracionsp+complemento;
                                    globalAnswer=oracioneng+ complement;
                                    break;

                                default:
                                    complemento="no object activated";
                                    complement="no object activated";
                                    break;
                            }

                        }else if(item.getType()==3){

                        }


                        break;
                    case 9:
                        //it
                        if(item.getType()==0){
                            gen.pronverb("eso ");
                            sp= gen.gens;
                            globalAnswer=gen.gene;
                        }else if(item.getType()==1){
                            int r2 = (int)(Math.random()*4);
                            switch (r2){
                                case 0:
                                    gen1.GenFutCont2();
                                    sp= gen1.gens ;
                                    globalAnswer=gen1.gene;
                                    globalAnswer2= negator.contractWill(gen1.gene);
                                    break;
                                case 1:
                                    object.GenContTenses("will be ", "will be ","will be ","estaré ", "estarás ", "estará ", "estarémos ", "estarán ");
                                    sp = negator.negateSentenceSpanish(object.gens);
                                    globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(object.gene);
                                    break;
                                case 2:
                                    object.GenContTenses("will be ", "will be ","will be ","estaré ", "estarás ", "estará ", "estarémos ", "estarán ");
                                    sp =object.gens;
                                    globalAnswer=   object.gene;
                                    globalAnswer2=negator.contractWill(object.gene);
                                    break;
                                case 3:
                                    gen1.GenFutCont2();
                                    sp= negator.negateSentenceSpanish(gen1.gens);
                                    globalAnswer=negator.negateFirstAuxOrModal(gen1.gene);
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(gen1.gene);
                                    break;

                            }
                        }else if(item.getType()==2){
                            //where trans
                            int r= (int)(Math.random()*2);
                            complemento="";
                            complement="";
                            complement2="";
                            String oracionsp="";
                            String oracioneng="";
                            switch (r){
                                case 0:
                                    object.GenConjFuture("where ","donde ");
                                    object2.GenPresSimpSubjunctive();
                                    complemento=object2.gens;
                                    complement=object2.gene;

                                    oracionsp= object.gens;
                                    oracioneng= object.gene;
                                    sp= oracionsp+complemento;
                                    globalAnswer=oracioneng+ complement;
                                    break;



                                case 1:
                                    object.GenConj("where ","donde ");
                                    object2.GenPresSimp();
                                    complemento=object2.gens;
                                    complement=object2.gene;

                                    oracionsp= object.gens;
                                    oracioneng= object.gene;
                                    sp= oracionsp+complemento;
                                    globalAnswer=oracioneng+ complement;
                                    break;

                                default:
                                    complemento="no object activated";
                                    complement="no object activated";
                                    break;
                            }

                        }else if(item.getType()==3){

                        }

                        break;
                    case 10:
                        //i
                        if(item.getType()==0){
                            gen.pronverb("yo ");
                            sp= gen.gens  ;
                            globalAnswer=gen.gene;
                        }else if(item.getType()==1){
                            int r2 = (int)(Math.random()*4);
                            switch (r2){
                                case 0:
                                    gen1.GenFutPerf2();
                                    sp= gen1.gens;
                                    globalAnswer=gen1.gene;
                                    globalAnswer2=".";
                                    break;
                                case 1:
                                    object.GenPerfectTenses("will have ", "will have ","habré ", "habrás ", "habrá ", "habrémos ", "habrán ");
                                    sp = negator.negateSentenceSpanish(object.gens);
                                    //will not have
                                    globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                    //wont have
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(object.gene);
                                    break;
                                case 2:
                                    gen1.GenFutPerf2();
                                    sp= negator.negateSentenceSpanish(gen1.gens);
                                    globalAnswer=negator.negateFirstAuxOrModal(gen1.gene);
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(gen1.gene);
                                    break;

                                case 3:
                                    object.GenPerfectTenses("will have ", "will have ","habré ", "habrás ", "habrá ", "habrémos ", "habrán ");
                                    sp=object.gens;
                                    globalAnswer=object.gene;
                                    globalAnswer2=".";
                                    break;

                            }
                        }else if(item.getType()==2){
                            //so trans
                            int r= (int)(Math.random()*3);
                            complemento="";
                            complement="";
                            complement2="";
                            String oracionsp="";
                            String oracioneng="";
                            switch (r){
                                case 0:
                                    object.GenPastSimp();
                                    object2.GenPresSimpAdverbs3("so ","asi que ");
                                    complemento=object2.gens;
                                    complement=object2.gene;

                                    oracionsp= object.gens;
                                    oracioneng= object.gene;
                                    sp= oracionsp+complemento;
                                    globalAnswer=oracioneng+ complement;
                                    break;

                                case 1:
                                    object.GenPresSimp();
                                    object2.GenPresSimpAdverbs3("so ","asi que ");
                                    complemento=object2.gens;
                                    complement=object2.gene;

                                    oracionsp= object.gens;
                                    oracioneng= object.gene;
                                    sp= oracionsp+complemento;
                                    globalAnswer=oracioneng+ complement;
                                    break;
                                case 2:
                                    object.GenPastSimp();
                                    oracionsp= object.gens;
                                    oracioneng= object.gene;

                                    object2.GenConjFuture("","");
                                    complemento=object2.gens;
                                    complement=object2.gene;

                                    sp= oracionsp+"asi que " +complemento;
                                    globalAnswer=oracioneng+"so "+complement;
                                    break;

                                default:
                                    complemento="no object activated";
                                    complement="no object activated";
                                    break;
                            }

                        }else if(item.getType()==3){

                        }

                        break;
                    case 11:
                        // that para conectar
                        if(item.getType()==0){
                            int r = (int) (Math.random() * 2);
                            n.GenRelativeClauses1(r);
                            sp=n.gens;
                            globalAnswer=n.gene;
                        }else if(item.getType()==1){
                            int r2 =(int) (Math.random()*4);
                            switch (r2){
                                case 0:
                                    gen1.GenFutPerfCont2();
                                    sp= gen1.gens;
                                    globalAnswer=gen1.gene;
                                    globalAnswer2=".";
                                    break;
                                case 1:
                                    object.GenContTenses("will have been ", "will have been ","will have been ","habré estado ", "habrás estado ", "habrá estado ", "habrémos estado ", "habrán estado ");
                                    sp = negator.negateSentenceSpanish(object.gens) ;
                                    // will not have been
                                    globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                    //wont have been
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(object.gene);
                                    break;
                                case 2:
                                    gen1.GenFutPerfCont2();
                                    sp= negator.negateSentenceSpanish(gen1.gens);
                                    //will not have been
                                    globalAnswer=negator.negateFirstAuxOrModal(gen1.gene);
                                    // wont have been
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(gen1.gene);
                                    break;
                                case 3:
                                    object.GenContTenses("will have been ", "will have been ","will have been ","habré estado ", "habrás estado ", "habrá estado ", "habrémos estado ", "habrán estado ");
                                    sp=object.gens;
                                    globalAnswer=object.gene;
                                    globalAnswer2=".";
                                    break;

                            }
                        }else if(item.getType()==2){
                            //though trans
                            int r= (int)(Math.random()*3);
                            complemento="";
                            complement="";
                            complement2="";
                            String oracionsp="";
                            String oracioneng="";
                            switch (r){
                                case 0:
                                    object.GenPastSimp();
                                    oracionsp=object.gens;
                                    oracioneng=object.gene;
                                    object2.GenPastSimp();
                                    complemento=object2.gens;
                                    complement=object2.gene;
                                    sp = oracionsp + " aún que "+complemento;
                                    globalAnswer=oracioneng+"though "+complement;
                                    break;

                                case 1:

                                    object.GenPastSimp();
                                    oracionsp=negator.negateSentenceSpanish(object.gens);

                                    oracioneng=negator.negatePastSimple(object.gene2);
                                    object2.GenPastSimp();
                                    complemento=         object2.gens;
                                    complement=     object2.gene;

                                    sp = oracionsp + " aún que "+complemento;
                                    globalAnswer=oracioneng+"though "+complement;

                                    break;
                                case 2:
                                    object.GenConjFuture("though ","aun que ");
                                    oracionsp=object.gens;
                                    oracioneng=object.gene;
                                    object2.GenPresSimpSubjunctive();
                                    complemento=object2.gens;
                                    complement=object2.gene;
                                    sp = oracionsp+complemento;
                                    globalAnswer=oracioneng+complement;

                                    break;

                                default:
                                    complemento="no object activated";
                                    complement="no object activated";
                                    break;
                            }

                        }else if(item.getType()==3){

                        }

                        break;
                    case 12:
                        //for como prep
                        if(item.getType()==0){
                            gen.prepartob(3);
                            sp=gen.ob ;
                            globalAnswer=gen.eng;
                        }else if(item.getType()==1){
                            int r2 = (int)  (Math.random()*4);
                            switch (r2) {
                                case 0:
                                    //made it so it is only positive now
                                    gen1.GenWouldSimp2();
                                    sp=gen1.gens;
                                    globalAnswer=gen1.gene;
                                    globalAnswer2=negator.contractHadOrWould(gen1.gene);
                                    break;
                                case 1:
                                    object.GenWould();
                                    sp = object.gens;
                                    globalAnswer=object.gene;
                                    globalAnswer2=negator.contractHadOrWould(object.gene);
                                    break;
                                case 2:
                                    gen1.GenWouldSimp2();
                                    sp=negator.negateSentenceSpanish(gen1.gens) ;
                                    //would not
                                    globalAnswer=negator.negateFirstAuxOrModal(gen1.gene);
                                    //wouldnt
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(gen1.gene);

                                    break;
                                case 3:
                                    object.GenWould();
                                    sp =negator.negateSentenceSpanish(object.gens) ;
                                    //would not
                                    globalAnswer=negator.negateFirstAuxOrModal(object.gene);

                                    //wouldnt
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(object.gene);
                                    break;

                            }
                        }else if(item.getType()==2){
                            //after trans
                            int r= (int)    (Math.random()*3);
                            complemento="";
                            complement="";
                            complement2="";
                            String oracionsp="";
                            String oracioneng="";
                            switch (r){
                                case 0:
                                    object.GenConjFuture("after ", "después de que ");
                                    oracionsp=object.gens;
                                    oracioneng=object.gene;
                                    object2.GenPresSimpSubjunctive();
                                    complemento = object2.gens;
                                    complement =object2.gene;
                                    sp = oracionsp+complemento;
                                    globalAnswer=oracioneng+complement;

                                    break;

                                case 1:
                                    object.GenPastSimp();
                                    oracionsp=object.gens;
                                    oracioneng=object.gene;
                                    object2.GenPastSimp();
                                    complemento = object2.gens;
                                    complement =object2.gene;
                                    sp = oracionsp+"después de que "+complemento;
                                    globalAnswer=oracioneng+"after "+complement;
                                    break;

                                case 2:
                                    object.GenPresSimp();
                                    oracionsp=object.gens;
                                    oracioneng=object.gene;
                                    object2.GenPvpp();
                                    complemento = object2.gens;
                                    complement =object2.gene;
                                    sp = oracionsp+"después de que "+complemento;
                                    globalAnswer=oracioneng+"after "+complement;
                                    break;

                                default:
                                    complemento="no object activated";
                                    complement="no object activated";
                                    break;
                            }

                        }else if(item.getType()==3){

                        }

                        break;
                    case 13:
                        //you
                        if(item.getType()==0){
                            gen.pronverb("tú ");
                            sp= gen.gens ;
                            globalAnswer=gen.gene;
                        }else if(item.getType()==1){
                            int r2 = (int)  (Math.random()*4);
                            switch (r2) {
                                case 0:
                                    //made it so it is only positive now
                                    gen1.GenWouldCont2();
                                    sp= gen1.gens ;
                                    globalAnswer=gen1.gene;
                                    globalAnswer2=negator.contractHadOrWould(gen1.gene);
                                    break;
                                case 1:
                                    object.GenContTenses("would be ","would be ","would be ","estaría ","estarías ","estaría ","estaríamos ","estarían ");
                                    sp=object.gens;
                                    globalAnswer=object.gene;
                                    globalAnswer2=negator.contractHadOrWould(object.gene)   ;
                                    break;
                                case 2:
                                    object.GenContTenses("would be ","would be ","would be ","estaría ","estarías ","estaría ","estaríamos ","estarían ");
                                    sp=negator.negateSentenceSpanish(object.gens);
                                    //would not be
                                    globalAnswer= negator.negateFirstAuxOrModal(object.gene);
                                    // wouldnt be
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(object.gene);

                                    break;
                                case 3:
                                    gen1.GenWouldCont2();
                                    sp= negator.negateSentenceSpanish(gen1.gens) ;
                                    //would not be
                                    globalAnswer=negator.negateFirstAuxOrModal(gen1.gene);
                                    // wouldnt be
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(gen1.gene);
                                    break;

                            }
                        }else if(item.getType()==2){
                            //since trans

                            int r= (int) (Math.random()*3);
                            complemento="";
                            complement="";
                            complement2="";
                            String oracionsp="";
                            String oracioneng="";
                            switch (r){
                                case 0:
                                    object.GenPerfectTenses("have ","has ","he ","has ", "ha ", "hemos ","han ");
                                    oracionsp=object.gens;
                                    oracioneng=object.gene;
                                    object2.GenContTenses("was ", "were ", "was ", "estaba ", "estabas ", "estaba ", "estabamos ", "estaban ");
                                    complemento = object2.gens;
                                    complement=object2.gene;
                                    sp = oracionsp+"desde que "+complemento;
                                    globalAnswer=oracioneng+"since "+complement;
                                    break;

                                case 1:
                                    object.GenPerfectTenses("had ","had ","había ","habías ", "había ", "habíamos ","habían ");
                                    oracionsp=object.gens;
                                    oracioneng=object.gene;
                                    object2.GenContTenses("was ", "were ", "was ", "estaba ", "estabas ", "estaba ", "estabamos ", "estaban ");
                                    complemento = object2.gens;
                                    complement=object2.gene;
                                    sp = oracionsp+"desde que "+complemento;
                                    globalAnswer=oracioneng+"since "+complement;
                                    break;

                                case 2:
                                    object.GenPastSimp();
                                    oracionsp=object.gens;
                                    oracioneng=object.gene;
                                    object2.GenContTenses("was ", "were ", "was ", "estaba ", "estabas ", "estaba ", "estabamos ", "estaban ");
                                    complemento = object2.gens;
                                    complement=object2.gene;
                                    sp = oracionsp+"desde que "+complemento;
                                    globalAnswer=oracioneng+"since "+complement;
                                    break;

                                default:
                                    complemento="no object activated";
                                    complement="no object activated";
                                    break;
                            }

                        }else if(item.getType()==3){

                        }

                        break;
                    case 14:
                        //he
                        if(item.getType()==0){
                            gen.pronverb("él ");
                            sp= gen.gens ;
                            globalAnswer=gen.gene;
                        }else if(item.getType()==1){
                            int r2 = (int)  (Math.random()*4);
                            switch (r2) {
                                case 0:
                                    //made it so it is only positive now
                                    gen1.GenWouldPerf2();
                                    sp= gen1.gens ;
                                    // i would have
                                    globalAnswer=gen1.gene;
                                    // i[d have
                                    globalAnswer2=negator.applyContractionModalsHave(gen1.gene);
                                    break;
                                case 1:
                                    object.GenPerfectTenses("would have ","would have ","habría ","habrías ", "habría ", "habríamos ", "habrían ");
                                    sp=object.gens;
                                    // would have
                                    globalAnswer=object.gene;
                                    // [d have
                                    globalAnswer2=negator.applyContractionModalsHave(object.gene);
                                    break;
                                case 2:
                                    object.GenPerfectTenses("would have ","would have ","habría ","habrías ", "habría ", "habríamos ", "habrían ");
                                    sp =negator.negateSentenceSpanish(object.gens);
                                    // would not have
                                    globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                    // wouldnt have
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(object.gene);
                                    break;
                                case 3:
                                    gen1.GenWouldPerf2();
                                    sp= negator.negateSentenceSpanish(gen1.gens) ;
                                    // would not have
                                    globalAnswer=negator.negateFirstAuxOrModal(gen1.gene);

                                    //wouldnt have
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(gen1.gene);
                                    break;
                            }
                        }else if(item.getType()==2){
                            int r= (int) (Math.random()*2);
                            complemento="";
                            complement="";
                            complement2="";
                            String oracionsp="";
                            String oracioneng="";
                            switch (r){
                                case 0:
                                    object2.GenContTenses("was ", "were ", "was ", "estaba ", "estabas ", "estaba ", "estabamos ", "estaban ");
                                    oracionsp=object2.gens;
                                    oracioneng=object2.gene;
                                    object.GenPastSimp();
                                    complemento=object.gens;
                                    complement=object.gene;
                                    sp=oracionsp+"hasta que "+complemento ;
                                    globalAnswer=oracioneng+"until "+complement;
                                    break;

                                case 1:
                                    object2.GenContTenses("was ", "were ", "was ", "estaba ", "estabas ", "estaba ", "estabamos ", "estaban ");
                                    oracionsp=object2.gens;
                                    oracioneng=object2.gene;
                                    object.GenPvppPast();
                                    complemento=object.gens;
                                    complement=object.gene;
                                    sp=oracionsp+"hasta que "+complemento ;
                                    globalAnswer=oracioneng+"until "+complement;
                                    break;


                                default:
                                    complemento="no object activated";
                                    complement="no object activated";
                                    break;
                            }

                        }else if(item.getType()==3){

                        }

                        break;
                    case 15:
                        //with
                        if(item.getType()==0){
                            gen.prepartob(4);
                            sp=gen.ob ;
                            globalAnswer=gen.eng;
                        }else if(item.getType()==1){
                            int r2 = (int)  (Math.random()*4);
                            switch (r2) {
                                case 0:
                                    //made it so it is only positive now
                                    gen1.GenWouldPerfCont2();
                                    sp= gen1.gens ;
                                    globalAnswer= gen1.gene;
                                    globalAnswer2=negator.applyContractionModalsHave(gen1.gene);
                                    break;

                                case 1:
                                    object.GenContTenses("would have been ","would have been ","would have been ","habría estado ","habrías estado ","habría estado ","habríamos estado ","habrían estado ");
                                    sp=object.gens ;
                                    //would have been
                                    globalAnswer=object.gene;
                                    globalAnswer2=negator.applyContractionModalsHave(object.gene);
                                    break;

                                case 2:
                                    object.GenContTenses("would have been ","would have been ","would have been ","habría estado ","habrías estado ","habría estado ","habríamos estado ","habrían estado ");
                                    sp=negator.negateSentenceSpanish(object.gens) ;
                                    // wouldnot
                                    globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                    // wouldnt have been
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(object.gene);
                                    break;

                                case 3:
                                    gen1.GenWouldPerfCont2();
                                    sp= negator.negateSentenceSpanish(gen1.gens);
                                    //would not
                                    globalAnswer=negator.negateFirstAuxOrModal(gen1.gene);
                                    // wouldnt have
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(gen1.gene);
                                    break;

                            }
                        }else if(item.getType()==2){
                            //whether trans
                            object.GenConjFuture("whether", "ya sea que");
                            object2.GenPresSimpSubjunctive();
                            complemento= object2.gens;
                            complement = object2.gene;
                            sp = object.gens+" "+ complemento+"o no" ;
                            globalAnswer=object.gene+" "+complement+"or not";

                        }else if(item.getType()==3){

                        }

                        break;
                    case 16:
                        //on
                        if(item.getType()==0){
                            gen.prepartob(5);
                            sp=gen.ob ;
                            globalAnswer=gen.eng;
                        }else if(item.getType()==1){
                            int r2 = (int)  (Math.random()*4);
                            switch (r2) {
                                case 0:
                                    //made it so it is only positive now
                                    gen1.GenCouldSimp2();
                                    sp= gen1.gens ;
                                    globalAnswer=gen1.gene;
                                    globalAnswer2=".";
                                    break;
                                case 1:
                                    object.GenPresSimpModals("could ", "podría ", "podrías ", "podría ", "podríamos ", "podrían ");
                                    sp= object.gens;
                                    globalAnswer=object.gene;
                                    globalAnswer2=".";
                                    break;
                                case 2:
                                    gen1.GenCouldSimp2();
                                    sp= negator.negateSentenceSpanish(gen1.gens);
                                    globalAnswer=negator.negateFirstAuxOrModalContracted(gen1.gene);
                                    globalAnswer2=negator.negateFirstAuxOrModal(gen1.gene);
                                    break;
                                case 3:
                                    object.GenPresSimpModals("could ", "podría ", "podrías ", "podría ", "podríamos ", "podrían ");
                                    sp=negator.negateSentenceSpanish(object.gens) ;
                                    globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(object.gene);
                                    break;

                            }
                        }else if(item.getType()==2){
                            //although trans
                            int r= (int)(Math.random()*3);
                            complemento="";
                            complement="";
                            complement2="";
                            String oracionsp="";
                            String oracioneng="";
                            switch (r){
                                case 0:
                                    object.GenPastSimp();
                                    oracionsp=object.gens;
                                    oracioneng=object.gene;
                                    object2.GenPastSimp();
                                    complemento=object2.gens;
                                    complement=object2.gene;
                                    sp = oracionsp + " aún que "+complemento ;
                                    globalAnswer=oracioneng+"although "+complement;
                                    break;

                                case 1:
                                    object.GenPastSimp();
                                    oracionsp=negator.negateSentenceSpanish(object.gens);
                                    oracioneng=negator.negatePastSimple(object.gene2);
                                    object2.GenPastSimp();
                                    complemento=         object2.gens;
                                    complement=     object2.gene;

                                    sp = oracionsp + " aún que "+complemento ;
                                    globalAnswer=oracioneng+"although "+complement;

                                    break;
                                case 2:
                                    object.GenConjFuture("although ","aun que ");
                                    oracionsp=object.gens;
                                    oracioneng=object.gene;
                                    object2.GenPresSimpSubjunctive();
                                    complemento=object2.gens;
                                    complement=object2.gene;
                                    sp = oracionsp+complemento;
                                    globalAnswer=oracioneng+complement;

                                    break;

                                default:
                                    complemento="no object activated";
                                    complement="no object activated";
                                    break;
                            }


                        }else if(item.getType()==3){

                        }

                        break;
                    case 17:
                        // do
                        if(item.getType()==0){
                            gen.pronverb(4);
                            sp=gen.gens ;
                            globalAnswer=gen.gene;
                        }else if(item.getType()==1){
                            int r2 = (int)  (Math.random()*4);
                            switch (r2) {
                                case 0:
                                    //made it so it is only positive now
                                    gen1.GenCouldCont2();
                                    sp= gen1.gens ;
                                    globalAnswer=gen1.gene;
                                    globalAnswer2=".";
                                    break;
                                case 1:
                                    object.GenContTenses("could be ","could be ","could be ","podría estar ","podrías estar ","podría estar ","podríamos estar ","podrían estar ");
                                    sp=object.gens;
                                    globalAnswer=object.gene;
                                    globalAnswer2=".";
                                    break;
                                case 2:
                                    object.GenContTenses("could be ","could be ","could be ","podría estar ","podrías estar ","podría estar ","podríamos estar ","podrían estar ");
                                    sp=negator.negateSentenceSpanish(object.gens);
                                    globalAnswer=negator.negateFirstAuxOrModalContracted(object.gene);
                                    globalAnswer2=negator.negateFirstAuxOrModal(object.gene);
                                    break;
                                case 3:
                                    gen1.GenCouldCont2();
                                    sp= negator.negateSentenceSpanish(gen1.gens) ;
                                    globalAnswer=negator.negateFirstAuxOrModal(gen1.gene);
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(gen1.gene);
                                    break;

                            }
                        }else if(item.getType()==2){
                            //even if trans
                            int r= (int)(Math.random()*2);
                            complemento="";
                            complement="";
                            complement2="";
                            String oracionsp="";
                            String oracioneng="";
                            switch (r){
                                case 0:
                                    object.GenConj("even if ","incluso si ");
                                    oracionsp= object.gens;
                                    oracioneng=object.gene;
                                    object2.GenPresSimp();
                                    complemento=object2.gens;
                                    complement =object2.gene;
                                    sp=oracionsp+complemento;
                                    globalAnswer=oracioneng+complement;
                                    break;

                                case 1:
                                    object.GenConjFuture("even if ","incluso si ");
                                    oracionsp= object.gens;
                                    oracioneng=object.gene;
                                    object2.GenPresSimp();
                                    complemento=object2.gens;
                                    complement =object2.gene;
                                    sp=oracionsp+complemento;
                                    globalAnswer=oracioneng+complement;
                                    break;

                            }

                        }else if(item.getType()==3){

                        }


                        break;
                    case 18:
                        //apostrofe s
                        if(item.getType()==0){
                            n.apostropheS();
                            sp = n.gens;
                            globalAnswer=n.gene;
                        }else if(item.getType()==1){
                            int r2 = (int)  (Math.random()*4);
                            switch (r2) {
                                case 0:
                                    //made it so it is only positive now
                                    gen1.GenCouldPerf2();
                                    sp= gen1.gens ;
                                    // could have
                                    globalAnswer=gen1.gene;

                                    // couldve
                                    globalAnswer2=negator.applyContractionModalsHave(gen1.gene);
                                    break;
                                case 1:
                                    object.GenPerfectTenses("could have ","could have ","pude haber ","pudiste haber ", "pudo haber ", "pudimos haber ", "pudieron haber ");
                                    sp=object.gens;
                                    // could have
                                    globalAnswer=object.gene;
                                    // couldve
                                    globalAnswer2=negator.applyContractionModalsHave(object.gene);
                                    break;
                                case 2:
                                    object.GenPerfectTenses("could have ","could have ","pude haber ","pudiste haber ", "pudo haber ", "pudimos haber ", "pudieron haber ");
                                    sp =negator.negateSentenceSpanish(object.gens) ;
                                    //couldnt
                                    globalAnswer=negator.negateFirstAuxOrModalContracted(object.gene);
                                    //could not
                                    globalAnswer2=negator.negateFirstAuxOrModal(object.gene);
                                    break;
                                case 3:
                                    gen1.GenCouldPerf2();
                                    sp= negator.negateSentenceSpanish(gen1.gens) ;
                                    // couldnt
                                    globalAnswer=negator.negateFirstAuxOrModal(gen1.gene);
                                    // could not
                                    globalAnswer2= negator.negateFirstAuxOrModalContracted(gen1.gene);
                                    break;
                            }
                        }else if(item.getType()==2){
                            //once trans
                            int r= 0;
                            complemento="";
                            complement="";
                            complement2="";
                            String oracionsp="";
                            String oracioneng="";


                            object.GenConjFuture("once ","una vez que ");
                            oracionsp= object.gens;
                            oracioneng=object.gene;
                            object2.GenPresSimpSubjunctive();
                            complemento=object2.gens;
                            complement =object2.gene;
                            sp=oracionsp+complemento;
                            globalAnswer=oracioneng+complement;

                        }else if(item.getType()==3){

                        }

                        break;
                    case 19:
                        //say
                        if(item.getType()==0){
                            gen.pronverb(1);
                            sp=gen.gens ;
                            globalAnswer=gen.gene;
                        }else if(item.getType()==1){
                            int r2 = (int)  (Math.random()*4);
                            switch (r2) {
                                case 0:
                                    //made it so it is only positive now
                                    gen1.GenCouldPerfCont2();
                                    sp= gen1.gens;
                                    // could have
                                    globalAnswer=gen1.gene;
                                    // couldve
                                    globalAnswer2=negator.applyContractionModalsHave(gen1.gene);
                                    break;

                                case 1:
                                    object.GenContTenses("could have been ","could have been ","could have been ","podría haber estado ","podrías haber estado ","podría haber estado ","podríamos haber estado ","podrían haber estado ");
                                    sp=object.gens ;
                                    //could have
                                    globalAnswer=object.gene;
                                    //couldve
                                    globalAnswer2=negator.applyContractionModalsHave(object.gene);
                                    break;

                                case 2:
                                    object.GenContTenses("could have been ","could have been ","could have been ","podría haber estado ","podrías haber estado ","podría haber estado ","podríamos haber estado ","podrían haber estado ");
                                    sp=negator.negateSentenceSpanish(object.gens) ;
                                    // could have
                                    globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                    // couldnt have
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(object.gene);
                                    break;

                                case 3:
                                    gen1.GenCouldPerfCont2();
                                    sp= negator.negateSentenceSpanish(gen1.gens) ;
                                    // could not have
                                    globalAnswer=negator.negateFirstAuxOrModal(gen1.gene);
                                    // couldnt have
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(gen1.gene);
                                    break;

                            }
                        }else if(item.getType()==2){
                            //unless trans
                            complemento="";
                            complement="";
                            complement2="";
                            String oracionsp="";
                            String oracioneng="";

                            object.GenConjFuture2("unless ","a menos que ");
                            oracionsp= negator.negateSentenceSpanish(object.gens) ;
                            oracioneng=negator.negateFirstAuxOrModalContracted(object.gene);
                            object2.GenPresSimpSubjunctive();
                            complemento=object2.gens;
                            complement =object2.gene;
                            sp=oracionsp+" "+ complemento;
                            globalAnswer=oracioneng+ " "+complement;

                        }else if(item.getType()==3){

                        }

                        break;
                    case 20:
                        //they
                        if(item.getType()==0){
                            gen.pronverb("ellos ");
                            sp= gen.gens   ;
                            globalAnswer=gen.gene;
                        }else if(item.getType()==1){

                            int r2 = (int)  (Math.random()*4);
                            switch (r2) {
                                case 0:
                                    //made it so it is only positive now
                                    gen1.GenShouldSimp2();
                                    sp= gen1.gens ;
                                    globalAnswer=gen1.gene;
                                    globalAnswer2=".";
                                    break;
                                case 1:
                                    object.GenPresSimpModals("should ", "debaría ", "deberías ", "debería ", "deberíamos ", "deberían ");
                                    sp= object.gens;
                                    globalAnswer=object.gene;
                                    globalAnswer2=".";
                                    break;
                                case 2:
                                    gen1.GenShouldSimp2();
                                    sp= negator.negateSentenceSpanish(gen1.gens) ;
                                    // shouldnt
                                    globalAnswer=negator.negateFirstAuxOrModalContracted(gen1.gene);
                                    // should not
                                    globalAnswer2=negator.negateFirstAuxOrModal(gen1.gene);

                                    break;
                                case 3:
                                    object.GenPresSimpModals("should ", "debaría ", "deberías ", "debería ", "deberíamos ", "deberían ");
                                    sp=negator.negateSentenceSpanish(object.gens) ;
                                    //should not
                                    globalAnswer=negator.negateFirstAuxOrModal(object.gene);

                                    //shouldnt
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(object.gene);
                                    break;

                            }
                        }else if(item.getType()==2){
                            //now that tran
                            complemento="";
                            complement="";
                            complement2="";
                            String oracionsp="";
                            String oracioneng="";
                            object.GenConjFuture2("now that ", " ahora que ");
                            oracionsp= negator.negateSentenceSpanish(object.gens) ;
                            oracioneng=negator.negateFirstAuxOrModalContracted(object.gene);
                            object2.GenPastSimp();
                            complemento=object2.gens;
                            complement =object2.gene;
                            sp=oracionsp+" "+complemento;
                            globalAnswer=oracioneng+" "+complement;

                        }else if(item.getType()==3){

                        }

                        break;
                    case 21:
                        //this
                        if(item.getType()==0){
                            gen.adjmethod("this ");
                            sp= gen.gens;
                            globalAnswer=gen.gene;
                        }else if(item.getType()==1){
                            int r2 = (int)  (Math.random()*4);
                            switch (r2) {
                                case 0:
                                    //made it so it is only positive now
                                    gen1.GenShouldCont2();
                                    sp= gen1.gens;
                                    globalAnswer=gen1.gene;
                                    globalAnswer2=".";
                                    break;
                                case 1:
                                    object.GenContTenses("should be ","should be ","should be ","debería estar ","deberías estar ","debería estar ","deberíamos estar ","deberían estar ");
                                    sp=object.gens;
                                    globalAnswer=object.gene;
                                    globalAnswer2=".";
                                    break;
                                case 2:
                                    object.GenContTenses("should be ","should be ","should be ","debería estar ","deberías estar ","debería estar ","deberíamos estar ","deberían estar ");
                                    sp=negator.negateSentenceSpanish(object.gens);
                                    //shouldnt be
                                    globalAnswer=negator.negateFirstAuxOrModalContracted(object.gene);
                                    //should not be
                                    globalAnswer2=negator.negateFirstAuxOrModal(object.gene);
                                    break;
                                case 3:
                                    gen1.GenShouldCont2();
                                    sp= negator.negateSentenceSpanish(gen1.gens);
                                    //should not be
                                    globalAnswer=negator.negateFirstAuxOrModal(gen1.gene);
                                    //shouldnt be
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(gen1.gene);
                                    break;

                            }
                        }else if(item.getType()==2){
                            //as long as trans
                            int r= (int)(Math.random()*2);

                            complemento="";
                            complement="";
                            complement2="";
                            String oracionsp="";
                            String oracioneng="";
                            switch (r){
                                case 0:
                                    object.GenConjFuture("as long as ","siempre y cuando ");
                                    oracionsp= object.gens;
                                    oracioneng=object.gene;
                                    object2.GenPresSimpSubjunctive();
                                    complemento=object2.gens;
                                    complement =object2.gene;
                                    sp=oracionsp+complemento;
                                    globalAnswer=oracioneng+complement;
                                    break;

                                case 1:
                                    object.GenConjFuture2("as long as ","siempre y cuando ");
                                    oracionsp= negator.negateSentenceSpanish(object.gens);
                                    oracioneng= negator.negateFirstAuxOrModalContracted(object.gene);
                                    object2.GenPresSimpSubjunctive();
                                    complemento=object2.gens;
                                    complement =object2.gene;
                                    sp=oracionsp+" "+complemento;
                                    globalAnswer=oracioneng+" "+complement;
                                    break;
                            }

                        }else if(item.getType()==3){

                        }

                        break;
                    case 22:
                        //but
                        if(item.getType()==0){
                            gen.advpronverb(3);
                            sp= gen.gens ;
                            globalAnswer=gen.gene;
                        }else if(item.getType()==1){
                            int r2 = (int)  (Math.random()*4);
                            switch (r2) {
                                case 0:
                                    //made it so it is only positive now
                                    gen1.GenShouldPerf2();
                                    sp= gen1.gens ;
                                    //should have
                                    globalAnswer=gen1.gene;
                                    //shouldve
                                    globalAnswer2=negator.applyContractionModalsHave(gen1.gene);
                                    break;
                                case 1:
                                    object.GenPerfectTenses("should have ","should have ","debí haber ","debíste haber ", "debío haber ", "debímos haber ", "debíeron haber ");
                                    sp=object.gens ;
                                    //should have
                                    globalAnswer=object.gene;
                                    //shouldve
                                    globalAnswer2=negator.applyContractionModalsHave(object.gene);

                                    break;
                                case 2:
                                    object.GenPerfectTenses("should have ","should have ","debí haber ","debíste haber ", "debío haber ", "debímos haber ", "debíeron haber ");
                                    sp =negator.negateSentenceSpanish(object.gens) ;
                                    //shouldnt have
                                    globalAnswer=negator.negateFirstAuxOrModalContracted(object.gene);
                                    //should not have
                                    globalAnswer2=negator.negateFirstAuxOrModal(object.gene);
                                    break;
                                case 3:
                                    gen1.GenShouldPerf2();
                                    sp= negator.negateSentenceSpanish(gen1.gens) ;
                                    //should not have
                                    globalAnswer=negator.negateFirstAuxOrModal(gen1.gene);
                                    // shouldnt have
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(gen1.gene);
                                    break;
                            }
                        }else if(item.getType()==2){

                        }else if(item.getType()==3){

                        }

                        break;
                    case 23:
                        //at
                        if(item.getType()==0){
                            gen.atmeth(8);
                            sp=gen.ob ;
                            globalAnswer=gen.eng;
                        }else if(item.getType()==1){
                            int r2 = (int)  (Math.random()*4);
                            switch (r2) {
                                case 0:
                                    //made it so it is only positive now
                                    gen1.GenShouldPerfCont2();
                                    sp= gen1.gens ;
                                    //should have been
                                    globalAnswer=gen1.gene;
                                    // shouldve been
                                    globalAnswer2=negator.applyContractionModalsHave(gen1.gene);
                                    break;

                                case 1:
                                    object.GenContTenses("should have been ","should have been ","should have been ","debería haber estado ","deberías haber estado ","debería haber estado ","deberíamos haber estado ","deberían haber estado ");
                                    sp=object.gens ;
                                    globalAnswer=object.gene;
                                    globalAnswer2=negator.applyContractionModalsHave(object.gene);
                                    break;

                                case 2:
                                    object.GenContTenses("should have been ","should have been ","should have been ","debería haber estado ","deberías haber estado ","debería haber estado ","deberíamos haber estado ","deberían haber estado ");
                                    sp=negator.negateSentenceSpanish(object.gens) ;
                                    //should have been
                                    globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                    // shouldnt have been
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(object.gene);

                                    break;

                                case 3:
                                    gen1.GenShouldPerfCont2();
                                    sp= negator.negateSentenceSpanish(gen1.gens) ;
                                    //should not have
                                    globalAnswer=negator.negateFirstAuxOrModal(gen1.gene);
                                    // shouldnt have been
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(gen1.gene);
                                    break;

                            }
                        }else if(item.getType()==2){

                        }else if(item.getType()==3){

                        }

                        break;
                    case 24:
                        //we
                        if(item.getType()==0){
                            gen.pronverb("nosotros ");
                            sp= gen.gens ;
                            globalAnswer=gen.gene;
                        }else if(item.getType()==1){
                            int r2 = (int)  (Math.random()*4);
                            switch (r2) {
                                case 0:
                                    //made it so it is only positive now
                                    gen1.GenMightSimp2();
                                    sp= gen1.gens ;
                                    globalAnswer=gen1.gene;
                                    globalAnswer2=".";
                                    break;
                                case 1:
                                    object.GenPresSimpSubjunctive("might ", "quizá ");
                                    sp=object.gens;
                                    globalAnswer=object.gene;
                                    globalAnswer2=".";

                                    break;
                                case 2:
                                    gen1.GenMightSimp2();
                                    sp=negator.negateSentenceSpanish(gen1.gens) ;
                                    globalAnswer=negator.negateFirstAuxOrModal(gen1.gene);
                                    globalAnswer2=".";

                                    break;
                                case 3:
                                    object.GenPresSimpSubjunctive("might ", "quizá ");
                                    sp=negator.negateSentenceSpanish(object.gens) ;
                                    globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                    globalAnswer2=".";
                                    break;

                            }
                        }else if(item.getType()==2){

                        }else if(item.getType()==3){

                        }
                        break;



                    case 25:
                        //his
                        if(item.getType()==0){
                            gen.adjmethod("his ");
                            sp= gen.gens ;
                            globalAnswer=gen.gene;
                        }else if(item.getType()==1){
                            int r2 = (int)  (Math.random()*4);
                            switch (r2) {
                                case 0:
                                    //made it so it is only positive now
                                    gen1.GenMightCont2();
                                    sp= gen1.gens;
                                    globalAnswer=gen1.gene;
                                    globalAnswer2=".";
                                    break;
                                case 1:
                                    object.GenContTenses("might be ","might be ","might be ","quiza esté ","quiza estés ","quizá esté ","quiza estemos ","quiza estén ");
                                    sp=object.gens;
                                    globalAnswer=object.gene;
                                    globalAnswer2=".";
                                    break;
                                case 2:
                                    object.GenContTenses("might be ","might be ","might be ","quizá esté ","quizá estés ","quizá esté ","quizá estemos ","quizá estén ");
                                    sp=negator.negateSentenceSpanish(object.gens);
                                    globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                    globalAnswer2=".";
                                    break;
                                case 3:
                                    gen1.GenMightCont2();
                                    sp= negator.negateSentenceSpanish(gen1.gens) ;
                                    globalAnswer=negator.negateFirstAuxOrModal(gen1.gene);
                                    globalAnswer2=".";
                                    break;

                            }
                        }else if(item.getType()==2){

                        }else if(item.getType()==3){

                        }

                        break;
                    case 26:
                        //from
                        if(item.getType()==0){
                            gen.atmeth(6);
                            sp=gen.ob ;
                            globalAnswer=gen.eng;
                        }else if(item.getType()==1){
                            int r2 = (int)  (Math.random()*4);
                            switch (r2) {
                                case 0:
                                    //made it so it is only positive now
                                    gen1.GenMightPerf2();
                                    sp= gen1.gens ;
                                    // might have
                                    globalAnswer=gen1.gene;
                                    //mightve
                                    globalAnswer2=negator.applyContractionModalsHave(gen1.gene);
                                    break;
                                case 1:
                                    object.GenPerfectTenses("might have ","might have ","quizá haya ","quizá hayas ", "quizá haya ", "quizá hayamos ", "quizá hayan ");
                                    sp=object.gens;
                                    //might have
                                    globalAnswer=object.gene;

                                    //might have
                                    globalAnswer2=negator.applyContractionModalsHave(object.gene);

                                    break;
                                case 2:
                                    object.GenPerfectTenses("might have ","might have ","quizá haya ","quizá hayas ", "quizá haya ", "quizá hayamos ", "quizá hayan ");
                                    sp =negator.negateSentenceSpanish(object.gens);
                                    globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                    globalAnswer2=".";
                                    break;
                                case 3:
                                    gen1.GenMightPerf2();
                                    sp= negator.negateSentenceSpanish(gen1.gens) ;
                                    globalAnswer=negator.negateFirstAuxOrModal(gen1.gene);
                                    globalAnswer2=".";
                                    break;
                            }
                        }else if(item.getType()==2){

                        }else if(item.getType()==3){

                        }

                        break;
                    case 27:
                        //that determiner
                        if(item.getType()==0){
                            gen.adjmethod("that ");
                            sp= gen.gens;
                            globalAnswer=gen.gene;
                        }else if(item.getType()==1){
                            int r2 = (int)  (Math.random()*4);
                            switch (r2) {
                                case 0:
                                    //made it so it is only positive now
                                    gen1.GenMightPerfCont2();
                                    sp= gen1.gens;
                                    globalAnswer=gen1.gene;
                                    // mightve
                                    globalAnswer2=negator.applyContractionModalsHave(gen1.gene);
                                    break;

                                case 1:
                                    object.GenContTenses("might have been ","might have been ","might have been ","quizá haya estado ","quizá hayas estado ","quizá haya estado  ","quizá hayamos estado  ","quizá hayan estado  ");
                                    sp=object.gens;
                                    // might have
                                    globalAnswer=object.gene;
                                    //mightve
                                    globalAnswer2=negator.applyContractionModalsHave(object.gene);
                                    break;

                                case 2:
                                    object.GenContTenses("might have been ","might have been ","might have been ","quizá haya estado ","quizá hayas estado ","quizá haya estado  ","quizá hayamos estado  ","quizá hayan estado  ");
                                    sp=negator.negateSentenceSpanish(object.gens) ;
                                    globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                    globalAnswer2=".";
                                    break;

                                case 3:
                                    gen1.GenMightPerfCont2();
                                    sp= negator.negateSentenceSpanish(gen1.gens);
                                    globalAnswer=negator.negateFirstAuxOrModal(gen1.gene);
                                    globalAnswer2=".";
                                    break;

                            }
                        }else if(item.getType()==2){

                        }else if(item.getType()==3){

                        }

                        break;
                    case 28:
                        //not
                        if(item.getType()==0){
                            gen.not();
                            sp= "no podemos practicar esta ya que no hay sujetos";
                            ;
                            globalAnswer="no";
                        }else if(item.getType()==1){
                            int r2 = (int)  (Math.random()*4);
                            switch (r2) {
                                case 0:
                                    //made it so it is only positive now
                                    gen1.GenCanSimp2();
                                    sp= gen1.gens ;
                                    globalAnswer=gen1.gene;
                                    globalAnswer2=".";
                                    break;
                                case 1:
                                    object.GenPresSimpModals("can ", "puedo ", "puedes ", "puede ", "podemos ", "pueden ");
                                    sp= object.gens;
                                    globalAnswer=object.gene;
                                    globalAnswer2=".";
                                    break;
                                case 2:
                                    gen1.GenCanSimp2();
                                    sp= negator.negateSentenceSpanish(gen1.gens) ;
                                    globalAnswer=negator.negateFirstAuxOrModal(gen1.gene);
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(gen1.gene);
                                    break;
                                case 3:
                                    object.GenPresSimpModals("can ", "puedo ", "puedes ", "puede ", "podemos ", "pueden ");
                                    sp=negator.negateSentenceSpanish(object.gens) ;
                                    globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(object.gene);
                                    break;

                            }
                        }else if(item.getType()==2){

                        }else if(item.getType()==3){

                        }

                        break;
                    case 29:
                        //n t
                        if(item.getType()==0){
                            gen.nt();
                            sp= "no podemos practicar esta ya que no hay sujetos :( ";
                        }else if(item.getType()==1){
                            int r2 = (int)  (Math.random()*4);
                            switch (r2) {
                                case 0:
                                    //made it so it is only positive now
                                    gen1.GenCanCont2();
                                    sp= gen1.gens ;
                                    globalAnswer=gen1.gene;
                                    globalAnswer2=".";
                                    break;
                                case 1:
                                    object.GenContTenses("can be ","can be ","can be ","puedo estar ","puedes estar ","puede estar ","podemos estar ","pueden estar ");
                                    sp=object.gens;
                                    globalAnswer=object.gene;
                                    globalAnswer2=".";
                                    break;
                                case 2:
                                    object.GenContTenses("can be ","can be ","can be ","puedo estar ","puedes estar ","puede estar ","podemos estar ","pueden estar ");
                                    sp=negator.negateSentenceSpanish(object.gens);
                                    //cannot
                                    globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                    // can[t be
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(object.gene);
                                    break;
                                case 3:
                                    gen1.GenCanCont2();
                                    sp= negator.negateSentenceSpanish(gen1.gens) ;
                                    globalAnswer=negator.negateFirstAuxOrModal(gen1.gene);
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(gen1.gene);
                                    break;

                            }
                        }else if(item.getType()==2){

                        }else if(item.getType()==3){

                        }

                        break;
                    case 30:
                        //by
                        if(item.getType()==0){
                            gen.atmeth(9);
                            sp=gen.ob ;
                            globalAnswer=gen.eng;
                        }else if(item.getType()==1){
                            int r2 = (int)  (Math.random()*4);
                            switch (r2) {
                                case 0:
                                    //made it so it is only positive now
                                    gen1.GenMustSimp2();
                                    sp= gen1.gens ;
                                    globalAnswer= gen1.gene;
                                    globalAnswer2=".";
                                    break;
                                case 1:
                                    object.GenPresSimpModals("must ", "debo ", "debes ", "debe ", "debemos ", "deben ");
                                    sp= object.gens;
                                    globalAnswer=object.gene;
                                    globalAnswer2=".";
                                    break;
                                case 2:
                                    gen1.GenMustSimp2();
                                    sp= negator.negateSentenceSpanish(gen1.gens);
                                    globalAnswer=negator.negateFirstAuxOrModal(gen1.gene);
                                    globalAnswer2=".";
                                    break;
                                case 3:
                                    object.GenPresSimpModals("must ", "debo ", "debes ", "debe ", "debemos ", "deben ");
                                    sp=negator.negateSentenceSpanish(object.gens) ;
                                    globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                    globalAnswer2=".";
                                    break;

                            }


                        }else if(item.getType()==2){

                        }else if(item.getType()==3){

                        }

                        break;
                    case 31:
                        //or
                        if(item.getType()==0){
                            gen.or();
                            sp=gen.ob ;
                            globalAnswer=gen.eng;
                        }else if(item.getType()==1){
                            int r2 = (int)  (Math.random()*4);
                            switch (r2) {
                                case 0:
                                    //made it so it is only positive now
                                    gen1.GenMustCont2();
                                    sp= gen1.gens;
                                    globalAnswer=gen1.gene;
                                    globalAnswer2="/";
                                    break;
                                case 1:
                                    object.GenContTenses("must be ","must be ","must be ","debo estar ","debes estar ","debe estar ","debemos estar ","deben estar ");
                                    sp=object.gens;
                                    globalAnswer=object.gene;
                                    globalAnswer2=".";
                                    break;
                                case 2:
                                    object.GenContTenses("must be ","must be ","must be ","debo estar ","debes estar ","debe estar ","debemos estar ","deben estar ");
                                    sp=negator.negateSentenceSpanish(object.gens);
                                    globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                    globalAnswer2=".";
                                    break;
                                case 3:
                                    gen1.GenMustCont2();
                                    sp= negator.negateSentenceSpanish(gen1.gens) ;
                                    globalAnswer=negator.negateFirstAuxOrModal(gen1.gene);
                                    globalAnswer2=".";
                                    break;

                            }
                        }else if(item.getType()==2){

                        }else if(item.getType()==3){

                        }

                        break;
                    case 32:
                        //she
                        if(item.getType()==0){
                            gen.pronverb("ella ");
                            sp= gen.gens;
                            globalAnswer=gen.gene;
                        }else if(item.getType()==1){
                            int r2 = (int)  (Math.random()*2);
                            switch (r2){
                                case 0:
                                    gen.GenPassives("present simple");
                                    sp= gen.gens;
                                    // not contracted he is arrested
                                    globalAnswer=gen.gene;
                                    // contracted hes arrested by ...
                                    globalAnswer2=negator.contractPresentContinuousPresent(gen.gene);
                                    globalAnswer3=".";
                                    break;
                                case 1:
                                    gen.GenPassives("present simple");
                                    sp= negator.negateSentenceSpanish(gen.gens);
                                    //not contracted he is not arrested
                                    globalAnswer=negator.negateFirstAuxOrModal(gen.gene);
                                    // contracted he isnt arrested
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(gen.gene);
                                    // hes not/ to be contracted
                                    globalAnswer3=negator.negateAndContractPresentContinuous(globalAnswer);
                                    break;
                            }


                        }else if(item.getType()==2){

                        }else if(item.getType()==3){

                        }

                        break;
                    case 33:
                        //as conjunction
                        if(item.getType()==0){
                            Nobles n1 = new Nobles();
                            int pos1 = (int) (Math.random() * 6);
                            n1.GenPresSimpAs(pos1);
                            sp=n1.gens;
                            globalAnswer=n1.gene;
                        }else if(item.getType()==1){
                            int r2 = (int)  (Math.random()*2);
                            switch (r2){
                                case 0:
                                    gen.GenPassives("present continuous");
                                    sp= gen.gens;
                                    globalAnswer=gen.gene;
                                    globalAnswer2=negator.contractPresentContinuousPresent(gen.gene);
                                    globalAnswer3=".";
                                    break;

                                case 1:
                                    gen.GenPassives("present continuous");
                                    sp= negator.negateSentenceSpanish(gen.gens);
                                    globalAnswer=negator.negateFirstAuxOrModal(gen.gene);
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(gen.gene);
                                    globalAnswer3=negator.negateAndContractPresentContinuous(globalAnswer);

                                    break;


                            }
                        }else if(item.getType()==2){

                        }else if(item.getType()==3){

                        }

                        break;
                    case 34:
                        //what determiner
                        if(item.getType()==0){
                            Nobles n2 = new Nobles();
                            int pos2 = (int) (Math.random() * 6);
                            n2.GenPresSimpWhat(pos2);
                            sp=n2.gens ;
                            globalAnswer=n2.gene;
                        }else if(item.getType()==1){
                            int r2 = (int)  (Math.random()*2);
                            switch (r2){
                                case 0:
                                    gen.GenPassives("present perfect");
                                    sp= gen.gens;
                                    globalAnswer=gen.gene;
                                    globalAnswer2=negator.contractPresentPerfect(gen.gene);
                                    globalAnswer3=".";
                                    break;

                                case 1:
                                    gen.GenPassives("present perfect");
                                    sp= negator.negateSentenceSpanish(gen.gens);
                                    globalAnswer=negator.negateFirstAuxOrModal(gen.gene);
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(gen.gene);
                                    globalAnswer3=negator.contractPresentPerfectIncludingNot(globalAnswer);
                                    break;
                            }
                        }else if(item.getType()==2){

                        }else if(item.getType()==3){

                        }

                        break;
                    case 35:
                        //go
                        if(item.getType()==0){
                            gen.pronverb(2);
                            sp = gen.gens;
                            globalAnswer=gen.gene;
                        }else if(item.getType()==1){
                            int r2 = (int)  (Math.random()*2);
                            switch (r2){
                                case 0:
                                    gen.GenPassives("past simple");
                                    sp= gen.gens;
                                    // the girl was
                                    globalAnswer=gen.gene;
                                    // no contraction
                                    globalAnswer2=".";

                                    break;

                                case 1:
                                    gen.GenPassives("past simple");
                                    sp= negator.negateSentenceSpanish(gen.gens);
                                    //was not
                                    globalAnswer=negator.negateFirstAuxOrModal(gen.gene);
                                    // wasnt
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(gen.gene);
                                    break;


                            }

                        }else if(item.getType()==2){

                        }else if(item.getType()==3){

                        }

                        break;
                    case 36:
                        //their
                        if(item.getType()==0){
                            gen.adjmethod("their ");
                            sp= gen.gens;
                            globalAnswer=gen.gene;
                        }else if(item.getType()==1){
                            int r2 = (int)  (Math.random()*2);
                            switch (r2){
                                case 0:
                                    gen.GenPassives("past continuous");
                                    sp= gen.gens;
                                    // was being
                                    globalAnswer=gen.gene;
                                    globalAnswer2=".";

                                    break;

                                case 1:
                                    gen.GenPassives("past continuous");
                                    sp= negator.negateSentenceSpanish(gen.gens);
                                    //was not
                                    globalAnswer=negator.negateFirstAuxOrModal(gen.gene);
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(gen.gene);
                                    break;


                            }


                        }else if(item.getType()==2){

                        }else if(item.getType()==3){

                        }

                        break;
                    case 37:
                        //will
                        if(item.getType()==0){
                            gen.pronverbwill();
                            sp= gen.gens;
                            globalAnswer=gen.gene;
                        }else if(item.getType()==1){
                            int r2 = (int)  (Math.random()*2);
                            switch (r2){
                                case 0:
                                    gen.GenPassives("past perfect");
                                    sp= gen.gens;
                                    globalAnswer=gen.gene;
                                    globalAnswer2=".";
                                    break;
                                case 1:
                                    gen.GenPassives("past perfect");
                                    sp= negator.negateSentenceSpanish(gen.gens);
                                    globalAnswer=negator.negateFirstAuxOrModal(gen.gene);
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(gen.gene);
                                    break;


                            }


                        }else if(item.getType()==2){

                        }else if(item.getType()==3){

                        }

                        break;
                    case 38:
                        //who
                        if(item.getType()==0){
                            gen.genWho();
                            sp= gen.gens;
                            globalAnswer=gen.gene;
                        }else if(item.getType()==1){
                            int r2 = (int)  (Math.random()*2);
                            switch (r2){
                                case 0:
                                    gen.GenPassives("future simple");
                                    sp= gen.gens;
                                    globalAnswer=gen.gene;
                                    globalAnswer2=negator.contractWill(gen.gene);
                                    break;

                                case 1:
                                    gen.GenPassives("future simple");
                                    sp= negator.negateSentenceSpanish(gen.gens);
                                    globalAnswer=negator.negateFirstAuxOrModal(gen.gene);
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(gen.gene);
                                    break;


                            }

                        }else if(item.getType()==2){

                        }else if(item.getType()==3){

                        }

                        break;
                    case 39:
                        //can
                        if(item.getType()==0){
                            gen.pronverbcan();
                            sp= gen.gens;
                            globalAnswer=gen.gene;
                        }else if(item.getType()==1){
                            int r2 = (int)  (Math.random()*2);
                            switch (r2){
                                case 0:
                                    gen.GenPassives("would simple");
                                    sp= gen.gens;
                                    // he would be
                                    globalAnswer=gen.gene;
                                    // he d be
                                    globalAnswer2=negator.contractHadOrWould(gen.gene);

                                    break;

                                case 1:
                                    gen.GenPassives("would simple");
                                    sp= negator.negateSentenceSpanish(gen.gens);
                                    globalAnswer=negator.negateFirstAuxOrModal(gen.gene);
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(gen.gene);

                                    break;


                            }
                        }else if(item.getType()==2){

                        }else if(item.getType()==3){

                        }

                        break;
                    case 40:
                        //get
                        if(item.getType()==0){
                            gen.pronverb(3);
                            sp= gen.gens;
                            globalAnswer=gen.gene;
                        }else if(item.getType()==1) {
                            int r2 = (int)  (Math.random()*3);
                            switch (r2){
                                case 0:
                                    gen1.GenForTo2();
                                    sp= gen1.gens ;
                                    globalAnswer=gen1.gene;
                                    break;

                                case 1:
                                    object.GenForTo();
                                    sp= negator.negateSentenceSpanish(object.gens);
                                    globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                    break;
                                case 2:
                                    object.GenForTo();
                                    sp=object.gens;
                                    globalAnswer=object.gene;
                                    break;
                            }

                        }else if(item.getType()==2){

                        }else if(item.getType()==3){

                        }

                        break;
                    case 41:
                        //if
                        if(item.getType()==0){
                            gen.pronverbif();
                            sp= gen.gens;
                            globalAnswer=gen.gene;
                        }else if(item.getType()==1){
                            int r2 = (int) (Math.random()*4);
                            switch (r2){
                                case 0:
                                    gen1.GenBeUsedTo2();
                                    sp= gen1.gens ;
                                    globalAnswer  = gen1.gene;
                                    globalAnswer2 = negator.contractPresentContinuousPresent(gen1.gene);
                                    globalAnswer3=".";
                                    break;
                                case 1:
                                    object.GenBeUsedTo("am used to ", "are used to ","is used to ","are used to ","esoy acostumbrado a ", "estas acostumbrado a ", "está acostumbrado a ","está acostumbrada a ","estamos acostumbrados a ", "estan acostumbrados a ");
                                    sp=object.gens;
                                    globalAnswer=object.gene;
                                    globalAnswer2=negator.contractPresentContinuousPresent(object.gene);
                                    globalAnswer3=".";
                                    break;
                                case 2:
                                    object.GenBeUsedTo("am used to ", "are used to ","is used to ","are used to ","esoy acostumbrado a ", "estas acostumbrado a ", "está acostumbrado a ","está acostumbrada a ","estamos acostumbrados a ", "estan acostumbrados a ");
                                    sp=negator.negateSentenceSpanish(object.gens);
                                    // he is not used to
                                    globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                    //he isnt used to
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(object.gene);
                                    // hes not used to
                                    globalAnswer3=negator.negateAndContractPresentContinuous(globalAnswer);
                                    break;

                                case 3:
                                    gen1.GenBeUsedTo2();
                                    sp= negator.negateSentenceSpanish(gen1.gens);
                                    globalAnswer  = negator.negateFirstAuxOrModal(gen1.gene);
                                    globalAnswer2 = negator.negateFirstAuxOrModalContracted(gen1.gene);
                                    globalAnswer3=negator.negateAndContractPresentContinuous(globalAnswer);
                                    break;

                            }
                        }else if(item.getType()==2){

                        }else if(item.getType()==3){

                        }

                        break;
                    case 42:
                        //all
                        if(item.getType()==0){
                            gen.all();
                            sp= gen.gens;
                            globalAnswer=gen.gene;
                        }else if(item.getType()==1){
                            int r2 = (int) (Math.random()*3);
                            switch (r2){
                                case 0:
                                    gen1.GenUsedTo2();
                                    sp= gen1.gens;
                                    globalAnswer=gen1.gene;
                                    break;
                                case 1:
                                    object.GenHaveTo("used to ","used to ","solía ", "solías ", "solía ", "solíamos ", "solían ");
                                    sp= object.gens;
                                    globalAnswer=object.gene;
                                    break;
                                case 2:
                                    object.GenHaveTo("use to ","use to ","solía ", "solías ", "solía ", "solíamos ", "solían ");
                                    sp= negator.negateSentenceSpanish(object.gens );
                                    globalAnswer=negator.negatePastSimple(object.gene);
                                    break;

                            }


                        }else if(item.getType()==2){

                        }else if(item.getType()==3){

                        }

                        break;
                    case 43:
                        //would
                        if(item.getType()==0){
                            gen.pronverbwould();
                            sp= gen.gens;
                            globalAnswer=gen.gene;
                        }else if(item.getType()==1){
                            int r2=(int)(Math.random()*2);
                            switch (r2){
                                case 0:
                                    object.GenThereBe();
                                    sp = object.gens;
                                    globalAnswer=object.gene;
                                    globalAnswer2=".";
                                    globalAnswer3=".";
                                    break;
                                case 1:
                                    object.GenThereBe();
                                    sp = negator.negateThereBeSpanish(object.gens);
                                    globalAnswer= negator.negateThereBeWithNo(object.gene);
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(object.gene);
                                    globalAnswer3=negator.negateFirstAuxOrModal(object.gene);

                                    break;

                            }
                        }else if(item.getType()==2){

                        }else if(item.getType()==3){

                        }

                        break;
                    case 44:
                        //her
                        if(item.getType()==0){
                            gen.adjmethod("her ");
                            sp= gen.gens;
                            globalAnswer=gen.gene;
                        }else if(item.getType()==1){
                            int r2 = (int) (Math.random()*2);
                            switch (r2){
                                case 0:
                                    object.GenHaveTo("have to ","has to ","tengo que ","tienes que ","tiene que ","tenemos que ","tienen que ");
                                    sp = object.gens;
                                    globalAnswer=object.gene;
                                    break;

                                case 1:
                                    object.GenHaveTo("have to ","have to ","tengo que ","tienes que ","tiene que ","tenemos que ","tienen que ");
                                    sp=negator.negateSentenceSpanish(object.gens);
                                    globalAnswer=negator.negatePresentSimpleContracted(object.gene);
                                    break;
                            }
                        }else if(item.getType()==2){

                        }else if(item.getType()==3){

                        }

                        break;
                    case 45:
                        //make
                        if(item.getType()==0){
                            gen.make();
                            sp= gen.gens;
                            globalAnswer=gen.gene;
                        }else if(item.getType()==1){
                            int r2 = (int) (Math.random()*2);
                            switch (r2){
                                case 0:
                                    object.GenGoingTo("am going to ","are going to ","is going to ","voy a ","vas a ","va a ","vamos a ", "van a ");
                                    sp = object.gens;
                                    globalAnswer=object.gene;
                                    globalAnswer2=".";
                                    globalAnswer3=".";
                                    break;
                                case 1:
                                    object.GenGoingTo("am going to ","are going to ","is going to ","voy a ","vas a ","va a ","vamos a ", "van a ");
                                    sp=negator.negateSentenceSpanish(object.gens);
                                    // he is not
                                    globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                    // he isnt going to
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(object.gene);
                                    // hes not going to
                                    globalAnswer3=negator.negateAndContractPresentContinuous(globalAnswer);
                                    break;

                            }
                        }else if(item.getType()==2){

                        }else if(item.getType()==3){

                        }


                        break;
                    case 46:
                        //about
                        if(item.getType()==0){
                            gen.prepartob(7);
                            sp  = gen.ob;
                            globalAnswer=gen.eng;
                        }else if(item.getType()==1){
                            int r2 = (int) (Math.random()*2);
                            switch (r2){
                                case 0:
                                    object.GenGoingTo("was going to ","were going to ","was going to ","iba a ","ibas a ","iba a ","ibamos a ", "iban a ");
                                    sp = object.gens;
                                    globalAnswer=object.gene;
                                    globalAnswer2=".";
                                    break;
                                case 1:
                                    object.GenGoingTo("was going to ","were going to ","was going to ","iba a ","ibas a ","iba a ","ibamos a ", "iban a ");
                                    sp=negator.negateSentenceSpanish(object.gens);
                                    globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(object.gene);
                                    break;
                            }
                        }else if(item.getType()==2){

                        }else if(item.getType()==3){

                        }

                        break;
                    case 47:
                        //my
                        if(item.getType()==0){
                            gen.adjmethod("my ");
                            sp= gen.gens;
                            globalAnswer=gen.gene;
                        }else if(item.getType()==1){
                            int r2 = (int) (Math.random()*2);
                            switch (r2){
                                case 0:
                                    object.GenFeelLike("feel like ","feel like ","feels like ","tengo ganas de ","tienes ganas de ","tiene ganas de ","tenemos ganas de ", "tienen ganas de ");
                                    sp = object.gens;
                                    globalAnswer=object.gene;
                                    globalAnswer2=".";
                                    break;
                                case 1:
                                    object.GenFeelLike("feel like ","feel like ","feels like ","tengo ganas de ","tienes ganas de ","tiene ganas de ","tenemos ganas de ", "tienen ganas de ");
                                    sp = negator.negateSentenceSpanish(object.gens);
                                    globalAnswer=negator.negatePresentSimple(object.gene);
                                    globalAnswer2=negator.negatePresentSimpleContracted(object.gene);
                                    break;
                            }
                        }else if(item.getType()==2){

                        }else if(item.getType()==3){

                        }

                        break;
                    case 48:
                        //know
                        if(item.getType()==0){
                            gen.pronverb(5);
                            sp= gen.gens;
                            globalAnswer=gen.gene;
                        }else if(item.getType()==1){
                            int r2= (int) (Math.random()*2);
                            int sprand=(int)(Math.random()*3);
                            switch (r2){
                                case 0:
                                    object.GenSupposedTo(false);
                                    switch (sprand){
                                        case 0:
                                            sp=object.gens;
                                            break;

                                        case 1:
                                            sp=object.gens2;                                              break;

                                        case 2:
                                            sp=object.gens3 ;
                                            break;
                                    }
                                    // he is suposed to
                                    globalAnswer=object.gene;
                                    // hes supposed to
                                    globalAnswer2=negator.contractPresentContinuousPresent(object.gene);
                                    globalAnswer3=".";
                                    break;
                                case 1:
                                    object.GenSupposedTo(false);
                                    switch (sprand){
                                        case 0:
                                            sp=negator.negateSentenceSpanishOG(object.gens);
                                            break;

                                        case 1:
                                            sp=negator.negateSentenceSpanishOG(object.gens2);
                                            break;

                                        case 2:
                                            sp=negator.negateSentenceSpanishOG(object.gens3);
                                            break;
                                    }
                                    // he is not supposed to
                                    globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                    // he isnt supposed to
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(object.gene);
                                    // hes not suppsoed to
                                    globalAnswer3=negator.negateAndContractPresentContinuous(globalAnswer);
                                    break;
                            }

                        }else if(item.getType()==2){

                        }else if(item.getType()==3){

                        }


                        break;
                    case 49:
                        //as preposition
                        if(item.getType()==0){
                            gen.as();
                            sp= gen.gens;
                            globalAnswer=gen.gene;
                        }else if(item.getType()==1){
                            int r2= (int) (Math.random()*2);
                            int sprand=(int)(Math.random()*3);
                            switch (r2){
                                case 0:
                                    object.GenSupposedTo(true);
                                    switch (sprand){
                                        case 0:
                                            sp=object.gens;
                                            break;

                                        case 1:
                                            sp=object.gens2;                                              break;

                                        case 2:
                                            sp=object.gens3 ;
                                            break;
                                    }
                                    // he was suposed to
                                    globalAnswer=object.gene;

                                    globalAnswer2=".";
                                    globalAnswer3=".";
                                    break;
                                case 1:
                                    object.GenSupposedTo(true);
                                    switch (sprand){
                                        case 0:
                                            sp=negator.negateSentenceSpanishOG(object.gens);
                                            break;

                                        case 1:
                                            sp=negator.negateSentenceSpanishOG(object.gens2);
                                            break;

                                        case 2:
                                            sp=negator.negateSentenceSpanishOG(object.gens3);
                                            break;
                                    }
                                    // he was not supposed to
                                    globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                    // he wasnt supposed to
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(object.gene);
                                    //
                                    globalAnswer3=".";
                                    break;
                            }
                        }else if(item.getType()==2){

                        }else if(item.getType()==3){

                        }

                        break;

                    case 50:
                        // there for existance
                        if(item.getType()==0){
                            object.GenThereBe();
                            sp= object.gens.trim();
                            globalAnswer=object.gene.trim();
                        }else if(item.getType()==1){
                            int r2= (int)   (Math.random()*2);
                            switch (r2){
                                case 0:
                                    object.GenGetStructures();
                                    sp= object.gens.trim();
                                    globalAnswer=object.gene.trim();
                                    globalAnswer2=".";
                                    break;

                                case 1:
                                    object.GenGetStructures();
                                    sp = negator.negateSentenceSpanish(object.gens);
                                    globalAnswer=negator.negatePresentSimple(object.gene);
                                    globalAnswer2=negator.negatePresentSimpleContracted(object.gene);


                                    break;
                            }
                        }else if(item.getType()==2){

                        }else if(item.getType()==3){

                        }

                        break;
                    case 51:
                        // one

                        if(item.getType()==0){
                            gen.adjmethod("one ");
                            sp= gen.gens;
                            globalAnswer=gen.gene;
                        }else if(item.getType()==1){
                            //pvpp
                            int r2= (int)   (Math.random()*2);
                            switch (r2){
                                case 0:
                                    object.GenPvpp();
                                    sp = object.gens;
                                    globalAnswer=object.gene;
                                    globalAnswer2=object.gene2;
                                    globalAnswer3="/";
                                    break;

                                case 1:
                                    object.GenPvpp();
                                    sp=negator.negateSentenceSpanishOG(object.gens);
                                    globalAnswer=negator.negatePresentSimple(object.gene);
                                    globalAnswer2=negator.negatePresentSimpleContracted(object.gene2);
                                    globalAnswer3=negator.negatePresentSimpleContracted(object.gene);
                                    break;

                            }
                        }else if(item.getType()==2){

                        }else if(item.getType()==3){

                        }

                        break;
                    case 52:
                        // up
                        if(item.getType()==0){
                            object.GenPresSimpPrepasAdv("up ", "hacia arriba");
                            sp= object.gens;
                            globalAnswer=object.gene;
                        }else if(item.getType()==1){
                            int r2= (int)   (Math.random()*2);
                            switch (r2){
                                case 0:
                                    object.GenReflexives();
                                    sp = object.gens;
                                    globalAnswer=object.gene;
                                    globalAnswer2=".";
                                    break;
                                case 1:
                                    object.GenReflexives();
                                    sp=negator.negateReflexiveSpanish(object.gens);
                                    globalAnswer=negator.negatePresentSimple(object.gene);
                                    globalAnswer2=negator.negatePresentSimpleContracted(object.gene);
                                    break;
                            }
                        }else if(item.getType()==2){

                        }else if(item.getType()==3){

                        }

                        break;
                    case 53:
                        // time noun
                        if(item.getType()==0){
                            nouns.nounGen("the time ","el tiempo ");
                            sp = nouns.gens;
                            globalAnswer=nouns.gene;
                        }else if(item.getType()==1){

                            int r2= (int) (Math.random()*2);
                            switch (r2){
                                case 0:
                                    object.GenCausatives();
                                    sp =object.gens;
                                    globalAnswer=object.gene;
                                    globalAnswer2=object.gene2;
                                    globalAnswer3=".";
                                    break;

                                case 1:
                                    object.GenCausatives();
                                    sp=negator.negateReflexiveSpanish(object.gens);
                                    globalAnswer=negator.negatePresentSimpleCausativeHave(object.gene);
                                    globalAnswer2=negator.negatePresentSimpleContracted(object.gene);
                                    globalAnswer3=negator.negatePresentSimpleContracted(object.gene2);
                                    break;

                            }
                        }else if(item.getType()==2){

                        }else if(item.getType()==3){

                        }

                        break;
                    case 54:
                        // year noun
                        if(item.getType()==0){
                            nouns.nounGen("the year ","el año ");
                            sp = nouns.gens;
                            globalAnswer=nouns.gene;
                        }else if(item.getType()==1){
                            int r2=  (int)(Math.random()*2);
                            switch (r2){
                                case 0:
                                    object.GenVerbosJuntos();
                                    sp =object.gens;
                                    // i like to go
                                    globalAnswer=object.gene;
                                    // i like going
                                    globalAnswer2=object.gene2;
                                    break;
                                case 1:
                                    object.GenVerbosJuntos();
                                    sp=negator.negateSentenceSpanishOG(object.gens);
                                    // i don like to go
                                    globalAnswer=negator.negatePresentSimpleContracted(object.gene);
                                    // i dont like going
                                    globalAnswer2=negator.negatePresentSimpleContracted(object.gene2);
                                    break;}
                        }else if(item.getType()==2){

                        }else if(item.getType()==3){

                        }

                        break;
                    case 55:
                        //so as adverb
                        if(item.getType()==0){
                            nouns.adjAdv("so ","tan ");
                            sp = nouns.gens;
                            globalAnswer=nouns.gene;
                        }else if(item.getType()==1){
                            nouns.GenNounAdj();
                            sp = nouns.gens;
                            globalAnswer=nouns.gene;
                        }else if(item.getType()==2){

                        }else if(item.getType()==3){

                        }

                        break;
                    case 56:
                        // think
                        if(item.getType()==0){
                            object.GenPresSimp(pronoun,7);
                            sp= object.gens;
                            globalAnswer=object.gene;
                        }else if(item.getType()==1){
                            int r2 = (int)  (Math.random()*2);
                            switch (r2){
                                case 0:
                                    gen1.GenVerbalAdjectives();
                                    sp = gen1.gens;
                                    globalAnswer=gen1.gene;
                                    break;

                                case 1:
                                    gen1.GenVerbalAdjectives();
                                    sp = negator.addNoAfterQue(gen1.gens);
                                    globalAnswer=negator.negateVerbalAdjective(gen1.gene);
                                    break;
                            }
                        }else if(item.getType()==2){

                        }else if(item.getType()==3){

                        }

                        break;
                    case 57:
                        // see
                        if(item.getType()==0){
                            object.GenPresSimp(pronoun,8);
                            sp= object.gens;
                            globalAnswer=object.gene;
                        }else if(item.getType()==1){
                            // wish past simple
                            int r2= (int)   (Math.random()*2);
                            switch (r2){
                                case 0:
                                    gen1.GenWishPastSimple2();
                                    sp = gen1.gens;
                                    globalAnswer=gen1.gene;

                                    break;

                                case 1:
                                    gen1.GenWishPastSimple2();
                                    sp = negator.negateSentenceSpanish(gen1.gens);
                                    globalAnswer=negator.negateWishPastSimple(gen1.gene2);
                                    break;
                            }
                        }else if(item.getType()==2){

                        }else if(item.getType()==3){

                        }

                        break;
                    case 58:
                        //which as determiner
                        if(item.getType()==0){
                            Nobles n3 = new Nobles();
                            int pos3 = (int) (Math.random() * 6);
                            n3.GenPresSimpWhich(pos3);
                            sp=n3.gens ;
                            globalAnswer=n3.gene;
                        }else if(item.getType()==1){
                            int r2= (int) (Math.random()*3);
                            switch (r2){
                                case 0:
                                    gen1.GenWishWould2();
                                    sp = gen1.gens;
                                    globalAnswer=gen1.gene;
                                    break;
                                case 1:
                                    nouns.GenWish(1);
                                    sp=nouns.gens;
                                    globalAnswer=nouns.gene;
                                    break;
                                case 2:
                                    nouns.GenWish(1);
                                    sp= negator.negateSentenceSpanish(nouns.gens);
                                    globalAnswer=nouns.gene2;//already negated gene2
                                    break;
                            }

                        }else if(item.getType()==2){

                        }else if(item.getType()==3){

                        }

                        break;
                    case 59:
                        // when
                        if(item.getType()==0){
                            object.GenPresSimpAdverbs3("when ","cuando ");
                            sp= object.gens;
                            globalAnswer=object.gene;
                        }else if(item.getType()==1){
                            int r2= (int)   (Math.random()*3);
                            switch (r2){
                                case 0:
                                    gen1.GenWishPastPerf2();
                                    sp= gen1.gens;
                                    globalAnswer=gen1.gene;
                                    break;
                                case 1:
                                    nouns.GenWish(2);
                                    sp=nouns.gens;
                                    globalAnswer=nouns.gene;
                                    break;

                                case 2:
                                    nouns.GenWish(2);
                                    sp=negator.negateSentenceSpanish(nouns.gens);
                                    globalAnswer=nouns.gene2;
                                    break;
                            }
                        }else if(item.getType()==2){

                        }else if(item.getType()==3){

                        }
                        break;
                    case 60:
                        // some


                        if(item.getType()==0){
                            gen.adjmethodP("some ");
                            sp= gen.gens;
                            globalAnswer=gen.gene;
                        }else if(item.getType()==1){

                            int r2= (int)   (Math.random()*2);
                            switch (r2){
                                case 0:
                                    nouns.GenComparativos();
                                    sp=nouns.gens;
                                    // i am
                                    globalAnswer=nouns.gene;
                                    //im
                                    globalAnswer2=negator.contractPresentContinuousPresent(nouns.gene);

                                    globalAnswer3=".";
                                    break;
                                case 1:
                                    nouns.GenComparativos();
                                    sp = negator.negateSentenceSpanishComp(nouns.gens);
                                    // he is not
                                    globalAnswer=negator.negateFirstAuxOrModal(nouns.gene);
                                    // he isnt
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(nouns.gene);
                                    //he s not
                                    globalAnswer3= negator.negateAndContractPresentContinuous(globalAnswer);
                                    break;


                            }
                        }else if(item.getType()==2){

                        }else if(item.getType()==3){

                        }
                        break;
                    case 61:
                        //them

                        if(item.getType()==0){
                            nouns.genPronoun("them ");
                            sp = nouns.gens;
                            globalAnswer=nouns.gene;
                        }else if(item.getType()==1){
                            int verbPos=(int)(Math.random()*nouns.verbsTagged.length);
                            int ob2=(int)(Math.random()* object.verbObjectsSpanish[verbPos].length);
                            String tempQuestion= nouns.generateQuestion(verbPos,ob2);
                            sp=nouns.genSpanishQuestion(tempQuestion,verbPos,ob2);
                            globalAnswer=tempQuestion;
                        }else if(item.getType()==2){

                        }else if(item.getType()==3){

                        }

                        break;
                    case 62:
                        // people noun

                        if(item.getType()==0){
                            nouns.nounGen("the people ","la gente ");
                            sp = nouns.gens;
                            globalAnswer=nouns.gene;
                        }else if(item.getType()==1){
                            //phrasal verbs
                            int r2= (int)   (Math.random()*2);
                            switch (r2){
                                case 0:
                                    object.GenPresSimpPhrasalVerbs();
                                    sp= object.gens;
                                    //
                                    globalAnswer=object.gene;
                                    globalAnswer2=".";
                                    break;
                                case 1:
                                    object.GenPresSimpPhrasalVerbs();
                                    sp = negator.negateSentenceSpanish(object.gens);
                                    // do not
                                    globalAnswer=negator.negatePresentSimple(object.gene);
                                    // does not
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(object.gene);
                                    break;
                            }
                        }else if(item.getType()==2){

                        }else if(item.getType()==3){

                        }
                        break;
                    case 63:
                        if(item.getType()==0){
                            // take
                            object.GenPresSimp(pronoun,9);
                            sp= object.gens;
                            globalAnswer=object.gene;
                        }else if(item.getType()==1){
                            String reporter="";
                            String reportersp="";

                            int r2= (int)(Math.random()*3);
                            switch (r2){
                                case 0:
                                    gen1.GenReportedSpeech1();
                                    sp = gen1.gens;
                                    globalAnswer=gen1.gene;
                                    break;
                                case 1:
                                    int rsrand=(int) (Math.random()*2);
                                    if(rsrand==1){
                                        reporter = "he said that " ;
                                        reportersp = "él dijo que " ;
                                    }else {
                                        reporter = "she said that ";
                                        reportersp = "ella dijo que ";
                                    }
                                    object.GenPastSimp();
                                    sp= reportersp + object.gens;
                                    globalAnswer=reporter+object.gene;
                                    break;
                                case 2:
                                    int rsrand2=(int) (Math.random()*2);
                                    if(rsrand2==1){
                                        reporter = "he said that " ;
                                        reportersp = "él dijo que " ;
                                    }else {
                                        reporter = "she said that ";
                                        reportersp = "ella dijo que ";
                                    }
                                    object.GenPastSimp();
                                    sp= reportersp +negator.negateSentenceSpanishOG(object.gens) ;
                                    globalAnswer=reporter+negator.negatePastSimple(object.gene2);
                                    break;
                            }


                        }else if(item.getType()==2){

                        }else if(item.getType()==3){

                        }



                        break;
                    case 64:


                        if(item.getType()==0){

                            nouns.genPronoun("me ");
                            sp = nouns.gens;
                            globalAnswer=nouns.gene;
                        }else if(item.getType()==1){
                            int r2= (int)   (Math.random()*5);
                            switch (r2){
                                case 0:
                                    gen1.GenAbleTo2();
                                    sp = gen1.gens;
                                    //i am
                                    globalAnswer=gen1.gene;
                                    // im
                                    globalAnswer2=negator.contractPresentContinuousPresent(gen1.gene);
                                    globalAnswer3=".";
                                    break;

                                case 1:
                                    object.GenGoingTo("will be able to ","will be able to ","will be able to ","podré ","podrás ", "podrá ", "podrémos ", "podrán ");
                                    sp=object.gens;
                                    // i will
                                    globalAnswer=object.gene;
                                    // ill be
                                    globalAnswer2=negator.contractWill(object.gene);

                                    globalAnswer3=".";
                                    break;

                                case 2:
                                    object.GenGoingTo("am able to ","are able to ","is able to ","soy capaz de ","eres capaz de ", "es capaz de ", "somos capaces de ", "son capaces de ");
                                    sp=object.gens;
                                    //he is
                                    globalAnswer=object.gene;
                                    // hes
                                    globalAnswer2= negator.contractPresentContinuousPresent(object.gene);

                                    globalAnswer3=".";
                                    break;
                                case 3:
                                    object.GenGoingTo("am able to ","are able to ","is able to ","soy capaz de ","eres capaz de ", "es capaz de ", "somos capaces de ", "son capaces de ");
                                    sp=negator.negateSentenceSpanish(object.gens);
                                    // i am not
                                    globalAnswer=negator.negateFirstAuxOrModal(object.gene);
                                    // he isnt
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(object.gene);
                                    // hes not
                                    globalAnswer3=negator.negateAndContractPresentContinuous(globalAnswer);
                                    break;
                                case 4:
                                    gen1.GenAbleTo2();
                                    sp = negator.negateSentenceSpanishOG(gen1.gens);
                                    // he is not
                                    globalAnswer=negator.negateFirstAuxOrModal(gen1.gene);
                                    // he isnt
                                    globalAnswer2=negator.negateFirstAuxOrModalContracted(gen1.gene);
                                    // hes not
                                    globalAnswer3=negator.negateAndContractPresentContinuous(globalAnswer);

                                    break;
                            }


                        }else if(item.getType()==2){

                        }else if(item.getType()==3){

                        }

                        break;
                    case 65:

                        if(item.getType()==0){
                            // out as adverb
                            object.GenPresSimpPrepasAdv("out ", "hacia afuera ");
                            sp= object.gens;
                            globalAnswer=object.gene;
                        }else if(item.getType()==1){
                            //incremento paralelo
                            gen1.GenIncrementoParalelo();
                            sp = gen1.gens;
                            globalAnswer=gen1.gene;


                        }else if(item.getType()==2){

                        }else if(item.getType()==3){

                        }


                        break;
                    case 66:


                        if(item.getType()==0){
                            nouns.genPreps("into");
                            sp = nouns.gens;
                            globalAnswer=nouns.gene;
                        }else if(item.getType()==1){
                            int r2= (int) (Math.random()*3);

                            switch (r2){
                                case 0:
                                    nouns.GenRelativeClauses();
                                    sp=nouns.gens;
                                    globalAnswer=nouns.gene;
                                    break;
                                case 1:
                                    gen1.GenRelativeClauses1();
                                    sp= gen1.gens;
                                    globalAnswer=gen1.gene;
                                    break;

                                case 2:
                                    n.GenRelativeClauses1New();
                                    sp=n.gens;
                                    globalAnswer=n.gene;
                                    break;
                            }



                        }else if(item.getType()==2){

                        }else if(item.getType()==3){

                        }
                        break;
                    case 67:

                        if(item.getType()==0){
                            // just adverb
                            object.GenPresSimpAdverbs("just ","solo ");
                            sp= object.gens;
                            globalAnswer=object.gene;
                        }else if(item.getType()==1){

                            nouns.GenJustPhrasalVerbs();
                            sp= nouns.gens;
                            globalAnswer=nouns.gene;

                        }else if(item.getType()==2){

                        }else if(item.getType()==3){

                        }
                        break;
                    case 68:

                        if(item.getType()==0){

                            nouns.genPronoun("him ");
                            sp = nouns.gens;
                            globalAnswer=nouns.gene;
                        }else if(item.getType()==1){
                            gen1.GenWantYouTo2();
                            sp = gen1.gens;
                            globalAnswer=gen1.gene;


                        }else if(item.getType()==2){

                        }else if(item.getType()==3){

                        }
                        break;
                    case 69:
                        // come
                        object.GenPresSimp(pronoun,10);
                        sp= object.gens;
                        globalAnswer=object.gene;
                        break;
                    case 70:
                        //my
                        gen.adjmethod("your ");
                        sp= gen.gens;
                        globalAnswer=gen.gene;
                        break;
                    case 71:
                        // now adverb
                        object.GenPresSimpAdverbs2("now ","ahora ");
                        sp= object.gens;
                        globalAnswer=object.gene;

                        break;
                    case 72:
                        // could
                        object.GenPresSimpModals("could ","podría ","podrías ","podría ","podríamos ","podrían ");
                        sp= object.gens;
                        globalAnswer=object.gene;
                        break;
                    case 73:
                        // than
                        nouns.GenThan();
                        sp = nouns.gens;
                        globalAnswer=nouns.gene;

                        break;
                    case 74:
                        // like
                        nouns.genPreps("like");
                        sp = nouns.gens;
                        globalAnswer=nouns.gene;
                        break;
                    case 75:
                        // other
                        nouns.adjectiveGen("other ","otro ","otra ");
                        sp = nouns.gens ;
                        globalAnswer=nouns.gene;
                        break;
                    case 76:
                        //then as adverb
                        //then adverb
                        object.GenPresSimpAdverbs2("then ","entonces ");
                        sp= object.gens;
                        globalAnswer=object.gene;
                        break;
                    case 77:


                        break;
                    case 78:
                        //my
                        gen.adjmethod("its ");
                        sp= gen.gens;
                        globalAnswer=gen.gene;
                        break;
                    case 79:
                        // two
                        gen.adjmethodP("two ");
                        sp= gen.gens;
                        globalAnswer=gen.gene;
                        break;
                    case 80:
                        //my
                        gen.adjmethod("our ");
                        sp= gen.gens;
                        globalAnswer=gen.gene;
                        break;
                    case 81:
                        // more
                        object.GenPresSimpAdverbs2("more ","mas ");
                        sp = object.gens;
                        globalAnswer=object.gene;
                        break;
                    case 82:
                        // these
                        gen.adjmethodP("these ");
                        sp= gen.gens;
                        globalAnswer=gen.gene;
                        break;
                    case 83:
                        // want
                        object.GenPresSimp(pronoun,11);
                        sp = object.gens; // Removed the "+"-"+" part and added a semicolon as requested.
                        globalAnswer = object.gene; // Assigning object.gene to globalAnswer as per your instructions.
                        break; //
                    case 84:
                        nouns.nounGen("the way ","el camino ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;

                    case 85:
                        gen.adjmethod("no ");
                        sp = gen.gens;
                        globalAnswer = gen.gene;
                        break;
                    case 86:
                        object.GenPresSimp(pronoun,12);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 87:
                        gen.adjmethod("first ");
                        sp = gen.gens;
                        globalAnswer = gen.gene;
                        break;
                    case 88:
                        object.GenPresSimpAdverbs2("also ", "también ");
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 89:
                        nouns.adjectiveGen("new ", "nuevo ", "nueva ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;

                    case 90:
                        // because conj
                        object.GenConj("because ", "por que ");
                        gen1.GenPresSimp2();
                        complemento= gen1.gens;
                        complement = gen1.gene;
                        sp = object.gens+" "+ complemento;
                        globalAnswer=object.gene+" "+complement;

                        break;
                    case 91:
                        nouns.nounGen("the day ", "el día ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 92:
                        gen.adjmethodP("more ");
                        sp = gen.gens;
                        globalAnswer = gen.gene;
                        break;
                    case 93:
                        object.GenPresSimp(pronoun, 13);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 94:
                        nouns.nounGen("the man ", "el hombre ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 95:
                        object.GenPresSimpAdverbs2("here ", "aquí ");
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 96:
                        object.GenPresSimp(pronoun, 14);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 97:
                        object.GenPresSimp(pronoun, 15);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 98:
                        nouns.nounGen("the thing ", "la cosa ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 99:
                        object.GenPresSimpAdverbs2("well ", "bien ");
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 100:
                        gen.adjmethodP("many ");
                        sp = gen.gens;
                        globalAnswer = gen.gene;
                        break;

                    case 101:
                        object.GenPresSimpAdverbs("only ", "solamente ");
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 102:
                        gen.adjmethodP("those ");
                        sp = gen.gens;
                        globalAnswer = gen.gene;
                        break;
                    case 103:
                        object.GenPresSimp(pronoun, 16);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 104:
                        nouns.adjAdv("very ", "muy ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 105:
                        nouns.genPronoun("one ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 106:
                        object.GenPresSimpAdverbs("even ", "incluso ");
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 107:
                        nouns.genPronoun("her ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 108:
                        object.GenPresSimpPrepasAdv("back", "hacia atras");
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 109:
                        gen.adjmethod("any ");
                        sp = gen.gens;
                        globalAnswer = gen.gene;
                        break;
                    case 110:
                        nouns.adjectiveGen("good ", "buen ", "buena ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;

                    case 111:
                        nouns.genPronoun("us ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 112:
                        nouns.genPreps("through");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 113:
                        nouns.nounGen("the woman ", "la mujer ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 114:
                        nouns.nounGen("life ", "la vida ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 115:
                        nouns.nounGen("the child ", "el niño ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 116:
                        object.GenPresSimpAdverbs2("there ", "ahí ");
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 117:
                        // down
                        object.GenPresSimpPrepasAdv("down ", "hacia abajo");
                        sp= object.gens;
                        globalAnswer=object.gene;
                        break;
                    case 118:
                        nouns.nounGen("the work ", "el trabajo ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 119:
                        nouns.genPreps("after");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 120:
                        object.GenPresSimp(pronoun, 18);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;

                    case 121:
                        // may
                        object.GenMay("may ","puede que ");
                        sp= object.gens;
                        globalAnswer= object.gene;
                        break;
                    case 122:
                        nouns.nounGen("the world ", "el mundo ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 123:
                        nouns.genPreps("over");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 124:
                        object.GenPresSimpModals("should ", "debería ", "deberías ", "debería ", "deberíamos ", "deberían ");
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 125:
                        object.GenPresSimpAdverbs("still ", "aún ");
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 126:
                        object.GenPresSimp(pronoun, 19);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 127:
                        object.GenPresSimpPrepasAdv("in", "hacia adentro ");
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 128:
                        nouns.nounGen("the school ", "la escuela ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 129:
                        object.GenPresSimpAdverbs3("as ", "En la manera en que ");
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 130:
                        gen.adjmethod("last ");
                        sp = gen.gens;
                        globalAnswer = gen.gene;
                        break;

                    case 131:
                        object.GenPresSimp(pronoun, 20);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 132:
                        object.GenPresSimpAdverbs2("too ", "tambien ");
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 133:
                        object.GenPresSimp(pronoun, 21);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 134:
                        gen.adjmethodP("three ");
                        sp = gen.gens;
                        globalAnswer = gen.gene;
                        break;
                    case 135:
                        object.GenPresSimp(pronoun, 22);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 136:
                        object.GenPresSimpAdverbs3("When ", "Cuando ");
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 137:
                        object.GenPresSimp(pronoun, 23);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 138:
                        nouns.nounGen("The state ", "El estado ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 139:
                        object.GenPresSimpAdverbs("never ", "nunca ");
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 140:
                        nouns.genPreps("between");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;

                    case 141:
                        nouns.adjectiveGen("high ", "alto ", "alta ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 142:
                        nouns.genPronoun("something ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 143:
                        object.GenPresSimpAdverbs("really ", "realmente ");
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 144:
                        nouns.adjAdv2("the most ", "el mas ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 145:
                        gen.adjmethod("another ");
                        sp = gen.gens;
                        globalAnswer = gen.gene;
                        break;
                    case 146:
                        gen.uncountableNounsGen();
                        sp = gen.gens;
                        globalAnswer = gen.gene;
                        break;
                    case 147:
                        gen.adjmethod("own ");
                        sp = gen.gens;
                        globalAnswer = gen.gene;
                        break;
                    case 148:
                        nouns.nounGen("the family ", "la familia ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 149:
                        nouns.genPreps("out");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 150:
                        nouns.nounGen("the house ", "la casa ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;

                    case 151:
                        object.GenPresSimp(pronoun, 24);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 152:
                        Intrans intrans = new Intrans();
                        int in =(int)(Math.random()*intrans.at.length);
                        String atArraysp=intrans.aten[in];
                        String atArrayeng=intrans.at[in];
                        object.GenPresSimp(pronoun, 25);
                        sp = object.gens+ atArraysp;
                        globalAnswer = object.gene+atArrayeng;
                        break;
                    case 153:
                        nouns.adjectiveGen("old ", "viejo ", "vieja ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 154:
                        nouns.genPreps("on");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 155:
                        object.GenConj("while ", "mientras que ");
                        object2.GenPresSimp();
                        sp = object.gens + object2.gens;
                        globalAnswer=object.gene + object2.gene;
                        break;
                    case 156:
                        object.GenPresSimp(pronoun, 26);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 157:
                        object.GenPresSimp(pronoun, 27);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 158:
                        object.GenPresSimpAdverbs3("why ", "la razón por la cual ");
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 159:
                        nouns.nounGen("the president ", "el presidente ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 160:
                        object.GenPresSimp(pronoun, 28);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;

                    case 161:
                        nouns.adjectiveGen("same ", "mismo ", "misma ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 162:
                        nouns.adjectiveGen("great ", "grandioso ", "grandiosa ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 163:
                        object.GenPresSimp(pronoun, 29);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 164:
                        nouns.adjectiveGen("big ", "gran ", "gran ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 165:
                        object.GenPresSimp(pronoun, 30);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 166:
                        nouns.nounGen("the group ", "el grupo ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 167:
                        nouns.nounGen("the country ", "el país ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 168:
                        object.GenPresSimp(pronoun, 31);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 169:
                        nouns.nounGen("the problem ", "el problema ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;

                    case 170:
                        // where
                        object.GenConj("where ", "donde ");
                        object2.GenPresSimp();
                        complemento= object2.gens;
                        complement = object2.gene;
                        sp = object.gens+complemento;
                        globalAnswer=object.gene+complement;
                        break;
                    case 171:
                        object.GenPresSimp(pronoun, 32);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 172:
                        nouns.nounGen("the student ", "el estudiante ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 173:
                        gen.adjmethod("every ");
                        sp = gen.gens;
                        globalAnswer = gen.gene;
                        break;
                    case 174:
                        nouns.nounGen("the hand ", "la mano ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 175:
                        object.GenPresSimp(pronoun, 33);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 176:
                        nouns.genPreps("against");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 177:
                        object.GenPresSimp(pronoun, 34);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 178:
                        nouns.adjectiveGen2("american ", "americano ", "americana ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 179:
                        nouns.nounGen("the part ", "la parte ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 180:
                        object.GenPresSimp(pronoun, 35);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;

                    case 181:
                        object.genAbout();
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 182:
                        object.genOver();
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 183:
                        object.GenPresSimpSubjunctive("might ", "quiza ");
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 184:
                        gen.adjmethod("such ");
                        sp = gen.gens;
                        globalAnswer = gen.gene;
                        break;
                    case 185:
                        nouns.nounGen("the place ", "el lugar ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 186:
                        object.GenPresSimpAdverbs2("again ", "otra vez ");
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 187:
                        nouns.nounGen("the city ", "la ciudad ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 188:
                        nouns.nounGen("the case ", "el caso ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 189:
                        gen.adjmethodP("most ");
                        sp = gen.gens;
                        globalAnswer = gen.gene;
                        break;
                    case 190:
                        gen.adjmethodP("few ");
                        sp = gen.gens;
                        globalAnswer = gen.gene;
                        break;

                    case 191:
                        nouns.nounGen("the system ", "el sistema ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 192:
                        nouns.nounGen("the week ", "la semana ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 193:
                        object.GenPresSimpAdverbs3("where ", "en donde ");
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 194:
                        nouns.nounGen("the company ", "la empresa ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 195:
                        gen.adjmethod("each ");
                        sp = gen.gens;
                        globalAnswer = gen.gene;
                        break;
                    case 196:
                        nouns.nounGen("the percent ", "el porcentaje ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 197:
                        object.GenPresSimp(pronoun, 36);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;

                    case 198:
                        // so/ conjunction
                        object.GenConj("so", "así que ");
                        object2.GenPresSimp();
                        complemento= object2.gens;
                        complement = object2.gene;
                        sp = object.gens+" "+ complemento;
                        globalAnswer=object.gene+" "+complement;
                        break;
                    case 199:
                        nouns.genPreps("during");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 200:
                        nouns.nounGen("the question ", "la pregunta ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 201:
                        // right/adverb
                        object.GenConj("right ", "correctamente");
                        sp=object.gens;
                        globalAnswer=object.gene;
                        break;
                    case 202:
                        nouns.nounGen("the program ", "el programa ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 203:
                        object.GenPresSimp(pronoun, 17);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 204:
                        object.GenPresSimp(pronoun, 37);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 205:
                        nouns.nounGen("the number ", "el número ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 206:
                        nouns.adjectiveGen("small ", "pequeño ", "pequeña ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 207:
                        nouns.nounGen("the government ", "el gobierno ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 208:
                        object.GenPresSimp(pronoun, 38);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 209:
                        object.GenOff();
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 210:
                        object.GenPresSimp(pronoun, 39);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;

                    case 211:
                        object.GenPresSimp(pronoun, 40);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 212:
                        object.GenPresSimpAdverbs("always ", "siempre ");
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 213:
                        nouns.nounGen("the night ", "la noche ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 214:
                        object.GenPresSimp(pronoun, 41);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 215:
                        object.GenPresSimpAdverbs2("today ", "hoy ");
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 216:
                        object.GenPresSimp(pronoun, 42);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 217:
                        nouns.nounGen("the point ", "el punto ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 218:
                        object.GenPresSimp(pronoun, 43);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 219:
                        object.genHappen();
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 220:
                        object.GenPresSimp(pronoun, 44);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;

                    case 221:
                        gen.adjmethod("next ");
                        sp = gen.gens;
                        globalAnswer = gen.gene;
                        break;
                    case 222:
                        nouns.genPreps("without");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 223:
                        nouns.genPreps("before");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 224:
                        nouns.adjectiveGen2("large ", "grande ", "gran ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 225:
                        object.GenPresSimpModals("must ", "debo ", "debes ", "debe ", "debemos ", "deben ");
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 226:
                        gen.adjmethodP("all");
                        sp = gen.gens;
                        globalAnswer = gen.gene;
                        break;
                    case 227:
                        nouns.nounGen("the war ", "la guerra ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 228:
                        nouns.nounGen("the home ", "el hogar ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 229:
                        nouns.genPreps("under");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 230:
                        nouns.nounGen("the room ", "el cuarto ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;

                    case 231:
                        nouns.nounGen("the fact ", "el hecho ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 232:
                        nouns.nounGen("the area ", "la zona ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 233:
                        nouns.adjectiveGen2("national ", "nacional ", "nacional ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 234:
                        object.GenPresSimp(pronoun, 45);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 235:
                        nouns.nounGen("the money ", "el dinero ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 236:
                        nouns.nounGen("the right ", "el derecho ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 237:
                        nouns.nounGen("the story ", "la historia ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 238:
                        nouns.nounGen("the water ", "el agua ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 239:
                        nouns.nounGen("the mother ", "la madre ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 240:
                        nouns.adjectiveGen2("different ", "diferente ", "diferente ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;

                    case 241:
                        nouns.adjectiveGen2("young ", "joven ", "joven ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 242:
                        nouns.nounGen("the month ", "el mes ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 243:
                        nouns.nounGen("the lot ", "el lote ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 244:
                        nouns.nounGen("the book ", "el libro ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 245:
                        nouns.nounGen("the eye ", "el ojo ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 246:
                        nouns.nounGen("the study ", "el estudio ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 247:
                        nouns.nounGen("the job ", "el trabajo ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 248:
                        nouns.nounGen("the kind ", "el tipo ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 249:
                        // Note: This seems to be a repeat of case 248 with an incorrect description. Adjusting to "the word", "la palabra".
                        nouns.nounGen("the word ", "la palabra ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 250:
                        nouns.nounGen("the issue ", "el tema ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 251:
                        nouns.nounGen("the side ", "el lado ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 252:
                        gen.adjmethodP("four ");
                        sp = gen.gens;
                        globalAnswer = gen.gene;
                        break;
                    case 253:
                        nouns.nounGen("the business ", "el negocio ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;

                    case 254:
                        // though
                        object.GenConjFuture("though", "aún que");
                        object2.GenPresSimpSubjunctive();
                        complemento= object2.gens;
                        complement = object2.gene;
                        sp = object.gens+" "+ complemento;
                        globalAnswer=object.gene+" "+complement;
                        break;
                    case 255:
                        nouns.nounGen("the head ", "la cabeza ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 256:
                        object.GenPresSimpAdverbs2("far ", "lejos ");
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 257:
                        nouns.adjectiveGen2("long ", "largo ", "larga ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 258:
                        nouns.adjectiveGen2("black ", "negro ", "negra ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 259:
                        gen.adjmethodP("million");
                        sp = gen.gens;
                        globalAnswer = gen.gene;
                        break;
                    case 260:
                        gen.adjmethodP("both ");
                        sp = gen.gens;
                        globalAnswer = gen.gene;
                        break;
                    case 261:
                        nouns.adjectiveGen2("little ", "chiquito ", "chiquita ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;

                    case 262:
                        // yes
                        sp="yes/ si ";
                        break;
                    case 263:
                        // after
                        object.GenConj("after ", " después de que ");
                        object2.GenPresSimp();
                        complemento= object2.gens;
                        complement = object2.gene;
                        sp = object.gens+ complemento;
                        globalAnswer=object.gene+complement;
                        break;
                    case 264:
                        // since
                        object.GenConj("since ", "ya que ");
                        object2.GenPresSimp();
                        complemento= object2.gens;
                        complement = object2.gene;
                        sp = object.gens+complemento;
                        globalAnswer=object.gene+complement;
                        break;
                    case 265:
                        nouns.genPreps("around");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 266:
                        // Adjusted to reflect the intended "around" functionality; assuming a placeholder method was mentioned.
                        // If "genLong" was intended for "long", this case requires clarification or adjustment to fit "around".
                        object.genLong(); // Placeholder for the correct functionality.
                        sp = object.gens ;
                        globalAnswer=object.gene;
                        break;
                    case 267:
                        object.GenPresSimp(pronoun, 46);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 268:
                        nouns.nounGen("the service ", "el servicio ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 269:
                        nouns.adjectiveGen("important ", "importante ", "importante ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 270:
                        object.GenPresSimp(pronoun, 47);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 271:
                        object.GenPresSimpPrepasAdv("away ", "lejos ");
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 272:
                        nouns.nounGen("the friend ", "el amigo ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 273:
                        object.GenPresSimpAdverbs3("however ", "como sea que ");
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 274:
                        nouns.nounGen("the power ", "el poder ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;

                    case 275:
                        //
                        sp="no/no";
                        break;
                    case 276:
                        // yet adverb
                        Nobles nob = new Nobles();
                        nob.GenPresPerfVocab("yet ", "todavía ");
                        sp = nob.gens;
                        globalAnswer=nob.gene;
                        break;
                    case 277:
                        // father
                        nouns.nounGen("the father ","el padre ");
                        sp = nouns.gens;
                        globalAnswer=nouns.gene;
                        break;
                    case 278:
                        // hour
                        nouns.nounGen("the hour ","la hora ");
                        sp = nouns.gens;
                        globalAnswer=nouns.gene;
                        break;
                    case 279:
                        // often adverb
                        object.GenPresSimpAdverbs2("often ","seguido ");
                        sp = object.gens;
                        globalAnswer=object.gene;
                        break;
                    case 280:
                        // until
                        object.GenConjFuture("until", "hasta que");
                        object2.GenPresSimpSubjunctive();
                        complemento= object2.gens;
                        complement = object2.gene;
                        sp = object.gens+" "+ complemento;
                        globalAnswer=object.gene+" "+complement;
                        break;
                    case 281:
                        //political
                        nouns.adjectiveGen("political ","politico ","politica ");
                        sp = nouns.gens ;
                        globalAnswer=nouns.gene;
                        break;
                    case 282:
                        // line
                        nouns.nounGen("the line ","la linea ");
                        sp = nouns.gens;
                        globalAnswer=nouns.gene;
                        break;
                    case 283:
                        //end
                        nouns.nounGen("the end ","el fin ");
                        sp = nouns.gens;
                        globalAnswer=nouns.gene;
                        break;
                    case 284:
                        // stand
                        object.GenPresSimp(pronoun,48);
                        sp= object.gens;
                        globalAnswer=object.gene;
                        break;
                    case 285:
                        //among
                        nouns.genPreps("among");
                        sp = nouns.gens;
                        globalAnswer=nouns.gene;
                        break;
                    case 286:
                        // game
                        nouns.nounGen("the game ","el juego ");
                        sp = nouns.gens;
                        globalAnswer=nouns.gene;
                        break;
                    case 287:
                        //ever adverb
                        Nobles nob2 = new Nobles();
                        nob2.GenPresPerfVocab("ever ", "nunca ");
                        sp = nob2.gens;
                        globalAnswer=nob2.gene;

                        break;
                    case 288:
                        // lose
                        object.GenPresSimp(pronoun,49);
                        sp= object.gens;
                        globalAnswer=object.gene;
                        break;
                    case 289:
                        //bad
                        nouns.adjectiveGen2("bad ","mal ","mala ");
                        sp = nouns.gens ;
                        globalAnswer=nouns.gene;
                        break;
                    case 290:
                        //member
                        nouns.nounGen("the member ","el miembro ");
                        sp = nouns.gens;
                        globalAnswer=nouns.gene;
                        break;
                    case 291:
                        // meet
                        object.GenPresSimp(pronoun,50);
                        sp= object.gens;
                        globalAnswer=object.gene;
                        break;
                    case 292:
                        // pay
                        object.GenPresSimp(pronoun,51);
                        sp= object.gens;

                        globalAnswer=object.gene;
                        break;
                    case 293:
                        // law
                        nouns.nounGen("the law ","la ley ");
                        sp = nouns.gens;
                        globalAnswer=nouns.gene;
                        break;
                    case 294:
                        //almost
                        object.GenAlmost("almost ", "casi ");
                        sp= object.gens;
                        globalAnswer=object.gene;
                        break;
                    case 295:
                        // car
                        nouns.nounGen("the car ","el carro ");
                        sp = nouns.gens;
                        globalAnswer=nouns.gene;
                        break;
                    case 296:
                        // later adverb
                        object.GenPresSimpAdverbs2("later ","mas tarde ");
                        sp = object.gens;
                        globalAnswer=object.gene;
                        break;
                    case 297:
                        //much
                        object.GenPresSimpAdverbs2("much ","mucho ");
                        sp = object.gens;
                        globalAnswer=object.gene;
                        break;
                    case 298:
                        //name
                        nouns.nounGen("the name ","el nombre ");
                        sp = nouns.gens;
                        globalAnswer=nouns.gene;
                        break;
                    case 299:
                        // include
                        object.GenPresSimp(pronoun,52);
                        sp= object.gens;
                        globalAnswer=object.gene;
                        break;
                    case 300:
                        //five
                        gen.adjmethodP("five ");
                        sp= gen.gens;
                        globalAnswer=gen.gene;
                        break;
                    case 301:
                        // center
                        nouns.nounGen("the center ","el centro ");
                        sp = nouns.gens;
                        globalAnswer=nouns.gene;
                        break;
                    case 302:
                        // once adverb
                        object.GenPresSimpAdverbs2("once ","una vez ");
                        sp = object.gens;
                        globalAnswer=object.gene;
                        break;
                    case 303:
                        //university
                        nouns.nounGen("the university ","la universidad ");
                        sp = nouns.gens;
                        globalAnswer =nouns.gene;
                        break;
                    case 304:
                        // continue
                        object.GenPresSimp(pronoun,53);
                        sp= object.gens;
                        globalAnswer=object.gene;
                        break;
                    case 305:
                        // least
                        nouns.adjAdv("the least ","el menos ");
                        sp = nouns.gens;
                        globalAnswer=nouns.gene;
                        break;
                    case 306:
                        //real
                        nouns.adjectiveGen2("real ","real ","real ");
                        sp = nouns.gens ;
                        globalAnswer=nouns.gene;
                        break;
                    case 307:
                        nouns.adjectiveGen2("white ", "blanco ", "blanca ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 308:
                        object.GenPresSimp(pronoun, 54);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 309:
                        object.GenPresSimp(pronoun, 55);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 310:
                        gen.adjmethodP("several ");
                        sp = gen.gens;
                        globalAnswer = gen.gene;
                        break;
                    case 311:
                        object.GenAgo();
                        sp = object.gens;
                        globalAnswer=object.gene;
                        break;
                    case 312:
                        nouns.nounGen("the information ", "la información ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 313:
                        nouns.genPronoun("nothing ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 314:
                        nouns.nounGen("the community ", "la comunidad ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 315:
                        nouns.adjectiveGen("best ", "mejor ", "mejor ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 316:
                        nouns.adjectiveGen2("right ", "correcto ", "correcta ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 317:
                        nouns.nounGen("the idea ", "la idea ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 318:
                        object.GenPresSimp(pronoun, 56);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 319:
                        nouns.nounGen("the body ", "el cuerpo ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 320:
                        object.GenPresSimp(pronoun, 57);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;

                    case 321:
                        nouns.nounGen("the kid ", "el niño ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 322:
                        nouns.nounGen("the minute ", "el minuto ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 323:
                        nouns.nounGen("the table ", "la mesa ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 324:
                        // Assuming the presence of a method to handle conditional or future conjunctive scenarios.
                        // The provided adaptation reflects a hypothetical implementation based on your description.
                        object.GenConjFuture("whether", "ya sea que");
                        object2.GenPresSimpSubjunctive(); // Assuming a placeholder for actual method implementation.
                        complemento = object2.gens;
                        complement = object2.gene;
                        sp = object.gens + " " + complemento + "o no";
                        globalAnswer=object.gene + " " + complement + "or not";
                        break;
                    case 325:
                        object.GenPresSimp(pronoun, 58);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 326:
                        nouns.nounGen("the team ", "el equipo ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 327:
                        nouns.nounGen("the back ", "la espalda ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 328:
                        object.GenPresSimp(pronoun, 59);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 329:
                        object.GenPresSimpAdverbs2("together ", "juntos ");
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 330:
                        object.GenPresSimp(pronoun, 60);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;

                    case 331:
                        object.GenPresSimpAdverbs2("around ", "al rededor ");
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 332:
                        nouns.adjectiveGen("only ", "único ", "única ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 333:
                        object.GenPresSimp(pronoun, 61);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 334:
                        nouns.nounGen("the face ", "la cara ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 335:
                        nouns.genPronoun("anything ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 336:
                        nouns.adjectiveGen2("public ", "publico ", "publica ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 337:
                        nouns.adjectiveGen2("social ", "social ", "social ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 338:
                        genA.GenPastSimp1(); // Placeholder for actual implementation.
                        sp = genA.gens + "ya ";
                        globalAnswer=genA.gene + "already";
                        break;
                    case 339:
                        nouns.nounGen("the parent ", "el padre ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 340:
                        object.GenPresSimp(pronoun, 62);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 341:
                        object.GenPresSimp(pronoun, 63);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 342:
                        nouns.nounGen("the office ", "la oficina ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 343:
                        object.GenPresSimp(pronoun, 64);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 344:
                        nouns.nounGen("the level ", "el nivel ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 345:
                        object.GenPresSimp(pronoun, 65);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 346:
                        object.GenPresSimp(pronoun, 66);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 347:
                        nouns.nounGen("the person ", "la persona ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 348:
                        nouns.nounGen("the door ", "la puerta ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 349:
                        nouns.adjectiveGen("sure ", "seguro ", "segura ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 350:
                        object.GenPresSimp(pronoun, 67);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;

                    case 351:
                        // street
                        nouns.nounGen("the street ","la calle ");
                        sp = nouns.gens;
                        globalAnswer=nouns.gene;
                        break;
                    case 352:
                        // such
                        nouns.genPreps("such");
                        sp = nouns.gens;
                        globalAnswer=nouns.gene;
                        break;
                    case 353:
                        // history
                        nouns.nounGen("the history ","la historia ");
                        sp = nouns.gens;
                        globalAnswer=nouns.gene;
                        break;
                    case 354:
                        //party
                        nouns.nounGen("the party ","la fiesta ");
                        sp = nouns.gens;
                        globalAnswer=nouns.gene;
                        break;
                    case 355:
                        // grow
                        object.GenPresSimp(pronoun,68);
                        sp= object.gens;
                        globalAnswer=object.gene;
                        break;
                    case 356:
                        // reason
                        nouns.nounGen("the reason ","la razón ");
                        sp = nouns.gens;
                        globalAnswer=nouns.gene;
                        break;
                    case 357:
                        //morning
                        nouns.nounGen("the morning ","la mañana ");
                        sp = nouns.gens;
                        globalAnswer=nouns.gene;
                        break;
                    case 358:
                        // open
                        object.GenPresSimp(pronoun,69);
                        sp= object.gens;
                        globalAnswer=object.gene;
                        break;
                    case 359:
                        // within
                        nouns.genPreps("within");
                        sp = nouns.gens;
                        globalAnswer=nouns.gene;
                        break;
                    case 360:
                        // change
                        nouns.nounGen("the change ","el cambio ");
                        sp = nouns.gens;
                        globalAnswer=nouns.gene;
                        break;
                    case 361:
                        //although
                        object.GenConjFuture("although", "aún que");
                        object2.GenPresSimpSubjunctive();
                        complemento= object2.gens;
                        complement = object2.gene;
                        sp = object.gens+" "+ complemento;
                        globalAnswer=object.gene+" "+complement;
                        break;
                    case 362:
                        // walk
                        object.GenPresSimp(pronoun,70);
                        sp= object.gens;
                        globalAnswer=object.gene;
                        break;
                    case 363:
                        // news
                        nouns.nounGen("the news ","las noticias ");
                        sp = nouns.gens;
                        globalAnswer=nouns.gene;
                        break;
                    case 364:
                        nouns.nounGen("the health ", "la salud ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 365:
                        nouns.nounGen("the court ", "la corte ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 366:
                        nouns.nounGen("the force ", "la fuerza ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 367:
                        nouns.adjectiveGen("early ", "temprano ", "temprana ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 368:
                        nouns.genPronoun("himself ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 369:
                        nouns.nounGen("the air ", "el aire ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 370:
                        nouns.adjectiveGen("low ", "bajo ", "baja ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;

                    case 371:
                        // before conjunction
                        object.GenConjFuture("before", "antes de que");
                        object2.GenPresSimpSubjunctive();
                        complemento= object2.gens;
                        complement = object2.gene;
                        sp = object.gens+" "+ complemento;
                        globalAnswer=object.gene+" "+complement;
                        break;
                    case 372:
                        nouns.nounGen("the art ", "el arte ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 373:
                        nouns.nounGen("the result ", "el resultado ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;

                    case 374:
                        nouns.nounGen("the moment ", "el momento ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 375:
                        object.GenPresSimp(pronoun, 71);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 376:
                        gen.adjmethodP("both ");
                        sp = gen.gens;
                        globalAnswer = gen.gene;
                        break;
                    case 377:
                        object.GenPresSimp(pronoun, 72);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 378:
                        nouns.nounGen("the research ", "la investigación ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 379:
                        object.GenPresSimpAdverbs2NoObject("enough ", "suficiente ");
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 380:
                        nouns.nounGen("the girl ", "la niña ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 381:
                        nouns.nounGen("the boy ", "el niño ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 382:
                        object.GenPresSimp(pronoun, 73);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 383:
                        nouns.nounGen("the food ", "la comida ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 384:
                        nouns.genPreps("across");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 385:
                        nouns.nounGen("the guy ", "el tipo ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 386:
                        gen.adjmethod("second ");
                        sp = gen.gens;
                        globalAnswer = gen.gene;
                        break;
                    case 387:
                        nouns.adjectiveGen("able ", "capaz ", "capaz ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 388:
                        nouns.genPreps("toward");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 389:
                        object.GenPresSimpAdverbs("maybe ", "quizá ");
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 390:
                        nouns.nounGen("the process ", "el proceso ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 391:
                        nouns.genPreps("off");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 392:
                        nouns.genPronoun("everything ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 393:
                        object.GenPresSimp(pronoun, 74);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 394:
                        nouns.nounGen("the age ", "la edad ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 395:
                        nouns.nounGen("the policy ", "la política ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 396:
                        object.GenPresSimp(pronoun, 75);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 397:
                        nouns.genPreps("including");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 398:
                        object.GenPresSimpAdverbs("probably ", "probablemente ");
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 399:
                        nouns.nounGen("the education ", "la educación ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 400:
                        object.GenPresSimp(pronoun, 76);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;

                    case 401:
                        object.GenPresSimpAdverbs("actually ", "de hecho ");
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 402:
                        object.GenPresSimp(pronoun, 77);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 403:
                        object.GenPresSimp(pronoun, 78);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 404:
                        object.GenPresSimp(pronoun, 79);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 405:
                        nouns.adjectiveGen2("human ", "humano ", "humana ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 406:
                        object.GenPresSimp(pronoun, 80);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 407:
                        nouns.nounGen("the fee ", "la multa ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 408:
                        object.GenPresSimp(pronoun, 81);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 409:
                        object.GenPresSimp(pronoun, 82);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 410:
                        nouns.nounGen("the sense ", "el sentido ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 411:
                        nouns.nounGen("the teacher ", "el maestro ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 412:
                        object.GenPresSimpPrepasAdv("home ", "hacia la casa ");
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 413:
                        nouns.nounGen("the market ", "el mercado ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 414:
                        object.GenPresSimp(pronoun, 83);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 415:
                        object.GenPresSimp(pronoun, 84);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 416:
                        nouns.nounGen("the nation ", "la nación ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 417:
                        object.GenPresSimp(pronoun, 85);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 418:
                        // Case 418 seems to be a placeholder or unique case without specific instructions.
                        sp = "oh";
                        break;
                    case 419:
                        nouns.nounGen("the death ", "la muerte ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 420:
                        nouns.nounGen("the plan ", "el plan ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;

                    case 421:
                        nouns.nounGen("the interest ", "el interés ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 422:
                        nouns.genPronoun("someone ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 423:
                        nouns.nounGen("the experience ", "la experiencia ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 424:
                        object.GenPresSimp(pronoun, 86);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 425:
                        object.GenPresSimp(pronoun, 87);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 426:
                        nouns.genPreps("behind");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 427:
                        object.GenPresSimp(pronoun, 88);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 428:
                        gen.adjmethodP("six ");
                        sp = gen.gens;
                        globalAnswer = gen.gene;
                        break;
                    case 429:
                        nouns.adjectiveGen2("local ", "local ", "local ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 430:
                        object.GenPresSimp(pronoun, 89);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 431:
                        nouns.nounGen("the effect ", "el efecto ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 432:
                        object.GenPresSimp(pronoun, 90);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 433:
                        nouns.nounGen("the use ", "el uso ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 434:
                        nouns.nounGen("the control ", "el control ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 435:
                        object.GenPresSimpAdverbs("perhaps ", "tal vez ");
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 436:
                        object.GenPresSimp(pronoun, 91);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 437:
                        nouns.nounGen("the class ", "la clase ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 438:
                        nouns.adjectiveGen("late ", "tardado ", "tardada ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 439:
                        object.GenPresSimpAdverbs2NoObject("little ", "poco ");
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 440:
                        nouns.adjectiveGen("major ", "mayor ", "mayor ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;

                    case 441:
                        sp="yeah";
                        break;
                    case 442:
                        // Assuming object.GenElse() exists for handling "else" as an adverb scenario. Adjusting for conceptual consistency.
                        object.GenElse();
                        sp = object.gens ;
                        globalAnswer=object.gene;
                        break;
                    case 443:
                        object.GenPresSimp(pronoun, 92);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 444:
                        nouns.nounGen("the photo ", "la foto ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 445:
                        object.GenPresSimp(pronoun, 93);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 446:
                        nouns.genPronoun("themselves ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 447:
                        nouns.nounGen("the field ", "el campo ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 448:
                        nouns.nounGen("the college ", "la universidad ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 449:
                        object.GenPresSimpAdverbs2("sometimes ", "a veces ");
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 450:
                        nouns.adjectiveGen2("former ", "anterior ", "anterior ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 451:
                        nouns.nounGen("the development ", "el desarrollo ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 452:
                        object.GenPresSimp(pronoun, 94);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 453:
                        nouns.genPreps("along");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 454:
                        object.GenPresSimp(pronoun, 95);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 455:
                        nouns.nounGen("the security ", "la seguridad ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 456:
                        object.GenPresSimpPrepasAdv("up ", "hacia arriba");
                        sp= object.gens;
                        globalAnswer=object.gene;
                        break;
                    case 457:
                        nouns.adjectiveGen("possible ", "posible ", "posible ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 458:
                        nouns.nounGen("the effort ", "el esfuerzo ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 459:
                        nouns.nounGen("the role ", "el papel ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 460:
                        nouns.adjectiveGen("better ", "mejor ", "mejor ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;

                    case 461:
                        nouns.nounGen("the rate ", "la tarifa ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 462:
                        nouns.adjectiveGen("strong ", "fuerte ", "fuerte ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 463:
                        nouns.nounGen("the music ", "la música ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 464:
                        object.GenPresSimp(pronoun, 96);
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 465:
                        nouns.nounGen("the leader ", "el líder ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 466:
                        nouns.nounGen("the light ", "la luz ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 467:
                        nouns.adjectiveGen("whole ", "completo ", "completa ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 468:
                        nouns.nounGen("the voice ", "la voz ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 469:
                        nouns.nounGen("the color ", "el color ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 470:
                        nouns.nounGen("the heart ", "el corazón ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 471:
                        nouns.nounGen("the care ", "el cuidado ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 472:
                        nouns.nounGen("the police ", "la policía ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 473:
                        nouns.adjectiveGen2("economic ", "económico ", "económica ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 474:
                        nouns.nounGen("the wife ", "la esposa ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 475:
                        nouns.nounGen("the show ", "el espectáculo ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 476:
                        nouns.nounGen("the mind ", "la mente ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 477:
                        nouns.nounGen("the report ", "el informe ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 478:
                        object.GenPresSimpAdverbs("finally ", "finalmente ");
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;
                    case 479:
                        nouns.nounGen("the drug ", "la droga ");
                        sp = nouns.gens;
                        globalAnswer = nouns.gene;
                        break;
                    case 480:
                        object.GenPresSimpAdverbs2NoObject("less ", "menos ");
                        sp = object.gens;
                        globalAnswer = object.gene;
                        break;

                    case 481:
                        // return
                        object.GenPresSimp(pronoun,97);
                        sp= object.gens;
                        globalAnswer=object.gene;
                        break;
                    case 482:
                        //according
                        nouns.genPreps("according to");
                        sp = nouns.gens;
                        globalAnswer=nouns.gene;

                        break;
                    case 483:
                        // pull
                        object.GenPresSimp(pronoun,98);
                        sp= object.gens;
                        globalAnswer=object.gene;
                        break;
                    case 484:
                        //decision
                        nouns.nounGen("the decision ","la decisión ");
                        sp = nouns.gens;
                        globalAnswer=nouns.gene;
                        break;
                    case 485:
                        // explain
                        object.GenPresSimp(pronoun,99);
                        sp= object.gens;
                        globalAnswer=object.gene;
                        break;
                    case 486:
                        //carry
                        object.GenPresSimp(pronoun,100);
                        sp= object.gens;
                        globalAnswer=object.gene;
                        break;
                    case 487:
                        // develop
                        object.GenPresSimp(pronoun,101);
                        sp= object.gens;
                        globalAnswer=object.gene;
                        break;
                    case 488:
                        //view
                        nouns.nounGen("the view ","la vista ");
                        sp = nouns.gens;
                        globalAnswer=nouns.gene;
                        break;
                    case 489:
                        //free
                        nouns.adjectiveGen("free ","libre ","libre ");
                        sp = nouns.gens;
                        globalAnswer=nouns.gene;
                        break;
                    case 490:
                        // hope
                        object.GenPresSimp(pronoun,102);
                        sp= object.gens;
                        globalAnswer=object.gene;
                        break;
                    case 491:
                        //even
                        object.GenConjFuture("even if", "incluso si");
                        gen1.GenPresSimp2();
                        complemento= gen1.gens;
                        complement = gen1.gene;
                        sp = object.gens+" "+ complemento;
                        globalAnswer=object.gene+" "+complement;

                        break;
                    case 492:
                        // drive
                        object.GenPresSimp(pronoun,103);
                        sp= object.gens;
                        globalAnswer=object.gene;
                        break;
                    case 493:
                        // son
                        nouns.nounGen("the son ","el hijo ");
                        sp = nouns.gens;
                        globalAnswer=nouns.gene;
                        break;
                    case 494:
                        // arm
                        nouns.nounGen("the arm ","el brazo ");
                        sp = nouns.gens;
                        globalAnswer=nouns.gene;
                        break;
                    case 495:
                        // department
                        nouns.nounGen("the department ","el departamento ");
                        sp = nouns.gens;
                        globalAnswer=nouns.gene;
                        break;
                    case 496:
                        //true
                        nouns.adjectiveGen("true ","verdadero ","verdadera ");
                        sp = nouns.gens;
                        globalAnswer=nouns.gene;
                        break;
                    case 497:
                        // price
                        nouns.nounGen("the price ","el precio ");
                        sp = nouns.gens;
                        globalAnswer=nouns.gene;
                        break;
                    case 498:
                        //military
                        nouns.adjectiveGen2("military ","militar ","militar ");
                        sp = nouns.gens;
                        globalAnswer=nouns.gene;
                        break;
                    case 499:
                        //federal
                        nouns.adjectiveGen2("federal ","federal ","federal ");
                        sp = nouns.gens;
                        globalAnswer=nouns.gene;
                        break;
                    case 500:
                        // break
                        object.GenPresSimp(pronoun,104);
                        sp= object.gens;
                        globalAnswer=object.gene;
                        break;
                    default:
                        sp= "no value";
                        break;
                }



                holder.comoDirias.setText(sp);
                sayThis(v,"como dirías " +sp,new Locale("es", "MX"));
                holder.userInput.setText("");



            }
        });

        holder.masInfoBtn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {


                holder.masInfoBtn.setBackgroundResource(R.drawable.ic_btn_small_blue);
                holder.masInfoBtn.setTextColor(Color.WHITE);
                holder.description.setVisibility(View.VISIBLE);
                holder.description.setText(item.getDescription());
                //set the other views back
                //holder.ejemplosBtn.setTextColor(Color.BLUE);
                holder.ejemplosBtn.setBackgroundResource(R.drawable.borde_azul);
                holder.practicaBtn.setTextColor(Color.BLUE);
                holder.practicaBtn.setBackgroundResource(R.drawable.borde_azul);
                holder.practicaBtn.setVisibility(View.VISIBLE);
                holder.ejemplostxt.setVisibility(View.GONE);
                holder.mic.setVisibility(View.GONE);
                holder.respCorrecta.setVisibility(View.GONE);
                holder.continuarBtn.setVisibility(View.GONE);
                holder.comoDirias.setVisibility(View.GONE);
                holder.mic.setVisibility(View.GONE);
                holder.checarRespBtn.setVisibility(View.GONE);
                holder.respCorrecta.setVisibility(View.GONE);

            }
        });
        holder.mic.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                holder.checarRespBtn.setVisibility(View.VISIBLE);
                holder.practicaBtn.setVisibility(View.GONE);
                holder.userInput.setVisibility(View.VISIBLE);
                holder.placeholder.setVisibility(View.GONE);
                holder.userInput.setTextColor(Color.WHITE);

                if (speechInitiator != null) {
                    speechInitiator.startSpeechRecognition(holder.getAdapterPosition());
                    // holder.userInput.setText(item.getUserInput());
                }


            }
        });
        holder.checarRespBtn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                holder.checarRespBtn.setVisibility(View.GONE);
                holder.respCorrecta.setVisibility(View.VISIBLE);
                holder.continuarBtn.setVisibility(View.VISIBLE);

                holder.continuarBtn.setBackgroundResource(R.drawable.ic_btn_small_blue);
                holder.continuarBtn.setTextColor(Color.WHITE);
                String respuesta = holder.userInput.getText().toString().toLowerCase().trim();
                String rightAnswer=globalAnswer.toLowerCase().trim();
                String rightAnswer2=globalAnswer2.toLowerCase().trim();
                String rightAnswer3=globalAnswer3.toLowerCase().trim();

                if(!holder.userInput.getText().toString().isEmpty()){
                    if(respuesta.equalsIgnoreCase(rightAnswer)
                            ||respuesta.equalsIgnoreCase(rightAnswer2)
                            ||respuesta.equalsIgnoreCase(rightAnswer3) ){
                        holder.respCorrecta.setText("Answer is correct!!");
                        holder.respCorrecta.setTextColor(Color.argb(255, 0, 0, 128));

                        prefs.setHasSeenAd(false);

                    }else {
                        StringBuilder responseText = new StringBuilder();
                        responseText.append(" 1. ").append(rightAnswer);



// Check if rightAnswer2 is not null, then append.
                        if (rightAnswer2 != null) {
                            responseText.append(" 2. ").append(rightAnswer2);
                        }

// Check if rightAnswer3 is not null, then append.
                        if (rightAnswer3 != null) {
                            responseText.append(" 3. ").append(rightAnswer3);
                        }

                        holder.respCorrecta.setText(responseText.toString());


                        holder.mic.setVisibility(View.VISIBLE);

                        holder.respCorrecta.setTextColor(Color.RED);
                        holder.respCorrecta.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View v) {
                                ttr.setLanguage(Locale.ENGLISH);
                                ttr.speak(rightAnswer, TextToSpeech.QUEUE_ADD, null, "string");
                            }
                        });

                    }
                }else {
                    holder.respCorrecta.setText("respuesta vacia");
                }

            }
        });
        holder.title.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                String word = holder.title.getText().toString();
// Remove the numeric prefix and the dot following it
                word = word.replaceFirst("^[0-9]+\\.", "").trim();
// Now 'word' contains the string without the numeric prefix and dot

                if(item.getType()==1){
                    word =   item.getDefinition();
                    sayThis(v, word,new Locale("es", "ES"));
                }
                sayThis(v, word,Locale.ENGLISH);

            }
        });
        if(item.getType()==3){
            holder.ejemplosBtn.setVisibility(View.GONE);
            holder.practicaBtn.setVisibility(View.GONE);
            holder.masInfoBtn.setText("Por Que Tener Premium?");

            holder.masInfoBtn.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    holder.masInfoBtn.setBackgroundResource(R.drawable.ic_btn_small_blue);
                    holder.masInfoBtn.setTextColor(Color.WHITE);
                    holder.description.setVisibility(View.VISIBLE);
                    if(holder.masInfoBtn.getText().toString().equalsIgnoreCase("ver oferta")){
                        Intent intent = new Intent(context.getApplicationContext(), Premium2023.class);
                        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK); // Needed if calling from a non-Activity context
                        context.startActivity(intent);
                    }else {
                        if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.N) {
                            holder.description.setText(Html.fromHtml(text2.concisePitchToPremium, Html.FROM_HTML_MODE_LEGACY));
                            holder.masInfoBtn.setText("Ver oferta");



                        } else {
                            holder.description.setText(Html.fromHtml(text2.concisePitchToPremium));
                        }

                    }

                }
            });

        }}

    private void sayThis(View v, String thingToSay, Locale language) {
        ttr = new TextToSpeech(v.getContext(), new TextToSpeech.OnInitListener() {
            @Override
            public void onInit(int status) {
                if (status == TextToSpeech.SUCCESS) {
                    // Set the language based on the method parameter
                    int result = ttr.setLanguage(language);

                    if (result == TextToSpeech.LANG_MISSING_DATA || result == TextToSpeech.LANG_NOT_SUPPORTED) {
                        Log.e("TextToSpeech", "Language not supported or data missing");
                    } else {
                        ttr.setOnUtteranceProgressListener(new UtteranceProgressListener() {
                            @Override
                            public void onStart(String s) {
                                // Called when the speech starts
                            }

                            @Override
                            public void onDone(String utteranceId) {
                                // Called when the speech is done
                            }

                            @Override
                            public void onError(String s) {
                                // Called on an error during the speech
                            }
                        });
                        ttr.speak(thingToSay, TextToSpeech.QUEUE_ADD, null, "string");
                    }
                }
            }
        });
    }
    @Override
    public int getItemCount() {
        return vocabItems.size();
    }
    public interface SpeechInitiator {
        void startSpeechRecognition(int position);
    }
    public interface AdListener {
        void onShowRewardedAd(VocabItemAdapter.VocabItemViewHolder holder,int position);


    }


    private String determineSp(cerotofifty gen, Generator gen1, Nobles n) {
        if (n.gens != null) {
            return n.gens + " - " + n.gene;
        } else if (gen1.ob != null) {
            return gen1.ob + " - " + gen1.eng;
        } else if (gen.ob != null) {
            return gen.ob + " - " + gen.eng;
        } else if (gen.gens != null) {
            return gen.gens + " - " + gen.gene;
        } else {
            return "Default Value - Default Value"; // Or any other default you'd like
        }
    }
    public static class VocabItemViewHolder extends RecyclerView.ViewHolder{
        TextView title;
        TextView definition;
        TextView description;
        TextView comoDirias;
        TextView respCorrecta;
        TextView ejemplostxt;
        Button
            masInfoBtn,
            practicaBtn,
            continuarBtn
            ,checarRespBtn;
        LinearLayout
                ejemplosBtn;
        EditText userInput,placeholder;
        LinearLayout mic;

        public VocabItemViewHolder(@NonNull View view) {
            super(view);
            title = view.findViewById(R.id.textViewWord);
            definition= view.findViewById(R.id.textViewTranslation);
            ejemplostxt= view.findViewById(R.id.textViewTranslation2);
            description= view.findViewById(R.id.descriptiondelapalabra);
            comoDirias=view.findViewById(R.id.comodiriasbla);
            respCorrecta=view.findViewById(R.id.resultadotext);
            masInfoBtn= view.findViewById(R.id.masinfo);
            practicaBtn=view.findViewById(R.id.buttonPractice);
            ejemplosBtn=view.findViewById(R.id.buttonExamples);
            continuarBtn=view.findViewById(R.id.buttonContinue);
            checarRespBtn=view.findViewById(R.id.buttonCheckAnswer);
            userInput=view.findViewById(R.id.editTextInput);
            //placeholder=view.findViewById(R.id.editTextInput2);
            mic= view.findViewById(R.id.imageButtonSubmit);

        }


    }


    private RewardedAd mRewardedAd;

    private void loadRewardedAd() {
        AdRequest adRequest = new AdRequest.Builder().build();
        // test ad ca-app-pub-3940256099942544/5224354917
        // real ad ca-app-pub-9126282069959189/7168659878
        RewardedAd.load(context, "ca-app-pub-9126282069959189/7168659878", adRequest,
                new RewardedAdLoadCallback() {
                    @Override
                    public void onAdLoaded(RewardedAd rewardedAd) {
                        mRewardedAd = rewardedAd;
                        Log.d("TAG", "Ad was loaded.");

                        // Set FullScreenContentCallback
                        mRewardedAd.setFullScreenContentCallback(new FullScreenContentCallback() {
                            @Override
                            public void onAdShowedFullScreenContent() {
                                // Called when ad is shown.
                                Log.d("TAG", "Ad was shown.");
                            }

                            @Override
                            public void onAdFailedToShowFullScreenContent(AdError adError) {
                                // Called when ad fails to show.
                                Log.d("TAG", "Ad failed to show.");
                            }

                            @Override
                            public void onAdDismissedFullScreenContent() {
                                // Called when ad is dismissed.
                                Log.d("TAG", "Ad was dismissed.");
                                // Reload the ad
                                mRewardedAd = null;
                                loadRewardedAd();


                            }
                        });
                    }

                    @Override
                    public void onAdFailedToLoad(LoadAdError loadAdError) {
                        // Handle the error.
                        Log.d("TAG", loadAdError.getMessage());
                        mRewardedAd = null;
                    }
                });
    }
    // Call this method when the button is clicked.

    public void showRewardedAd(VocabItemAdapter.VocabItemViewHolder holder, int position) {
        if (mRewardedAd != null) {
            mRewardedAd.show((Activity) context, rewardItem -> {
                // Handle the reward and UI updates
                Toast.makeText(context, "Thanks! :)", Toast.LENGTH_SHORT).show();
                prefs.setHasSeenAd(true);
               String temp="default";
               switch (itemType){
                   case 0:

                       temp="fromVocab";
                       break;
                   case 1:
                       temp="fromStructures";
                       break;
                   case 2:
                       temp="fromTrans";
                       break;
               }

                Intent intento = new Intent(context,NewVocabRecyclerView.class);
                intento.putExtra(temp,true);
                context.startActivity(intento);





            });
        } else {
            Log.d("TAG", "The rewarded ad wasn't ready yet.");
            prefs.setHasSeenAd(true);
            Toast.makeText(context, "Quieres la versión sin interrupciones?", Toast.LENGTH_SHORT).show();

            Intent intento = new Intent(context, Premium2023.class);
            context.startActivity(intento);
        }
    }


    public void  dialogueContainer(String text, String buttonyes, String buttonno,VocabItemAdapter.VocabItemViewHolder holder,int position){
        AlertDialog.Builder builder = new AlertDialog.Builder((Activity) context);
        LayoutInflater inflater = ((Activity) context).getLayoutInflater();

        View dialogView = inflater.inflate(R.layout.dialogebox, null); // Replace with your layout file name
        builder.setView(dialogView);

        TextView textView = dialogView.findViewById(R.id.textodialogo);

        textView.setText(Html.fromHtml(text));
        textView.setTextSize(18); // Set the text size to 18sp
        textView.setTypeface(null, Typeface.BOLD);
        textView.setText(text);

        AlertDialog dialog = builder.create();

// Set up the button click listener if needed
        Button button = dialogView.findViewById(R.id.buttondialogo1);
        button.setText(buttonyes);
        GradientDrawable drawable = new GradientDrawable();
        drawable.setShape(GradientDrawable.RECTANGLE); // Set the shape to rectangle
        drawable.setCornerRadii(new float[]{16, 16, 16, 16, 16, 16, 16, 16}); // Set corner radii (adjust the values as needed)
        drawable.setColor(Color.BLUE); // Set the background color
        button.setBackground(drawable);
        button.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                showRewardedAd(holder,position);


            }
        });

        Button button2 = dialogView.findViewById(R.id.botondialogo2);

        GradientDrawable drawable2 = new GradientDrawable();
        drawable2.setShape(GradientDrawable.RECTANGLE); // Set the shape to rectangle
        drawable2.setCornerRadii(new float[]{16, 16, 16, 16, 16, 16, 16, 16}); // Set corner radii (adjust the values as needed)
        drawable2.setColor(Color.GRAY); // Set the background color
        button2.setText(buttonno);
        button2.setTextColor(Color.BLACK);
        button2.setBackground(drawable2);

        button2.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intento = new Intent(context, Premium2023.class);
                context.startActivity(intento);


            }
        });
        dialog.setOnCancelListener(new DialogInterface.OnCancelListener() {
            @Override
            public void onCancel(DialogInterface dialogInterface) {
                // Code to execute when the dialog is cancelled (e.g., user clicks outside the dialog)
                prefs.setHasSeenAd(false);

            }
        });

        dialog.show();

    }

    public void  dialogueContainer2(String text, String buttonyes, String buttonno,VocabItemAdapter.VocabItemViewHolder holder,int position){
        AlertDialog.Builder builder = new AlertDialog.Builder((Activity) context);
        LayoutInflater inflater = ((Activity) context).getLayoutInflater();

        View dialogView = inflater.inflate(R.layout.biggerdialoguebox, null); // Replace with your layout file name
        builder.setView(dialogView);

        TextView textView = dialogView.findViewById(R.id.textodialogo);

        textView.setText(Html.fromHtml(text));
        textView.setTextSize(15); // Set the text size to 18sp
        textView.setTypeface(null, Typeface.BOLD);
        textView.setText(text);

        AlertDialog dialog = builder.create();

// Set up the button click listener if needed
        Button button = dialogView.findViewById(R.id.buttondialogo1);
        button.setText(buttonyes);
        GradientDrawable drawable = new GradientDrawable();
        drawable.setShape(GradientDrawable.RECTANGLE); // Set the shape to rectangle
        drawable.setCornerRadii(new float[]{16, 16, 16, 16, 16, 16, 16, 16}); // Set corner radii (adjust the values as needed)
        drawable.setColor(Color.BLUE); // Set the background color
        button.setBackground(drawable);
        button.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
               hasSeenDialogue=true;
               dialog.dismiss();
            }
        });

        Button button2 = dialogView.findViewById(R.id.botondialogo2);

        GradientDrawable drawable2 = new GradientDrawable();
        drawable2.setShape(GradientDrawable.RECTANGLE); // Set the shape to rectangle
        drawable2.setCornerRadii(new float[]{16, 16, 16, 16, 16, 16, 16, 16}); // Set corner radii (adjust the values as needed)
        drawable2.setColor(Color.GRAY); // Set the background color
        button2.setText(buttonno);
        button2.setTextColor(Color.BLACK);
        button2.setBackground(drawable2);

        button2.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                gotoURl("https://adrianlealcaldera.com/tutnewvocabrecyclerview.mp4");



            }
        });
        dialog.setOnCancelListener(new DialogInterface.OnCancelListener() {
            @Override
            public void onCancel(DialogInterface dialogInterface) {
                // Code to execute when the dialog is cancelled (e.g., user clicks outside the dialog)


            }
        });

        dialog.show();

    }

    private void gotoURl(String s) {
        Uri uri = Uri.parse(s);
        context.startActivity(new Intent(Intent.ACTION_VIEW, uri));
    }


}

