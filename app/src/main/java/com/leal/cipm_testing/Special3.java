package com.leal.cipm_testing;

public class Special3 {

    String verbs[]={
            "report ", "release ", "mix ",
            "press ", "finish ", "read ",
            "increase ", "play ", "feel ",
            "turn ", "say ", "spend ",
            "pay ", "try ", "cook ",
            "drive ", "gain ", "call ",
            "deal ", "upset ", "produce ",
            "appropiate ", "leave ", "reach ",
            "express ", "save ", "handle "
    };

    String vsbc[]={
            "informar ", "soltar ", "mezclar ",
            "presionar ", "terminar ", "leer ",
            "aumentar ", "tocar ", "sentir ",
            "girar ", "decir ", "gastar ",
            "pagar ", "probar ", "cocinar ",
            "conducir ", "ganar ", "llamar ",
            "tratar ", "molestar ", "producir ",
            "apropiar ", "soltar ", "alcanzar ",
            "expresar ", "salvar ", "manejar "
    };

    String vsp[]={
            "reported ", "released ", "mixed ",
            "pressed ", "finished ", "readed ",
            "increased ", "played ", "felt ",
            "turned ", "said ", "spent ",
            "paid ", "tried ", "cooked ",
            "driven ", "gained ", "called ",
            "dealt with ", "upset ", "produced ",
            "appropiated ", "left ", "reached ",
            "expressed ", "saved ", "handled "
    };

    String verbscont[]={
            "reporting ", "releasing ", "mixing ",
            "pressing ", "finishing ", "reading ",
            "increasing ", "playing ", "feeling ",
            "turning ", "saying ", "spending ",
            "paying ", "trying ", "cooking ",
            "driving ", "gaining ", "calling ",
            "dealing ", "upsetting ", "producing ",
            "appropiating ", "leaving ", "reaching ",
            "expressing ", "saving ", "handling "
    };

    String verbconti[]={
            "reportando ","soltando ","mezclando ",
            "presionando ","terminando ","leyendo ",
            "aumentando ","tocando ",
            "sintiendo ","girando ","diciendo ",
            "gastando ","pagando ","intentando ",
            "cocinando ","conduciendo ","ganando ",
            "llamando ","tratando ","molestando ",
            "produciendo ","apropiando ","dejando ",
            "alcanzando ","expresando ","salvando ",
            "manipulando "
    };

    String verbpartsp[]={
            "reportado ","soltado ","mezclado ",
            "presionado ","terminado ","leido ",
            "aumentado ","tocado ",
            "sentido ","girado ","dicho ",
            "gastado ","pagado ","intentado ",
            "cocinado ","conducido ","ganado ",
            "llamado ","tratado ","molestado ",
            "producido ","apropiado ","dejado ",
            "alcanzado ","expresado ","salvado ",
            "manipulado "
    };




    String verbsparteng[]={
            "reported ", "released ", "mixed ",
            "pressed ", "finished ", "readed ",
            "increased ", "played ",
            "felt ", "turned ", "said ",
            "spent ", "paid ", "tried ",
            "cooked ", "driven ", "gained ",
            "called ", "dealt with ", "upset ",
            "produced ", "appropiated ", "left ",
            "reached ", "expressed ", "saved ",
            "handled "
    };





    String v1[]={
            "reporto ","suelto ","mezclo ",
            "presiono ","termino ","leo ",
            "aumento ","toco ",
            "siento ","giro ","digo ",
            "gasto ","pago ","intento ",
            "cocinada ","conduzco ","gano ",
            "llamo ","trato ","molesto ",
            "produczco ","apropio ","dejo ",
            "alcanco ","expreso ","salvo ",
            "manipulo "
    };

    String v2[]={
            "reportas ","sueltas ","mezclas ",
            "presionas ","terminas ","leiste ",
            "aumentas ","tocas ",
            "sientes ","giras ","dices ",
            "gastas ","pagas ","intentas ",
            "cocinas ","conduces ","ganas ",
            "llamas ","tratas ","molestas ",
            "produces ","apropias ","dejas ",
            "alcanzas ","expresas ","salvas ",
            "manipulas "
    };

    String verbs3[]={
            "reports ", "releases", "mixes ",
            "pressed ", "finished ", "reads ",
            "increases ", "plays ",
            "feels ", "turns ", "says ",
            "spends ", "paid ", "tries ",
            "cooks ", "gains ", "gains ",
            "calls ", "deals ", "upsets ",
            "produces ", "appropiates ", "lefs ",
            "reaches ", "expresses ", "saves ",
            "handles "
    };

    String v3[]={
            "reporta ","suelta ","mezcla ",
            "presiona ","termina ","lea ",
            "aumenta ","toca ",
            "siente ","gira ","dice ",
            "gasta ","paga ","intenta ",
            "cocina ","conduce ","gana ",
            "llama ","trata ","molesta ",
            "produce ","apropia ","deja ",
            "alcanza ","expresa ","salva ",
            "manipula "
    };

    String v4[]={
            "reportan ","sueltan ","mezclan ",
            "presionan ","terminan ","leen ",
            "aumentan ","tocan ",
            "sienten ","giran ","dicen ",
            "gastan ","pagan ","intentan ",
            "cocinan ","conducen ","ganan ",
            "llaman ","tratan ","molestan ",
            "producen ","apropian ","dejan ",
            "alcanzan ","expresan ","salvan ",
            "manipulan "
    };

    String v5nos[]={
            "reportamos ","soltamos ","mezclamos ",
            "presionamos ","terminamos ","leemos ",
            "aumentamos ","tocamos ",
            "sentimos ","giramos ","decimos ",
            "gastamos ","pagamos ","intentamos ",
            "cocinamos ","conducimos ","ganamos ",
            "llamamos ","tratamos ","molestamos ",
            "producimos ","apropiamos ","dejamos ",
            "alcanzamos ","expresamos ","salvamos ",
            "manipulamos "
    };

    String vsf1[]={
            "reportaré ","soltaré ","mezclaré ",
            "presionaré ","terminaré ","leeré ",
            "aumentaré ","tocaré ",
            "sentiré ","giré ","diré ",
            "gastaré ","pagaré ","intentaré ",
            "cocinaré ","conduciré ","ganaré ",
            "llamaré ","trataré ","molestaré ",
            "producíré ","apropiaré ","dejé ",
            "alcanzaré ","expresaré ","salvaré ",
            "manipularé "
    };

    String vsf2[]={
            "reportarás ","soltarás ","mezclarás ",
            "presionarás ","terminarás ","leerás ",
            "aumentarás ","tocarás ",
            "sentirás ","girás ","dirás ",
            "gastarás ","pagarás ","intentarás ",
            "cocinarás ","conducirás ","ganarás ",
            "llamarás ","tratarás ","molestarás ",
            "producírás ","apropiarás ","dejás ",
            "alcanzarás ","expresarás ","salvarás ",
            "manipularás "
    };

    String vsf3[]={
            "reportará ","soltará ","mezclará ",
            "presionará ","terminará ","leerá ",
            "aumentará ","tocará ",
            "sentirá ","girá ","dirá ",
            "gastará ","pagará ","intentará ",
            "cocinará ","conducirá ","ganará ",
            "llamará ","tratará ","molestará ",
            "producírá ","apropiará ","dejá ",
            "alcanzará ","expresará ","salvará ",
            "manipulará "
    };

    String vsf4[]={
            "reportaremos ","soltaremos ","mezclaremos ",
            "presionaremos ","terminaremos ","leeremos ",
            "aumentaremos ","tocaremos ",
            "sentiremos ","giremos ","diremos ",
            "gastaremos ","pagaremos ","intentaremos ",
            "cocinaremos ","conduciremos ","ganaremos ",
            "llamaremos ","trataremos ","molestaremos ",
            "producíremos ","apropiaremos ","dejaremos ",
            "alcanzaremos ","expresaremos ","salvaremos ",
            "manipularemos "
    };

    String vsf5[]={
            "reportarán ","soltarán ","mezclarán ",
            "presionarán ","terminarán ","leerán ",
            "aumentarán ","tocarán ",
            "sentirán ","girarán ","dirán ",
            "gastarán ","pagarán ","intentarán ",
            "cocinarán ","conducirán ","ganarán ",
            "llamarán ","tratarán ","molestarán ",
            "producírán ","apropiarán ","dejarán ",
            "alcanzarán ","expresarán ","salvarán ",
            "manipularán "
    };
    //---WOULD

    String vsb1w[]={
            "reportaría ","soltaría ","mezclaría ",
            "presionaría ","terminaría ","leería ",
            "aumentaría ","tocaría ",
            "sentiría ","giraría ","diría ",
            "gastaría ","pagaría ","intentaría ",
            "cocinaría ","conduciría ","ganaría ",
            "llamaría ","trataría ","molestaría ",
            "producíría ","apropiaría ","dejaría ",
            "alcanzaría ","expresaría ","salvaría ",
            "manipularía "
    };

    String vsb2w[]={
            "reportarías ","soltarías ","mezclarías ",
            "presionarías ","terminarías ","leerías ",
            "aumentarías ","tocarías ",
            "sentirías ","girarías ","dirías ",
            "gastarías ","pagarías ","intentarías ",
            "cocinarías ","conducirías ","ganarías ",
            "llamarías ","tratarías ","molestarías ",
            "producírías ","apropiarías ","dejarías ",
            "alcanzarías ","expresarías ","salvarías ",
            "manipularías "
    };

    String vsb3w[]={
            "reportaría ","soltaría ","mezclaría ",
            "presionaría ","terminaría ","leería ",
            "aumentaría ","tocaría ",
            "sentiría ","giraría ","diría ",
            "gastaría ","pagaría ","intentaría ",
            "cocinaría ","conduciría ","ganaría ",
            "llamaría ","trataría ","molestaría ",
            "producíría ","apropiaría ","dejaría ",
            "alcanzaría ","expresaría ","salvaría ",
            "manipularía "
    };

    String vsb4w[]={
            "reportarían ","soltarían ","mezclarían ",
            "presionarían ","terminarían ","leerían ",
            "aumentarían ","tocarían ",
            "sentirían ","girarían ","dirían ",
            "gastarían ","pagarían ","intentarían ",
            "cocinarían ","conducirían ","dejarían ",
            "llamarían ","tratarían ","molestarían ",
            "producírían ","apropiarían ","saldrían ",
            "alcanzarían ","expresarían ","salvarían ",
            "manipularían "
    };

    String vsb5w[]={
            "reportaríamos ","soltaríamos ","mezclaríamos ",
            "presionaríamos ","terminaríamos ","leeríamos ",
            "aumentaríamos ","tocaríamos ",
            "sentiríamos ","giraríamos ","diríamos ",
            "gastaríamos ","pagaríamos ","intentaríamos ",
            "cocinaríamos ","conduciríamos ","ganaríamos ",
            "llamaríamos ","trataríamos ","molestaríamos ",
            "producíríamos ","apropiaríamos ","dejaríamos ",
            "alcanzaríamos ","expresaríamos ","salvaríamos ",
            "manipularíamos "
    };

    String vsp1[]={
            "reporté ","solté ","mezclé ",
            "presioné ","terminé ","lei ",
            "aumenté ","tocaré ",
            "sentiré ","giraré ","diré ",
            "gastaré ","pagaré ","intenté ",
            "cocinaré ","conduciré ","ganaré ",
            "llamaré ","trataré ","molestaré ",
            "producíré ","apropiaré ","dejaré ",
            "alcanzaré ","expresaré ","salvaré ",
            "manipularé "
    };

    String vsp2[]={
            "reportaste ","sueltaste ","mezclaste ",
            "presionaste ","terminaste ","leiste ",
            "aumentaste ","tocaste ",
            "sentiste ","giraste ","diras ",
            "gastaste ","pagaste ","intentaste ",
            "cocinaste ","conduciste ","ganaste ",
            "llamaste ","trataste ","molestaste ",
            "producíste ","apropiaste ","dejaste ",
            "alcanzaste ","expresaste ","salvaste ",
            "manipulaste "
    };

    String vsp3[]={
            "reporta ","suelta ","mezcla ",
            "presiona ","termina ","lee ",
            "aumenta ","tocara ",
            "sentira ","girara ","dira ",
            "gastara ","pagara ","intenta ",
            "cocinara ","conducira ","ganara ",
            "llamara ","tratara ","molestara ",
            "producíra ","apropiara ","deja ",
            "alcanzara ","expresara ","salvara ",
            "manipulara "
    };

    String vsp4[]={
            "reportaron ","soltaron ","mezclaron ",
            "presionaron ","terminaron ","leyeron ",
            "aumentaron ","tocaron ",
            "sintieron ","giraron ","dijeron ",
            "gastaron ","pagaron ","intentaron ",
            "cocinaron ","conducieron ","ganaron ",
            "llamaron ","trataron ","molestaron ",
            "producíeron ","apropiaron ","dejaron ",
            "alcanzaron ","expresaron ","salvaron ",
            "manipulararon "
    };

    String vsp5[]={
            "reportamos ","soltamos ","mezclamos ",
            "presionamos ","terminamos ","leemos ",
            "aumentamos ","tocamos ",
            "sentimos ","giramos ","decimos ",
            "gastamos ","pagamos ","intentamos ",
            "cocinamos ","conduciemos ","ganamos ",
            "llamamos ","tratamos ","molestamos ",
            "producímos ","apropiamos ","dejamos ",
            "alcanzamos ","expresamos ","salvamos ",
            "manipulamos "
    };

    String vsp1i[]={
            "reportaba ","soltaba ","mezclaba ",
            "presionaba ","terminaba ","leia ",
            "aumentaba ","tocaba ", "sentia ",
            "giraba ","decia ", "gastaba ",
            "pagaba ","intentaba ", "cocinaba ",
            "conducia ","ganaba ", "llamaba ",
            "trataba ","molestaba ", "producia ",
            "apropiaba ","dejaba ", "alcanzaba ",
            "expresaba ","salvaba ", "manipulaba "
    };

    String vsp2i[]={
            "reportabas ","soltabas ","mezclabas ",
            "presionabas ","terminabas ","leias ",
            "aumentabas ","tocabas ",
            "sentias ","girabas ","decias ",
            "gastabas ","pagabas ","intentabas ",
            "cocinabas ","conducias ","ganabas ",
            "llamabas ","tratabas ","molestabas ",
            "producias ","apropiabas ","dejabas ",
            "alcanzabas ","expresabas ","salvabas ",
            "manipulabas "
    };

    String vsp3i[]={
            "reportaba ","soltaba ","mezclaba ",
            "presionaba ","terminaba ","leia ",
            "aumentaba ","tocaba ",
            "sentia ","giraba ","decia ",
            "gastaba ","pagaba ","intentaba ",
            "cocinaba ","conducia ","ganaba ",
            "llamaba ","trataba ","molestaba ",
            "producia ","apropiaba ","dejaba ",
            "alcanzaba ","expresaba ","salvaba ",
            "manipulaba "
    };

    String vsp4i[]={
            "reportaban ","soltaban ","mezclaban ",
            "presionaban ","terminaban ","leian ",
            "aumentaban ","tocaban ",
            "sentian ","giraban ","decian ",
            "gastaban ","pagaban ","intentaban ",
            "cocinaban ","conducian ","ganaban ",
            "llamaban ","trataban ","molestaban ",
            "producian ","apropiaban ","dejaban ",
            "alcanzaban ","expresaban ","salvaban ",
            "manipulaban "
    };

    String vsp5i[]={
            "reportabamos ","soltabamos ","mezclabamos ",
            "presionabamos ","terminabamos ","leiamos ",
            "aumentabamos ","tocabamos ",
            "sentiamos ","girabamos ","deciamos ",
            "gastabamos ","pagabamos ","intentabamos ",
            "cocinabamos ","conduciamos ","ganabamos ",
            "llamabamos ","tratabamos ","molestabamos ",
            "produciamos ","apropiabamos ","dejabamos ",
            "alcanzabamos ","expresabamos ","salvabamos ",
            "manipulabamos "
    };


    //verbos esp primera persona
    String v1s[]={
            "reporto ","suelto ","mezclo ",
            "presiono ","termino ","leo ",
            "aumento ","toco ","sentí ",
            "gire ","dije ","gaste ",
            "pague ","intente ","cocine ",
            "conduje ","gane ","llame ",
            "trate ","moleste ","produje ",
            "apropie ","salí ","alcance ",
            "exprese ","salve ","manipule "
    };
    String v2s[]={
            "reportes ","lances ","mezcles ",
            "presiones ","termines ","lees ",
            "aumentes ","toques ","sientes ",
            "gires ","dices ","gastes ",
            "pagues","intentes ","cocines",
            "conduces ","ganes ","llames ",
            "trates ","molestes ","produces ",
            "apropies ","sales ","alcances ",
            "expreses ","salves ","manipules "
    };

    String v3s[]={
            "reporto ","solto ","mezclo ",
            "presiono ","termino ","leyo ",
            "aumento ","toco ","sintio ",
            "giro ","dijo ","gasto ",
            "pago ","intento ","cocino ",
            "condujo ","gano ","llamo ",
            "trato ","molesto ","produjo ",
            "apropio ","salio ","alcanzo ",
            "expreso ","salvo ","manipulo "
    };
    String v4s[]={
            "reporten ","lancen ","mezclen ",
            "presionen ","terminen ","leen ",
            "aumenten ","toquen ","sienten ",
            "giren ","dicen ","gasten ",
            "paguen ","intenten ","cocinen ",
            "conducen ","ganen ","llamen ",
            "traten ","molesten ","producen ",
            "apropien ","salen ","alcancen ",
            "expresen ","salven ","manipulen "
    };
    String v5s[]={
            "reportemos ","lancemos ","mezclemos ",
            "presionemos ","terminemos ","leemos ",
            "aumentemos ","toquemos ","sentimos ",
            "giremos ","decimos ","gastemos ",
            "paguemos ","intentemos ","cocinemos ",
            "conducimos ","ganemos ","llamemos ",
            "tratemos ","molestemos ","producimos ",
            "apropiemos ","salimos ","alcancemos ",
            "expresemos ","salvemos ","manipulemos "
    };

    // soreport
    String sorep[] = {"the problem ", "the characteristics ", "the weight ", "the process "};
    String sorepe[] = {"el problema ", "las características ", "el peso ", "el proceso "};
    // release
    String sorelease[] = {"the rock ", "people ", "the solution "};
    String sosoltar[] = {"la piedra ", "a la gente ", "la solución "};
    // mix
    String somix[] = {"the ingredients ", "the cards ", "las calificaciones"};
    String somesclar[] = {"los ingredientes ", "las cartas ", "the grades"};
    // press
    String sopress[] = {"the button ", "the situation "};
    String sopresionar[] = {"el botón ", "la situación "};
    // finish
    String sofinish[] = {"school ", "a project ", "singing "};
    String sofinalizar[] = {"la escuela ", "un proyecto ", "de cantar "};
    // read
    String soread[] = {"the book ", "the report ", "the magazine ", "the news "};
    String soleer[] = {"el libro ", "el reporte ", "la revista " , "las noticias "};
    // increase
    String soincrease[] = {"the volume ", "the money ", "the speed "};
    String soincrem[] = {"el volumen ", "el dinero ", "la velocidad "};
    // play- tocar instrumento
    String soplay[] = {"the violin ", "the guitar "};
    String sotocar[] = {"el violin ", "la guitarra "};
    //feel
    String sofeel[] = {"ideas ", "the vibe ", "the cold ", "tu cuerpo "};
    String sosentir[] = {"ideas ", "la vibra ", "el frio ", "your body "};
    //turn
    String soturn[] = {"the tortila ", "the situation ", "the table "};
    String sovoltear[] = {"la tortilla ", "la situación ", "la mesa "};
    // say
    String sosay[] = {"the truth ", "the time ", "stupid things "};
    String sodecir[] = {"la verdad ", "la hora ", "cosas estúpidas "};
    //spend
    String sospend[] = {"the money ", "the time ", "the energy "};
    String sogastar[] = {"el dinero ", "el tiempo ", "la energia "};
    // pay
    String sopay[] = {"my debt ", "the internet ", "the money "};
    String sopagar[] = {"mi deuda ", "el internet ", "el dinero "};

    // try
    String sotry[] = {"to travel ", "the solution ", "to continue "};
    String sointentar[] = {"viajar ", "la solución ", "continuar "};
    //cook
    String socook[] = {"the chicken ", "for a doctor ", "the food "};
    String sococinar[] = {"el pollo ", "para un doctor ", "la comida "};

    // drive
    String sodrive[] = {"the car ", "the bus ", "the motorcycle "};
    String soconducir[] = {"el carro ", "el camión ", "la motocicleta "};

    // gain
    String sogain[] = {"the trust ", "friendships ", "muscle "};
    String sogain1[] = {"la confianza ", "amistades ", "musculo "};
// havent completed objects down here
    // call
    String socall[] = {"a divorce ", "a photo ", "the divorce "};
    String sollamar[] = {"un divorcio ", "una foto ", "el divorcio "};

    // deal
    String sodeal[] = {"the competition ", "your brain "};
    String sorepartir[] = {"a la competencia ", "a tu cerebro "};

    // upset
    String soupset[] = {"the gesture ", "the party "};
    String soenojar[] = {"el gesto ", "la fiesta "};

    // produce
    String soproduce[] = {"the situation ", "the company ", "a budgen "};
    String soproducir[] = {"la situación ", "la compañía ", "un presupuesto "};

    //appropiate
    String soappropiate[] = {"money ", "respect ", "the right "};
    String soappropiar[] = {"dinero ", "respeto ", "el derecho "};

    //leave
    String soleave[] = {"the silhouette  ", "the surface ", "my face "};
    String sodejar[] = {"la silueta ", "la superficie ", "mi cara "};

    // reach
    String soreach[] = {"the windows ", "the door ", "the circuits "};
    String soalcanzar[] = {"las ventanas ", "la puerta ", "los circuitos "};

    //express
    String soexpress[] = {"the challenges ", "death ", "depression "};
    String soexpresar[] = {"los retos ", "la muerte ", "la depresión "};

    //save
    String sosave[] = {"the volume ", "the settings ", "the color "};
    String sosalvar[] = {"el volumen ", "los ajustes ", "el color "};
    // handle
    String sohandle[] = {"the pain ", "suffering ", "stress "};
    String somanejar[] = {"el dolor ", "el sufrimiento ", "el estrés "};



    String advfrequ[] = {"siempre ", "constantemente ", "frecuentemente ",
            "generalmente ",
            "normalmente ", "ocasionalmente ", "seguido ", "raramente ",
            "regularmente ",
            "regularmente ", "usualmente ", "felizmente ", "temprano ", "tarde ", "diariamente ",
            "perfectamente ", "fácilmente ", "cuidadosamente ", "abiertamente ",
            "finalmente ", "peligrosamente ", "desesperadamente ", "ocasionalmente ",
            "seguido ", "calmadamente "
    };
    String frequadv[] = {
            "always ", "constantly ", "frequently ", "generally ",
            "normally ", "occasionally ", "often ", "rarely ", "regularly ",
            "regularly ",
            "usually ", "happily ", "early ", "late ", "daily ",
            "perfectly ", "easily ", "carefully ",
            "openly ", "finally ", "dangerouslly ", "desperately ",
            "occasionally ", "often ", "calmly "
    };
    // estos se supone qeu son las frases preposicionales
    // que van en estos verbos para la dif 4 de este rango
    Intrans i = new Intrans();
    String reportspecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man",
            "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ", "with the woman ",
            "with the dentist ", "with the mailman ", "with the fireman ", "with people ", "with the people ", "with a nurse ",
            "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
            "with my friend ", "with my cousin ", "with the father ", "with the mother "},
            {"at the restaurant", "at school ", "at the house ", "at the concert ", "at the store ", "at church ", "at the hospital ",
            "at the office ", "at the station "}
    };
    String reportarespecialp[][] = {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
            "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
            "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ", "con gente ", "con la gente ",
            "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ", "con el maestro ", "con mi amiparticipate ",
            "con mi primo ", "con el papá ", "con la mamá "},
            {"en el restaurante (pero no dentro) ", "en la escuela (pero no dentro) ", "en la casa (pero no dentro) ",
            "en el concierto (pero no dentro) ",
            "en la tienda (pero no dentro) ", "en la iglesia (pero no dentro) ", "en el hospital (pero no dentro) ",
            "en la oficina (pero no dentro) ", "en la estación (pero no dentro) "}
    };

    String releasespecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man",
            "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ", "with the woman ",
            "with the dentist ", "with the mailman ", "with the fireman ", "with people ", "with the people ", "with a nurse ",
            "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
            "with my friend ", "with my cousin ", "with the father ", "with the mother "},
            {"at the restaurant", "at school ", "at the house ", "at the concert ", "at the store ", "at church ", "at the hospital ",
            "at the office ", "at the station "}
    };
    String soltarspecialp[][]= {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
            "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
            "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ", "con gente ", "con la gente ",
            "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ", "con el maestro ", "con mi amiparticipate ",
            "con mi primo ", "con el papá ", "con la mamá "},
            {"en el restaurante (pero no dentro) ", "en la escuela (pero no dentro) ", "en la casa (pero no dentro) ",
            "en el concierto (pero no dentro) ",
            "en la tienda (pero no dentro) ", "en la iglesia (pero no dentro) ", "en el hospital (pero no dentro) ",
            "en la oficina (pero no dentro) ", "en la estación (pero no dentro) "}
    };

    String mixspecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man",
            "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ", "with the woman ",
            "with the dentist ", "with the mailman ", "with the fireman ", "with people ", "with the people ", "with a nurse ",
            "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
            "with my friend ", "with my cousin ", "with the father ", "with the mother "},
            {"at the restaurant", "at school ", "at the house ", "at the concert ", "at the store ", "at church ", "at the hospital ",
            "at the office ", "at the station "}
    };
    String mesclarspecialp[][]= {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
            "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
            "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ", "con gente ", "con la gente ",
            "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ", "con el maestro ", "con mi amiparticipate ",
            "con mi primo ", "con el papá ", "con la mamá "},
            {"en el restaurante (pero no dentro) ", "en la escuela (pero no dentro) ", "en la casa (pero no dentro) ",
            "en el concierto (pero no dentro) ",
            "en la tienda (pero no dentro) ", "en la iglesia (pero no dentro) ", "en el hospital (pero no dentro) ",
            "en la oficina (pero no dentro) ", "en la estación (pero no dentro) "}
    };

    String presspecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man",
            "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ", "with the woman ",
            "with the dentist ", "with the mailman ", "with the fireman ", "with people ", "with the people ", "with a nurse ",
            "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
            "with my friend ", "with my cousin ", "with the father ", "with the mother "},
            {"at the restaurant", "at school ", "at the house ", "at the concert ", "at the store ", "at church ", "at the hospital ",
            "at the office ", "at the station "}
    };

    String presionarespecialp[][]= {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
            "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
            "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ", "con gente ", "con la gente ",
            "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ", "con el maestro ", "con mi amiparticipate ",
            "con mi primo ", "con el papá ", "con la mamá "},
            {"en el restaurante (pero no dentro) ", "en la escuela (pero no dentro) ", "en la casa (pero no dentro) ",
            "en el concierto (pero no dentro) ",
            "en la tienda (pero no dentro) ", "en la iglesia (pero no dentro) ", "en el hospital (pero no dentro) ",
            "en la oficina (pero no dentro) ", "en la estación (pero no dentro) "}
    };

    String finishspecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man",
            "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ", "with the woman ",
            "with the dentist ", "with the mailman ", "with the fireman ", "with people ", "with the people ", "with a nurse ",
            "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
            "with my friend ", "with my cousin ", "with the father ", "with the mother "},
            {"at the restaurant", "at school ", "at the house ", "at the concert ", "at the store ", "at church ", "at the hospital ",
            "at the office ", "at the station "}
    };
    String terminarspecialp[][]= {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
            "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
            "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ", "con gente ", "con la gente ",
            "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ", "con el maestro ", "con mi amiparticipate ",
            "con mi primo ", "con el papá ", "con la mamá "},
            {"en el restaurante (pero no dentro) ", "en la escuela (pero no dentro) ", "en la casa (pero no dentro) ",
            "en el concierto (pero no dentro) ",
            "en la tienda (pero no dentro) ", "en la iglesia (pero no dentro) ", "en el hospital (pero no dentro) ",
            "en la oficina (pero no dentro) ", "en la estación (pero no dentro) "}
    };

    String readspecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man",
            "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ", "with the woman ",
            "with the dentist ", "with the mailman ", "with the fireman ", "with people ", "with the people ", "with a nurse ",
            "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
            "with my friend ", "with my cousin ", "with the father ", "with the mother "},
            {"at the restaurant", "at school ", "at the house ", "at the concert ", "at the store ", "at church ", "at the hospital ",
            "at the office ", "at the station "}
    };
    String leerspecialp[][]= {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
            "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
            "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ", "con gente ", "con la gente ",
            "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ", "con el maestro ", "con mi amiparticipate ",
            "con mi primo ", "con el papá ", "con la mamá "},
            {"en el restaurante (pero no dentro) ", "en la escuela (pero no dentro) ", "en la casa (pero no dentro) ",
            "en el concierto (pero no dentro) ",
            "en la tienda (pero no dentro) ", "en la iglesia (pero no dentro) ", "en el hospital (pero no dentro) ",
            "en la oficina (pero no dentro) ", "en la estación (pero no dentro) "}
    };

    String increasespecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man",
            "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ", "with the woman ",
            "with the dentist ", "with the mailman ", "with the fireman ", "with people ", "with the people ", "with a nurse ",
            "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
            "with my friend ", "with my cousin ", "with the father ", "with the mother "},
            {"at the restaurant", "at school ", "at the house ", "at the concert ", "at the store ", "at church ", "at the hospital ",
            "at the office ", "at the station "}
    };
    String incrementarspecialp[][]= {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
            "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
            "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ", "con gente ", "con la gente ",
            "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ", "con el maestro ", "con mi amiparticipate ",
            "con mi primo ", "con el papá ", "con la mamá "},
            {"en el restaurante (pero no dentro) ", "en la escuela (pero no dentro) ", "en la casa (pero no dentro) ",
            "en el concierto (pero no dentro) ",
            "en la tienda (pero no dentro) ", "en la iglesia (pero no dentro) ", "en el hospital (pero no dentro) ",
            "en la oficina (pero no dentro) ", "en la estación (pero no dentro) "}
    };

    String playspecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man",
            "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ", "with the woman ",
            "with the dentist ", "with the mailman ", "with the fireman ", "with people ", "with the people ", "with a nurse ",
            "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
            "with my friend ", "with my cousin ", "with the father ", "with the mother "},
            {"at the restaurant", "at school ", "at the house ", "at the concert ", "at the store ", "at church ", "at the hospital ",
            "at the office ", "at the station "}
    };
    String playspecialp[][]= {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
            "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
            "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ", "con gente ", "con la gente ",
            "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ", "con el maestro ", "con mi amiparticipate ",
            "con mi primo ", "con el papá ", "con la mamá "},
            {"en el restaurante (pero no dentro) ", "en la escuela (pero no dentro) ", "en la casa (pero no dentro) ",
            "en el concierto (pero no dentro) ",
            "en la tienda (pero no dentro) ", "en la iglesia (pero no dentro) ", "en el hospital (pero no dentro) ",
            "en la oficina (pero no dentro) ", "en la estación (pero no dentro) "}
    };

    String feelspecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man",
            "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ", "with the woman ",
            "with the dentist ", "with the mailman ", "with the fireman ", "with people ", "with the people ", "with a nurse ",
            "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
            "with my friend ", "with my cousin ", "with the father ", "with the mother "},
            {"at the restaurant", "at school ", "at the house ", "at the concert ", "at the store ", "at church ", "at the hospital ",
            "at the office ", "at the station "}
    };
    String sentirspecialp[][]= {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
            "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
            "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ", "con gente ", "con la gente ",
            "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ", "con el maestro ", "con mi amiparticipate ",
            "con mi primo ", "con el papá ", "con la mamá "},
            {"en el restaurante (pero no dentro) ", "en la escuela (pero no dentro) ", "en la casa (pero no dentro) ",
            "en el concierto (pero no dentro) ",
            "en la tienda (pero no dentro) ", "en la iglesia (pero no dentro) ", "en el hospital (pero no dentro) ",
            "en la oficina (pero no dentro) ", "en la estación (pero no dentro) "}
    };

    String turnspecialp[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man",
            "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ", "with the woman ",
            "with the dentist ", "with the mailman ", "with the fireman ", "with people ", "with the people ", "with a nurse ",
            "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
            "with my friend ", "with my cousin ", "with the father ", "with the mother "},
            {"at the restaurant", "at school ", "at the house ", "at the concert ", "at the store ", "at church ", "at the hospital ",
            "at the office ", "at the station "}
    };
    String voltearspecialp[][]= {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
            "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
            "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ", "con gente ", "con la gente ",
            "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ", "con el maestro ", "con mi amiparticipate ",
            "con mi primo ", "con el papá ", "con la mamá "},
            {"en el restaurante (pero no dentro) ", "en la escuela (pero no dentro) ", "en la casa (pero no dentro) ",
            "en el concierto (pero no dentro) ",
            "en la tienda (pero no dentro) ", "en la iglesia (pero no dentro) ", "en el hospital (pero no dentro) ",
            "en la oficina (pero no dentro) ", "en la estación (pero no dentro) "}
    };

    String sayspecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man",
            "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ", "with the woman ",
            "with the dentist ", "with the mailman ", "with the fireman ", "with people ", "with the people ", "with a nurse ",
            "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
            "with my friend ", "with my cousin ", "with the father ", "with the mother "},
            {"at the restaurant", "at school ", "at the house ", "at the concert ", "at the store ", "at church ", "at the hospital ",
            "at the office ", "at the station "}
    };
    String decirspecialp[][]= {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
            "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
            "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ", "con gente ", "con la gente ",
            "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ", "con el maestro ", "con mi amiparticipate ",
            "con mi primo ", "con el papá ", "con la mamá "},
            {"en el restaurante (pero no dentro) ", "en la escuela (pero no dentro) ", "en la casa (pero no dentro) ",
            "en el concierto (pero no dentro) ",
            "en la tienda (pero no dentro) ", "en la iglesia (pero no dentro) ", "en el hospital (pero no dentro) ",
            "en la oficina (pero no dentro) ", "en la estación (pero no dentro) "}
    };

    String spendspecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man",
            "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ", "with the woman ",
            "with the dentist ", "with the mailman ", "with the fireman ", "with people ", "with the people ", "with a nurse ",
            "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
            "with my friend ", "with my cousin ", "with the father ", "with the mother "},
            {"at the restaurant", "at school ", "at the house ", "at the concert ", "at the store ", "at church ", "at the hospital ",
            "at the office ", "at the station "}
    };
    String gastarspecialp[][]= {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
            "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
            "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ", "con gente ", "con la gente ",
            "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ", "con el maestro ", "con mi amiparticipate ",
            "con mi primo ", "con el papá ", "con la mamá "},
            {"en el restaurante (pero no dentro) ", "en la escuela (pero no dentro) ", "en la casa (pero no dentro) ",
            "en el concierto (pero no dentro) ",
            "en la tienda (pero no dentro) ", "en la iglesia (pero no dentro) ", "en el hospital (pero no dentro) ",
            "en la oficina (pero no dentro) ", "en la estación (pero no dentro) "}
    };

    String payspecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man",
            "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ", "with the woman ",
            "with the dentist ", "with the mailman ", "with the fireman ", "with people ", "with the people ", "with a nurse ",
            "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
            "with my friend ", "with my cousin ", "with the father ", "with the mother "},
            {"at the restaurant", "at school ", "at the house ", "at the concert ", "at the store ", "at church ", "at the hospital ",
            "at the office ", "at the station "}
    };
    String pagarspecialp[][]= {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
            "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
            "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ", "con gente ", "con la gente ",
            "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ", "con el maestro ", "con mi amiparticipate ",
            "con mi primo ", "con el papá ", "con la mamá "},
            {"en el restaurante (pero no dentro) ", "en la escuela (pero no dentro) ", "en la casa (pero no dentro) ",
            "en el concierto (pero no dentro) ",
            "en la tienda (pero no dentro) ", "en la iglesia (pero no dentro) ", "en el hospital (pero no dentro) ",
            "en la oficina (pero no dentro) ", "en la estación (pero no dentro) "}
    };

    String tryspecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man",
            "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ", "with the woman ",
            "with the dentist ", "with the mailman ", "with the fireman ", "with people ", "with the people ", "with a nurse ",
            "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
            "with my friend ", "with my cousin ", "with the father ", "with the mother "},
            {"at the restaurant", "at school ", "at the house ", "at the concert ", "at the store ", "at church ", "at the hospital ",
            "at the office ", "at the station "}
    };
    String intentarspecialp[][]= {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
            "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
            "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ", "con gente ", "con la gente ",
            "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ", "con el maestro ", "con mi amiparticipate ",
            "con mi primo ", "con el papá ", "con la mamá "},
            {"en el restaurante (pero no dentro) ", "en la escuela (pero no dentro) ", "en la casa (pero no dentro) ",
            "en el concierto (pero no dentro) ",
            "en la tienda (pero no dentro) ", "en la iglesia (pero no dentro) ", "en el hospital (pero no dentro) ",
            "en la oficina (pero no dentro) ", "en la estación (pero no dentro) "}
    };

    String cookspecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man",
            "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ", "with the woman ",
            "with the dentist ", "with the mailman ", "with the fireman ", "with people ", "with the people ", "with a nurse ",
            "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
            "with my friend ", "with my cousin ", "with the father ", "with the mother "},
            {"at the restaurant", "at school ", "at the house ", "at the concert ", "at the store ", "at church ", "at the hospital ",
            "at the office ", "at the station "}
    };
    String cocinarspecialp[][]= {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
            "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
            "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ", "con gente ", "con la gente ",
            "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ", "con el maestro ", "con mi amiparticipate ",
            "con mi primo ", "con el papá ", "con la mamá "},
            {"en el restaurante (pero no dentro) ", "en la escuela (pero no dentro) ", "en la casa (pero no dentro) ",
            "en el concierto (pero no dentro) ",
            "en la tienda (pero no dentro) ", "en la iglesia (pero no dentro) ", "en el hospital (pero no dentro) ",
            "en la oficina (pero no dentro) ", "en la estación (pero no dentro) "}
    };

    String pdrivespecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man",
            "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ", "with the woman ",
            "with the dentist ", "with the mailman ", "with the fireman ", "with people ", "with the people ", "with a nurse ",
            "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
            "with my friend ", "with my cousin ", "with the father ", "with the mother "},
            {"at the restaurant", "at school ", "at the house ", "at the concert ", "at the store ", "at church ", "at the hospital ",
            "at the office ", "at the station "}
    };
    String conducirspp[][]= {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
            "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
            "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ", "con gente ", "con la gente ",
            "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ", "con el maestro ", "con mi amiparticipate ",
            "con mi primo ", "con el papá ", "con la mamá "},
            {"en el restaurante (pero no dentro) ", "en la escuela (pero no dentro) ", "en la casa (pero no dentro) ",
            "en el concierto (pero no dentro) ",
            "en la tienda (pero no dentro) ", "en la iglesia (pero no dentro) ", "en el hospital (pero no dentro) ",
            "en la oficina (pero no dentro) ", "en la estación (pero no dentro) "}
    };


    String gainspecialp[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man",
            "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ", "with the woman ",
            "with the dentist ", "with the mailman ", "with the fireman ", "with people ", "with the people ", "with a nurse ",
            "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
            "with my friend ", "with my cousin ", "with the father ", "with the mother "},
            {"at the restaurant", "at school ", "at the house ", "at the concert ", "at the store ", "at church ", "at the hospital ",
            "at the office ", "at the station "}
    };
    String gainspecialspp[][]= {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
            "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
            "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ", "con gente ", "con la gente ",
            "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ", "con el maestro ", "con mi amiparticipate ",
            "con mi primo ", "con el papá ", "con la mamá "},
            {"en el restaurante (pero no dentro) ", "en la escuela (pero no dentro) ", "en la casa (pero no dentro) ",
            "en el concierto (pero no dentro) ",
            "en la tienda (pero no dentro) ", "en la iglesia (pero no dentro) ", "en el hospital (pero no dentro) ",
            "en la oficina (pero no dentro) ", "en la estación (pero no dentro) "}
    };

    String callspecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man",
            "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ", "with the woman ",
            "with the dentist ", "with the mailman ", "with the fireman ", "with people ", "with the people ", "with a nurse ",
            "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
            "with my friend ", "with my cousin ", "with the father ", "with the mother "},
            {"at the restaurant", "at school ", "at the house ", "at the concert ", "at the store ", "at church ", "at the hospital ",
            "at the office ", "at the station "}
    };
    String llamarspecialp[][]= {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
            "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
            "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ", "con gente ", "con la gente ",
            "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ", "con el maestro ", "con mi amiparticipate ",
            "con mi primo ", "con el papá ", "con la mamá "},
            {"en el restaurante (pero no dentro) ", "en la escuela (pero no dentro) ", "en la casa (pero no dentro) ",
            "en el concierto (pero no dentro) ",
            "en la tienda (pero no dentro) ", "en la iglesia (pero no dentro) ", "en el hospital (pero no dentro) ",
            "en la oficina (pero no dentro) ", "en la estación (pero no dentro) "}
    };

    String dealspecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man",
            "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ", "with the woman ",
            "with the dentist ", "with the mailman ", "with the fireman ", "with people ", "with the people ", "with a nurse ",
            "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
            "with my friend ", "with my cousin ", "with the father ", "with the mother "},
            {"at the restaurant", "at school ", "at the house ", "at the concert ", "at the store ", "at church ", "at the hospital ",
            "at the office ", "at the station "}
    };
    String dealspecialsp[][]= {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
            "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
            "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ", "con gente ", "con la gente ",
            "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ", "con el maestro ", "con mi amiparticipate ",
            "con mi primo ", "con el papá ", "con la mamá "},
            {"en el restaurante (pero no dentro) ", "en la escuela (pero no dentro) ", "en la casa (pero no dentro) ",
            "en el concierto (pero no dentro) ",
            "en la tienda (pero no dentro) ", "en la iglesia (pero no dentro) ", "en el hospital (pero no dentro) ",
            "en la oficina (pero no dentro) ", "en la estación (pero no dentro) "}
    };

    String upsetspecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man",
            "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ", "with the woman ",
            "with the dentist ", "with the mailman ", "with the fireman ", "with people ", "with the people ", "with a nurse ",
            "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
            "with my friend ", "with my cousin ", "with the father ", "with the mother "},
            {"at the restaurant", "at school ", "at the house ", "at the concert ", "at the store ", "at church ", "at the hospital ",
            "at the office ", "at the station "}
    };
    String enojarspecialp[][]= {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
            "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
            "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ", "con gente ", "con la gente ",
            "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ", "con el maestro ", "con mi amiparticipate ",
            "con mi primo ", "con el papá ", "con la mamá "},
            {"en el restaurante (pero no dentro) ", "en la escuela (pero no dentro) ", "en la casa (pero no dentro) ",
            "en el concierto (pero no dentro) ",
            "en la tienda (pero no dentro) ", "en la iglesia (pero no dentro) ", "en el hospital (pero no dentro) ",
            "en la oficina (pero no dentro) ", "en la estación (pero no dentro) "}
    };

    String producespecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man",
            "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ", "with the woman ",
            "with the dentist ", "with the mailman ", "with the fireman ", "with people ", "with the people ", "with a nurse ",
            "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
            "with my friend ", "with my cousin ", "with the father ", "with the mother "},
            {"at the restaurant", "at school ", "at the house ", "at the concert ", "at the store ", "at church ", "at the hospital ",
            "at the office ", "at the station "}
    };
    String producespecialsp[][]= {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
            "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
            "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ", "con gente ", "con la gente ",
            "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ", "con el maestro ", "con mi amiparticipate ",
            "con mi primo ", "con el papá ", "con la mamá "},
            {"en el restaurante (pero no dentro) ", "en la escuela (pero no dentro) ", "en la casa (pero no dentro) ",
            "en el concierto (pero no dentro) ",
            "en la tienda (pero no dentro) ", "en la iglesia (pero no dentro) ", "en el hospital (pero no dentro) ",
            "en la oficina (pero no dentro) ", "en la estación (pero no dentro) "}
    };
    String appropiatespecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man",
            "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ", "with the woman ",
            "with the dentist ", "with the mailman ", "with the fireman ", "with people ", "with the people ", "with a nurse ",
            "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
            "with my friend ", "with my cousin ", "with the father ", "with the mother "},
            {"at the restaurant", "at school ", "at the house ", "at the concert ", "at the store ", "at church ", "at the hospital ",
            "at the office ", "at the station "}
    };
    String apropiarspp[][]= {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
            "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
            "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ", "con gente ", "con la gente ",
            "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ", "con el maestro ", "con mi amiparticipate ",
            "con mi primo ", "con el papá ", "con la mamá "},
            {"en el restaurante (pero no dentro) ", "en la escuela (pero no dentro) ", "en la casa (pero no dentro) ",
            "en el concierto (pero no dentro) ",
            "en la tienda (pero no dentro) ", "en la iglesia (pero no dentro) ", "en el hospital (pero no dentro) ",
            "en la oficina (pero no dentro) ", "en la estación (pero no dentro) "}
    };

    String leavespecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man",
            "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ", "with the woman ",
            "with the dentist ", "with the mailman ", "with the fireman ", "with people ", "with the people ", "with a nurse ",
            "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
            "with my friend ", "with my cousin ", "with the father ", "with the mother "},
            {"at the restaurant", "at school ", "at the house ", "at the concert ", "at the store ", "at church ", "at the hospital ",
            "at the office ", "at the station "}
    };
    String dejaratrasspp[][]= {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
            "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
            "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ", "con gente ", "con la gente ",
            "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ", "con el maestro ", "con mi amiparticipate ",
            "con mi primo ", "con el papá ", "con la mamá "},
            {"en el restaurante (pero no dentro) ", "en la escuela (pero no dentro) ", "en la casa (pero no dentro) ",
            "en el concierto (pero no dentro) ",
            "en la tienda (pero no dentro) ", "en la iglesia (pero no dentro) ", "en el hospital (pero no dentro) ",
            "en la oficina (pero no dentro) ", "en la estación (pero no dentro) "}
    };

    String reachspecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man",
            "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ", "with the woman ",
            "with the dentist ", "with the mailman ", "with the fireman ", "with people ", "with the people ", "with a nurse ",
            "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
            "with my friend ", "with my cousin ", "with the father ", "with the mother "},
            {"at the restaurant", "at school ", "at the house ", "at the concert ", "at the store ", "at church ", "at the hospital ",
            "at the office ", "at the station "}
    };
    String alcanzarspp[][] = {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
            "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
            "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ", "con gente ", "con la gente ",
            "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ", "con el maestro ", "con mi amiparticipate ",
            "con mi primo ", "con el papá ", "con la mamá "},
            {"en el restaurante (pero no dentro) ", "en la escuela (pero no dentro) ", "en la casa (pero no dentro) ",
            "en el concierto (pero no dentro) ",
            "en la tienda (pero no dentro) ", "en la iglesia (pero no dentro) ", "en el hospital (pero no dentro) ",
            "en la oficina (pero no dentro) ", "en la estación (pero no dentro) "}
    };

    String expressspecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man",
            "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ", "with the woman ",
            "with the dentist ", "with the mailman ", "with the fireman ", "with people ", "with the people ", "with a nurse ",
            "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
            "with my friend ", "with my cousin ", "with the father ", "with the mother "},
            {"at the restaurant", "at school ", "at the house ", "at the concert ", "at the store ", "at church ", "at the hospital ",
            "at the office ", "at the station "}
    };
    String expresarspp[][]= {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
            "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
            "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ", "con gente ", "con la gente ",
            "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ", "con el maestro ", "con mi amiparticipate ",
            "con mi primo ", "con el papá ", "con la mamá "},
            {"en el restaurante (pero no dentro) ", "en la escuela (pero no dentro) ", "en la casa (pero no dentro) ",
            "en el concierto (pero no dentro) ",
            "en la tienda (pero no dentro) ", "en la iglesia (pero no dentro) ", "en el hospital (pero no dentro) ",
            "en la oficina (pero no dentro) ", "en la estación (pero no dentro) "}
    };

    String savespecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man",
            "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ", "with the woman ",
            "with the dentist ", "with the mailman ", "with the fireman ", "with people ", "with the people ", "with a nurse ",
            "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
            "with my friend ", "with my cousin ", "with the father ", "with the mother "},
            {"at the restaurant", "at school ", "at the house ", "at the concert ", "at the store ", "at church ", "at the hospital ",
            "at the office ", "at the station "}
    };
    String salvarspp[][]= {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
            "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
            "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ", "con gente ", "con la gente ",
            "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ", "con el maestro ", "con mi amiparticipate ",
            "con mi primo ", "con el papá ", "con la mamá "},
            {"en el restaurante (pero no dentro) ", "en la escuela (pero no dentro) ", "en la casa (pero no dentro) ",
            "en el concierto (pero no dentro) ",
            "en la tienda (pero no dentro) ", "en la iglesia (pero no dentro) ", "en el hospital (pero no dentro) ",
            "en la oficina (pero no dentro) ", "en la estación (pero no dentro) "}
    };

    String handlespecial[][] = {
            {"with the wife ", "with the children ", "with children ", "with men ", "with a man",
            "with the doctor ", "with a baby ", "with the baby ", "with the librarian ", "with a woman ", "with the woman ",
            "with the dentist ", "with the mailman ", "with the fireman ", "with people ", "with the people ", "with a nurse ",
            "with the nurse ", "with the manager ", "with the boss ", "with the teacher ",
            "with my friend ", "with my cousin ", "with the father ", "with the mother "},
            {"at the restaurant", "at school ", "at the house ", "at the concert ", "at the store ", "at church ", "at the hospital ",
            "at the office ", "at the station "}
    };
    String manejarspecialp[][]= {
            {"con la esposa ", "con los niños ", "con niños ", "con hombres ", "con un hombre ",
            "con el doctor ", "con un bebé ", "con el bebé ", "con la bibliotecaria ", "con una mujer ",
            "con la mujer ", "con el dentista ", "con el cartero ", "con el bombero ", "con gente ", "con la gente ",
            "con una enfermera ", "con la enfermera ", "con el manager ", "con el jefe ", "con el maestro ", "con mi amiparticipate ",
            "con mi primo ", "con el papá ", "con la mamá "},
            {"en el restaurante (pero no dentro) ", "en la escuela (pero no dentro) ", "en la casa (pero no dentro) ",
            "en el concierto (pero no dentro) ",
            "en la tienda (pero no dentro) ", "en la iglesia (pero no dentro) ", "en el hospital (pero no dentro) ",
            "en la oficina (pero no dentro) ", "en la estación (pero no dentro) "}
    };

    int rand;

    int rand1;
    int rand2;
    int rand3;
    int rand4;
    int rand5;
    int rand6;
    int rand7;
    int rand8;
    int rand9;
    int rand10;
    int rand11;
    int rand12;
    int rand13;
    int rand14;
    int rand15;
    int rand16;
    int rand17;
    int rand18;
    int rand19;
    int rand20;
    int rand21;
    int rand22;
    int rand23;
    int rand24;
    int rand25;
    int rand26;
    int rand27;
    int rand28;

    int rd1;
    int rd1s;
    int rd2;
    int rd2s;
    int rd3;
    int rd3s;
    int rd4;
    int rd4s;
    int rd5;
    int rd5s;
    int rd6;
    int rd6s;
    int rd7;
    int rd7s;
    int rd8;
    int rd8s;
    int rd9;
    int rd9s;
    int rd10;
    int rd10s;
    int rd11;
    int rd11s;
    int rd12;
    int rd12s;
    int rd13;
    int rd13s;
    int rd14;
    int rd14s;
    int rd15;
    int rd15s;
    int rd16;
    int rd16s;
    int rd17;
    int rd17s;
    int rd18;
    int rd18s;
    int rd19;
    int rd19s;
    int rd20;
    int rd20s;
    int rd21;
    int rd21s;
    int rd22;
    int rd22s;
    int rd23;
    int rd23s;
    int rd24;
    int rd24s;
    int rd25;
    int rd25s;
    int rd26;
    int rd26s;
    int rd27;
    int rd27s;
    int rd28;
    int rd28s;

    String arraySodEsp;
    String arraySodEng;

    String arrayEsp;
    String arrayEng;

    public void randstarter(){
        rand1 = (int) (Math.random() * sorepe.length);
        rand2 = (int) (Math.random() * sorelease.length);
        rand3 = (int) (Math.random() * somix.length);
        rand4 = (int) (Math.random() * sopress.length);
        rand5 = (int) (Math.random() * sofinish.length);
        rand6 = (int) (Math.random() * soleer.length);
        rand7 = (int) (Math.random() * soincrease.length);
        rand8 = (int) (Math.random() * soplay.length);
        rand9 = (int) (Math.random() * sofeel.length);
        rand10 = (int) (Math.random() * soturn.length);
        rand11 = (int) (Math.random() * sosay.length);
        rand12 = (int) (Math.random() * sospend.length);
        rand13 = (int) (Math.random() * sopay.length);
        rand14 = (int) (Math.random() * sotry.length);
        rand15 = (int) (Math.random() * socook.length);
        rand16 = (int) (Math.random() * sodrive.length);
        rand17 = (int) (Math.random() * sogain.length);
        rand18 = (int) (Math.random() * socall.length);
        rand19 = (int) (Math.random() * sodeal.length);
        rand20 = (int) (Math.random() * soupset.length);
        rand21 = (int) (Math.random() * soproduce.length);
        rand22 = (int) (Math.random() * soappropiate.length);
        rand23 = (int) (Math.random() * soleave.length);
        rand24 = (int) (Math.random() * soreach.length);
        rand25 = (int) (Math.random() * soexpress.length);
        rand26 = (int) (Math.random() * sosave.length);
        rand27 = (int) (Math.random() * sohandle.length);

        //dif 4
        rd1 = (int) (Math.random() * reportspecial.length);
        rd1s = (int) (Math.random() * reportspecial[rd1].length);
        rd2 = (int) (Math.random() * releasespecial.length);
        rd2s = (int) (Math.random() * releasespecial[rd2].length);
        rd3 = (int) (Math.random() * mixspecial.length);
        rd3s = (int) (Math.random() * mixspecial[rd3].length);
        rd4 = (int) (Math.random() * presspecial.length);
        rd4s = (int) (Math.random() * presspecial[rd4].length);
        rd5 = (int) (Math.random() * finishspecial.length);
        rd5s = (int) (Math.random() * finishspecial[rd5].length);
        rd6 = (int) (Math.random() * readspecial.length);
        rd6s = (int) (Math.random() * readspecial[rd6].length);
        rd7 = (int) (Math.random() * increasespecial.length);
        rd7s = (int) (Math.random() * increasespecial[rd7].length);
        rd8 = (int) (Math.random() * playspecial.length);
        rd8s = (int) (Math.random() * playspecial[rd8].length);
        rd9 = (int) (Math.random() * feelspecial.length);
        rd9s = (int) (Math.random() * feelspecial[rd9].length);
        rd10 = (int) (Math.random() * turnspecialp.length);
        rd10s = (int) (Math.random() * turnspecialp[rd10].length);
        rd11 = (int) (Math.random() * sayspecial.length);
        rd11s = (int) (Math.random() * sayspecial[rd11].length);
        rd12 = (int) (Math.random() * spendspecial.length);
        rd12s = (int) (Math.random() * spendspecial[rd12].length);
        rd13 = (int) (Math.random() * payspecial.length);
        rd13s = (int) (Math.random() * payspecial[rd13].length);
        rd14 = (int) (Math.random() * tryspecial.length);
        rd14s = (int) (Math.random() * tryspecial[rd14].length);
        rd15 = (int) (Math.random() * cookspecial.length);
        rd15s = (int) (Math.random() * cookspecial[rd15].length);
        rd16 = (int) (Math.random() * gainspecialp.length);
        rd16s = (int) (Math.random() *gainspecialp[rd16].length);
        rd17 = (int) (Math.random() * pdrivespecial.length);
        rd17s = (int) (Math.random() *pdrivespecial[rd17].length);
        rd18 = (int) (Math.random() * callspecial.length);
        rd18s = (int) (Math.random() * callspecial[rd18].length);
        rd19 = (int) (Math.random() * dealspecial.length);
        rd19s = (int) (Math.random() * dealspecial[rd19].length);
        rd20 = (int) (Math.random() * upsetspecial.length);
        rd20s = (int) (Math.random() * upsetspecial[rd20].length);
        rd21 = (int) (Math.random() * producespecial.length);
        rd21s = (int) (Math.random() * producespecial[rd21].length);
        rd22 = (int) (Math.random() * appropiatespecial.length);
        rd22s = (int) (Math.random() * appropiatespecial[rd22].length);
        rd23 = (int) (Math.random() * leavespecial.length);
        rd23s = (int) (Math.random() * leavespecial[rd23].length);
        rd24 = (int) (Math.random() * reachspecial.length);
        rd24s = (int) (Math.random() * reachspecial[rd24].length);
        rd25 = (int) (Math.random() * expressspecial.length);
        rd25s = (int) (Math.random() * expressspecial[rd25].length);
        rd26 = (int) (Math.random() * savespecial.length);
        rd26s = (int) (Math.random() * savespecial[rd26].length);
        rd27 = (int) (Math.random() * handlespecial.length);
        rd27s = (int) (Math.random() * handlespecial[rd27].length);

    }

    public void arraySod(){
        String temp = verbs[rand];

        switch (temp){
            case "report ":
                arraySodEsp = sorepe[rand1];
                arraySodEng = sorep[rand1];
                break;

            case "release ":
                arraySodEsp = sosoltar[rand2];
                arraySodEng = sorelease[rand2];
                break;

            case "mix ":
                arraySodEsp = somesclar[rand3];
                arraySodEng = somix[rand3];
                break;

            case "press ":
                arraySodEsp = sopresionar[rand4];
                arraySodEng = sopress[rand4];
                break;

            case "finish ":
                arraySodEsp = sofinalizar[rand5];
                arraySodEng = sofinish[rand5];
                break;

            case "read ":
                arraySodEsp = soleer[rand6];
                arraySodEng = soread[rand6];
                break;

            case "increase ":
                arraySodEsp = soincrem[rand7];
                arraySodEng = soincrease[rand7];
                break;

            case "play ":
                arraySodEsp = sotocar[rand8];
                arraySodEng = soplay[rand8];
                break;

            case "feel ":
                arraySodEsp = sosentir[rand9];
                arraySodEng = sofeel[rand9];
                break;

            case "turn ":
                arraySodEsp = sovoltear[rand10];
                arraySodEng = soturn[rand10];
                break;

            case "say ":
                arraySodEsp = sodecir[rand11];
                arraySodEng = sosay[rand11];
                break;

            case "spend ":
                arraySodEsp = sogastar[rand12];
                arraySodEng = sospend[rand12];
                break;

            case "pay ":
                arraySodEsp = sopagar[rand13];
                arraySodEng = sopay[rand13];
                break;

            case "try ":
                arraySodEsp = sointentar[rand14];
                arraySodEng = sotry[rand14];
                break;

            case "cook ":
                arraySodEsp = sococinar[rand15];
                arraySodEng = socook[rand15];
                break;

            case "drive ":
                arraySodEsp = soconducir[rand16];
                arraySodEng = sodrive[rand16];
                break;

            case "gain ":
                arraySodEsp = sogain1[rand17];
                arraySodEng = sogain[rand17];
                break;

            case "call ":
                arraySodEsp = sollamar[rand18];
                arraySodEng = socall[rand18];
                break;

            case "deal ":
                arraySodEsp = sorepartir[rand19];
                arraySodEng = sodeal[rand19];
                break;

            case "upset ":
                arraySodEsp = soenojar[rand20];
                arraySodEng = soupset[rand20];
                break;

            case "produce ":
                arraySodEsp = soproducir[rand21];
                arraySodEng = soproduce[rand21];
                break;

            case "appropiate ":
                arraySodEsp = soappropiar[rand22];
                arraySodEng = soappropiate[rand22];
                break;

            case "leave ":
                arraySodEsp = sodejar[rand23];
                arraySodEng = soleave[rand23];
                break;

            case "reach ":
                arraySodEsp = soalcanzar[rand24];
                arraySodEng = soreach[rand24];
                break;

            case "express ":
                arraySodEsp = soexpresar[rand25];
                arraySodEng = soexpress[rand25];
                break;

            case "save ":
                arraySodEsp = sosalvar[rand26];
                arraySodEng = sosave[rand26];
                break;

            case "handle ":
                arraySodEsp = somanejar[rand27];
                arraySodEng = sohandle[rand27];
                break;
        }
    }

    public void arraySpe(){
        String temp = verbs[rand];

        switch (temp){
            case "report ":
                arrayEsp = reportarespecialp[rd1][rd1s];
                arrayEng = reportspecial[rd1][rd1s];
                break;

            case "release ":
                arrayEsp = soltarspecialp[rd2][rd2s];
                arrayEng = releasespecial[rd2][rd2s];
                break;

            case "mix ":
                arrayEsp = mesclarspecialp[rd3][rd3s];
                arrayEng = mixspecial[rd3][rd3s];
                break;

            case "press ":
                arrayEsp = presionarespecialp[rd4][rd4s];
                arrayEng = presspecial[rd4][rd4s];
                break;

            case "finish ":
                arrayEsp = terminarspecialp[rd5][rd5s];
                arrayEng = finishspecial[rd5][rd5s];
                break;

            case "read ":
                arrayEsp = leerspecialp[rd6][rd6s];
                arrayEng = readspecial[rd6][rd6s];
                break;

            case "increase ":
                arrayEsp = incrementarspecialp[rd7][rd7s];
                arrayEng = increasespecial[rd7][rd7s];
                break;

            case "play ":
                arrayEsp = playspecialp[rd8][rd8s];
                arrayEng = playspecial[rd8][rd8s];
                break;

            case "feel ":
                arrayEsp = sentirspecialp[rd9][rd9s];
                arrayEng = feelspecial[rd9][rd9s];
                break;

            case "turn ":
                arrayEsp = voltearspecialp[rd10][rd10s];
                arrayEng = turnspecialp[rd10][rd10s];
                break;

            case "say ":
                arrayEsp = decirspecialp[rd11][rd11s];
                arrayEng = sayspecial[rd11][rd11s];
                break;

            case "spend ":
                arrayEsp = gastarspecialp[rd12][rd12s];
                arrayEng = spendspecial[rd12][rd12s];
                break;

            case "pay ":
                arrayEsp = pagarspecialp[rd13][rd13s];
                arrayEng = payspecial[rd13][rd13s];
                break;

            case "try ":
                arrayEsp = intentarspecialp[rd14][rd14s];
                arrayEng = tryspecial[rd14][rd14s];
                break;

            case "cook ":
                arrayEsp = cocinarspecialp[rd15][rd15s];
                arrayEng = cookspecial[rd15][rd15s];
                break;

            case "drive ":
                arrayEsp = conducirspp[rd16][rd16s];
                arrayEng = pdrivespecial[rd16][rd16s];
                break;

            case "gain ":
                arrayEsp = gainspecialspp[rd17][rd17s];
                arrayEng = gainspecialp[rd17][rd17s];
                break;

            case "call ":
                arrayEsp = llamarspecialp[rd18][rd18s];
                arrayEng = callspecial[rd18][rd18s];
                break;

            case "deal ":
                arrayEsp = dealspecialsp[rd19][rd19s];
                arrayEng = dealspecial[rd19][rd19s];
                break;

            case "upset ":
                arrayEsp = enojarspecialp[rd20][rd20s];
                arrayEng = upsetspecial[rd20][rd20s];
                break;

            case "produce ":
                arrayEsp = producespecialsp[rd21][rd21s];
                arrayEng = producespecial[rd21][rd21s];
                break;

            case "appropiate ":
                arrayEsp = apropiarspp[rd22][rd22s];
                arrayEng = appropiatespecial[rd22][rd22s];
                break;

            case "leave ":
                arrayEsp = dejaratrasspp[rd23][rd23s];
                arrayEng = leavespecial[rd23][rd23s];
                break;

            case "reach ":
                arrayEsp = alcanzarspp[rd24][rd24s];
                arrayEng = reachspecial[rd24][rd24s];
                break;

            case "express ":
                arrayEsp = expresarspp[rd25][rd25s];
                arrayEng = expressspecial[rd25][rd25s];
                break;

            case "save ":
                arrayEsp = salvarspp[rd26][rd26s];
                arrayEng = savespecial[rd26][rd26s];
                break;

            case "handle ":
                arrayEsp = manejarspecialp[rd27][rd27s];
                arrayEng = handlespecial[rd27][rd27s];
                break;
        }
    }

    // spanish phrase and english phrase
    String sp1;
    String eng1;
    String sp2;   // spanish phrase segunda persona esp
    String eng2;  // english phrase segunda persona eng
    String sp3;
    String eng3;
    String sp3ella;
    String eng3she;
    String sp3eso;
    String sp3it;
    String sp4;
    String eng4;
    String sp5;
    String eng5;
    String sp6;
    String eng6;
    String sp7;
    String eng7;
    String eng12;
    String eng22;
    String eng32;
    String eng3she2;
    String sp3it2;
    String eng42;
    String eng52;

    //DIFICULTAD 1
    //PRESENTES
    public void GenPresSimp1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo " + v1[rand];
                        eng1 = "I " + verbs[rand];

                        sp2 = "tú " + v2[rand];
                        eng2 = "you " + verbs[rand];

                        sp3 = "él " + v3[rand];
                        eng3 = "he " + verbs3[rand];

                        sp3ella = "ella " + v3[rand];
                        eng3she = "she " + verbs3[rand];

                        sp3eso = "eso " + v3[rand];
                        sp3it = "it " + verbs3[rand];

                        sp4 = "ellos " + v4[rand];
                        eng4 = "they " + verbs[rand];

                        sp5 = "nosotros " + v5nos[rand];
                        eng5 = "we " + verbs[rand];

                        break;
                    case 1:
                        sp1 = "yo " + "no " + v1[rand];
                        eng1 = "I " + "don't " + verbs[rand];

                        sp2 = "tú " + "no " + v2[rand];
                        eng2 = "you " + "don't " + verbs[rand];

                        sp3 = "él " + "no " + v3[rand];
                        eng3 = "he " + "doesn't " + verbs[rand];

                        sp3ella = "ella " + "no " + v3[rand];
                        eng3she = "she " + "doesn't " + verbs[rand];

                        sp3eso = "eso " + "no " + v3[rand];
                        sp3it = "it " + "doesn't " + verbs[rand];

                        sp4 = "ellos " + "no " + v4[rand];
                        eng4 = "they " + "don't " + verbs[rand];

                        sp5 = "nosotros " + "no " + v5nos[rand];
                        eng5 = "we " + "don't " + verbs[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenPresCont1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo estoy " + verbconti[rand];
                        eng1 = "I am " + verbscont[rand];
                        eng12 = "I'm " + verbscont[rand];

                        sp2 = "tú estás " + verbconti[rand];
                        eng2 = "you are " + verbscont[rand];
                        eng22 = "you're " + verbscont[rand];

                        sp3 = "él está " + verbconti[rand];
                        eng3 = "he is " + verbscont[rand];
                        eng32 = "he's " + verbscont[rand];

                        sp3ella = "ella está " + verbconti[rand];
                        eng3she = "she is " + verbscont[rand];
                        eng3she2 = "she's " + verbscont[rand];

                        sp3eso = "eso está " + verbconti[rand];
                        sp3it = "it is " + verbscont[rand];
                        sp3it2 = "it's " + verbscont[rand];

                        sp4 = "ellos están " + verbconti[rand];
                        eng4 = "they are " + verbscont[rand];
                        eng42 = "they're " + verbscont[rand];

                        sp5 = "nosotros estamos " + verbconti[rand];
                        eng5 = "we are " + verbscont[rand];
                        eng52 = "we're " + verbscont[rand];

                        break;
                    case 1:
                        sp1 = "yo " + "no estoy " + verbconti[rand];
                        eng1 = "I " + "am not " + verbscont[rand];
                        eng12 = "I'm not " + verbscont[rand];

                        sp2 = "tú " + "no estás " + verbconti[rand];
                        eng2 = "you're not " + verbscont[rand];
                        eng22 = "you " + "aren't " + verbscont[rand];

                        sp3 = "él " + "no está " + verbconti[rand];
                        eng3 = "he's not " + verbscont[rand];
                        eng32 = "he " + "isn't " + verbscont[rand];

                        sp3ella = "ella " + "no está " + verbconti[rand];
                        eng3she = "she's not " + verbscont[rand];
                        eng3she2 = "she " + "isn't " + verbscont[rand];

                        sp3eso = "eso " + "no está " + verbconti[rand];
                        sp3it = "it's not " + verbscont[rand];
                        sp3it2 = "it " + "isn't " + verbscont[rand];

                        sp4 = "ellos " + "no están " + verbconti[rand];
                        eng4 = "they're not " + verbscont[rand];
                        eng42 = "they " + "aren't " + verbscont[rand];

                        sp5 = "nosotros " + "no están " + verbconti[rand];
                        eng5 = "we're not " + verbscont[rand];
                        eng52 = "we " + "aren't " + verbscont[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenPresPerf1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo he " + verbpartsp[rand];
                        eng1 = "I have " + verbsparteng[rand];
                        eng12 = "I've " + verbsparteng[rand];

                        sp2 = "tú has " + verbpartsp[rand];
                        eng2 = "you have " + verbsparteng[rand];
                        eng22 = "you've " + verbsparteng[rand];

                        sp3 = "él ha " + verbpartsp[rand];
                        eng3 = "he has " + verbsparteng[rand];
                        eng32 = "he's " + verbsparteng[rand];

                        sp3ella = "ella ha " + verbpartsp[rand];
                        eng3she = "she has " + verbsparteng[rand];
                        eng3she2 = "she's " + verbsparteng[rand];

                        sp3eso = "eso ha " + verbpartsp[rand];
                        sp3it = "it has " + verbsparteng[rand];
                        sp3it2 = "it's " + verbsparteng[rand];

                        sp4 = "ellos han " + verbpartsp[rand];
                        eng4 = "they have " + verbsparteng[rand];
                        eng42 = "they've " + verbsparteng[rand];

                        sp5 = "nosotros hemos " + verbpartsp[rand];
                        eng5 = "we have " + verbsparteng[rand];
                        eng52 = "we've " + verbsparteng[rand];
                        break;
                    case 1:
                        sp1 = "yo no he " + verbpartsp[rand];
                        eng1 = "I have not " + verbsparteng[rand];
                        eng12 = "I haven't " + verbsparteng[rand];

                        sp2 = "tú no has " + verbpartsp[rand];
                        eng2 = "you have not " + verbsparteng[rand];
                        eng22 = "you haven't " + verbsparteng[rand];

                        sp3 = "él no ha " + verbpartsp[rand];
                        eng3 = "he has not " + verbsparteng[rand];
                        eng32 = "he hasn't " + verbsparteng[rand];

                        sp3ella = "ella no ha " + verbpartsp[rand];
                        eng3she = "she has not " + verbsparteng[rand];
                        eng3she2 = "she hasn't " + verbsparteng[rand];

                        sp3eso = "eso no ha " + verbpartsp[rand];
                        sp3it = "it has not " + verbsparteng[rand];
                        sp3it2 = "it hasn't " + verbsparteng[rand];

                        sp4 = "ellos no han " + verbpartsp[rand];
                        eng4 = "they have not " + verbsparteng[rand];
                        eng42 = "they haven't " + verbsparteng[rand];

                        sp5 = "nosotros no hemos " + verbpartsp[rand];
                        eng5 = "we have not " + verbsparteng[rand];
                        eng52 = "we haven't " + verbsparteng[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenPresPerfCont1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo he estado " + verbconti[rand];
                        eng1 = "I have been " + verbscont[rand];

                        sp2 = "tú has estado " + verbconti[rand];
                        eng2 = "you have been " + verbscont[rand];

                        sp3 = "él ha estado " + verbconti[rand];
                        eng3 = "he has been " + verbscont[rand];

                        sp3ella = "ella ha estado " + verbconti[rand];
                        eng3she = "she has been " + verbscont[rand];

                        sp3eso = "eso ha estado " + verbconti[rand];
                        sp3it = "it has been " + verbscont[rand];

                        sp4 = "ellos han estado " + verbconti[rand];
                        eng4 = "they have been " + verbscont[rand];

                        sp5 = "nosotros hemos estado " + verbconti[rand];
                        eng5 = "we have been " + verbscont[rand];

                        break;
                    case 1:
                        sp1 = "yo no he estado " + verbconti[rand];
                        eng1 = "I haven't been " + verbscont[rand];

                        sp2 = "tú no has estado " + verbconti[rand];
                        eng2 = "you haven't been " + verbscont[rand];

                        sp3 = "él no ha estado " + verbconti[rand];
                        eng3 = "he hasn't been " + verbscont[rand];

                        sp3ella = "ella no ha estado " + verbconti[rand];
                        eng3she = "she hasn't been " + verbscont[rand];

                        sp3eso = "eso no ha estado " + verbconti[rand];
                        sp3it = "it hasn't been " + verbscont[rand];

                        sp4 = "ellos no han estado " + verbconti[rand];
                        eng4 = "they haven't been " + verbscont[rand];

                        sp5 = "nosotros no hemos estado " + verbconti[rand];
                        eng5 = "we haven't been " + verbscont[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023

    //Pasados
    public void GenPastSimp1() {
        int neg = (int) (Math.random() * 4);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo " + vsp1[rand];
                        eng1 = "I " + vsp[rand];

                        sp2 = "tú " + vsp2[rand];
                        eng2 = "you " + vsp[rand];

                        sp3 = "él " + vsp3[rand];
                        eng3 = "he " + vsp[rand];

                        sp3ella = "ella " + vsp3[rand];
                        eng3she = "she " + vsp[rand];

                        sp3eso = "eso " + vsp3[rand];
                        sp3it = "it " + vsp[rand];

                        sp4 = "ellos " + vsp4[rand];
                        eng4 = "they " + vsp[rand];

                        sp5 = "nosotros " + vsp5[rand];
                        eng5 = "we " + vsp[rand];

                        break;
                    case 1:
                        sp1 = "yo " + "no " + vsp1[rand];
                        eng1 = "I " + "didn't " + verbs[rand];

                        sp2 = "tú " + "no " + vsp2[rand];
                        eng2 = "you " + "didn't " + verbs[rand];

                        sp3 = "él " + "no " + vsp3[rand];
                        eng3 = "he " + "didn't " + verbs[rand];

                        sp3ella = "ella " + "no " + vsp3[rand];
                        eng3she = "she " + "didn't " + verbs[rand];

                        sp3eso = "eso " + "no " + vsp3[rand];
                        sp3it = "it " + "didn't " + verbs[rand];

                        sp4 = "ellos " + "no " + vsp4[rand];
                        eng4 = "they " + "didn't " + verbs[rand];

                        sp5 = "nosotros " + "no " + vsp5[rand];
                        eng5 = "we " + "didn't " + verbs[rand];
                        break;
                    case 2:
                        sp1 = "yo " + vsp1i[rand];
                        eng1 = "I " + vsp[rand];

                        sp2 = "tú " + vsp2i[rand];
                        eng2 = "you " + vsp[rand];

                        sp3 = "él " + vsp3i[rand];
                        eng3 = "he " + vsp[rand];

                        sp3ella = "ella " + vsp3i[rand];
                        eng3she = "she " + vsp[rand];

                        sp3eso = "eso " + vsp3i[rand];
                        sp3it = "it " + vsp[rand];

                        sp4 = "ellos " + vsp4i[rand];
                        eng4 = "they " + vsp[rand];

                        sp5 = "nosotros " + vsp5i[rand];
                        eng5 = "we " + vsp[rand];

                        break;
                    case 3:
                        sp1 = "yo " + "no " + vsp1i[rand];
                        eng1 = "I " + "didn't " + verbs[rand];

                        sp2 = "tú " + "no " + vsp2i[rand];
                        eng2 = "you " + "didn't " + verbs[rand];

                        sp3 = "él " + "no " + vsp3i[rand];
                        eng3 = "he " + "didn't " + verbs[rand];

                        sp3ella = "ella " + "no " + vsp3i[rand];
                        eng3she = "she " + "didn't " + verbs[rand];

                        sp3eso = "eso " + "no " + vsp3i[rand];
                        sp3it = "it " + "didn't " + verbs[rand];

                        sp4 = "ellos " + "no " + vsp4i[rand];
                        eng4 = "they " + "didn't " + verbs[rand];

                        sp5 = "nosotros " + "no " + vsp5i[rand];
                        eng5 = "we " + "didn't " + verbs[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenPastCont1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo estaba " + verbconti[rand];
                        eng1 = "I was " + verbscont[rand];
                        eng12 = "I was " + verbscont[rand];

                        sp2 = "tú estabas " + verbconti[rand];
                        eng2 = "you were " + verbscont[rand];
                        eng22 = "you were " + verbscont[rand];

                        sp3 = "él estaba " + verbconti[rand];
                        eng3 = "he was " + verbscont[rand];
                        eng32 = "he was " + verbscont[rand];

                        sp3ella = "ella estaba " + verbconti[rand];
                        eng3she = "she was " + verbscont[rand];
                        eng3she2 = "she was " + verbscont[rand];

                        sp3eso = "eso estaba " + verbconti[rand];
                        sp3it = "it was " + verbscont[rand];
                        sp3it2 = "it was " + verbscont[rand];

                        sp4 = "ellos estaban " + verbconti[rand];
                        eng4 = "they were " + verbscont[rand];
                        eng42 = "they were " + verbscont[rand];

                        sp5 = "nosotros estabamos " + verbconti[rand];
                        eng5 = "we were " + verbscont[rand];
                        eng52 = "we were " + verbscont[rand];
                        break;
                    case 1:
                        sp1 = "yo " + "no estaba " + verbconti[rand];
                        eng1 = "I " + "was not " + verbscont[rand];
                        eng12 = "I " + "wasn't " + verbscont[rand];

                        sp2 = "tú " + "no estabas " + verbconti[rand];
                        eng2 = "you " + "were not " + verbscont[rand];
                        eng22 = "you " + "weren't " + verbscont[rand];

                        sp3 = "él " + "no estaba " + verbconti[rand];
                        eng3 = "he " + "was not " + verbscont[rand];
                        eng32 = "he " + "wasn't " + verbscont[rand];

                        sp3ella = "ella " + "no estaba " + verbconti[rand];
                        eng3she = "she " + "was not " + verbscont[rand];
                        eng3she2 = "she " + "wasn't " + verbscont[rand];

                        sp3eso = "eso " + "no estaba " + verbconti[rand];
                        sp3it = "it " + "was not " + verbscont[rand];
                        sp3it2 = "it " + "wasn't " + verbscont[rand];

                        sp4 = "ellos " + "no estaban " + verbconti[rand];
                        eng4 = "they " + "were not " + verbscont[rand];
                        eng42 = "they " + "weren't " + verbscont[rand];

                        sp5 = "nosotros " + "no estabamos " + verbconti[rand];
                        eng5 = "we " + "were not " + verbscont[rand];
                        eng52 = "we " + "weren't " + verbscont[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenPastPerf1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo había " + verbpartsp[rand];
                        eng1 = "I had " + verbsparteng[rand];
                        eng12 = "I'd " + verbsparteng[rand];

                        sp2 = "tú habías " + verbpartsp[rand];
                        eng2 = "you had " + verbsparteng[rand];
                        eng22 = "you'd " + verbsparteng[rand];

                        sp3 = "él había " + verbpartsp[rand];
                        eng3 = "he had " + verbsparteng[rand];
                        eng32 = "he'd " + verbsparteng[rand];

                        sp3ella = "ella había " + verbpartsp[rand];
                        eng3she = "she had " + verbsparteng[rand];
                        eng3she2 = "she'd " + verbsparteng[rand];

                        sp3eso = "eso había " + verbpartsp[rand];
                        sp3it = "it had " + verbsparteng[rand];
                        sp3it2 = "it'd " + verbsparteng[rand];

                        sp4 = "ellos habían " + verbpartsp[rand];
                        eng4 = "they had " + verbsparteng[rand];
                        eng42 = "they'd " + verbsparteng[rand];

                        sp5 = "nosotros habíamos " + verbpartsp[rand];
                        eng5 = "we had " + verbsparteng[rand];
                        eng52 = "we'd " + verbsparteng[rand];

                        break;
                    case 1:
                        sp1 = "yo no había " + verbpartsp[rand];
                        eng1 = "I had not " + verbsparteng[rand];
                        eng12 = "I hadn't " + verbsparteng[rand];

                        sp2 = "tú no habías " + verbpartsp[rand];
                        eng2 = "you had not " + verbsparteng[rand];
                        eng22 = "you hadn't " + verbsparteng[rand];

                        sp3 = "él no había " + verbpartsp[rand];
                        eng3 = "he had not " + verbsparteng[rand];
                        eng32 = "he hadn't " + verbsparteng[rand];

                        sp3ella = "ella no había " + verbpartsp[rand];
                        eng3she = "she had not " + verbsparteng[rand];
                        eng3she2 = "she hadn't " + verbsparteng[rand];

                        sp3eso = "eso no había " + verbpartsp[rand];
                        sp3it = "it had not " + verbsparteng[rand];
                        sp3it2 = "it hadn't " + verbsparteng[rand];

                        sp4 = "ellos no habían " + verbpartsp[rand];
                        eng4 = "they had not " + verbsparteng[rand];
                        eng42 = "they hadn't " + verbsparteng[rand];

                        sp5 = "nosotros no habíamos " + verbpartsp[rand];
                        eng5 = "we had not " + verbsparteng[rand];
                        eng52 = "we hadn't " + verbsparteng[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenPastPerfCont1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo había estado " + verbconti[rand];
                        eng1 = "I had been " + verbscont[rand];

                        sp2 = "tú habías estado " + verbconti[rand];
                        eng2 = "you had been " + verbscont[rand];

                        sp3 = "él había estado " + verbconti[rand];
                        eng3 = "he had been " + verbscont[rand];

                        sp3ella = "ella había estado " + verbconti[rand];
                        eng3she = "she had been " + verbscont[rand];

                        sp3eso = "eso había estado " + verbconti[rand];
                        sp3it = "it had been " + verbscont[rand];

                        sp4 = "ellos habían estado " + verbconti[rand];
                        eng4 = "they had been " + verbscont[rand];

                        sp5 = "nosotros habíamos estado " + verbconti[rand];
                        eng5 = "we had been " + verbscont[rand];

                        break;
                    case 1:
                        sp1 = "yo no había estado " + verbconti[rand];
                        eng1 = "I hadn't been " + verbscont[rand];

                        sp2 = "tú no habías estado " + verbconti[rand];
                        eng2 = "you hadn't been " + verbscont[rand];

                        sp3 = "él no había estado " + verbconti[rand];
                        eng3 = "he hadn't been " + verbscont[rand];

                        sp3ella = "ella no había estado " + verbconti[rand];
                        eng3she = "she hadn't been " + verbscont[rand];

                        sp3eso = "eso no había estado " + verbconti[rand];
                        sp3it = "it hadn't been " + verbscont[rand];

                        sp4 = "ellos no habían estado " + verbconti[rand];
                        eng4 = "they hadn't been " + verbscont[rand];

                        sp5 = "nosotros no habíamos estado " + verbconti[rand];
                        eng5 = "we hadn't been " + verbscont[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023

    //Futuros
    public void GenFutSimp1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo " + vsf1[rand];
                        eng1 = "I will " + verbs[rand];

                        sp2 = "tú " + vsf2[rand];
                        eng2 = "you will " + verbs[rand];

                        sp3 = "él " + vsf3[rand];
                        eng3 = "he will " + verbs[rand];

                        sp3ella = "ella " + vsf3[rand];
                        eng3she = "she will " + verbs[rand];

                        sp3eso = "eso " + vsf3[rand];
                        sp3it = "it will " + verbs[rand];

                        sp4 = "ellos " + vsf5[rand];
                        eng4 = "they will " + verbs[rand];

                        sp5 = "nosotros " + vsf4[rand];
                        eng5 = "we will " + verbs[rand];

                        break;
                    case 1:
                        sp1 = "yo " + "no " + vsf1[rand];
                        eng1 = "I " + "won't " + verbs[rand];

                        sp2 = "tú " + "no " + vsf2[rand];
                        eng2 = "you " + "won't " + verbs[rand];

                        sp3 = "él " + "no " + vsf3[rand];
                        eng3 = "he " + "won't " + verbs[rand];

                        sp3ella = "ella " + "no " + vsf3[rand];
                        eng3she = "she " + "won't " + verbs[rand];

                        sp3eso = "eso " + "no " + vsf3[rand];
                        sp3it = "it " + "won't " + verbs[rand];

                        sp4 = "ellos " + "no " + vsf5[rand];
                        eng4 = "they " + "won't " + verbs[rand];

                        sp5 = "nosotros " + "no " + vsf4[rand];
                        eng5 = "we " + "won't " + verbs[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenFutCont1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo estaré " + verbconti[rand];
                        eng1 = "I will be " + verbscont[rand];
                        eng12 = "I'll be " + verbscont[rand];

                        sp2 = "tú estarás " + verbconti[rand];
                        eng2 = "you will be " + verbscont[rand];
                        eng22 = "you'll be " + verbscont[rand];

                        sp3 = "él estará " + verbconti[rand];
                        eng3 = "he will be " + verbscont[rand];
                        eng32 = "he'll be " + verbscont[rand];

                        sp3ella = "ella estará " + verbconti[rand];
                        eng3she = "she will be " + verbscont[rand];
                        eng3she2 = "she'll be " + verbscont[rand];

                        sp3eso = "eso estará " + verbconti[rand];
                        sp3it = "it will be " + verbscont[rand];
                        sp3it2 = "it'll be " + verbscont[rand];

                        sp4 = "ellos estarán " + verbconti[rand];
                        eng4 = "they will be " + verbscont[rand];
                        eng42 = "they'll be " + verbscont[rand];

                        sp5 = "nosotros estaremos " + verbconti[rand];
                        eng5 = "we will be " + verbscont[rand];
                        eng52 = "we'll be " + verbscont[rand];

                        break;
                    case 1:
                        sp1 = "yo " + "no estaré " + verbconti[rand];
                        eng1 = "I " + "will not be " + verbscont[rand];
                        eng12 = "I " + "won't be " + verbscont[rand];

                        sp2 = "tú " + "no estarás " + verbconti[rand];
                        eng2 = "you " + "will not be " + verbscont[rand];
                        eng22 = "you " + "won't be " + verbscont[rand];

                        sp3 = "él " + "no estará " + verbconti[rand];
                        eng3 = "he " + "will not be " + verbscont[rand];
                        eng32 = "he " + "won't be " + verbscont[rand];

                        sp3ella = "ella " + "no estará " + verbconti[rand];
                        eng3she = "she " + "will not be " + verbscont[rand];
                        eng3she2 = "she " + "won't be " + verbscont[rand];

                        sp3eso = "eso " + "no estará " + verbconti[rand];
                        sp3it = "it " + "will not be " + verbscont[rand];
                        sp3it2 = "it " + "won't be " + verbscont[rand];

                        sp4 = "ellos " + "no estarán " + verbconti[rand];
                        eng4 = "they " + "will not be " + verbscont[rand];
                        eng42 = "they " + "won't be " + verbscont[rand];

                        sp5 = "nosotros " + "no estaremos " + verbconti[rand];
                        eng5 = "we " + "will not be " + verbscont[rand];
                        eng52 = "we " + "won't be " + verbscont[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenFutPerf1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo habré " + verbpartsp[rand];
                        eng1 = "I will have " + verbsparteng[rand];
                        eng12 = "I'll have " + verbsparteng[rand];

                        sp2 = "tú habrás " + verbpartsp[rand];
                        eng2 = "you will have " + verbsparteng[rand];
                        eng22 = "you'll have " + verbsparteng[rand];

                        sp3 = "él habrá " + verbpartsp[rand];
                        eng3 = "he will have " + verbsparteng[rand];
                        eng32 = "he'll have " + verbsparteng[rand];

                        sp3ella = "ella habrá " + verbpartsp[rand];
                        eng3she = "she will have " + verbsparteng[rand];
                        eng3she2 = "she'll have " + verbsparteng[rand];

                        sp3eso = "eso habrá " + verbpartsp[rand];
                        sp3it = "it will have " + verbsparteng[rand];
                        sp3it2 = "it'll have " + verbsparteng[rand];

                        sp4 = "ellos habrán " + verbpartsp[rand];
                        eng4 = "they will have " + verbsparteng[rand];
                        eng42 = "they'll have " + verbsparteng[rand];

                        sp5 = "nosotros habremos " + verbpartsp[rand];
                        eng5 = "we will have " + verbsparteng[rand];
                        eng52 = "we'll have " + verbsparteng[rand];
                        break;
                    case 1:
                        sp1 = "yo no habré " + verbpartsp[rand];
                        eng1 = "I will not have " + verbsparteng[rand];
                        eng12 = "I won't have " + verbsparteng[rand];

                        sp2 = "tú no habrás " + verbpartsp[rand];
                        eng2 = "you will not have " + verbsparteng[rand];
                        eng22 = "you won't have " + verbsparteng[rand];

                        sp3 = "él no habrá " + verbpartsp[rand];
                        eng3 = "he will not have " + verbsparteng[rand];
                        eng32 = "he won't have " + verbsparteng[rand];

                        sp3ella = "ella no habrá " + verbpartsp[rand];
                        eng3she = "she will not have " + verbsparteng[rand];
                        eng3she2 = "she won't have " + verbsparteng[rand];

                        sp3eso = "eso no habrá " + verbpartsp[rand];
                        sp3it = "it will not have " + verbsparteng[rand];
                        sp3it2 = "it won't have " + verbsparteng[rand];

                        sp4 = "ellos no habrán " + verbpartsp[rand];
                        eng4 = "they will not have " + verbsparteng[rand];
                        eng42 = "they won't have " + verbsparteng[rand];

                        sp5 = "nosotros no habremos " + verbpartsp[rand];
                        eng5 = "we will not have " + verbsparteng[rand];
                        eng52 = "we won't have " + verbsparteng[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenFutPerfCont1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo habré estado " + verbconti[rand];
                        eng1 = "I will have been " + verbscont[rand];

                        sp2 = "tú habrás estado " + verbconti[rand];
                        eng2 = "you will have been " + verbscont[rand];

                        sp3 = "él habrá estado " + verbconti[rand];
                        eng3 = "he will have been " + verbscont[rand];

                        sp3ella = "ella habrá estado " + verbconti[rand];
                        eng3she = "she will have been " + verbscont[rand];

                        sp3eso = "eso habrá estado " + verbconti[rand];
                        sp3it = "it will have been " + verbscont[rand];

                        sp4 = "ellos habrán estado " + verbconti[rand];
                        eng4 = "they will have been " + verbscont[rand];

                        sp5 = "nosotros habremos estado " + verbconti[rand];
                        eng5 = "we will have been " + verbscont[rand];

                        break;
                    case 1:
                        sp1 = "yo no habré estado " + verbconti[rand];
                        eng1 = "I won't have been " + verbscont[rand];

                        sp2 = "tú no habrás estado " + verbconti[rand];
                        eng2 = "you won't have been " + verbscont[rand];

                        sp3 = "él no habrá estado " + verbconti[rand];
                        eng3 = "he won't have been " + verbscont[rand];

                        sp3ella = "ella no habrá estado " + verbconti[rand];
                        eng3she = "she won't have been " + verbscont[rand];

                        sp3eso = "eso no habrá estado " + verbconti[rand];
                        sp3it = "it won't have been " + verbscont[rand];

                        sp4 = "ellos no habrán estado " + verbconti[rand];
                        eng4 = "they won't have been " + verbscont[rand];

                        sp5 = "nosotros no habremos estado " + verbconti[rand];
                        eng5 = "we won't have been " + verbscont[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023

    // WOULD
    public void GenWouldSimp1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo " + vsb1w[rand];
                        eng1 = "I would " + verbs[rand];

                        sp2 = "tú " + vsb2w[rand];
                        eng2 = "you would " + verbs[rand];

                        sp3 = "él " + vsb3w[rand];
                        eng3 = "he would " + verbs[rand];

                        sp3ella = "ella " + vsb3w[rand];
                        eng3she = "she would " + verbs[rand];

                        sp3eso = "eso " + vsb3w[rand];
                        sp3it = "it would " + verbs[rand];

                        sp4 = "ellos " + vsb4w[rand];
                        eng4 = "they would " + verbs[rand];

                        sp5 = "nosotros " + vsb5w[rand];
                        eng5 = "we would " + verbs[rand];

                        break;
                    case 1:
                        sp1 = "yo " + "no " + vsb1w[rand];
                        eng1 = "I " + "wouldn't " + verbs[rand];

                        sp2 = "tú " + "no " + vsb2w[rand];
                        eng2 = "you " + "wouldn't " + verbs[rand];

                        sp3 = "él " + "no " + vsb3w[rand];
                        eng3 = "he " + "wouldn't " + verbs[rand];

                        sp3ella = "ella " + "no " + vsb3w[rand];
                        eng3she = "she " + "wouldn't " + verbs[rand];

                        sp3eso = "eso " + "no " + vsb3w[rand];
                        sp3it = "it " + "wouldn't " + verbs[rand];

                        sp4 = "ellos " + "no " + vsb4w[rand];
                        eng4 = "they " + "wouldn't " + verbs[rand];

                        sp5 = "nosotros " + "no " + vsb5w[rand];
                        eng5 = "we " + "wouldn't " + verbs[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenWouldCont1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo estaría " + verbconti[rand];
                        eng1 = "I would be " + verbscont[rand];
                        eng12 = "I'd be " + verbscont[rand];

                        sp2 = "tú estarías " + verbconti[rand];
                        eng2 = "you would be " + verbscont[rand];
                        eng22 = "you'd be " + verbscont[rand];

                        sp3 = "él estaría " + verbconti[rand];
                        eng3 = "he would be " + verbscont[rand];
                        eng32 = "he'd be " + verbscont[rand];

                        sp3ella = "ella estaría " + verbconti[rand];
                        eng3she = "she would be " + verbscont[rand];
                        eng3she2 = "she'd be " + verbscont[rand];

                        sp3eso = "eso estaría " + verbconti[rand];
                        sp3it = "it would be " + verbscont[rand];
                        sp3it2 = "it'd be " + verbscont[rand];

                        sp4 = "ellos estarían " + verbconti[rand];
                        eng4 = "they would be " + verbscont[rand];
                        eng42 = "they'd be " + verbscont[rand];

                        sp5 = "nosotros estaríamos " + verbconti[rand];
                        eng5 = "we would be " + verbscont[rand];
                        eng52 = "we'd be " + verbscont[rand];

                        break;
                    case 1:
                        sp1 = "yo " + "no estaría " + verbconti[rand];
                        eng1 = "I " + "would not be " + verbscont[rand];
                        eng12 = "I " + "wouldn't be " + verbscont[rand];

                        sp2 = "tú " + "no estarías " + verbconti[rand];
                        eng2 = "you " + "would not be " + verbscont[rand];
                        eng22 = "you " + "wouldn't be " + verbscont[rand];

                        sp3 = "él " + "no estaría " + verbconti[rand];
                        eng3 = "he " + "would not be " + verbscont[rand];
                        eng32 = "he " + "wouldn't be " + verbscont[rand];

                        sp3ella = "ella " + "no estaría " + verbconti[rand];
                        eng3she = "she " + "would not be " + verbscont[rand];
                        eng3she2 = "she " + "wouldn't be " + verbscont[rand];

                        sp3eso = "eso " + "no estaría " + verbconti[rand];
                        sp3it = "it " + "would not be " + verbscont[rand];
                        sp3it2 = "it " + "wouldn't be " + verbscont[rand];

                        sp4 = "ellos " + "no estarían " + verbconti[rand];
                        eng4 = "they " + "would not be " + verbscont[rand];
                        eng42 = "they " + "wouldn't be " + verbscont[rand];

                        sp5 = "nosotros " + "no estaríamos " + verbconti[rand];
                        eng5 = "we " + "would not be " + verbscont[rand];
                        eng52 = "we " + "wouldn't be " + verbscont[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenWouldPerf1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo habría " + verbpartsp[rand];
                        eng1 = "I would have " + verbsparteng[rand];
                        eng12 = "I'd have " + verbsparteng[rand];

                        sp2 = "tú habrías " + verbpartsp[rand];
                        eng2 = "you would have " + verbsparteng[rand];
                        eng22 = "you'd have " + verbsparteng[rand];

                        sp3 = "él habría " + verbpartsp[rand];
                        eng3 = "he would have " + verbsparteng[rand];
                        eng32 = "he'd have " + verbsparteng[rand];

                        sp3ella = "ella habría " + verbpartsp[rand];
                        eng3she = "she would have " + verbsparteng[rand];
                        eng3she2 = "she'd have " + verbsparteng[rand];

                        sp3eso = "eso habría " + verbpartsp[rand];
                        sp3it = "it would have " + verbsparteng[rand];
                        sp3it2 = "it'd have " + verbsparteng[rand];

                        sp4 = "ellos habrían " + verbpartsp[rand];
                        eng4 = "they would have " + verbsparteng[rand];
                        eng42 = "they'd have " + verbsparteng[rand];

                        sp5 = "nosotros habríamos " + verbpartsp[rand];
                        eng5 = "we would have " + verbsparteng[rand];
                        eng52 = "we'd have " + verbsparteng[rand];
                        break;
                    case 1:
                        sp1 = "yo no habría " + verbpartsp[rand];
                        eng1 = "I would not have " + verbsparteng[rand];
                        eng12 = "I wouldn't have " + verbsparteng[rand];

                        sp2 = "tú no habrías " + verbpartsp[rand];
                        eng2 = "you would not have " + verbsparteng[rand];
                        eng22 = "you wouldn't have " + verbsparteng[rand];

                        sp3 = "él no habría " + verbpartsp[rand];
                        eng3 = "he would not have " + verbsparteng[rand];
                        eng32 = "he wouldn't have " + verbsparteng[rand];

                        sp3ella = "ella no habría " + verbpartsp[rand];
                        eng3she = "she would not have " + verbsparteng[rand];
                        eng3she2 = "she wouldn't have " + verbsparteng[rand];

                        sp3eso = "eso no habría " + verbpartsp[rand];
                        sp3it = "it would not have " + verbsparteng[rand];
                        sp3it2 = "it wouldn't have " + verbsparteng[rand];

                        sp4 = "ellos no habrían " + verbpartsp[rand];
                        eng4 = "they would not have " + verbsparteng[rand];
                        eng42 = "they wouldn't have " + verbsparteng[rand];

                        sp5 = "nosotros no habríamos " + verbpartsp[rand];
                        eng5 = "we would not have " + verbsparteng[rand];
                        eng52 = "we wouldn't have " + verbsparteng[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenWouldPerfCont1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo habría estado " + verbconti[rand];
                        eng1 = "I would have been " + verbscont[rand];

                        sp2 = "tú habrías estado " + verbconti[rand];
                        eng2 = "you would have been " + verbscont[rand];

                        sp3 = "él habría estado " + verbconti[rand];
                        eng3 = "he would have been " + verbscont[rand];

                        sp3ella = "ella habría estado " + verbconti[rand];
                        eng3she = "she would have been " + verbscont[rand];

                        sp3eso = "eso habría estado " + verbconti[rand];
                        sp3it = "it would have been " + verbscont[rand];

                        sp4 = "ellos habrían estado " + verbconti[rand];
                        eng4 = "they would have been " + verbscont[rand];

                        sp5 = "nosotros habríamos estado " + verbconti[rand];
                        eng5 = "we would have been " + verbscont[rand];

                        break;
                    case 1:
                        sp1 = "yo no habría estado " + verbconti[rand];
                        eng1 = "I wouldn't have been " + verbscont[rand];

                        sp2 = "tú no habrías estado " + verbconti[rand];
                        eng2 = "you wouldn't have been " + verbscont[rand];

                        sp3 = "él no habría estado " + verbconti[rand];
                        eng3 = "he wouldn't have been " + verbscont[rand];

                        sp3ella = "ella no habría estado " + verbconti[rand];
                        eng3she = "she wouldn't have been " + verbscont[rand];

                        sp3eso = "eso no habría estado " + verbconti[rand];
                        sp3it = "it wouldn't have been " + verbscont[rand];

                        sp4 = "ellos no habrían estado " + verbconti[rand];
                        eng4 = "they wouldn't have been " + verbscont[rand];

                        sp5 = "nosotros no habríamos estado " + verbconti[rand];
                        eng5 = "we wouldn't have been " + verbscont[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023

    //COULD
    public void GenCouldSimp1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo podría " + vsbc[rand];
                        eng1 = "I could " + verbs[rand];

                        sp2 = "tú podrías " + vsbc[rand];
                        eng2 = "you could " + verbs[rand];

                        sp3 = "él podría " + vsbc[rand];
                        eng3 = "he could " + verbs[rand];

                        sp3ella = "ella podría " + vsbc[rand];
                        eng3she = "she could " + verbs[rand];

                        sp3eso = "eso podría " + vsbc[rand];
                        sp3it = "it could " + verbs[rand];

                        sp4 = "ellos podrían " + vsbc[rand];
                        eng4 = "they could " + verbs[rand];

                        sp5 = "nosotros podríamos " + vsbc[rand];
                        eng5 = "we could " + verbs[rand];

                        break;
                    case 1:
                        sp1 = "yo " + "no podría " + vsbc[rand];
                        eng1 = "I " + "couldn't " + verbs[rand];

                        sp2 = "tú " + "no podrías " + vsbc[rand];
                        eng2 = "you " + "couldn't " + verbs[rand];

                        sp3 = "él " + "no podría " + vsbc[rand];
                        eng3 = "he " + "couldn't " + verbs[rand];

                        sp3ella = "ella " + "no podría " + vsbc[rand];
                        eng3she = "she " + "couldn't " + verbs[rand];

                        sp3eso = "eso " + "no podría " + vsbc[rand];
                        sp3it = "it " + "couldn't " + verbs[rand];

                        sp4 = "ellos " + "no podrían " + vsbc[rand];
                        eng4 = "they " + "couldn't " + verbs[rand];

                        sp5 = "nosotros " + "no podríamos " + vsbc[rand];
                        eng5 = "we " + "couldn't " + verbs[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenCouldCont1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo podría estar " + verbconti[rand];
                        eng1 = "I could be " + verbscont[rand];
                        eng12 = "I could be " + verbscont[rand];

                        sp2 = "tú podrías estar " + verbconti[rand];
                        eng2 = "you could be " + verbscont[rand];
                        eng22 = "you could be " + verbscont[rand];

                        sp3 = "él podría estar " + verbconti[rand];
                        eng3 = "he could be " + verbscont[rand];
                        eng32 = "he could be " + verbscont[rand];

                        sp3ella = "ella podría estar " + verbconti[rand];
                        eng3she = "she could be " + verbscont[rand];
                        eng3she2 = "she could be " + verbscont[rand];

                        sp3eso = "eso podría estar " + verbconti[rand];
                        sp3it = "it could be " + verbscont[rand];
                        sp3it2 = "it could be " + verbscont[rand];

                        sp4 = "ellos podrían estar " + verbconti[rand];
                        eng4 = "they could be " + verbscont[rand];
                        eng42 = "they could be " + verbscont[rand];

                        sp5 = "nosotros podríamos estar " + verbconti[rand];
                        eng5 = "we could be " + verbscont[rand];
                        eng52 = "we could be " + verbscont[rand];

                        break;
                    case 1:
                        sp1 = "yo " + "no podría estar " + verbconti[rand];
                        eng1 = "I " + "could not be " + verbscont[rand];
                        eng12 = "I " + "couldn't be " + verbscont[rand];

                        sp2 = "tú " + "no podrías estar " + verbconti[rand];
                        eng2 = "you " + "could not be " + verbscont[rand];
                        eng22 = "you " + "couldn't be " + verbscont[rand];

                        sp3 = "él " + "no podría estar " + verbconti[rand];
                        eng3 = "he " + "could not be " + verbscont[rand];
                        eng32 = "he " + "couldn't be " + verbscont[rand];

                        sp3ella = "ella " + "no podría estar " + verbconti[rand];
                        eng3she = "she " + "could not be " + verbscont[rand];
                        eng3she2 = "she " + "couldn't be " + verbscont[rand];

                        sp3eso = "eso " + "no podría estar " + verbconti[rand];
                        sp3it = "it " + "could not be " + verbscont[rand];
                        sp3it2 = "it " + "couldn't be " + verbscont[rand];

                        sp4 = "ellos " + "no podrían estar " + verbconti[rand];
                        eng4 = "they " + "could not be " + verbscont[rand];
                        eng42 = "they " + "couldn't be " + verbscont[rand];

                        sp5 = "nosotros " + "no podríamos estar " + verbconti[rand];
                        eng5 = "we " + "could not be " + verbscont[rand];
                        eng52= "we " + "couldn't be " + verbscont[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenCouldPerf1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo pude haber " + verbpartsp[rand];
                        eng1 = "I could have " + verbsparteng[rand];
                        eng12 = "I could have " + verbsparteng[rand];

                        sp2 = "tú pudiste haber " + verbpartsp[rand];
                        eng2 = "you could have " + verbsparteng[rand];
                        eng22 = "you could have " + verbsparteng[rand];

                        sp3 = "él pudo haber " + verbpartsp[rand];
                        eng3 = "he could have " + verbsparteng[rand];
                        eng32 = "he could have " + verbsparteng[rand];

                        sp3ella = "ella pudiese haber " + verbpartsp[rand];
                        eng3she = "she could have " + verbsparteng[rand];
                        eng3she2 = "she could have " + verbsparteng[rand];

                        sp3eso = "eso pudiese haber " + verbpartsp[rand];
                        sp3it = "it could have " + verbsparteng[rand];
                        sp3it2 = "it could have " + verbsparteng[rand];

                        sp4 = "ellos pudiesen haber " + verbpartsp[rand];
                        eng4 = "they could have " + verbsparteng[rand];
                        eng42 = "they could have " + verbsparteng[rand];

                        sp5 = "nosotros pudiesemos haber " + verbpartsp[rand];
                        eng5 = "we could have " + verbsparteng[rand];
                        eng52 = "we could have " + verbsparteng[rand];

                        break;
                    case 1:
                        sp1 = "yo " + "no pude haber " + verbpartsp[rand];
                        eng1 = "I " + "could not have " + verbsparteng[rand];
                        eng12 = "I " + "couldn't have " + verbsparteng[rand];

                        sp2 = "tú " + "no pudiste haber " + verbpartsp[rand];
                        eng2 = "you " + "could not have " + verbsparteng[rand];
                        eng22 = "you " + "couldn't have " + verbsparteng[rand];

                        sp3 = "él " + "no pudo haber " + verbpartsp[rand];
                        eng3 = "he " + "could not have " + verbsparteng[rand];
                        eng32 = "he " + "couldn't have " + verbsparteng[rand];

                        sp3ella = "ella " + "no pudiese haber " + verbpartsp[rand];
                        eng3she = "she " + "could not have " + verbsparteng[rand];
                        eng3she2 = "she " + "couldn't have " + verbsparteng[rand];

                        sp3eso = "eso " + "no pudiese haber " + verbpartsp[rand];
                        sp3it = "it " + "could not have " + verbsparteng[rand];
                        sp3it2 = "it " + "couldn't have " + verbsparteng[rand];

                        sp4 = "ellos " + "no pudiesen haber " + verbpartsp[rand];
                        eng4 = "they " + "could not have " + verbsparteng[rand];
                        eng42 = "they " + "couldn't have " + verbsparteng[rand];

                        sp5 = "nosotros " + "no pudiesemos haber " + verbpartsp[rand];
                        eng5 = "we " + "could not have " + verbsparteng[rand];
                        eng52 = "we " + "couldn't have " + verbsparteng[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenCouldPerfCont1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo podría haber estado " + verbconti[rand];
                        eng1 = "I could have been " + verbscont[rand];

                        sp2 = "tú podrías haber estado " + verbconti[rand];
                        eng2 = "you could have been " + verbscont[rand];

                        sp3 = "él podría haber estado " + verbconti[rand];
                        eng3 = "he could have been " + verbscont[rand];

                        sp3ella = "ella podría haber estado " + verbconti[rand];
                        eng3she = "she could have been " + verbscont[rand];

                        sp3eso = "eso podría haber estado " + verbconti[rand];
                        sp3it = "it could have been " + verbscont[rand];

                        sp4 = "ellos podrían haber estado " + verbconti[rand];
                        eng4 = "they could have been " + verbscont[rand];

                        sp5 = "nosotros podríamos haber estado " + verbconti[rand];
                        eng5 = "we could have been " + verbscont[rand];

                        break;
                    case 1:
                        sp1 = "yo " + "no podría haber estado " + verbconti[rand];
                        eng1 = "I " + "couldn't have been " + verbscont[rand];

                        sp2 = "tú " + "no podrías haber estado " + verbconti[rand];
                        eng2 = "you " + "couldn't have been " + verbscont[rand];

                        sp3 = "él " + "no podría haber estado " + verbconti[rand];
                        eng3 = "he " + "couldn't have been " + verbscont[rand];

                        sp3ella = "ella " + "no podría haber estado " + verbconti[rand];
                        eng3she = "she " + "couldn't have been " + verbscont[rand];

                        sp3eso = "eso " + "no podría haber estado " + verbconti[rand];
                        sp3it = "it " + "couldn't have been " + verbscont[rand];

                        sp4 = "ellos " + "no podrían haber estado " + verbconti[rand];
                        eng4 = "they " + "couldn't have been " + verbscont[rand];

                        sp5 = "nosotros " + "no podríamos haber estado " + verbconti[rand];
                        eng5 = "we " + "couldn't have been " + verbscont[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023

    // MIGHT
    public void GenMightSimp1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo quizá " + v1s[rand];
                        eng1 = "I might " + verbs[rand];

                        sp2 = "tú quizá " + v2s[rand];
                        eng2 = "you might " + verbs[rand];

                        sp3 = "él quizá " + v3s[rand];
                        eng3 = "he might " + verbs[rand];

                        sp3ella = "ella quizá " + v3s[rand];
                        eng3she = "she might " + verbs[rand];

                        sp3eso = "eso quizá" + v3s[rand];
                        sp3it = "it might " + verbs[rand];

                        sp4 = "ellos quizá " + v4s[rand];
                        eng4 = "they might " + verbs[rand];

                        sp5 = "nosotros quizá " + v5s[rand];
                        eng5 = "we might " + verbs[rand];

                        break;
                    case 1:
                        sp1 = "yo quizá no " + v1s[rand];
                        eng1 = "I might not " + verbs[rand];

                        sp2 = "tú quizá no " + v2s[rand];
                        eng2 = "you might not " + verbs[rand];

                        sp3 = "él quizá no " + v3s[rand];
                        eng3 = "he might not " + verbs[rand];

                        sp3ella = "ella quizá no " + v3s[rand];
                        eng3she = "she might not " + verbs[rand];

                        sp3eso = "eso quizá no " + v3s[rand];
                        sp3it = "it might not " + verbs[rand];

                        sp4 = "ellos quizá no " + v4s[rand];
                        eng4 = "they might not " + verbs[rand];

                        sp5 = "nosotros quizá no " + v5s[rand];
                        eng5 = "we might not " + verbs[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenMightCont1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo quizá esté " + verbconti[rand];
                        eng1 = "I might be " + verbscont[rand];
                        eng12 = "I might be " + verbscont[rand];

                        sp2 = "tú quizá estés " + verbconti[rand];
                        eng2 = "you might be " + verbscont[rand];
                        eng22 = "you might be " + verbscont[rand];

                        sp3 = "él quizá esté " + verbconti[rand];
                        eng3 = "he might be " + verbscont[rand];
                        eng32 = "he might be " + verbscont[rand];

                        sp3ella = "ella quizá esté " + verbconti[rand];
                        eng3she = "she might be " + verbscont[rand];
                        eng3she2 = "she might be " + verbscont[rand];

                        sp3eso = "eso quizá esté " + verbconti[rand];
                        sp3it = "it might be " + verbscont[rand];
                        sp3it2 = "it might be " + verbscont[rand];

                        sp4 = "ellos quizá estén " + verbconti[rand];
                        eng4 = "they might be " + verbscont[rand];
                        eng42 = "they might be " + verbscont[rand];

                        sp5 = "nosotros quizá estemos " + verbconti[rand];
                        eng5 = "we might be " + verbscont[rand];
                        eng52 = "we might be " + verbscont[rand];

                        break;
                    case 1:
                        sp1 = "yo " + "quizá no esté " + verbconti[rand];
                        eng1 = "I " + "might not be " + verbscont[rand];
                        eng12 = "I " + "mightn't be " + verbscont[rand];

                        sp2 = "tú " + "quizá no estés " + verbconti[rand];
                        eng2 = "you " + "might not be " + verbscont[rand];
                        eng22 = "you " + "mightn't be " + verbscont[rand];

                        sp3 = "él " + "quizá no esté  " + verbconti[rand];
                        eng3 = "he " + "might not be " + verbscont[rand];
                        eng32 = "he " + "mightn't be " + verbscont[rand];

                        sp3ella = "ella " + "quizá no esté " + verbconti[rand];
                        eng3she = "she " + "might not be " + verbscont[rand];
                        eng3she2 = "she " + "mightn't be " + verbscont[rand];

                        sp3eso = "eso " + "quizá no esté " + verbconti[rand];
                        sp3it = "it " + "might not be " + verbscont[rand];
                        sp3it2 = "it " + "mightn't be " + verbscont[rand];

                        sp4 = "ellos " + "quizá no estén " + verbconti[rand];
                        eng4 = "they " + "might not be " + verbscont[rand];
                        eng42 = "they " + "mightn't be " + verbscont[rand];

                        sp5 = "nosotros " + "quizá no estémos " + verbconti[rand];
                        eng5 = "we " + "might not be " + verbscont[rand];
                        eng52 = "we " + "mightn't be " + verbscont[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenMightPerf1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo quizá haya " + verbpartsp[rand];
                        eng1 = "I might have " + verbsparteng[rand];
                        eng12 = "I might have " + verbsparteng[rand];

                        sp2 = "tú quizá hayas " + verbpartsp[rand];
                        eng2 = "you might have " + verbsparteng[rand];
                        eng22 = "you might have " + verbsparteng[rand];

                        sp3 = "él quizá haya " + verbpartsp[rand];
                        eng3 = "he might have " + verbsparteng[rand];
                        eng32 = "he might have " + verbsparteng[rand];

                        sp3ella = "ella quizá haya " + verbpartsp[rand];
                        eng3she = "she might have " + verbsparteng[rand];
                        eng3she2 = "she might have " + verbsparteng[rand];

                        sp3eso = "eso quizá haya " + verbpartsp[rand];
                        sp3it = "it might have " + verbsparteng[rand];
                        sp3it2 = "it might have " + verbsparteng[rand];

                        sp4 = "ellos quizá hayan " + verbpartsp[rand];
                        eng4 = "they might have " + verbsparteng[rand];
                        eng42 = "they might have " + verbsparteng[rand];

                        sp5 = "nosotros quizá hayamos " + verbpartsp[rand];
                        eng5 = "we might have " + verbsparteng[rand];
                        eng52 = "we might have " + verbsparteng[rand];

                        break;
                    case 1:
                        sp1 = "yo quizá no haya " + verbpartsp[rand];
                        eng1 = "I might not have " + verbsparteng[rand];
                        eng12 = "I mightn't have " + verbsparteng[rand];

                        sp2 = "tú quizá no hayas " + verbpartsp[rand];
                        eng2 = "you might not have " + verbsparteng[rand];
                        eng22 = "you mightn't have " + verbsparteng[rand];

                        sp3 = "él quizá no haya " + verbpartsp[rand];
                        eng3 = "he might not have " + verbsparteng[rand];
                        eng32 = "he mightn't have " + verbsparteng[rand];

                        sp3ella = "ella quizá no haya " + verbpartsp[rand];
                        eng3she = "she might not have " + verbsparteng[rand];
                        eng3she2 = "she mightn't have " + verbsparteng[rand];

                        sp3eso = "eso quizá no haya " + verbpartsp[rand];
                        sp3it = "it might not have " + verbsparteng[rand];
                        sp3it2 = "it might not have " + verbsparteng[rand];

                        sp4 = "ellos quizá no hayan " + verbpartsp[rand];
                        eng4 = "they might not have " + verbsparteng[rand];
                        eng42 = "they mightn't have " + verbsparteng[rand];

                        sp5 = "nosotros quizá no hayamos " + verbpartsp[rand];
                        eng5 = "we might not have " + verbsparteng[rand];
                        eng52 = "we mightn't have " + verbsparteng[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenMightPerfCont1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo quizá haya estado " + verbconti[rand];
                        eng1 = "I might have been " + verbscont[rand];

                        sp2 = "tú quizá hayas estado " + verbconti[rand];
                        eng2 = "you might have been " + verbscont[rand];

                        sp3 = "él quizá haya estado " + verbconti[rand];
                        eng3 = "he might have been " + verbscont[rand];

                        sp3ella = "ella quizá haya estado " + verbconti[rand];
                        eng3she = "she might have been " + verbscont[rand];

                        sp3eso = "eso quizá haya estado " + verbconti[rand];
                        sp3it = "it might have been " + verbscont[rand];

                        sp4 = "ellos quizá hayan estado " + verbconti[rand];
                        eng4 = "they might have been " + verbscont[rand];

                        sp5 = "nosotros quizá hayamos estado " + verbconti[rand];
                        eng5 = "we might have been " + verbscont[rand];

                        break;
                    case 1:
                        sp1 = "yo quizá no haya estado " + verbconti[rand];
                        eng1 = "I might not have been " + verbscont[rand];

                        sp2 = "tú quizá no hayas estado " + verbconti[rand];
                        eng2 = "you might not have been " + verbscont[rand];

                        sp3 = "él quizá no haya estado " + verbconti[rand];
                        eng3 = "he might not have been " + verbscont[rand];

                        sp3ella = "ella quizá no haya estado " + verbconti[rand];
                        eng3she = "she might not have been " + verbscont[rand];

                        sp3eso = "eso quizá no haya estado " + verbconti[rand];
                        sp3it = "it might not have been " + verbscont[rand];

                        sp4 = "ellos quizá no hayan estado " + verbconti[rand];
                        eng4 = "they might not have been " + verbscont[rand];

                        sp5 = "nosotros quizá no hayamos estado " + verbconti[rand];
                        eng5 = "we might not have been " + verbscont[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023

    //SHOULD
    public void GenShouldSimp1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo debería " + vsbc[rand];
                        eng1 = "I should " + verbs[rand];

                        sp2 = "tú deberías " + vsbc[rand];
                        eng2 = "you should " + verbs[rand];

                        sp3 = "él debería " + vsbc[rand];
                        eng3 = "he should " + verbs[rand];

                        sp3ella = "ella debería " + vsbc[rand];
                        eng3she = "she should " + verbs[rand];

                        sp3eso = "eso debería " + vsbc[rand];
                        sp3it = "it should " + verbs[rand];

                        sp4 = "ellos deberían " + vsbc[rand];
                        eng4 = "they should " + verbs[rand];

                        sp5 = "nosotros deberíamos " + vsbc[rand];
                        eng5 = "we should " + verbs[rand];

                        break;
                    case 1:
                        sp1 = "yo " + "no debería " + vsbc[rand];
                        eng1 = "I " + "shouldn't " + verbs[rand];

                        sp2 = "tú " + "no deberías " + vsbc[rand];
                        eng2 = "you " + "shouldn't " + verbs[rand];

                        sp3 = "él " + "no debería " + vsbc[rand];
                        eng3 = "he " + "shouldn't " + verbs[rand];

                        sp3ella = "ella " + "no debería " + vsbc[rand];
                        eng3she = "she " + "shouldn't " + verbs[rand];

                        sp3eso = "eso " + "no debería " + vsbc[rand];
                        sp3it = "it " + "shouldn't " + verbs[rand];

                        sp4 = "ellos " + "no deberían " + vsbc[rand];
                        eng4 = "they " + "shouldn't " + verbs[rand];

                        sp5 = "nosotros " + "no deberíamos " + vsbc[rand];
                        eng5 = "we " + "shouldn't " + verbs[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenShouldCont1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo debería estar " + verbconti[rand];
                        eng1 = "I should be " + verbscont[rand];
                        eng12 = "I'd be " + verbscont[rand];

                        sp2 = "tú deberías estar " + verbconti[rand];
                        eng2 = "you should be " + verbscont[rand];
                        eng22 = "you'd be " + verbscont[rand];

                        sp3 = "él debería estar " + verbconti[rand];
                        eng3 = "he should be " + verbscont[rand];
                        eng32 = "he'd be " + verbscont[rand];

                        sp3ella = "ella debería estar " + verbconti[rand];
                        eng3she = "she should be " + verbscont[rand];
                        eng3she2 = "she'd be " + verbscont[rand];

                        sp3eso = "eso debería estar " + verbconti[rand];
                        sp3it = "it should be " + verbscont[rand];
                        sp3it2 = "it'd be " + verbscont[rand];

                        sp4 = "ellos deberían estar " + verbconti[rand];
                        eng4 = "they should be " + verbscont[rand];
                        eng42 = "they'd be " + verbscont[rand];

                        sp5 = "nosotros deberíamos estar " + verbconti[rand];
                        eng5 = "we should be " + verbscont[rand];
                        eng52 = "we'd be " + verbscont[rand];
                        break;
                    case 1:
                        sp1 = "yo " + "no debería estar " + verbconti[rand];
                        eng1 = "I " + "should not be " + verbscont[rand];
                        eng12 = "I " + "shouldn't be " + verbscont[rand];

                        sp2 = "tú " + "no deberías estar " + verbconti[rand];
                        eng2 = "you " + "should not be " + verbscont[rand];
                        eng22 = "you " + "shouldn't be " + verbscont[rand];

                        sp3 = "él " + "no debería estar " + verbconti[rand];
                        eng3 = "he " + "should not be " + verbscont[rand];
                        eng32 = "he " + "shouldn't be " + verbscont[rand];

                        sp3ella = "ella " + "no debería estar " + verbconti[rand];
                        eng3she = "she " + "should not be " + verbscont[rand];
                        eng3she2 = "she " + "shouldn't be " + verbscont[rand];

                        sp3eso = "eso " + "no debería estar " + verbconti[rand];
                        sp3it = "it " + "should not be " + verbscont[rand];
                        sp3it2 = "it " + "shouldn't be " + verbscont[rand];

                        sp4 = "ellos " + "no deberían estar " + verbconti[rand];
                        eng4 = "they " + "should not be " + verbscont[rand];
                        eng42 = "they " + "shouldn't be " + verbscont[rand];

                        sp5 = "nosotros " + "no deberíamos estar " + verbconti[rand];
                        eng5 = "we " + "should not be " + verbscont[rand];
                        eng52 = "we " + "shouldn't be " + verbscont[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenShouldPerf1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo debería haber " + verbpartsp[rand];
                        eng1 = "I should have " + verbsparteng[rand];
                        eng12 = "I'd have " + verbsparteng[rand];

                        sp2 = "tú deberías haber " + verbpartsp[rand];
                        eng2 = "you should have " + verbsparteng[rand];
                        eng22 = "you'd have " + verbsparteng[rand];

                        sp3 = "él debería haber " + verbpartsp[rand];
                        eng3 = "he should have " + verbsparteng[rand];
                        eng32 = "he'd have " + verbsparteng[rand];

                        sp3ella = "ella debería haber " + verbpartsp[rand];
                        eng3she = "she should have " + verbsparteng[rand];
                        eng3she = "she'd have " + verbsparteng[rand];

                        sp3eso = "eso debería haber " + verbpartsp[rand];
                        sp3it = "it should have " + verbsparteng[rand];
                        sp3it2 = "it'd have " + verbsparteng[rand];

                        sp4 = "ellos deberían haber " + verbpartsp[rand];
                        eng4 = "they should have " + verbsparteng[rand];
                        eng42 = "they'd have " + verbsparteng[rand];

                        sp5 = "nosotros deberíamos haber " + verbpartsp[rand];
                        eng5 = "we should have " + verbsparteng[rand];
                        eng52 = "we'd have " + verbsparteng[rand];

                        break;
                    case 1:
                        sp1 = "yo " + "no debería haber " + verbpartsp[rand];
                        eng1 = "I " + "should not have " + verbsparteng[rand];
                        eng12 = "I " + "shouldn't have " + verbsparteng[rand];

                        sp2 = "tú " + "no deberías haber " + verbpartsp[rand];
                        eng2 = "you " + "should not have " + verbsparteng[rand];
                        eng22 = "you " + "shouldn't have " + verbsparteng[rand];

                        sp3 = "él " + "no debería haber " + verbpartsp[rand];
                        eng3 = "he " + "should not have " + verbsparteng[rand];
                        eng32 = "he " + "shouldn't have " + verbsparteng[rand];

                        sp3ella = "ella " + "no debería haber " + verbpartsp[rand];
                        eng3she = "she " + "should not have " + verbsparteng[rand];
                        eng3she2 = "she " + "shouldn't have " + verbsparteng[rand];

                        sp3eso = "eso " + "no debería haber " + verbpartsp[rand];
                        sp3it = "it " + "should not have " + verbsparteng[rand];
                        sp3it2 = "it " + "shouldn't have " + verbsparteng[rand];

                        sp4 = "ellos " + "no deberían haber " + verbpartsp[rand];
                        eng4 = "they " + "should not have " + verbsparteng[rand];
                        eng42 = "they " + "shouldn't have " + verbsparteng[rand];

                        sp5 = "nosotros " + "no deberíamos haber " + verbpartsp[rand];
                        eng5 = "we " + "should not have " + verbsparteng[rand];
                        eng52 = "we " + "shouldn't have " + verbsparteng[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenShouldPerfCont1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo debería haber estado " + verbconti[rand];
                        eng1 = "I should have been " + verbscont[rand];

                        sp2 = "tú deberías haber estado " + verbconti[rand];
                        eng2 = "you should have been " + verbscont[rand];

                        sp3 = "él debería haber estado " + verbconti[rand];
                        eng3 = "he should have been " + verbscont[rand];

                        sp3ella = "ella debería haber estado " + verbconti[rand];
                        eng3she = "she should have been " + verbscont[rand];

                        sp3eso = "eso debería haber estado " + verbconti[rand];
                        sp3it = "it should have been " + verbscont[rand];

                        sp4 = "ellos deberían haber estado " + verbconti[rand];
                        eng4 = "they should have been " + verbscont[rand];

                        sp5 = "nosotros deberíamos haber estado " + verbconti[rand];
                        eng5 = "we should have been " + verbscont[rand];

                        break;
                    case 1:
                        sp1 = "yo " + "no debería haber estado " + verbconti[rand];
                        eng1 = "I " + "shouldn't have been " + verbscont[rand];

                        sp2 = "tú " + "no deberías haber estado " + verbconti[rand];
                        eng2 = "you " + "shouldn't have been " + verbscont[rand];

                        sp3 = "él " + "no debería haber estado " + verbconti[rand];
                        eng3 = "he " + "shouldn't have been " + verbscont[rand];

                        sp3ella = "ella " + "no debería haber estado " + verbconti[rand];
                        eng3she = "she " + "shouldn't have been " + verbscont[rand];

                        sp3eso = "eso " + "no debería haber estado " + verbconti[rand];
                        sp3it = "it " + "shouldn't have been " + verbscont[rand];

                        sp4 = "ellos " + "no deberían haber estado " + verbconti[rand];
                        eng4 = "they " + "shouldn't have been " + verbscont[rand];

                        sp5 = "nosotros " + "no deberíamos haber estado " + verbconti[rand];
                        eng5 = "we " + "shouldn't have been " + verbscont[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023

    //Can
    public void GenCanSimp1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo puedo " + vsbc[rand];
                        eng1 = "I can " + verbs[rand];

                        sp2 = "tú puedes " + vsbc[rand];
                        eng2 = "you can " + verbs[rand];

                        sp3 = "él puede " + vsbc[rand];
                        eng3 = "he can " + verbs[rand];

                        sp3ella = "ella puede " + vsbc[rand];
                        eng3she = "she can " + verbs[rand];

                        sp3eso = "eso puede " + vsbc[rand];
                        sp3it = "it can " + verbs[rand];

                        sp4 = "ellos pueden " + vsbc[rand];
                        eng4 = "they can " + verbs[rand];

                        sp5 = "nosotros podemos " + vsbc[rand];
                        eng5 = "we can " + verbs[rand];

                        break;
                    case 1:
                        sp1 = "yo " + "no puedo " + vsbc[rand];
                        eng1 = "I " + "can't " + verbs[rand];

                        sp2 = "tú " + "no puedes " + vsbc[rand];
                        eng2 = "you " + "can't " + verbs[rand];

                        sp3 = "él " + "no puede " + vsbc[rand];
                        eng3 = "he " + "can't " + verbs[rand];

                        sp3ella = "ella " + "no puede " + vsbc[rand];
                        eng3she = "she " + "can't " + verbs[rand];

                        sp3eso = "eso " + "no puede " + vsbc[rand];
                        sp3it = "it " + "can't " + verbs[rand];

                        sp4 = "ellos " + "no pueden " + vsbc[rand];
                        eng4 = "they " + "can't " + verbs[rand];

                        sp5 = "nosotros " + "no podemos " + vsbc[rand];
                        eng5 = "we " + "can't " + verbs[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenCanCont1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo puedo estar " + verbconti[rand];
                        eng1 = "I can be " + verbscont[rand];
                        eng12 = "I can be " + verbscont[rand];

                        sp2 = "tú puedes estar " + verbconti[rand];
                        eng2 = "you can be " + verbscont[rand];
                        eng22 = "you can be " + verbscont[rand];

                        sp3 = "él puede estar " + verbconti[rand];
                        eng3 = "he can be " + verbscont[rand];
                        eng32 = "he can be " + verbscont[rand];

                        sp3ella = "ella puede " + verbconti[rand];
                        eng3she = "she can be " + verbscont[rand];
                        eng3she2 = "she can be " + verbscont[rand];

                        sp3eso = "eso puede " + verbconti[rand];
                        sp3it = "it can be " + verbscont[rand];
                        sp3it2 = "it can be " + verbscont[rand];

                        sp4 = "ellos pueden estar " + verbconti[rand];
                        eng4 = "they can be " + verbscont[rand];
                        eng42 = "they can be " + verbscont[rand];

                        sp5 = "nosotros podemos " + verbconti[rand];
                        eng5 = "we can be " + verbscont[rand];
                        eng52 = "we can be " + verbscont[rand];

                        break;
                    case 1:
                        sp1 = "yo " + "no puedo estar " + verbconti[rand];
                        eng1 = "I " + "cannot be " + verbscont[rand];
                        eng12 = "I " + "can't be " + verbscont[rand];

                        sp2 = "tú " + "no puedes estar " + verbconti[rand];
                        eng2 = "you " + "cannot be " + verbscont[rand];
                        eng22 = "you " + "can't be " + verbscont[rand];

                        sp3 = "él " + "no puede estar " + verbconti[rand];
                        eng3 = "he " + "cannot be " + verbscont[rand];
                        eng32 = "he " + "can't be " + verbscont[rand];

                        sp3ella = "ella " + "no puede estar " + verbconti[rand];
                        eng3she = "she " + "cannot be " + verbscont[rand];
                        eng3she2 = "she " + "can't be " + verbscont[rand];

                        sp3eso = "eso " + "no puede estar " + verbconti[rand];
                        sp3it = "it " + "cannot be " + verbscont[rand];
                        sp3it2 = "it " + "can't be " + verbscont[rand];

                        sp4 = "ellos " + "no pueden estar " + verbconti[rand];
                        eng4 = "they " + "cannot be " + verbscont[rand];
                        eng42 = "they " + "can't be " + verbscont[rand];

                        sp5 = "nosotros " + "no podemos estar " + verbconti[rand];
                        eng5 = "we " + "cannot be " + verbscont[rand];
                        eng52 = "we " + "can't be " + verbscont[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023

    //Must
    public void GenMustSimp1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo debo " + vsbc[rand];
                        eng1 = "I must " + verbs[rand];

                        sp2 = "tú debés " + vsbc[rand];
                        eng2 = "you must " + verbs[rand];

                        sp3 = "él debe " + vsbc[rand];
                        eng3 = "he must " + verbs[rand];

                        sp3ella = "ella debe " + vsbc[rand];
                        eng3she = "she must " + verbs[rand];

                        sp3eso = "eso debe " + vsbc[rand];
                        sp3it = "it must " + verbs[rand];

                        sp4 = "ellos deben " + vsbc[rand];
                        eng4 = "they must " + verbs[rand];

                        sp5 = "nosotros debemos " + vsbc[rand];
                        eng5 = "we must " + verbs[rand];

                        break;
                    case 1:
                        sp1 = "yo " + "no debo " + vsbc[rand];
                        eng1 = "I " + "mustn't " + verbs[rand];

                        sp2 = "tú " + "no debés " + vsbc[rand];
                        eng2 = "you " + "mustn't " + verbs[rand];

                        sp3 = "él " + "no debe " + vsbc[rand];
                        eng3 = "he " + "mustn't " + verbs[rand];

                        sp3ella = "ella " + "no debe " + vsbc[rand];
                        eng3she = "she " + "mustn't " + verbs[rand];

                        sp3eso = "eso " + "no debe " + vsbc[rand];
                        sp3it = "it " + "mustn't " + verbs[rand];

                        sp4 = "ellos " + "no deben " + vsbc[rand];
                        eng4 = "they " + "mustn't " + verbs[rand];

                        sp5 = "nosotros " + "no debemos " + vsbc[rand];
                        eng5 = "we " + "mustn't " + verbs[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenMustCont1() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo debo estar " + verbconti[rand];
                        eng1 = "I must be " + verbscont[rand];
                        eng12 = "I must be " + verbscont[rand];

                        sp2 = "tú debés estar " + verbconti[rand];
                        eng2 = "you must be " + verbscont[rand];
                        eng22 = "you must be " + verbscont[rand];

                        sp3 = "él debe estar " + verbconti[rand];
                        eng3 = "he must be " + verbscont[rand];
                        eng32 = "he must be " + verbscont[rand];

                        sp3ella = "ella debe estar " + verbconti[rand];
                        eng3she = "she must be " + verbscont[rand];
                        eng3she2 = "she must be " + verbscont[rand];

                        sp3eso = "eso debe estar " + verbconti[rand];
                        sp3it = "it must be " + verbscont[rand];
                        sp3it2 = "it must be " + verbscont[rand];

                        sp4 = "ellos deben estar " + verbconti[rand];
                        eng4 = "they must be " + verbscont[rand];
                        eng42 = "they must be " + verbscont[rand];

                        sp5 = "nosotros debemos estar " + verbconti[rand];
                        eng5 = "we must be " + verbscont[rand];
                        eng52 = "we must be " + verbscont[rand];

                        break;
                    case 1:
                        sp1 = "yo " + "no debo estar " + verbconti[rand];
                        eng1 = "I " + "must not be " + verbscont[rand];
                        eng12 = "I " + "mustn't be " + verbscont[rand];

                        sp2 = "tú " + "no debés estar " + verbconti[rand];
                        eng2 = "you " + "must not be " + verbscont[rand];
                        eng22 = "you " + "mustn't be " + verbscont[rand];

                        sp3 = "él " + "no debe estar " + verbconti[rand];
                        eng3 = "he " + "must not be " + verbscont[rand];
                        eng32 = "he " + "mustn't be " + verbscont[rand];

                        sp3ella = "ella " + "no debe estar " + verbconti[rand];
                        eng3she = "she " + "must not be " + verbscont[rand];
                        eng3she2 = "she " + "mustn't be " + verbscont[rand];

                        sp3eso = "eso " + "no debe estar " + verbconti[rand];
                        sp3it = "it " + "must not be " + verbscont[rand];
                        sp3it2 = "it " + "mustn't be " + verbscont[rand];

                        sp4 = "ellos " + "no deben estar " + verbconti[rand];
                        eng4 = "they " + "must not be " + verbscont[rand];
                        eng42 = "they " + "mustn't be " + verbscont[rand];

                        sp5 = "nosotros " + "no debemos estar " + verbconti[rand];
                        eng5 = "we " + "must not be " + verbscont[rand];
                        eng52 = "we " + "mustn't be " + verbscont[rand];
                        break;
                }
            }
        }
    }//LR FEB 2023

    public void GenAbleTo1(){
        int neg = (int) (Math.random() * 2);
        randstarter();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo " + "soy capaz de " + vsbc[rand];
                        eng1 = "I am " + "able to " + verbs[rand];
                        eng12 = "I'm " + "able to " + verbs[rand];

                        sp2 = "tú " + "eres capaz de " + vsbc[rand];
                        eng2 = "you are " + "able to " + verbs[rand];
                        eng22 = "you're " + "able to " + verbs[rand];

                        sp3 = "él " + "es capaz de " + vsbc[rand];
                        eng3 = "he is " + "able to " + verbs[rand];
                        eng32 = "he's " + "able to " + verbs[rand];

                        sp3ella = "ella " + "es capaz de " + vsbc[rand];
                        eng3she = "she is " + "able to " + verbs[rand];
                        eng3she2 = "she's " + "able to " + verbs[rand];

                        sp3eso = "eso " + "es capaz de " + vsbc[rand];
                        sp3it = "it is " + "able to " + verbs[rand];
                        sp3it2 = "it's " + "able to " + verbs[rand];

                        sp4 = "ellos " + "son capaces de " + vsbc[rand];
                        eng4 = "they are " + "able to " + verbs[rand];
                        eng42 = "they're " + "able to " + verbs[rand];

                        sp5 = "nosotros " + "somos capaces de " + vsbc[rand];
                        eng5 = "we are " + "able to " + verbs[rand];
                        eng52 = "we're " + "able to " + verbs[rand];
                        break;
                    case 1:
                        sp1 = "yo no " + "soy capaz de " + vsbc[rand];
                        eng1 = "I am not " + "able to " + verbs[rand];
                        eng12 = "I'm not " + "able to " + verbs[rand];

                        sp2 = "tú no " + "eres capaz de " + vsbc[rand];
                        eng2 = "you are not " + "able to " + verbs[rand];
                        eng22 = "you're not " + "able to " + verbs[rand];

                        sp3 = "él no " + "es capaz de " + vsbc[rand];
                        eng3 = "he is not " + "able to " + verbs[rand];
                        eng32 = "he's not " + "able to " + verbs[rand];

                        sp3ella = "ella no " + "es capaz de " + vsbc[rand];
                        eng3she = "she is not " + "able to " + verbs[rand];
                        eng3she2 = "she's not " + "able to " + verbs[rand];

                        sp3eso = "eso no " + "es capaz de " + vsbc[rand];
                        sp3it = "it is not " + "able to " + verbs[rand];
                        sp3it2 = "it's not " + "able to " + verbs[rand];

                        sp4 = "ellos no " + "son capaces de " + vsbc[rand];
                        eng4 = "they are not " + "able to " + verbs[rand];
                        eng42 = "they're not " + "able to " + verbs[rand];

                        sp5 = "nosotros no " + "somos capaces de " + vsbc[rand];
                        eng5 = "we are not " + "able to " + verbs[rand];
                        eng52 = "we're not " + "able to " + verbs[rand];
                        break;

                }
            }
        }
    }//PD FEB 2023

    //for to dificultad 1
    public void forSubTo1() {
        int rand = (int) (Math.random() * verbs.length);
        Pasts pas = new Pasts();

        int rn1 = (int) (Math.random() * 6);
        int rn2 = (int) (Math.random() * 5);
        int neg = (int) (Math.random() * 2);

        //subject in eng
        String ftsj[] = {
                "for me to ", "for you to ", "for him to ", "for her to ", "for it to ",
                "for them to ", "for us to "
        };

        //subject in spanish
        String ftsjs[] = {
                "para que yo ", "para que tú ", "para que él ", "para que ella ",
                "para que eso ", "para que ellos ", "para que nosotros "
        };

        //subject in eng negative
        String ftsjn[] = {
                "for me not to ", "for you not to ", "for him not to ", "for her not to ",
                "for it not to ", "for them not to ", "for us not to "
        };

        //subject in spanish negative
        String ftsjsn[] = {
                "para que yo no ", "para que tú no ", "para que él no ", "para que ella no ",
                "para que eso no ", "para que ellos no ", "para que nosotros no "
        };

        switch (neg) {
            case 0:
                sp1 = ftsjs[0] + v1s[rand];
                eng1 = ftsj[0] + verbs[rand];

                sp2 = ftsjs[1] + v2s[rand];
                eng2 = ftsj[1] + verbs[rand];

                sp3 = ftsjs[2] + v3s[rand];
                eng3 = ftsj[2] + verbs[rand];

                sp3ella = ftsjs[3] + v3s[rand];
                eng3she = ftsj[3] + verbs[rand];

                sp3eso = ftsjs[4] + v3s[rand];
                sp3it = ftsj[4] + verbs[rand];

                sp4 = ftsjs[5] + v4s[rand];
                eng4 = ftsj[5] + verbs[rand];

                sp5 = ftsjs[6] + v5s[rand];
                eng5 = ftsj[6] + verbs[rand];

                break;
            case 1:
                sp1 = ftsjsn[0] + v1s[rand];
                eng1 = ftsjn[0] + verbs[rand];

                sp2 = ftsjsn[1] + v2s[rand];
                eng2 = ftsjn[1] + verbs[rand];

                sp3 = ftsjsn[2] + v3s[rand];
                eng3 = ftsjn[2] + verbs[rand];

                sp3ella = ftsjsn[3] + v3s[rand];
                eng3she = ftsjn[3] + verbs[rand];

                sp3eso = ftsjsn[4] + v3s[rand];
                sp3it = ftsjn[4] + verbs[rand];

                sp4 = ftsjsn[5] + v4s[rand];
                eng4 = ftsjn[5] + verbs[rand];

                sp5 = ftsjsn[6] + v5s[rand];
                eng5 = ftsjn[6] + verbs[rand];
                break;
        }

    }//PD 16/06/2022
    //want to dificultad 1
    public void wantyouto1() {
        int rand = (int) (Math.random() * verbs.length);
        Pasts pas = new Pasts();
        String temp = verbs[rand];
        int rn1 = (int) (Math.random() * 6);
        int rn2 = (int) (Math.random() * 5);
        int neg = (int) (Math.random() * 2);

        //want to subject
        String wtsj[] = {"I want ", "you want ", "he wants ", "she wants ", "it wants ", "we want ", "they want "};
        //want to subject negative
        String wtsjn[] = {"I don't want ", "you don't want ", "he doesn't want ", "she doesn't want ", "it doesn't want "
                , "we don't want ", "they don't want "};
        //sujetos want to en sp
        String wtsjs[] = {"yo quiero ", "tú quieres ", "él quiere ", "ella quiere ", "eso quiere ", "nosotros queremos ", "ellos quieren "};
        //sujetos want to en sp negativo
        String wtsjsn[] = {"yo no quiero ", "tú no quieres ", "él no quiere ", "eso no quiere ", "ella no quiere ", "nosotros no queremos ", "ellos no quieren "};

        String wtobj1[] = {"you to " + verbs[rand], "him to " + verbs[rand], "her to " + verbs[rand],
                "it to " + verbs[rand], "us to " + verbs[rand], "them to " + verbs[rand]};
        String wtobj2[] = {"me to " + verbs[rand], "him to " + verbs[rand], "her to " + verbs[rand],
                "it to " + verbs[rand], "us to " + verbs[rand], "them to " + verbs[rand]};
        String wtobj3[] = {"you to " + verbs[rand], "me to " + verbs[rand], "her to " + verbs[rand],
                "it to " + verbs[rand], "us to " + verbs[rand], "them to " + verbs[rand]};
        String wtobj4[] = {"you to " + verbs[rand], "him to " + verbs[rand], "me to " + verbs[rand],
                "it to " + verbs[rand], "us to " + verbs[rand], "them to " + verbs[rand]};
        String wtobj5[] = {"you to " + verbs[rand], "him to " + verbs[rand], "her to " + verbs[rand],
                "me to " + verbs[rand], "us to " + verbs[rand], "them to " + verbs[rand]};
        String wtobj6[] = {"you to " + verbs[rand], "him to " + verbs[rand], "her to " + verbs[rand],
                "it to " + verbs[rand], "them to " + verbs[rand]};
        String wtobj7[] = {"you to " + verbs[rand], "him to " + verbs[rand], "her to " + verbs[rand],
                "it to " + verbs[rand], "us to " + verbs[rand], "me to " + verbs[rand]};

        // objetos wt en sp
        String wtobj1s[] = {"que tú " + v2s[rand], "que él " + v3s[rand], "que ella " + v3s[rand],
                "que eso " + v3s[rand], "que nosotros " + v5s[rand], "que ellos " + v4s[rand]};
        String wtobj2s[] = {"que yo " + v1s[rand], "que él " + v3s[rand], "que ella " + v3s[rand],
                "que eso " + v3s[rand], "que nosotros " + v3s[rand], "que ellos " + v3s[rand]};
        String wtobj3s[] = {"que tú " + v2s[rand], "que yo " + v1s[rand], "que ella " + v3s[rand],
                "que eso " + v3s[rand], "que nosotros " + v5s[rand], "que ellos " + v4s[rand]};
        String wtobj4s[] = {"que tú " + v2s[rand], "que él " + v3s[rand], "que yo " + v1s[rand],
                "que eso " + v3s[rand], "que nosotros " + v5s[rand], "que ellos " + v4s[rand]};
        String wtobj5s[] = {"que tú " + v2s[rand], "que él " + v3s[rand], "que ella " + v3s[rand],
                "que yo " + v1s[rand], "que nosotros " + v5s[rand], "que ellos " + v4s[rand]};
        String wtobj6s[] = {"que tú " + v2s[rand], "que él " + v3s[rand], "que ella " + v3s[rand],
                "que eso " + v3s[rand], "que ellos " + v4s[rand]};
        String wtobj7s[] = {"que tú " + v2s[rand], "que él " + v3s[rand], "que ella " + v3s[rand],
                "que eso " + v3s[rand], "que nosotros " + v5s[rand], "que yo " + v1s[rand]};

        switch (temp) {
            case "report ":
                int rand1 = (int) (Math.random() * sorepe.length);
                //aqui van a ir todas las convinaciones de pronombre en Presente simple, después en drive solo se agarra el string que se ocupe
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1];
                        eng1 = wtsj[0] + wtobj1[rn1];

                        sp2 = wtsjs[1] + wtobj2s[rn1];
                        eng2 = wtsj[1] + wtobj2[rn1];

                        sp3 = wtsjs[2] + wtobj3s[rn1];
                        eng3 = wtsj[2] + wtobj3[rn1];

                        sp3ella = wtsjs[3] + wtobj4s[rn1];
                        eng3she = wtsj[3] + wtobj4[rn1];

                        sp3eso = wtsjs[4] + wtobj5s[rn1];
                        sp3it = wtsj[4] + wtobj5[rn1];

                        sp4 = wtsjs[5] + wtobj6s[rn2];
                        eng4 = wtsj[5] + wtobj6[rn2];

                        sp5 = wtsjs[6] + wtobj7s[rn1];
                        eng5 = wtsj[6] + wtobj7[rn1];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1];
                        eng1 = wtsjn[0] + wtobj1[rn1];

                        sp2 = wtsjsn[1] + wtobj2s[rn1];
                        eng2 = wtsjn[1] + wtobj2[rn1];

                        sp3 = wtsjsn[2] + wtobj3s[rn1];
                        eng3 = wtsjn[2] + wtobj3[rn1];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1];
                        eng3she = wtsjn[3] + wtobj4[rn1];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1];
                        sp3it = wtsjn[4] + wtobj5[rn1];

                        sp4 = wtsjsn[5] + wtobj6s[rn2];
                        eng4 = wtsjn[5] + wtobj6[rn2];

                        sp5 = wtsjsn[6] + wtobj7s[rn1];
                        eng5 = wtsjn[6] + wtobj7[rn1];
                        break;
                }
                break;

            case "release ":
                int rand2 = (int) (Math.random() * sorelease.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sosoltar[rand2];
                        eng1 = wtsj[0] + wtobj1[rn1] + sorelease[rand2];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sosoltar[rand2];
                        eng2 = wtsj[1] + wtobj2[rn1] + sorelease[rand2];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sosoltar[rand2];
                        eng3 = wtsj[2] + wtobj3[rn1] + sorelease[rand2];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sosoltar[rand2];
                        eng3she = wtsj[3] + wtobj4[rn1] + sorelease[rand2];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sosoltar[rand2];
                        sp3it = wtsj[4] + wtobj5[rn1] + sorelease[rand2];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sosoltar[rand2];
                        eng4 = wtsj[5] + wtobj6[rn2] + sorelease[rand2];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sosoltar[rand2];
                        eng5 = wtsj[6] + wtobj7[rn1] + sorelease[rand2];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sosoltar[rand2];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sorelease[rand2];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sosoltar[rand2];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sorelease[rand2];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sosoltar[rand2];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sorelease[rand2];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sosoltar[rand2];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sorelease[rand2];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sosoltar[rand2];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sorelease[rand2];

                        sp4 = wtsjsn[5] + wtobj1s[rn1] + sosoltar[rand2];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sorelease[rand2];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sosoltar[rand2];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sorelease[rand2];
                        break;
                }
                break;

            case "mix ":
                int rand3 = (int) (Math.random() * somix.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + somesclar[rand3];
                        eng1 = wtsj[0] + wtobj1[rn1] + somix[rand3];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + somesclar[rand3];
                        eng2 = wtsj[1] + wtobj2[rn1] + somix[rand3];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + somesclar[rand3];
                        eng3 = wtsj[2] + wtobj3[rn1] + somix[rand3];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + somesclar[rand3];
                        eng3she = wtsj[3] + wtobj4[rn1] + somix[rand3];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + somesclar[rand3];
                        sp3it = wtsj[4] + wtobj5[rn1] + somix[rand3];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + somesclar[rand3];
                        eng4 = wtsj[5] + wtobj6[rn2] + somix[rand3];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + somesclar[rand3];
                        eng5 = wtsj[6] + wtobj7[rn1] + somix[rand3];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + somesclar[rand3];
                        eng1 = wtsjn[0] + wtobj1[rn1] + somix[rand3];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + somesclar[rand3];
                        eng2 = wtsjn[1] + wtobj2[rn1] + somix[rand3];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + somesclar[rand3];
                        eng3 = wtsjn[2] + wtobj3[rn1] + somix[rand3];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + somesclar[rand3];
                        eng3she = wtsjn[3] + wtobj4[rn1] + somix[rand3];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + somesclar[rand3];
                        sp3it = wtsjn[4] + wtobj5[rn1] + somix[rand3];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + somesclar[rand3];
                        eng4 = wtsjn[5] + wtobj6[rn2] + somix[rand3];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + somesclar[rand3];
                        eng5 = wtsjn[6] + wtobj7[rn1] + somix[rand3];
                        break;
                }
                break;

            case "press ":
                int rand4 = (int) (Math.random() * sopress.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sopresionar[rand4];
                        eng1 = wtsj[0] + wtobj1[rn1] + sopress[rand4];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sopresionar[rand4];
                        eng2 = wtsj[1] + wtobj2[rn1] + sopress[rand4];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sopresionar[rand4];
                        eng3 = wtsj[2] + wtobj3[rn1] + sopress[rand4];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sopresionar[rand4];
                        eng3she = wtsj[3] + wtobj4[rn1] + sopress[rand4];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sopresionar[rand4];
                        sp3it = wtsj[4] + wtobj5[rn1] + sopress[rand4];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sopresionar[rand4];
                        eng4 = wtsj[5] + wtobj6[rn2] + sopress[rand4];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sopresionar[rand4];
                        eng5 = wtsj[6] + wtobj7[rn1] + sopress[rand4];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sopresionar[rand4];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sopress[rand4];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sopresionar[rand4];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sopress[rand4];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sopresionar[rand4];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sopress[rand4];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sopresionar[rand4];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sopress[rand4];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sopresionar[rand4];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sopress[rand4];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sopresionar[rand4];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sopress[rand4];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sopresionar[rand4];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sopress[rand4];
                        break;
                }
                break;

            case "finish ":
                int rand5 = (int) (Math.random() * sofinish.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sofinalizar[rand5];
                        eng1 = wtsj[0] + wtobj1[rn1] + sofinish[rand5];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sofinalizar[rand5];
                        eng2 = wtsj[1] + wtobj2[rn1] + sofinish[rand5];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sofinalizar[rand5];
                        eng3 = wtsj[2] + wtobj3[rn1] + sofinish[rand5];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sofinalizar[rand5];
                        eng3she = wtsj[3] + wtobj4[rn1] + sofinish[rand5];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sofinalizar[rand5];
                        sp3it = wtsj[4] + wtobj5[rn1] + sofinish[rand5];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sofinalizar[rand5];
                        eng4 = wtsj[5] + wtobj6[rn2] + sofinish[rand5];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sofinalizar[rand5];
                        eng5 = wtsj[6] + wtobj7[rn1] + sofinish[rand5];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sofinalizar[rand5];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sofinish[rand5];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sofinalizar[rand5];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sofinish[rand5];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sofinalizar[rand5];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sofinish[rand5];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sofinalizar[rand5];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sofinish[rand5];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sofinalizar[rand5];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sofinish[rand5];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sofinalizar[rand5];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sofinish[rand5];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sofinalizar[rand5];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sofinish[rand5];
                        break;
                }
                break;

            case "read ":
                int rand6 = (int) (Math.random() * soleer.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soleer[rand6];
                        eng1 = wtsj[0] + wtobj1[rn1] + soread[rand6];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soleer[rand6];
                        eng2 = wtsj[1] + wtobj2[rn1] + soread[rand6];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soleer[rand6];
                        eng3 = wtsj[2] + wtobj3[rn1] + soread[rand6];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soleer[rand6];
                        eng3she = wtsj[3] + wtobj4[rn1] + soread[rand6];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soleer[rand6];
                        sp3it = wtsj[4] + wtobj5[rn1] + soread[rand6];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soleer[rand6];
                        eng4 = wtsj[5] + wtobj6[rn2] + soread[rand6];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soleer[rand6];
                        eng5 = wtsj[6] + wtobj7[rn1] + soread[rand6];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soleer[rand6];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soread[rand6];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soleer[rand6];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soread[rand6];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soleer[rand6];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soread[rand6];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soleer[rand6];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soread[rand6];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soleer[rand6];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soread[rand6];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soleer[rand6];
                        eng4 = wtsjn[5] + wtobj6[rn2] + soread[rand6];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soleer[rand6];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soread[rand6];
                        break;
                }
                break;

            case "increase ":
                int rand7 = (int) (Math.random() * soincrease.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soincrem[rand7];
                        eng1 = wtsj[0] + wtobj1[rn1] + soincrease[rand7];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soincrem[rand7];
                        eng2 = wtsj[1] + wtobj2[rn1] + soincrease[rand7];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soincrem[rand7];
                        eng3 = wtsj[2] + wtobj3[rn1] + soincrease[rand7];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soincrem[rand7];
                        eng3she = wtsj[3] + wtobj4[rn1] + soincrease[rand7];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soincrem[rand7];
                        sp3it = wtsj[4] + wtobj5[rn1] + soincrease[rand7];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soincrem[rand7];
                        eng4 = wtsj[5] + wtobj6[rn2] + soincrease[rand7];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soincrem[rand7];
                        eng5 = wtsj[6] + wtobj7[rn1] + soincrease[rand7];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soincrem[rand7];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soincrease[rand7];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soincrem[rand7];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soincrease[rand7];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soincrem[rand7];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soincrease[rand7];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soincrem[rand7];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soincrease[rand7];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soincrem[rand7];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soincrease[rand7];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soincrem[rand7];
                        eng4 = wtsjn[5] + wtobj6[rn2] + soincrease[rand7];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soincrem[rand7];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soincrease[rand7];
                        break;
                }
                break;

            case "play ":
                int rand8 = (int) (Math.random() * soplay.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sotocar[rand8];
                        eng1 = wtsj[0] + wtobj1[rn1] + soplay[rand8];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sotocar[rand8];
                        eng2 = wtsj[1] + wtobj2[rn1] + soplay[rand8];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sotocar[rand8];
                        eng3 = wtsj[2] + wtobj3[rn1] + soplay[rand8];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sotocar[rand8];
                        eng3she = wtsj[3] + wtobj4[rn1] + soplay[rand8];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sotocar[rand8];
                        sp3it = wtsj[4] + wtobj5[rn1] + soplay[rand8];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sotocar[rand8];
                        eng4 = wtsj[5] + wtobj6[rn2] + soplay[rand8];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sotocar[rand8];
                        eng5 = wtsj[6] + wtobj7[rn1] + soplay[rand8];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sotocar[rand8];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soplay[rand8];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sotocar[rand8];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soplay[rand8];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sotocar[rand8];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soplay[rand8];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sotocar[rand8];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soplay[rand8];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sotocar[rand8];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soplay[rand8];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sotocar[rand8];
                        eng4 = wtsjn[5] + wtobj6[rn2] + soplay[rand8];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sotocar[rand8];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soplay[rand8];
                        break;
                }
                break;

            case "feel ":
                int rand9 = (int) (Math.random() * sofeel.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sosentir[rand9];
                        eng1 = wtsj[0] + wtobj1[rn1] + sofeel[rand9];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sosentir[rand9];
                        eng2 = wtsj[1] + wtobj2[rn1] + sofeel[rand9];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sosentir[rand9];
                        eng3 = wtsj[2] + wtobj3[rn1] + sofeel[rand9];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sosentir[rand9];
                        eng3she = wtsj[3] + wtobj4[rn1] + sofeel[rand9];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sosentir[rand9];
                        sp3it = wtsj[4] + wtobj5[rn1] + sofeel[rand9];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sosentir[rand9];
                        eng4 = wtsj[5] + wtobj6[rn2] + sofeel[rand9];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sosentir[rand9];
                        eng5 = wtsj[6] + wtobj7[rn1] + sofeel[rand9];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sosentir[rand9];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sofeel[rand9];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sosentir[rand9];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sofeel[rand9];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sosentir[rand9];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sofeel[rand9];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sosentir[rand9];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sofeel[rand9];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sosentir[rand9];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sofeel[rand9];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sosentir[rand9];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sofeel[rand9];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sosentir[rand9];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sofeel[rand9];
                        break;
                }
                break;

            case "turn ":
                int rand10 = (int) (Math.random() * soturn.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sovoltear[rand10];
                        eng1 = wtsj[0] + wtobj1[rn1] + soturn[rand10];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sovoltear[rand10];
                        eng2 = wtsj[1] + wtobj2[rn1] + soturn[rand10];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sovoltear[rand10];
                        eng3 = wtsj[2] + wtobj3[rn1] + soturn[rand10];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sovoltear[rand10];
                        eng3she = wtsj[3] + wtobj4[rn1] + soturn[rand10];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sovoltear[rand10];
                        sp3it = wtsj[4] + wtobj5[rn1] + soturn[rand10];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sovoltear[rand10];
                        eng4 = wtsj[5] + wtobj6[rn2] + soturn[rand10];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sovoltear[rand10];
                        eng5 = wtsj[6] + wtobj7[rn1] + soturn[rand10];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sovoltear[rand10];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soturn[rand10];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sovoltear[rand10];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soturn[rand10];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sovoltear[rand10];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soturn[rand10];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sovoltear[rand10];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soturn[rand10];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sovoltear[rand10];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soturn[rand10];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sovoltear[rand10];
                        eng4 = wtsjn[5] + wtobj6[rn2] + soturn[rand10];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sovoltear[rand10];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soturn[rand10];
                        break;
                }
                break;

            case "say ":
                int rand11 = (int) (Math.random() * sosay.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sodecir[rand11];
                        eng1 = wtsj[0] + wtobj1[rn1] + sosay[rand11];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sodecir[rand11];
                        eng2 = wtsj[1] + wtobj2[rn1] + sosay[rand11];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sodecir[rand11];
                        eng3 = wtsj[2] + wtobj3[rn1] + sosay[rand11];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sodecir[rand11];
                        eng3she = wtsj[3] + wtobj4[rn1] + sosay[rand11];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sodecir[rand11];
                        sp3it = wtsj[4] + wtobj5[rn1] + sosay[rand11];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sodecir[rand11];
                        eng4 = wtsj[5] + wtobj6[rn2] + sosay[rand11];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sodecir[rand11];
                        eng5 = wtsj[6] + wtobj7[rn1] + sosay[rand11];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sodecir[rand11];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sosay[rand11];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sodecir[rand11];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sosay[rand11];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sodecir[rand11];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sosay[rand11];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sodecir[rand11];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sosay[rand11];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sodecir[rand11];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sosay[rand11];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sodecir[rand11];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sosay[rand11];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sodecir[rand11];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sosay[rand11];
                        break;
                }
                break;

            case "spend ":
                int rand12 = (int) (Math.random() * sospend.length);

                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sogastar[rand12];
                        eng1 = wtsj[0] + wtobj1[rn1] + sospend[rand12];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sogastar[rand12];
                        eng2 = wtsj[1] + wtobj2[rn1] + sospend[rand12];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sogastar[rand12];
                        eng3 = wtsj[2] + wtobj3[rn1] + sospend[rand12];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sogastar[rand12];
                        eng3she = wtsj[3] + wtobj4[rn1] + sospend[rand12];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sogastar[rand12];
                        sp3it = wtsj[4] + wtobj5[rn1] + sospend[rand12];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sogastar[rand12];
                        eng4 = wtsj[5] + wtobj6[rn2] + sospend[rand12];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sogastar[rand12];
                        eng5 = wtsj[6] + wtobj7[rn1] + sospend[rand12];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sogastar[rand12];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sospend[rand12];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sogastar[rand12];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sospend[rand12];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sogastar[rand12];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sospend[rand12];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sogastar[rand12];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sospend[rand12];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sogastar[rand12];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sospend[rand12];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sogastar[rand12];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sospend[rand12];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sogastar[rand12];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sospend[rand12];
                        break;
                }
                break;

            case "pay ":
                int rand13 = (int) (Math.random() * sopay.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sopagar[rand13];
                        eng1 = wtsj[0] + wtobj1[rn1] + sopay[rand13];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sopagar[rand13];
                        eng2 = wtsj[1] + wtobj2[rn1] + sopay[rand13];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sopagar[rand13];
                        eng3 = wtsj[2] + wtobj3[rn1] + sopay[rand13];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sopagar[rand13];
                        eng3she = wtsj[3] + wtobj4[rn1] + sopay[rand13];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sopagar[rand13];
                        sp3it = wtsj[4] + wtobj5[rn1] + sopay[rand13];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sopagar[rand13];
                        eng4 = wtsj[5] + wtobj6[rn2] + sopay[rand13];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sopagar[rand13];
                        eng5 = wtsj[6] + wtobj7[rn1] + sopay[rand13];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sopagar[rand13];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sopay[rand13];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sopagar[rand13];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sopay[rand13];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sopagar[rand13];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sopay[rand13];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sopagar[rand13];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sopay[rand13];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sopagar[rand13];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sopay[rand13];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sopagar[rand13];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sopay[rand13];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sopagar[rand13];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sopay[rand13];
                        break;
                }
                break;

            case "try ":
                int rand14 = (int) (Math.random() * sotry.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sointentar[rand14];
                        eng1 = wtsj[0] + wtobj1[rn1] + sotry[rand14];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sointentar[rand14];
                        eng2 = wtsj[1] + wtobj2[rn1] + sotry[rand14];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sointentar[rand14];
                        eng3 = wtsj[2] + wtobj3[rn1] + sotry[rand14];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sointentar[rand14];
                        eng3she = wtsj[3] + wtobj4[rn1] + sotry[rand14];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sointentar[rand14];
                        sp3it = wtsj[4] + wtobj5[rn1] + sotry[rand14];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sointentar[rand14];
                        eng4 = wtsj[5] + wtobj6[rn2] + sotry[rand14];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sointentar[rand14];
                        eng5 = wtsj[6] + wtobj7[rn1] + sotry[rand14];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sointentar[rand14];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sotry[rand14];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sointentar[rand14];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sotry[rand14];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sointentar[rand14];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sotry[rand14];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sointentar[rand14];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sotry[rand14];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sointentar[rand14];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sotry[rand14];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sointentar[rand14];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sotry[rand14];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sointentar[rand14];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sotry[rand14];
                        break;
                }
                break;

            case "cook ":
                int rand15 = (int) (Math.random() * socook.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sococinar[rand15];
                        eng1 = wtsj[0] + wtobj1[rn1] + socook[rand15];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sococinar[rand15];
                        eng2 = wtsj[1] + wtobj2[rn1] + socook[rand15];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sococinar[rand15];
                        eng3 = wtsj[2] + wtobj3[rn1] + socook[rand15];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sococinar[rand15];
                        eng3she = wtsj[3] + wtobj4[rn1] + socook[rand15];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sococinar[rand15];
                        sp3it = wtsj[4] + wtobj5[rn1] + socook[rand15];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sococinar[rand15];
                        eng4 = wtsj[5] + wtobj6[rn2] + socook[rand15];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sococinar[rand15];
                        eng5 = wtsj[6] + wtobj7[rn1] + socook[rand15];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sococinar[rand15];
                        eng1 = wtsjn[0] + wtobj1[rn1] + socook[rand15];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sococinar[rand15];
                        eng2 = wtsjn[1] + wtobj2[rn1] + socook[rand15];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sococinar[rand15];
                        eng3 = wtsjn[2] + wtobj3[rn1] + socook[rand15];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sococinar[rand15];
                        eng3she = wtsjn[3] + wtobj4[rn1] + socook[rand15];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sococinar[rand15];
                        sp3it = wtsjn[4] + wtobj5[rn1] + socook[rand15];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sococinar[rand15];
                        eng4 = wtsjn[5] + wtobj6[rn2] + socook[rand15];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sococinar[rand15];
                        eng5 = wtsjn[6] + wtobj7[rn1] + socook[rand15];
                        break;
                }
                break;

            case "drive ":
                int rand16 = (int) (Math.random() * sodrive.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soconducir[rand16];
                        eng1 = wtsj[0] + wtobj1[rn1] + sodrive[rand16];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soconducir[rand16];
                        eng2 = wtsj[1] + wtobj2[rn1] + sodrive[rand16];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soconducir[rand16];
                        eng3 = wtsj[2] + wtobj3[rn1] + sodrive[rand16];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soconducir[rand16];
                        eng3she = wtsj[3] + wtobj4[rn1] + sodrive[rand16];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soconducir[rand16];
                        sp3it = wtsj[4] + wtobj5[rn1] + sodrive[rand16];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soconducir[rand16];
                        eng4 = wtsj[5] + wtobj6[rn2] + sodrive[rand16];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soconducir[rand16];
                        eng5 = wtsj[6] + wtobj7[rn1] + sodrive[rand16];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soconducir[rand16];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sodrive[rand16];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soconducir[rand16];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sodrive[rand16];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soconducir[rand16];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sodrive[rand16];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soconducir[rand16];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sodrive[rand16];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soconducir[rand16];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sodrive[rand16];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soconducir[rand16];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sodrive[rand16];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soconducir[rand16];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sodrive[rand16];
                        break;
                }
                break;

            case "gain ":
                int rand17 = (int) (Math.random() * sogain.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sogain1[rand17];
                        eng1 = wtsj[0] + wtobj1[rn1] + sogain[rand17];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sogain1[rand17];
                        eng2 = wtsj[1] + wtobj2[rn1] + sogain[rand17];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sogain1[rand17];
                        eng3 = wtsj[2] + wtobj3[rn1] + sogain[rand17];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sogain1[rand17];
                        eng3she = wtsj[3] + wtobj4[rn1] + sogain[rand17];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sogain1[rand17];
                        sp3it = wtsj[4] + wtobj5[rn1] + sogain[rand17];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sogain1[rand17];
                        eng4 = wtsj[5] + wtobj6[rn2] + sogain[rand17];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sogain1[rand17];
                        eng5 = wtsj[6] + wtobj7[rn1] + sogain[rand17];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sogain1[rand17];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sogain[rand17];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sogain1[rand17];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sogain[rand17];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sogain1[rand17];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sogain[rand17];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sogain1[rand17];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sogain[rand17];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sogain1[rand17];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sogain[rand17];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sogain1[rand17];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sogain[rand17];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sogain1[rand17];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sogain[rand17];
                        break;
                }
                break;

            case "call ":
                int rand18 = (int) (Math.random() * socall.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sollamar[rand18];
                        eng1 = wtsj[0] + wtobj1[rn1] + socall[rand18];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sollamar[rand18];
                        eng2 = wtsj[1] + wtobj2[rn1] + socall[rand18];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sollamar[rand18];
                        eng3 = wtsj[2] + wtobj3[rn1] + socall[rand18];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sollamar[rand18];
                        eng3she = wtsj[3] + wtobj4[rn1] + socall[rand18];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sollamar[rand18];
                        sp3it = wtsj[4] + wtobj5[rn1] + socall[rand18];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sollamar[rand18];
                        eng4 = wtsj[5] + wtobj6[rn2] + socall[rand18];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sollamar[rand18];
                        eng5 = wtsj[6] + wtobj7[rn1] + socall[rand18];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sollamar[rand18];
                        eng1 = wtsjn[0] + wtobj1[rn1] + socall[rand18];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sollamar[rand18];
                        eng2 = wtsjn[1] + wtobj2[rn1] + socall[rand18];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sollamar[rand18];
                        eng3 = wtsjn[2] + wtobj3[rn1] + socall[rand18];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sollamar[rand18];
                        eng3she = wtsjn[3] + wtobj4[rn1] + socall[rand18];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sollamar[rand18];
                        sp3it = wtsjn[4] + wtobj5[rn1] + socall[rand18];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sollamar[rand18];
                        eng4 = wtsjn[5] + wtobj6[rn2] + socall[rand18];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sollamar[rand18];
                        eng5 = wtsjn[6] + wtobj7[rn1] + socall[rand18];
                        break;
                }
                break;

            case "deal ":
                int rand19 = (int) (Math.random() * sodeal.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sorepartir[rand19];
                        eng1 = wtsj[0] + wtobj1[rn1] + sodeal[rand19];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sorepartir[rand19];
                        eng2 = wtsj[1] + wtobj2[rn1] + sodeal[rand19];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sorepartir[rand19];
                        eng3 = wtsj[2] + wtobj3[rn1] + sodeal[rand19];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sorepartir[rand19];
                        eng3she = wtsj[3] + wtobj4[rn1] + sodeal[rand19];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sorepartir[rand19];
                        sp3it = wtsj[4] + wtobj5[rn1] + sodeal[rand19];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sorepartir[rand19];
                        eng4 = wtsj[5] + wtobj6[rn2] + sodeal[rand19];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sorepartir[rand19];
                        eng5 = wtsj[6] + wtobj7[rn1] + sodeal[rand19];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sorepartir[rand19];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sodeal[rand19];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sorepartir[rand19];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sodeal[rand19];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sorepartir[rand19];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sodeal[rand19];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sorepartir[rand19];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sodeal[rand19];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sorepartir[rand19];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sodeal[rand19];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sorepartir[rand19];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sodeal[rand19];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sorepartir[rand19];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sodeal[rand19];
                        break;
                }
                break;

            case "upset ":
                int rand20 = (int) (Math.random() * soupset.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soenojar[rand20];
                        eng1 = wtsj[0] + wtobj1[rn1] + soupset[rand20];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soenojar[rand20];
                        eng2 = wtsj[1] + wtobj2[rn1] + soupset[rand20];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soenojar[rand20];
                        eng3 = wtsj[2] + wtobj3[rn1] + soupset[rand20];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soenojar[rand20];
                        eng3she = wtsj[3] + wtobj4[rn1] + soupset[rand20];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soenojar[rand20];
                        sp3it = wtsj[4] + wtobj5[rn1] + soupset[rand20];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soenojar[rand20];
                        eng4 = wtsj[5] + wtobj6[rn2] + soupset[rand20];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soenojar[rand20];
                        eng5 = wtsj[6] + wtobj7[rn1] + soupset[rand20];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soenojar[rand20];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soupset[rand20];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soenojar[rand20];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soupset[rand20];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soenojar[rand20];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soupset[rand20];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soenojar[rand20];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soupset[rand20];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soenojar[rand20];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soupset[rand20];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soenojar[rand20];
                        eng4 = wtsjn[5] + wtobj6[rn2] + soupset[rand20];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soenojar[rand20];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soupset[rand20];
                        break;
                }
                break;

            case "produce ":
                int rand21 = (int) (Math.random() * soproduce.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soproducir[rand21];
                        eng1 = wtsj[0] + wtobj1[rn1] + soproduce[rand21];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soproducir[rand21];
                        eng2 = wtsj[1] + wtobj2[rn1] + soproduce[rand21];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soproducir[rand21];
                        eng3 = wtsj[2] + wtobj3[rn1] + soproduce[rand21];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soproducir[rand21];
                        eng3she = wtsj[3] + wtobj4[rn1] + soproduce[rand21];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soproducir[rand21];
                        sp3it = wtsj[4] + wtobj5[rn1] + soproduce[rand21];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soproducir[rand21];
                        eng4 = wtsj[5] + wtobj6[rn2] + soproduce[rand21];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soproducir[rand21];
                        eng5 = wtsj[6] + wtobj7[rn1] + soproduce[rand21];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soproducir[rand21];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soproduce[rand21];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soproducir[rand21];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soproduce[rand21];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soproducir[rand21];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soproduce[rand21];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soproducir[rand21];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soproduce[rand21];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soproducir[rand21];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soproduce[rand21];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soproducir[rand21];
                        eng4 = wtsjn[5] + wtobj6[rn2] + soproduce[rand21];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soproducir[rand21];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soproduce[rand21];
                        break;
                }
                break;

            case "appropiate ":
                int rand22 = (int) (Math.random() * soappropiate.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soappropiar[rand22];
                        eng1 = wtsj[0] + wtobj1[rn1] + soappropiate[rand22];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soappropiar[rand22];
                        eng2 = wtsj[1] + wtobj2[rn1] + soappropiate[rand22];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soappropiar[rand22];
                        eng3 = wtsj[2] + wtobj3[rn1] + soappropiate[rand22];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soappropiar[rand22];
                        eng3she = wtsj[3] + wtobj4[rn1] + soappropiate[rand22];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soappropiar[rand22];
                        sp3it = wtsj[4] + wtobj5[rn1] + soappropiate[rand22];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soappropiar[rand22];
                        eng4 = wtsj[5] + wtobj6[rn2] + soappropiate[rand22];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soappropiar[rand22];
                        eng5 = wtsj[6] + wtobj7[rn1] + soappropiate[rand22];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soappropiar[rand22];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soappropiate[rand22];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soappropiar[rand22];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soappropiate[rand22];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soappropiar[rand22];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soappropiate[rand22];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soappropiar[rand22];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soappropiate[rand22];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soappropiar[rand22];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soappropiate[rand22];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soappropiar[rand22];
                        eng4 = wtsjn[5] + wtobj6[rn2] + soappropiate[rand22];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soappropiar[rand22];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soappropiate[rand22];
                        break;
                }
                break;


            case "leave ":
                int rand23 = (int) (Math.random() * soleave.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sodejar[rand23];
                        eng1 = wtsj[0] + wtobj1[rn1] + soleave[rand23];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sodejar[rand23];
                        eng2 = wtsj[1] + wtobj2[rn1] + soleave[rand23];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sodejar[rand23];
                        eng3 = wtsj[2] + wtobj3[rn1] + soleave[rand23];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sodejar[rand23];
                        eng3she = wtsj[3] + wtobj4[rn1] + soleave[rand23];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sodejar[rand23];
                        sp3it = wtsj[4] + wtobj5[rn1] + soleave[rand23];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sodejar[rand23];
                        eng4 = wtsj[5] + wtobj6[rn2] + soleave[rand23];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sodejar[rand23];
                        eng5 = wtsj[6] + wtobj7[rn1] + soleave[rand23];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sodejar[rand23];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soleave[rand23];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sodejar[rand23];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soleave[rand23];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sodejar[rand23];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soleave[rand23];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sodejar[rand23];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soleave[rand23];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sodejar[rand23];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soleave[rand23];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sodejar[rand23];
                        eng4 = wtsjn[5] + wtobj6[rn2] + soleave[rand23];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sodejar[rand23];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soleave[rand23];
                        break;
                }
                break;

            case "reach ":
                int rand24 = (int) (Math.random() * soreach.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soalcanzar[rand24];
                        eng1 = wtsj[0] + wtobj1[rn1] + soreach[rand24];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soalcanzar[rand24];
                        eng2 = wtsj[1] + wtobj2[rn1] + soreach[rand24];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soalcanzar[rand24];
                        eng3 = wtsj[2] + wtobj3[rn1] + soreach[rand24];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soalcanzar[rand24];
                        eng3she = wtsj[3] + wtobj4[rn1] + soreach[rand24];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soalcanzar[rand24];
                        sp3it = wtsj[4] + wtobj5[rn1] + soreach[rand24];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soalcanzar[rand24];
                        eng4 = wtsj[5] + wtobj6[rn2] + soreach[rand24];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soalcanzar[rand24];
                        eng5 = wtsj[6] + wtobj7[rn1] + soreach[rand24];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soalcanzar[rand24];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soreach[rand24];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soalcanzar[rand24];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soreach[rand24];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soalcanzar[rand24];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soreach[rand24];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soalcanzar[rand24];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soreach[rand24];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soalcanzar[rand24];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soreach[rand24];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soalcanzar[rand24];
                        eng4 = wtsjn[5] + wtobj6[rn2] + soreach[rand24];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soalcanzar[rand24];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soreach[rand24];
                        break;
                }
                break;

            case "express ":
                int rand25 = (int) (Math.random() * soexpress.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soexpresar[rand25];
                        eng1 = wtsj[0] + wtobj1[rn1] + soexpress[rand25];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soexpresar[rand25];
                        eng2 = wtsj[1] + wtobj2[rn1] + soexpress[rand25];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soexpresar[rand25];
                        eng3 = wtsj[2] + wtobj3[rn1] + soexpress[rand25];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soexpresar[rand25];
                        eng3she = wtsj[3] + wtobj4[rn1] + soexpress[rand25];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soexpresar[rand25];
                        sp3it = wtsj[4] + wtobj5[rn1] + soexpress[rand25];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soexpresar[rand25];
                        eng4 = wtsj[5] + wtobj6[rn2] + soexpress[rand25];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soexpresar[rand25];
                        eng5 = wtsj[6] + wtobj7[rn1] + soexpress[rand25];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soexpresar[rand25];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soexpress[rand25];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soexpresar[rand25];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soexpress[rand25];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soexpresar[rand25];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soexpress[rand25];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soexpresar[rand25];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soexpress[rand25];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soexpresar[rand25];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soexpress[rand25];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soexpresar[rand25];
                        eng4 = wtsjn[5] + wtobj6[rn2] + soexpress[rand25];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soexpresar[rand25];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soexpress[rand25];
                        break;
                }
                break;

            case "save ":
                int rand26 = (int) (Math.random() * sosave.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sosalvar[rand26];
                        eng1 = wtsj[0] + wtobj1[rn1] + sosave[rand26];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sosalvar[rand26];
                        eng2 = wtsj[1] + wtobj2[rn1] + sosave[rand26];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sosalvar[rand26];
                        eng3 = wtsj[2] + wtobj3[rn1] + sosave[rand26];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sosalvar[rand26];
                        eng3she = wtsj[3] + wtobj4[rn1] + sosave[rand26];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sosalvar[rand26];
                        sp3it = wtsj[4] + wtobj5[rn1] + sosave[rand26];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sosalvar[rand26];
                        eng4 = wtsj[5] + wtobj6[rn2] + sosave[rand26];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sosalvar[rand26];
                        eng5 = wtsj[6] + wtobj7[rn1] + sosave[rand26];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sosalvar[rand26];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sosave[rand26];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sosalvar[rand26];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sosave[rand26];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sosalvar[rand26];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sosave[rand26];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sosalvar[rand26];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sosave[rand26];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sosalvar[rand26];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sosave[rand26];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sosalvar[rand26];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sosave[rand26];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sosalvar[rand26];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sosave[rand26];
                        break;
                }
                break;

            case "handle ":  //comment
                int rand27 = (int) (Math.random() * sohandle.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + somanejar[rand27];
                        eng1 = wtsj[0] + wtobj1[rn1] + sohandle[rand27];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + somanejar[rand27];
                        eng2 = wtsj[1] + wtobj2[rn1] + sohandle[rand27];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + somanejar[rand27];
                        eng3 = wtsj[2] + wtobj3[rn1] + sohandle[rand27];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + somanejar[rand27];
                        eng3she = wtsj[3] + wtobj4[rn1] + sohandle[rand27];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + somanejar[rand27];
                        sp3it = wtsj[4] + wtobj5[rn1] + sohandle[rand27];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + somanejar[rand27];
                        eng4 = wtsj[5] + wtobj6[rn2] + sohandle[rand27];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + somanejar[rand27];
                        eng5 = wtsj[6] + wtobj7[rn1] + sohandle[rand27];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + somanejar[rand27];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sohandle[rand27];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + somanejar[rand27];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sohandle[rand27];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + somanejar[rand27];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sohandle[rand27];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + somanejar[rand27];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sohandle[rand27];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + somanejar[rand27];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sohandle[rand27];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + somanejar[rand27];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sohandle[rand27];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + somanejar[rand27];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sohandle[rand27];
                        break;
                }
                break;

        }


    }//PD 16/06/2022



    // DIF 2
    public void GenPresSimp2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo " + v1[rand] + arraySodEsp;
                        eng1 = "I " + verbs[rand] + arraySodEng;

                        sp2 = "tú " + v2[rand] + arraySodEsp;
                        eng2 = "you " + verbs[rand] + arraySodEng;

                        sp3 = "él " + v3[rand] + arraySodEsp;
                        eng3 = "he " + verbs3[rand] + arraySodEng;

                        sp3ella = "ella " + v3[rand] + arraySodEsp;
                        eng3she = "she " + verbs3[rand] + arraySodEng;

                        sp3eso = "eso " + v3[rand] + arraySodEsp;
                        sp3it = "it " + verbs3[rand] + arraySodEng;

                        sp4 = "ellos " + v4[rand] + arraySodEsp;
                        eng4 = "they " + verbs[rand] + arraySodEng;

                        sp5 = "nosotros " + v5nos[rand] + arraySodEsp;
                        eng5 = "we " + verbs[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo " + "no " + v1[rand] + arraySodEsp;
                        eng1 = "I " + "don't " + verbs[rand] + arraySodEng;

                        sp2 = "tú " + "no " + v2[rand] + arraySodEsp;
                        eng2 = "you " + "don't " + verbs[rand] + arraySodEng;

                        sp3 = "él " + "no " + v3[rand] + arraySodEsp;
                        eng3 = "he " + "doesn't " + verbs[rand] + arraySodEng;

                        sp3ella = "ella " + "no " + v3[rand] + arraySodEsp;
                        eng3she = "she " + "doesn't " + verbs[rand] + arraySodEng;

                        sp3eso = "eso " + "no " + v3[rand] + arraySodEsp;
                        sp3it = "it " + "doesn't " + verbs[rand] + arraySodEng;

                        sp4 = "ellos " + "no " + v4[rand] + arraySodEsp;
                        eng4 = "they " + "don't " + verbs[rand] + arraySodEng;

                        sp5 = "nosotros " + "no " + v5nos[rand] + arraySodEsp;
                        eng5 = "we " + "don't " + verbs[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenPresCont2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo estoy " + verbconti[rand] + arraySodEsp;
                        eng1 = "I am " + verbscont[rand] + arraySodEng;
                        eng12 = "I'm " + verbscont[rand] + arraySodEng;

                        sp2 = "tú estás " + verbconti[rand] + arraySodEsp;
                        eng2 = "you are " + verbscont[rand] + arraySodEng;
                        eng22 = "you're " + verbscont[rand] + arraySodEng;

                        sp3 = "él está " + verbconti[rand] + arraySodEsp;
                        eng3 = "he is " + verbscont[rand] + arraySodEng;
                        eng32 = "he's " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella está " + verbconti[rand] + arraySodEsp;
                        eng3she = "she is " + verbscont[rand] + arraySodEng;
                        eng3she2 = "she's " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso está " + verbconti[rand] + arraySodEsp;
                        sp3it = "it is " + verbscont[rand] + arraySodEng;
                        sp3it2 = "it's " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos están " + verbconti[rand] + arraySodEsp;
                        eng4 = "they are " + verbscont[rand] + arraySodEng;
                        eng42 = "they're " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros estamos " + verbconti[rand] + arraySodEsp;
                        eng5 = "we are " + verbscont[rand] + arraySodEng;
                        eng52 = "we're " + verbscont[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo " + "no estoy " + verbconti[rand] + arraySodEsp;
                        eng1 = "I " + "am not " + verbscont[rand] + arraySodEng;
                        eng12 = "I'm not " + verbscont[rand] + arraySodEng;

                        sp2 = "tú " + "no estás " + verbconti[rand] + arraySodEsp;
                        eng2 = "you're not " + verbscont[rand] + arraySodEng;
                        eng22 = "you " + "aren't " + verbscont[rand] + arraySodEng;

                        sp3 = "él " + "no está " + verbconti[rand] + arraySodEsp;
                        eng3 = "he's not " + verbscont[rand] + arraySodEng;
                        eng32 = "he " + "isn't " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella " + "no está " + verbconti[rand] + arraySodEsp;
                        eng3she = "she's not " + verbscont[rand] + arraySodEng;
                        eng3she2 = "she " + "isn't " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso " + "no está " + verbconti[rand] + arraySodEsp;
                        sp3it = "it's not " + verbscont[rand] + arraySodEng;
                        sp3it2 = "it " + "isn't " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos " + "no están " + verbconti[rand] + arraySodEsp;
                        eng4 = "they're not " + verbscont[rand] + arraySodEng;
                        eng42 = "they " + "aren't " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros " + "no están " + verbconti[rand] + arraySodEsp;
                        eng5 = "we're not " + verbscont[rand] + arraySodEng;
                        eng52 = "we " + "aren't " + verbscont[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenPresPerf2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo he " + verbpartsp[rand] + arraySodEsp;
                        eng1 = "I have " + verbsparteng[rand] + arraySodEng;
                        eng12 = "I've " + verbsparteng[rand] + arraySodEng;

                        sp2 = "tú has " + verbpartsp[rand] + arraySodEsp;
                        eng2 = "you have " + verbsparteng[rand] + arraySodEng;
                        eng22 = "you've " + verbsparteng[rand] + arraySodEng;

                        sp3 = "él ha " + verbpartsp[rand] + arraySodEsp;
                        eng3 = "he has " + verbsparteng[rand] + arraySodEng;
                        eng32 = "he's " + verbsparteng[rand] + arraySodEng;

                        sp3ella = "ella ha " + verbpartsp[rand] + arraySodEsp;
                        eng3she = "she has " + verbsparteng[rand] + arraySodEng;
                        eng3she2 = "she's " + verbsparteng[rand] + arraySodEng;

                        sp3eso = "eso ha " + verbpartsp[rand] + arraySodEsp;
                        sp3it = "it has " + verbsparteng[rand] + arraySodEng;
                        sp3it2 = "it's " + verbsparteng[rand] + arraySodEng;

                        sp4 = "ellos han " + verbpartsp[rand] + arraySodEsp;
                        eng4 = "they have " + verbsparteng[rand] + arraySodEng;
                        eng42 = "they've " + verbsparteng[rand] + arraySodEng;

                        sp5 = "nosotros hemos " + verbpartsp[rand] + arraySodEsp;
                        eng5 = "we have " + verbsparteng[rand] + arraySodEng;
                        eng52 = "we've " + verbsparteng[rand] + arraySodEng;
                        break;
                    case 1:
                        sp1 = "yo no he " + verbpartsp[rand] + arraySodEsp;
                        eng1 = "I have not " + verbsparteng[rand] + arraySodEng;
                        eng12 = "I haven't " + verbsparteng[rand] + arraySodEng;

                        sp2 = "tú no has " + verbpartsp[rand] + arraySodEsp;
                        eng2 = "you have not " + verbsparteng[rand] + arraySodEng;
                        eng22 = "you haven't " + verbsparteng[rand] + arraySodEng;

                        sp3 = "él no ha " + verbpartsp[rand] + arraySodEsp;
                        eng3 = "he has not " + verbsparteng[rand] + arraySodEng;
                        eng32 = "he hasn't " + verbsparteng[rand] + arraySodEng;

                        sp3ella = "ella no ha " + verbpartsp[rand] + arraySodEsp;
                        eng3she = "she has not " + verbsparteng[rand] + arraySodEng;
                        eng3she2 = "she hasn't " + verbsparteng[rand] + arraySodEng;

                        sp3eso = "eso no ha " + verbpartsp[rand] + arraySodEsp;
                        sp3it = "it has not " + verbsparteng[rand] + arraySodEng;
                        sp3it2 = "it hasn't " + verbsparteng[rand] + arraySodEng;

                        sp4 = "ellos no han " + verbpartsp[rand] + arraySodEsp;
                        eng4 = "they have not " + verbsparteng[rand] + arraySodEng;
                        eng42 = "they haven't " + verbsparteng[rand] + arraySodEng;

                        sp5 = "nosotros no hemos " + verbpartsp[rand] + arraySodEsp;
                        eng5 = "we have not " + verbsparteng[rand] + arraySodEng;
                        eng52 = "we haven't " + verbsparteng[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenPresPerfCont2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo he estado " + verbconti[rand] + arraySodEsp;
                        eng1 = "I have been " + verbscont[rand] + arraySodEng;

                        sp2 = "tú has estado " + verbconti[rand] + arraySodEsp;
                        eng2 = "you have been " + verbscont[rand] + arraySodEng;

                        sp3 = "él ha estado " + verbconti[rand] + arraySodEsp;
                        eng3 = "he has been " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella ha estado " + verbconti[rand] + arraySodEsp;
                        eng3she = "she has been " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso ha estado " + verbconti[rand] + arraySodEsp;
                        sp3it = "it has been " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos han estado " + verbconti[rand] + arraySodEsp;
                        eng4 = "they have been " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros hemos estado " + verbconti[rand] + arraySodEsp;
                        eng5 = "we have been " + verbscont[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo no he estado " + verbconti[rand] + arraySodEsp;
                        eng1 = "I haven't been " + verbscont[rand] + arraySodEng;

                        sp2 = "tú no has estado " + verbconti[rand] + arraySodEsp;
                        eng2 = "you haven't been " + verbscont[rand] + arraySodEng;

                        sp3 = "él no ha estado " + verbconti[rand] + arraySodEsp;
                        eng3 = "he hasn't been " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella no ha estado " + verbconti[rand] + arraySodEsp;
                        eng3she = "she hasn't been " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso no ha estado " + verbconti[rand] + arraySodEsp;
                        sp3it = "it hasn't been " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos no han estado " + verbconti[rand] + arraySodEsp;
                        eng4 = "they haven't been " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros no hemos estado " + verbconti[rand] + arraySodEsp;
                        eng5 = "we haven't been " + verbscont[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023

    //Pasados
    public void GenPastSimp2() {
        int neg = (int) (Math.random() * 4);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo " + vsp1[rand] + arraySodEsp;
                        eng1 = "I " + vsp[rand] + arraySodEng;

                        sp2 = "tú " + vsp2[rand] + arraySodEsp;
                        eng2 = "you " + vsp[rand] + arraySodEng;

                        sp3 = "él " + vsp3[rand] + arraySodEsp;
                        eng3 = "he " + vsp[rand] + arraySodEng;

                        sp3ella = "ella " + vsp3[rand] + arraySodEsp;
                        eng3she = "she " + vsp[rand] + arraySodEng;

                        sp3eso = "eso " + vsp3[rand] + arraySodEsp;
                        sp3it = "it " + vsp[rand] + arraySodEng;

                        sp4 = "ellos " + vsp4[rand] + arraySodEsp;
                        eng4 = "they " + vsp[rand] + arraySodEng;

                        sp5 = "nosotros " + vsp5[rand] + arraySodEsp;
                        eng5 = "we " + vsp[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo " + "no " + vsp1[rand] + arraySodEsp;
                        eng1 = "I " + "didn't " + verbs[rand] + arraySodEng;

                        sp2 = "tú " + "no " + vsp2[rand] + arraySodEsp;
                        eng2 = "you " + "didn't " + verbs[rand] + arraySodEng;

                        sp3 = "él " + "no " + vsp3[rand] + arraySodEsp;
                        eng3 = "he " + "didn't " + verbs[rand] + arraySodEng;

                        sp3ella = "ella " + "no " + vsp3[rand] + arraySodEsp;
                        eng3she = "she " + "didn't " + verbs[rand] + arraySodEng;

                        sp3eso = "eso " + "no " + vsp3[rand] + arraySodEsp;
                        sp3it = "it " + "didn't " + verbs[rand] + arraySodEng;

                        sp4 = "ellos " + "no " + vsp4[rand] + arraySodEsp;
                        eng4 = "they " + "didn't " + verbs[rand] + arraySodEng;

                        sp5 = "nosotros " + "no " + vsp5[rand] + arraySodEsp;
                        eng5 = "we " + "didn't " + verbs[rand] + arraySodEng;
                        break;
                    case 2:
                        sp1 = "yo " + vsp1i[rand] + arraySodEsp;
                        eng1 = "I " + vsp[rand] + arraySodEng;

                        sp2 = "tú " + vsp2i[rand] + arraySodEsp;
                        eng2 = "you " + vsp[rand] + arraySodEng;

                        sp3 = "él " + vsp3i[rand] + arraySodEsp;
                        eng3 = "he " + vsp[rand] + arraySodEng;

                        sp3ella = "ella " + vsp3i[rand] + arraySodEsp;
                        eng3she = "she " + vsp[rand] + arraySodEng;

                        sp3eso = "eso " + vsp3i[rand] + arraySodEsp;
                        sp3it = "it " + vsp[rand] + arraySodEng;

                        sp4 = "ellos " + vsp4i[rand] + arraySodEsp;
                        eng4 = "they " + vsp[rand] + arraySodEng;

                        sp5 = "nosotros " + vsp5i[rand] + arraySodEsp;
                        eng5 = "we " + vsp[rand] + arraySodEng;

                        break;
                    case 3:
                        sp1 = "yo " + "no " + vsp1i[rand] + arraySodEsp;
                        eng1 = "I " + "didn't " + verbs[rand] + arraySodEng;

                        sp2 = "tú " + "no " + vsp2i[rand] + arraySodEsp;
                        eng2 = "you " + "didn't " + verbs[rand] + arraySodEng;

                        sp3 = "él " + "no " + vsp3i[rand] + arraySodEsp;
                        eng3 = "he " + "didn't " + verbs[rand] + arraySodEng;

                        sp3ella = "ella " + "no " + vsp3i[rand] + arraySodEsp;
                        eng3she = "she " + "didn't " + verbs[rand] + arraySodEng;

                        sp3eso = "eso " + "no " + vsp3i[rand] + arraySodEsp;
                        sp3it = "it " + "didn't " + verbs[rand] + arraySodEng;

                        sp4 = "ellos " + "no " + vsp4i[rand] + arraySodEsp;
                        eng4 = "they " + "didn't " + verbs[rand] + arraySodEng;

                        sp5 = "nosotros " + "no " + vsp5i[rand] + arraySodEsp;
                        eng5 = "we " + "didn't " + verbs[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenPastCont2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo estaba " + verbconti[rand] + arraySodEsp;
                        eng1 = "I was " + verbscont[rand] + arraySodEng;
                        eng12 = "I was " + verbscont[rand] + arraySodEng;

                        sp2 = "tú estabas " + verbconti[rand] + arraySodEsp;
                        eng2 = "you were " + verbscont[rand] + arraySodEng;
                        eng22 = "you were " + verbscont[rand] + arraySodEng;

                        sp3 = "él estaba " + verbconti[rand] + arraySodEsp;
                        eng3 = "he was " + verbscont[rand] + arraySodEng;
                        eng32 = "he was " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella estaba " + verbconti[rand] + arraySodEsp;
                        eng3she = "she was " + verbscont[rand] + arraySodEng;
                        eng3she2 = "she was " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso estaba " + verbconti[rand] + arraySodEsp;
                        sp3it = "it was " + verbscont[rand] + arraySodEng;
                        sp3it2 = "it was " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos estaban " + verbconti[rand] + arraySodEsp;
                        eng4 = "they were " + verbscont[rand] + arraySodEng;
                        eng42 = "they were " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros estabamos " + verbconti[rand] + arraySodEsp;
                        eng5 = "we were " + verbscont[rand] + arraySodEng;
                        eng52 = "we were " + verbscont[rand] + arraySodEng;
                        break;
                    case 1:
                        sp1 = "yo " + "no estaba " + verbconti[rand] + arraySodEsp;
                        eng1 = "I " + "was not " + verbscont[rand] + arraySodEng;
                        eng12 = "I " + "wasn't " + verbscont[rand] + arraySodEng;

                        sp2 = "tú " + "no estabas " + verbconti[rand] + arraySodEsp;
                        eng2 = "you " + "were not " + verbscont[rand] + arraySodEng;
                        eng22 = "you " + "weren't " + verbscont[rand] + arraySodEng;

                        sp3 = "él " + "no estaba " + verbconti[rand] + arraySodEsp;
                        eng3 = "he " + "was not " + verbscont[rand] + arraySodEng;
                        eng32 = "he " + "wasn't " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella " + "no estaba " + verbconti[rand] + arraySodEsp;
                        eng3she = "she " + "was not " + verbscont[rand] + arraySodEng;
                        eng3she2 = "she " + "wasn't " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso " + "no estaba " + verbconti[rand] + arraySodEsp;
                        sp3it = "it " + "was not " + verbscont[rand] + arraySodEng;
                        sp3it2 = "it " + "wasn't " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos " + "no estaban " + verbconti[rand] + arraySodEsp;
                        eng4 = "they " + "were not " + verbscont[rand] + arraySodEng;
                        eng42 = "they " + "weren't " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros " + "no estabamos " + verbconti[rand] + arraySodEsp;
                        eng5 = "we " + "were not " + verbscont[rand] + arraySodEng;
                        eng52 = "we " + "weren't " + verbscont[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenPastPerf2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo había " + verbpartsp[rand] + arraySodEsp;
                        eng1 = "I had " + verbsparteng[rand] + arraySodEng;
                        eng12 = "I'd " + verbsparteng[rand] + arraySodEng;

                        sp2 = "tú habías " + verbpartsp[rand] + arraySodEsp;
                        eng2 = "you had " + verbsparteng[rand] + arraySodEng;
                        eng22 = "you'd " + verbsparteng[rand] + arraySodEng;

                        sp3 = "él había " + verbpartsp[rand] + arraySodEsp;
                        eng3 = "he had " + verbsparteng[rand] + arraySodEng;
                        eng32 = "he'd " + verbsparteng[rand] + arraySodEng;

                        sp3ella = "ella había " + verbpartsp[rand] + arraySodEsp;
                        eng3she = "she had " + verbsparteng[rand] + arraySodEng;
                        eng3she2 = "she'd " + verbsparteng[rand] + arraySodEng;

                        sp3eso = "eso había " + verbpartsp[rand] + arraySodEsp;
                        sp3it = "it had " + verbsparteng[rand] + arraySodEng;
                        sp3it2 = "it'd " + verbsparteng[rand] + arraySodEng;

                        sp4 = "ellos habían " + verbpartsp[rand] + arraySodEsp;
                        eng4 = "they had " + verbsparteng[rand] + arraySodEng;
                        eng42 = "they'd " + verbsparteng[rand] + arraySodEng;

                        sp5 = "nosotros habíamos " + verbpartsp[rand] + arraySodEsp;
                        eng5 = "we had " + verbsparteng[rand] + arraySodEng;
                        eng52 = "we'd " + verbsparteng[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo no había " + verbpartsp[rand] + arraySodEsp;
                        eng1 = "I had not " + verbsparteng[rand] + arraySodEng;
                        eng12 = "I hadn't " + verbsparteng[rand] + arraySodEng;

                        sp2 = "tú no habías " + verbpartsp[rand] + arraySodEsp;
                        eng2 = "you had not " + verbsparteng[rand] + arraySodEng;
                        eng22 = "you hadn't " + verbsparteng[rand] + arraySodEng;

                        sp3 = "él no había " + verbpartsp[rand] + arraySodEsp;
                        eng3 = "he had not " + verbsparteng[rand] + arraySodEng;
                        eng32 = "he hadn't " + verbsparteng[rand] + arraySodEng;

                        sp3ella = "ella no había " + verbpartsp[rand] + arraySodEsp;
                        eng3she = "she had not " + verbsparteng[rand] + arraySodEng;
                        eng3she2 = "she hadn't " + verbsparteng[rand] + arraySodEng;

                        sp3eso = "eso no había " + verbpartsp[rand] + arraySodEsp;
                        sp3it = "it had not " + verbsparteng[rand] + arraySodEng;
                        sp3it2 = "it hadn't " + verbsparteng[rand] + arraySodEng;

                        sp4 = "ellos no habían " + verbpartsp[rand] + arraySodEsp;
                        eng4 = "they had not " + verbsparteng[rand] + arraySodEng;
                        eng42 = "they hadn't " + verbsparteng[rand] + arraySodEng;

                        sp5 = "nosotros no habíamos " + verbpartsp[rand] + arraySodEsp;
                        eng5 = "we had not " + verbsparteng[rand] + arraySodEng;
                        eng52 = "we hadn't " + verbsparteng[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenPastPerfCont2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo había estado " + verbconti[rand] + arraySodEsp;
                        eng1 = "I had been " + verbscont[rand] + arraySodEng;

                        sp2 = "tú habías estado " + verbconti[rand] + arraySodEsp;
                        eng2 = "you had been " + verbscont[rand] + arraySodEng;

                        sp3 = "él había estado " + verbconti[rand] + arraySodEsp;
                        eng3 = "he had been " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella había estado " + verbconti[rand] + arraySodEsp;
                        eng3she = "she had been " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso había estado " + verbconti[rand] + arraySodEsp;
                        sp3it = "it had been " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos habían estado " + verbconti[rand] + arraySodEsp;
                        eng4 = "they had been " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros habíamos estado " + verbconti[rand] + arraySodEsp;
                        eng5 = "we had been " + verbscont[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo no había estado " + verbconti[rand] + arraySodEsp;
                        eng1 = "I hadn't been " + verbscont[rand] + arraySodEng;

                        sp2 = "tú no habías estado " + verbconti[rand] + arraySodEsp;
                        eng2 = "you hadn't been " + verbscont[rand] + arraySodEng;

                        sp3 = "él no había estado " + verbconti[rand] + arraySodEsp;
                        eng3 = "he hadn't been " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella no había estado " + verbconti[rand] + arraySodEsp;
                        eng3she = "she hadn't been " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso no había estado " + verbconti[rand] + arraySodEsp;
                        sp3it = "it hadn't been " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos no habían estado " + verbconti[rand] + arraySodEsp;
                        eng4 = "they hadn't been " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros no habíamos estado " + verbconti[rand] + arraySodEsp;
                        eng5 = "we hadn't been " + verbscont[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023

    //Futuros
    public void GenFutSimp2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo " + vsf1[rand] + arraySodEsp;
                        eng1 = "I will " + verbs[rand] + arraySodEng;

                        sp2 = "tú " + vsf2[rand] + arraySodEsp;
                        eng2 = "you will " + verbs[rand] + arraySodEng;

                        sp3 = "él " + vsf3[rand] + arraySodEsp;
                        eng3 = "he will " + verbs[rand] + arraySodEng;

                        sp3ella = "ella " + vsf3[rand] + arraySodEsp;
                        eng3she = "she will " + verbs[rand] + arraySodEng;

                        sp3eso = "eso " + vsf3[rand] + arraySodEsp;
                        sp3it = "it will " + verbs[rand] + arraySodEng;

                        sp4 = "ellos " + vsf5[rand] + arraySodEsp;
                        eng4 = "they will " + verbs[rand] + arraySodEng;

                        sp5 = "nosotros " + vsf4[rand] + arraySodEsp;
                        eng5 = "we will " + verbs[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo " + "no " + vsf1[rand] + arraySodEsp;
                        eng1 = "I " + "won't " + verbs[rand] + arraySodEng;

                        sp2 = "tú " + "no " + vsf2[rand] + arraySodEsp;
                        eng2 = "you " + "won't " + verbs[rand] + arraySodEng;

                        sp3 = "él " + "no " + vsf3[rand] + arraySodEsp;
                        eng3 = "he " + "won't " + verbs[rand] + arraySodEng;

                        sp3ella = "ella " + "no " + vsf3[rand] + arraySodEsp;
                        eng3she = "she " + "won't " + verbs[rand] + arraySodEng;

                        sp3eso = "eso " + "no " + vsf3[rand] + arraySodEsp;
                        sp3it = "it " + "won't " + verbs[rand] + arraySodEng;

                        sp4 = "ellos " + "no " + vsf5[rand] + arraySodEsp;
                        eng4 = "they " + "won't " + verbs[rand] + arraySodEng;

                        sp5 = "nosotros " + "no " + vsf4[rand] + arraySodEsp;
                        eng5 = "we " + "won't " + verbs[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenFutCont2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo estaré " + verbconti[rand] + arraySodEsp;
                        eng1 = "I will be " + verbscont[rand] + arraySodEng;
                        eng12 = "I'll be " + verbscont[rand] + arraySodEng;

                        sp2 = "tú estarás " + verbconti[rand] + arraySodEsp;
                        eng2 = "you will be " + verbscont[rand] + arraySodEng;
                        eng22 = "you'll be " + verbscont[rand] + arraySodEng;

                        sp3 = "él estará " + verbconti[rand] + arraySodEsp;
                        eng3 = "he will be " + verbscont[rand] + arraySodEng;
                        eng32 = "he'll be " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella estará " + verbconti[rand] + arraySodEsp;
                        eng3she = "she will be " + verbscont[rand] + arraySodEng;
                        eng3she2 = "she'll be " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso estará " + verbconti[rand] + arraySodEsp;
                        sp3it = "it will be " + verbscont[rand] + arraySodEng;
                        sp3it2 = "it'll be " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos estarán " + verbconti[rand] + arraySodEsp;
                        eng4 = "they will be " + verbscont[rand] + arraySodEng;
                        eng42 = "they'll be " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros estaremos " + verbconti[rand] + arraySodEsp;
                        eng5 = "we will be " + verbscont[rand] + arraySodEng;
                        eng52 = "we'll be " + verbscont[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo " + "no estaré " + verbconti[rand] + arraySodEsp;
                        eng1 = "I " + "will not be " + verbscont[rand] + arraySodEng;
                        eng12 = "I " + "won't be " + verbscont[rand] + arraySodEng;

                        sp2 = "tú " + "no estarás " + verbconti[rand] + arraySodEsp;
                        eng2 = "you " + "will not be " + verbscont[rand] + arraySodEng;
                        eng22 = "you " + "won't be " + verbscont[rand] + arraySodEng;

                        sp3 = "él " + "no estará " + verbconti[rand] + arraySodEsp;
                        eng3 = "he " + "will not be " + verbscont[rand] + arraySodEng;
                        eng32 = "he " + "won't be " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella " + "no estará " + verbconti[rand] + arraySodEsp;
                        eng3she = "she " + "will not be " + verbscont[rand] + arraySodEng;
                        eng3she2 = "she " + "won't be " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso " + "no estará " + verbconti[rand] + arraySodEsp;
                        sp3it = "it " + "will not be " + verbscont[rand] + arraySodEng;
                        sp3it2 = "it " + "won't be " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos " + "no estarán " + verbconti[rand] + arraySodEsp;
                        eng4 = "they " + "will not be " + verbscont[rand] + arraySodEng;
                        eng42 = "they " + "won't be " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros " + "no estaremos " + verbconti[rand] + arraySodEsp;
                        eng5 = "we " + "will not be " + verbscont[rand] + arraySodEng;
                        eng52 = "we " + "won't be " + verbscont[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenFutPerf2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo habré " + verbpartsp[rand] + arraySodEsp;
                        eng1 = "I will have " + verbsparteng[rand] + arraySodEng;
                        eng12 = "I'll have " + verbsparteng[rand] + arraySodEng;

                        sp2 = "tú habrás " + verbpartsp[rand] + arraySodEsp;
                        eng2 = "you will have " + verbsparteng[rand] + arraySodEng;
                        eng22 = "you'll have " + verbsparteng[rand] + arraySodEng;

                        sp3 = "él habrá " + verbpartsp[rand] + arraySodEsp;
                        eng3 = "he will have " + verbsparteng[rand] + arraySodEng;
                        eng32 = "he'll have " + verbsparteng[rand] + arraySodEng;

                        sp3ella = "ella habrá " + verbpartsp[rand] + arraySodEsp;
                        eng3she = "she will have " + verbsparteng[rand] + arraySodEng;
                        eng3she2 = "she'll have " + verbsparteng[rand] + arraySodEng;

                        sp3eso = "eso habrá " + verbpartsp[rand] + arraySodEsp;
                        sp3it = "it will have " + verbsparteng[rand] + arraySodEng;
                        sp3it2 = "it'll have " + verbsparteng[rand] + arraySodEng;

                        sp4 = "ellos habrán " + verbpartsp[rand] + arraySodEsp;
                        eng4 = "they will have " + verbsparteng[rand] + arraySodEng;
                        eng42 = "they'll have " + verbsparteng[rand] + arraySodEng;

                        sp5 = "nosotros habremos " + verbpartsp[rand] + arraySodEsp;
                        eng5 = "we will have " + verbsparteng[rand] + arraySodEng;
                        eng52 = "we'll have " + verbsparteng[rand] + arraySodEng;
                        break;
                    case 1:
                        sp1 = "yo no habré " + verbpartsp[rand] + arraySodEsp;
                        eng1 = "I will not have " + verbsparteng[rand] + arraySodEng;
                        eng12 = "I won't have " + verbsparteng[rand] + arraySodEng;

                        sp2 = "tú no habrás " + verbpartsp[rand] + arraySodEsp;
                        eng2 = "you will not have " + verbsparteng[rand] + arraySodEng;
                        eng22 = "you won't have " + verbsparteng[rand] + arraySodEng;

                        sp3 = "él no habrá " + verbpartsp[rand] + arraySodEsp;
                        eng3 = "he will not have " + verbsparteng[rand] + arraySodEng;
                        eng32 = "he won't have " + verbsparteng[rand] + arraySodEng;

                        sp3ella = "ella no habrá " + verbpartsp[rand] + arraySodEsp;
                        eng3she = "she will not have " + verbsparteng[rand] + arraySodEng;
                        eng3she2 = "she won't have " + verbsparteng[rand] + arraySodEng;

                        sp3eso = "eso no habrá " + verbpartsp[rand] + arraySodEsp;
                        sp3it = "it will not have " + verbsparteng[rand] + arraySodEng;
                        sp3it2 = "it won't have " + verbsparteng[rand] + arraySodEng;

                        sp4 = "ellos no habrán " + verbpartsp[rand] + arraySodEsp;
                        eng4 = "they will not have " + verbsparteng[rand] + arraySodEng;
                        eng42 = "they won't have " + verbsparteng[rand] + arraySodEng;

                        sp5 = "nosotros no habremos " + verbpartsp[rand] + arraySodEsp;
                        eng5 = "we will not have " + verbsparteng[rand] + arraySodEng;
                        eng52 = "we won't have " + verbsparteng[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenFutPerfCont2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo habré estado " + verbconti[rand] + arraySodEsp;
                        eng1 = "I will have been " + verbscont[rand] + arraySodEng;

                        sp2 = "tú habrás estado " + verbconti[rand] + arraySodEsp;
                        eng2 = "you will have been " + verbscont[rand] + arraySodEng;

                        sp3 = "él habrá estado " + verbconti[rand] + arraySodEsp;
                        eng3 = "he will have been " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella habrá estado " + verbconti[rand] + arraySodEsp;
                        eng3she = "she will have been " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso habrá estado " + verbconti[rand] + arraySodEsp;
                        sp3it = "it will have been " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos habrán estado " + verbconti[rand] + arraySodEsp;
                        eng4 = "they will have been " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros habremos estado " + verbconti[rand] + arraySodEsp;
                        eng5 = "we will have been " + verbscont[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo no habré estado " + verbconti[rand] + arraySodEsp;
                        eng1 = "I won't have been " + verbscont[rand] + arraySodEng;

                        sp2 = "tú no habrás estado " + verbconti[rand] + arraySodEsp;
                        eng2 = "you won't have been " + verbscont[rand] + arraySodEng;

                        sp3 = "él no habrá estado " + verbconti[rand] + arraySodEsp;
                        eng3 = "he won't have been " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella no habrá estado " + verbconti[rand] + arraySodEsp;
                        eng3she = "she won't have been " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso no habrá estado " + verbconti[rand] + arraySodEsp;
                        sp3it = "it won't have been " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos no habrán estado " + verbconti[rand] + arraySodEsp;
                        eng4 = "they won't have been " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros no habremos estado " + verbconti[rand] + arraySodEsp;
                        eng5 = "we won't have been " + verbscont[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023

    // WOULD
    public void GenWouldSimp2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo " + vsb1w[rand] + arraySodEsp;
                        eng1 = "I would " + verbs[rand] + arraySodEng;

                        sp2 = "tú " + vsb2w[rand] + arraySodEsp;
                        eng2 = "you would " + verbs[rand] + arraySodEng;

                        sp3 = "él " + vsb3w[rand] + arraySodEsp;
                        eng3 = "he would " + verbs[rand] + arraySodEng;

                        sp3ella = "ella " + vsb3w[rand] + arraySodEsp;
                        eng3she = "she would " + verbs[rand] + arraySodEng;

                        sp3eso = "eso " + vsb3w[rand] + arraySodEsp;
                        sp3it = "it would " + verbs[rand] + arraySodEng;

                        sp4 = "ellos " + vsb4w[rand] + arraySodEsp;
                        eng4 = "they would " + verbs[rand] + arraySodEng;

                        sp5 = "nosotros " + vsb5w[rand] + arraySodEsp;
                        eng5 = "we would " + verbs[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo " + "no " + vsb1w[rand] + arraySodEsp;
                        eng1 = "I " + "wouldn't " + verbs[rand] + arraySodEng;

                        sp2 = "tú " + "no " + vsb2w[rand] + arraySodEsp;
                        eng2 = "you " + "wouldn't " + verbs[rand] + arraySodEng;

                        sp3 = "él " + "no " + vsb3w[rand] + arraySodEsp;
                        eng3 = "he " + "wouldn't " + verbs[rand] + arraySodEng;

                        sp3ella = "ella " + "no " + vsb3w[rand] + arraySodEsp;
                        eng3she = "she " + "wouldn't " + verbs[rand] + arraySodEng;

                        sp3eso = "eso " + "no " + vsb3w[rand] + arraySodEsp;
                        sp3it = "it " + "wouldn't " + verbs[rand] + arraySodEng;

                        sp4 = "ellos " + "no " + vsb4w[rand] + arraySodEsp;
                        eng4 = "they " + "wouldn't " + verbs[rand] + arraySodEng;

                        sp5 = "nosotros " + "no " + vsb5w[rand] + arraySodEsp;
                        eng5 = "we " + "wouldn't " + verbs[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenWouldCont2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo estaría " + verbconti[rand] + arraySodEsp;
                        eng1 = "I would be " + verbscont[rand] + arraySodEng;
                        eng12 = "I'd be " + verbscont[rand] + arraySodEng;

                        sp2 = "tú estarías " + verbconti[rand] + arraySodEsp;
                        eng2 = "you would be " + verbscont[rand] + arraySodEng;
                        eng22 = "you'd be " + verbscont[rand] + arraySodEng;

                        sp3 = "él estaría " + verbconti[rand] + arraySodEsp;
                        eng3 = "he would be " + verbscont[rand] + arraySodEng;
                        eng32 = "he'd be " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella estaría " + verbconti[rand] + arraySodEsp;
                        eng3she = "she would be " + verbscont[rand] + arraySodEng;
                        eng3she2 = "she'd be " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso estaría " + verbconti[rand] + arraySodEsp;
                        sp3it = "it would be " + verbscont[rand] + arraySodEng;
                        sp3it2 = "it'd be " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos estarían " + verbconti[rand] + arraySodEsp;
                        eng4 = "they would be " + verbscont[rand] + arraySodEng;
                        eng42 = "they'd be " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros estaríamos " + verbconti[rand] + arraySodEsp;
                        eng5 = "we would be " + verbscont[rand] + arraySodEng;
                        eng52 = "we'd be " + verbscont[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo " + "no estaría " + verbconti[rand] + arraySodEsp;
                        eng1 = "I " + "would not be " + verbscont[rand] + arraySodEng;
                        eng12 = "I " + "wouldn't be " + verbscont[rand] + arraySodEng;

                        sp2 = "tú " + "no estarías " + verbconti[rand] + arraySodEsp;
                        eng2 = "you " + "would not be " + verbscont[rand] + arraySodEng;
                        eng22 = "you " + "wouldn't be " + verbscont[rand] + arraySodEng;

                        sp3 = "él " + "no estaría " + verbconti[rand] + arraySodEsp;
                        eng3 = "he " + "would not be " + verbscont[rand] + arraySodEng;
                        eng32 = "he " + "wouldn't be " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella " + "no estaría " + verbconti[rand] + arraySodEsp;
                        eng3she = "she " + "would not be " + verbscont[rand] + arraySodEng;
                        eng3she2 = "she " + "wouldn't be " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso " + "no estaría " + verbconti[rand] + arraySodEsp;
                        sp3it = "it " + "would not be " + verbscont[rand] + arraySodEng;
                        sp3it2 = "it " + "wouldn't be " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos " + "no estarían " + verbconti[rand] + arraySodEsp;
                        eng4 = "they " + "would not be " + verbscont[rand] + arraySodEng;
                        eng42 = "they " + "wouldn't be " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros " + "no estaríamos " + verbconti[rand] + arraySodEsp;
                        eng5 = "we " + "would not be " + verbscont[rand] + arraySodEng;
                        eng52 = "we " + "wouldn't be " + verbscont[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenWouldPerf2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo habría " + verbpartsp[rand] + arraySodEsp;
                        eng1 = "I would have " + verbsparteng[rand] + arraySodEng;
                        eng12 = "I'd have " + verbsparteng[rand] + arraySodEng;

                        sp2 = "tú habrías " + verbpartsp[rand] + arraySodEsp;
                        eng2 = "you would have " + verbsparteng[rand] + arraySodEng;
                        eng22 = "you'd have " + verbsparteng[rand] + arraySodEng;

                        sp3 = "él habría " + verbpartsp[rand] + arraySodEsp;
                        eng3 = "he would have " + verbsparteng[rand] + arraySodEng;
                        eng32 = "he'd have " + verbsparteng[rand] + arraySodEng;

                        sp3ella = "ella habría " + verbpartsp[rand] + arraySodEsp;
                        eng3she = "she would have " + verbsparteng[rand] + arraySodEng;
                        eng3she2 = "she'd have " + verbsparteng[rand] + arraySodEng;

                        sp3eso = "eso habría " + verbpartsp[rand] + arraySodEsp;
                        sp3it = "it would have " + verbsparteng[rand] + arraySodEng;
                        sp3it2 = "it'd have " + verbsparteng[rand] + arraySodEng;

                        sp4 = "ellos habrían " + verbpartsp[rand] + arraySodEsp;
                        eng4 = "they would have " + verbsparteng[rand] + arraySodEng;
                        eng42 = "they'd have " + verbsparteng[rand] + arraySodEng;

                        sp5 = "nosotros habríamos " + verbpartsp[rand] + arraySodEsp;
                        eng5 = "we would have " + verbsparteng[rand] + arraySodEng;
                        eng52 = "we'd have " + verbsparteng[rand] + arraySodEng;
                        break;
                    case 1:
                        sp1 = "yo no habría " + verbpartsp[rand] + arraySodEsp;
                        eng1 = "I would not have " + verbsparteng[rand] + arraySodEng;
                        eng12 = "I wouldn't have " + verbsparteng[rand] + arraySodEng;

                        sp2 = "tú no habrías " + verbpartsp[rand] + arraySodEsp;
                        eng2 = "you would not have " + verbsparteng[rand] + arraySodEng;
                        eng22 = "you wouldn't have " + verbsparteng[rand] + arraySodEng;

                        sp3 = "él no habría " + verbpartsp[rand] + arraySodEsp;
                        eng3 = "he would not have " + verbsparteng[rand] + arraySodEng;
                        eng32 = "he wouldn't have " + verbsparteng[rand] + arraySodEng;

                        sp3ella = "ella no habría " + verbpartsp[rand] + arraySodEsp;
                        eng3she = "she would not have " + verbsparteng[rand] + arraySodEng;
                        eng3she2 = "she wouldn't have " + verbsparteng[rand] + arraySodEng;

                        sp3eso = "eso no habría " + verbpartsp[rand] + arraySodEsp;
                        sp3it = "it would not have " + verbsparteng[rand] + arraySodEng;
                        sp3it2 = "it wouldn't have " + verbsparteng[rand] + arraySodEng;

                        sp4 = "ellos no habrían " + verbpartsp[rand] + arraySodEsp;
                        eng4 = "they would not have " + verbsparteng[rand] + arraySodEng;
                        eng42 = "they wouldn't have " + verbsparteng[rand] + arraySodEng;

                        sp5 = "nosotros no habríamos " + verbpartsp[rand] + arraySodEsp;
                        eng5 = "we would not have " + verbsparteng[rand] + arraySodEng;
                        eng52 = "we wouldn't have " + verbsparteng[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenWouldPerfCont2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo habría estado " + verbconti[rand] + arraySodEsp;
                        eng1 = "I would have been " + verbscont[rand] + arraySodEng;

                        sp2 = "tú habrías estado " + verbconti[rand] + arraySodEsp;
                        eng2 = "you would have been " + verbscont[rand] + arraySodEng;

                        sp3 = "él habría estado " + verbconti[rand] + arraySodEsp;
                        eng3 = "he would have been " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella habría estado " + verbconti[rand] + arraySodEsp;
                        eng3she = "she would have been " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso habría estado " + verbconti[rand] + arraySodEsp;
                        sp3it = "it would have been " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos habrían estado " + verbconti[rand] + arraySodEsp;
                        eng4 = "they would have been " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros habríamos estado " + verbconti[rand] + arraySodEsp;
                        eng5 = "we would have been " + verbscont[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo no habría estado " + verbconti[rand] + arraySodEsp;
                        eng1 = "I wouldn't have been " + verbscont[rand] + arraySodEng;

                        sp2 = "tú no habrías estado " + verbconti[rand] + arraySodEsp;
                        eng2 = "you wouldn't have been " + verbscont[rand] + arraySodEng;

                        sp3 = "él no habría estado " + verbconti[rand] + arraySodEsp;
                        eng3 = "he wouldn't have been " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella no habría estado " + verbconti[rand] + arraySodEsp;
                        eng3she = "she wouldn't have been " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso no habría estado " + verbconti[rand] + arraySodEsp;
                        sp3it = "it wouldn't have been " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos no habrían estado " + verbconti[rand] + arraySodEsp;
                        eng4 = "they wouldn't have been " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros no habríamos estado " + verbconti[rand] + arraySodEsp;
                        eng5 = "we wouldn't have been " + verbscont[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023

    //COULD
    public void GenCouldSimp2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo podría " + vsbc[rand] + arraySodEsp;
                        eng1 = "I could " + verbs[rand] + arraySodEng;

                        sp2 = "tú podrías " + vsbc[rand] + arraySodEsp;
                        eng2 = "you could " + verbs[rand] + arraySodEng;

                        sp3 = "él podría " + vsbc[rand] + arraySodEsp;
                        eng3 = "he could " + verbs[rand] + arraySodEng;

                        sp3ella = "ella podría " + vsbc[rand] + arraySodEsp;
                        eng3she = "she could " + verbs[rand] + arraySodEng;

                        sp3eso = "eso podría " + vsbc[rand] + arraySodEsp;
                        sp3it = "it could " + verbs[rand] + arraySodEng;

                        sp4 = "ellos podrían " + vsbc[rand] + arraySodEsp;
                        eng4 = "they could " + verbs[rand] + arraySodEng;

                        sp5 = "nosotros podríamos " + vsbc[rand] + arraySodEsp;
                        eng5 = "we could " + verbs[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo " + "no podría " + vsbc[rand] + arraySodEsp;
                        eng1 = "I " + "couldn't " + verbs[rand] + arraySodEng;

                        sp2 = "tú " + "no podrías " + vsbc[rand] + arraySodEsp;
                        eng2 = "you " + "couldn't " + verbs[rand] + arraySodEng;

                        sp3 = "él " + "no podría " + vsbc[rand] + arraySodEsp;
                        eng3 = "he " + "couldn't " + verbs[rand] + arraySodEng;

                        sp3ella = "ella " + "no podría " + vsbc[rand] + arraySodEsp;
                        eng3she = "she " + "couldn't " + verbs[rand] + arraySodEng;

                        sp3eso = "eso " + "no podría " + vsbc[rand] + arraySodEsp;
                        sp3it = "it " + "couldn't " + verbs[rand] + arraySodEng;

                        sp4 = "ellos " + "no podrían " + vsbc[rand] + arraySodEsp;
                        eng4 = "they " + "couldn't " + verbs[rand] + arraySodEng;

                        sp5 = "nosotros " + "no podríamos " + vsbc[rand] + arraySodEsp;
                        eng5 = "we " + "couldn't " + verbs[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenCouldCont2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo podría estar " + verbconti[rand] + arraySodEsp;
                        eng1 = "I could be " + verbscont[rand] + arraySodEng;
                        eng12 = "I could be " + verbscont[rand] + arraySodEng;

                        sp2 = "tú podrías estar " + verbconti[rand] + arraySodEsp;
                        eng2 = "you could be " + verbscont[rand] + arraySodEng;
                        eng22 = "you could be " + verbscont[rand] + arraySodEng;

                        sp3 = "él podría estar " + verbconti[rand] + arraySodEsp;
                        eng3 = "he could be " + verbscont[rand] + arraySodEng;
                        eng32 = "he could be " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella podría estar " + verbconti[rand] + arraySodEsp;
                        eng3she = "she could be " + verbscont[rand] + arraySodEng;
                        eng3she2 = "she could be " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso podría estar " + verbconti[rand] + arraySodEsp;
                        sp3it = "it could be " + verbscont[rand] + arraySodEng;
                        sp3it2 = "it could be " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos podrían estar " + verbconti[rand] + arraySodEsp;
                        eng4 = "they could be " + verbscont[rand] + arraySodEng;
                        eng42 = "they could be " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros podríamos estar " + verbconti[rand] + arraySodEsp;
                        eng5 = "we could be " + verbscont[rand] + arraySodEng;
                        eng52 = "we could be " + verbscont[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo " + "no podría estar " + verbconti[rand] + arraySodEsp;
                        eng1 = "I " + "could not be " + verbscont[rand] + arraySodEng;
                        eng12 = "I " + "couldn't be " + verbscont[rand] + arraySodEng;

                        sp2 = "tú " + "no podrías estar " + verbconti[rand] + arraySodEsp;
                        eng2 = "you " + "could not be " + verbscont[rand] + arraySodEng;
                        eng22 = "you " + "couldn't be " + verbscont[rand] + arraySodEng;

                        sp3 = "él " + "no podría estar " + verbconti[rand] + arraySodEsp;
                        eng3 = "he " + "could not be " + verbscont[rand] + arraySodEng;
                        eng32 = "he " + "couldn't be " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella " + "no podría estar " + verbconti[rand] + arraySodEsp;
                        eng3she = "she " + "could not be " + verbscont[rand] + arraySodEng;
                        eng3she2 = "she " + "couldn't be " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso " + "no podría estar " + verbconti[rand] + arraySodEsp;
                        sp3it = "it " + "could not be " + verbscont[rand] + arraySodEng;
                        sp3it2 = "it " + "couldn't be " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos " + "no podrían estar " + verbconti[rand] + arraySodEsp;
                        eng4 = "they " + "could not be " + verbscont[rand] + arraySodEng;
                        eng42 = "they " + "couldn't be " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros " + "no podríamos estar " + verbconti[rand] + arraySodEsp;
                        eng5 = "we " + "could not be " + verbscont[rand] + arraySodEng;
                        eng52= "we " + "couldn't be " + verbscont[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenCouldPerf2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo pude haber " + verbpartsp[rand] + arraySodEsp;
                        eng1 = "I could have " + verbsparteng[rand] + arraySodEng;
                        eng12 = "I could have " + verbsparteng[rand] + arraySodEng;

                        sp2 = "tú pudiste haber " + verbpartsp[rand] + arraySodEsp;
                        eng2 = "you could have " + verbsparteng[rand] + arraySodEng;
                        eng22 = "you could have " + verbsparteng[rand] + arraySodEng;

                        sp3 = "él pudo haber " + verbpartsp[rand] + arraySodEsp;
                        eng3 = "he could have " + verbsparteng[rand] + arraySodEng;
                        eng32 = "he could have " + verbsparteng[rand] + arraySodEng;

                        sp3ella = "ella pudiese haber " + verbpartsp[rand] + arraySodEsp;
                        eng3she = "she could have " + verbsparteng[rand] + arraySodEng;
                        eng3she2 = "she could have " + verbsparteng[rand] + arraySodEng;

                        sp3eso = "eso pudiese haber " + verbpartsp[rand] + arraySodEsp;
                        sp3it = "it could have " + verbsparteng[rand] + arraySodEng;
                        sp3it2 = "it could have " + verbsparteng[rand] + arraySodEng;

                        sp4 = "ellos pudiesen haber " + verbpartsp[rand] + arraySodEsp;
                        eng4 = "they could have " + verbsparteng[rand] + arraySodEng;
                        eng42 = "they could have " + verbsparteng[rand] + arraySodEng;

                        sp5 = "nosotros pudiesemos haber " + verbpartsp[rand] + arraySodEsp;
                        eng5 = "we could have " + verbsparteng[rand] + arraySodEng;
                        eng52 = "we could have " + verbsparteng[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo " + "no pude haber " + verbpartsp[rand] + arraySodEsp;
                        eng1 = "I " + "could not have " + verbsparteng[rand] + arraySodEng;
                        eng12 = "I " + "couldn't have " + verbsparteng[rand] + arraySodEng;

                        sp2 = "tú " + "no pudiste haber " + verbpartsp[rand] + arraySodEsp;
                        eng2 = "you " + "could not have " + verbsparteng[rand] + arraySodEng;
                        eng22 = "you " + "couldn't have " + verbsparteng[rand] + arraySodEng;

                        sp3 = "él " + "no pudo haber " + verbpartsp[rand] + arraySodEsp;
                        eng3 = "he " + "could not have " + verbsparteng[rand] + arraySodEng;
                        eng32 = "he " + "couldn't have " + verbsparteng[rand] + arraySodEng;

                        sp3ella = "ella " + "no pudiese haber " + verbpartsp[rand] + arraySodEsp;
                        eng3she = "she " + "could not have " + verbsparteng[rand] + arraySodEng;
                        eng3she2 = "she " + "couldn't have " + verbsparteng[rand] + arraySodEng;

                        sp3eso = "eso " + "no pudiese haber " + verbpartsp[rand] + arraySodEsp;
                        sp3it = "it " + "could not have " + verbsparteng[rand] + arraySodEng;
                        sp3it2 = "it " + "couldn't have " + verbsparteng[rand] + arraySodEng;

                        sp4 = "ellos " + "no pudiesen haber " + verbpartsp[rand] + arraySodEsp;
                        eng4 = "they " + "could not have " + verbsparteng[rand] + arraySodEng;
                        eng42 = "they " + "couldn't have " + verbsparteng[rand] + arraySodEng;

                        sp5 = "nosotros " + "no pudiesemos haber " + verbpartsp[rand] + arraySodEsp;
                        eng5 = "we " + "could not have " + verbsparteng[rand] + arraySodEng;
                        eng52 = "we " + "couldn't have " + verbsparteng[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenCouldPerfCont2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo podría haber estado " + verbconti[rand] + arraySodEsp;
                        eng1 = "I could have been " + verbscont[rand] + arraySodEng;

                        sp2 = "tú podrías haber estado " + verbconti[rand] + arraySodEsp;
                        eng2 = "you could have been " + verbscont[rand] + arraySodEng;

                        sp3 = "él podría haber estado " + verbconti[rand] + arraySodEsp;
                        eng3 = "he could have been " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella podría haber estado " + verbconti[rand] + arraySodEsp;
                        eng3she = "she could have been " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso podría haber estado " + verbconti[rand] + arraySodEsp;
                        sp3it = "it could have been " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos podrían haber estado " + verbconti[rand] + arraySodEsp;
                        eng4 = "they could have been " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros podríamos haber estado " + verbconti[rand] + arraySodEsp;
                        eng5 = "we could have been " + verbscont[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo " + "no podría haber estado " + verbconti[rand] + arraySodEsp;
                        eng1 = "I " + "couldn't have been " + verbscont[rand] + arraySodEng;

                        sp2 = "tú " + "no podrías haber estado " + verbconti[rand] + arraySodEsp;
                        eng2 = "you " + "couldn't have been " + verbscont[rand] + arraySodEng;

                        sp3 = "él " + "no podría haber estado " + verbconti[rand] + arraySodEsp;
                        eng3 = "he " + "couldn't have been " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella " + "no podría haber estado " + verbconti[rand] + arraySodEsp;
                        eng3she = "she " + "couldn't have been " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso " + "no podría haber estado " + verbconti[rand] + arraySodEsp;
                        sp3it = "it " + "couldn't have been " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos " + "no podrían haber estado " + verbconti[rand] + arraySodEsp;
                        eng4 = "they " + "couldn't have been " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros " + "no podríamos haber estado " + verbconti[rand] + arraySodEsp;
                        eng5 = "we " + "couldn't have been " + verbscont[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023

    // MIGHT
    public void GenMightSimp2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo quizá " + v1s[rand] + arraySodEsp;
                        eng1 = "I might " + verbs[rand] + arraySodEng;

                        sp2 = "tú quizá " + v2s[rand] + arraySodEsp;
                        eng2 = "you might " + verbs[rand] + arraySodEng;

                        sp3 = "él quizá " + v3s[rand] + arraySodEsp;
                        eng3 = "he might " + verbs[rand] + arraySodEng;

                        sp3ella = "ella quizá " + v3s[rand] + arraySodEsp;
                        eng3she = "she might " + verbs[rand] + arraySodEng;

                        sp3eso = "eso quizá" + v3s[rand] + arraySodEsp;
                        sp3it = "it might " + verbs[rand] + arraySodEng;

                        sp4 = "ellos quizá " + v4s[rand] + arraySodEsp;
                        eng4 = "they might " + verbs[rand] + arraySodEng;

                        sp5 = "nosotros quizá " + v5s[rand] + arraySodEsp;
                        eng5 = "we might " + verbs[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo quizá no " + v1s[rand] + arraySodEsp;
                        eng1 = "I might not " + verbs[rand] + arraySodEng;

                        sp2 = "tú quizá no " + v2s[rand] + arraySodEsp;
                        eng2 = "you might not " + verbs[rand] + arraySodEng;

                        sp3 = "él quizá no " + v3s[rand] + arraySodEsp;
                        eng3 = "he might not " + verbs[rand] + arraySodEng;

                        sp3ella = "ella quizá no " + v3s[rand] + arraySodEsp;
                        eng3she = "she might not " + verbs[rand] + arraySodEng;

                        sp3eso = "eso quizá no " + v3s[rand] + arraySodEsp;
                        sp3it = "it might not " + verbs[rand] + arraySodEng;

                        sp4 = "ellos quizá no " + v4s[rand] + arraySodEsp;
                        eng4 = "they might not " + verbs[rand] + arraySodEng;

                        sp5 = "nosotros quizá no " + v5s[rand] + arraySodEsp;
                        eng5 = "we might not " + verbs[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenMightCont2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo quizá esté " + verbconti[rand] + arraySodEsp;
                        eng1 = "I might be " + verbscont[rand] + arraySodEng;
                        eng12 = "I might be " + verbscont[rand] + arraySodEng;

                        sp2 = "tú quizá estés " + verbconti[rand] + arraySodEsp;
                        eng2 = "you might be " + verbscont[rand] + arraySodEng;
                        eng22 = "you might be " + verbscont[rand] + arraySodEng;

                        sp3 = "él quizá esté " + verbconti[rand] + arraySodEsp;
                        eng3 = "he might be " + verbscont[rand] + arraySodEng;
                        eng32 = "he might be " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella quizá esté " + verbconti[rand] + arraySodEsp;
                        eng3she = "she might be " + verbscont[rand] + arraySodEng;
                        eng3she2 = "she might be " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso quizá esté " + verbconti[rand] + arraySodEsp;
                        sp3it = "it might be " + verbscont[rand] + arraySodEng;
                        sp3it2 = "it might be " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos quizá estén " + verbconti[rand] + arraySodEsp;
                        eng4 = "they might be " + verbscont[rand] + arraySodEng;
                        eng42 = "they might be " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros quizá estemos " + verbconti[rand] + arraySodEsp;
                        eng5 = "we might be " + verbscont[rand] + arraySodEng;
                        eng52 = "we might be " + verbscont[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo " + "quizá no esté " + verbconti[rand] + arraySodEsp;
                        eng1 = "I " + "might not be " + verbscont[rand] + arraySodEng;
                        eng12 = "I " + "mightn't be " + verbscont[rand] + arraySodEng;

                        sp2 = "tú " + "quizá no estés " + verbconti[rand] + arraySodEsp;
                        eng2 = "you " + "might not be " + verbscont[rand] + arraySodEng;
                        eng22 = "you " + "mightn't be " + verbscont[rand] + arraySodEng;

                        sp3 = "él " + "quizá no esté  " + verbconti[rand] + arraySodEsp;
                        eng3 = "he " + "might not be " + verbscont[rand] + arraySodEng;
                        eng32 = "he " + "mightn't be " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella " + "quizá no esté " + verbconti[rand] + arraySodEsp;
                        eng3she = "she " + "might not be " + verbscont[rand] + arraySodEng;
                        eng3she2 = "she " + "mightn't be " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso " + "quizá no esté " + verbconti[rand] + arraySodEsp;
                        sp3it = "it " + "might not be " + verbscont[rand] + arraySodEng;
                        sp3it2 = "it " + "mightn't be " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos " + "quizá no estén " + verbconti[rand] + arraySodEsp;
                        eng4 = "they " + "might not be " + verbscont[rand] + arraySodEng;
                        eng42 = "they " + "mightn't be " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros " + "quizá no estémos " + verbconti[rand] + arraySodEsp;
                        eng5 = "we " + "might not be " + verbscont[rand] + arraySodEng;
                        eng52 = "we " + "mightn't be " + verbscont[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenMightPerf2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo quizá haya " + verbpartsp[rand] + arraySodEsp;
                        eng1 = "I might have " + verbsparteng[rand] + arraySodEng;
                        eng12 = "I might have " + verbsparteng[rand] + arraySodEng;

                        sp2 = "tú quizá hayas " + verbpartsp[rand] + arraySodEsp;
                        eng2 = "you might have " + verbsparteng[rand] + arraySodEng;
                        eng22 = "you might have " + verbsparteng[rand] + arraySodEng;

                        sp3 = "él quizá haya " + verbpartsp[rand] + arraySodEsp;
                        eng3 = "he might have " + verbsparteng[rand] + arraySodEng;
                        eng32 = "he might have " + verbsparteng[rand] + arraySodEng;

                        sp3ella = "ella quizá haya " + verbpartsp[rand] + arraySodEsp;
                        eng3she = "she might have " + verbsparteng[rand] + arraySodEng;
                        eng3she2 = "she might have " + verbsparteng[rand] + arraySodEng;

                        sp3eso = "eso quizá haya " + verbpartsp[rand] + arraySodEsp;
                        sp3it = "it might have " + verbsparteng[rand] + arraySodEng;
                        sp3it2 = "it might have " + verbsparteng[rand] + arraySodEng;

                        sp4 = "ellos quizá hayan " + verbpartsp[rand] + arraySodEsp;
                        eng4 = "they might have " + verbsparteng[rand] + arraySodEng;
                        eng42 = "they might have " + verbsparteng[rand] + arraySodEng;

                        sp5 = "nosotros quizá hayamos " + verbpartsp[rand] + arraySodEsp;
                        eng5 = "we might have " + verbsparteng[rand] + arraySodEng;
                        eng52 = "we might have " + verbsparteng[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo quizá no haya " + verbpartsp[rand] + arraySodEsp;
                        eng1 = "I might not have " + verbsparteng[rand] + arraySodEng;
                        eng12 = "I mightn't have " + verbsparteng[rand] + arraySodEng;

                        sp2 = "tú quizá no hayas " + verbpartsp[rand] + arraySodEsp;
                        eng2 = "you might not have " + verbsparteng[rand] + arraySodEng;
                        eng22 = "you mightn't have " + verbsparteng[rand] + arraySodEng;

                        sp3 = "él quizá no haya " + verbpartsp[rand] + arraySodEsp;
                        eng3 = "he might not have " + verbsparteng[rand] + arraySodEng;
                        eng32 = "he mightn't have " + verbsparteng[rand] + arraySodEng;

                        sp3ella = "ella quizá no haya " + verbpartsp[rand] + arraySodEsp;
                        eng3she = "she might not have " + verbsparteng[rand] + arraySodEng;
                        eng3she2 = "she mightn't have " + verbsparteng[rand] + arraySodEng;

                        sp3eso = "eso quizá no haya " + verbpartsp[rand] + arraySodEsp;
                        sp3it = "it might not have " + verbsparteng[rand] + arraySodEng;
                        sp3it2 = "it might not have " + verbsparteng[rand] + arraySodEng;

                        sp4 = "ellos quizá no hayan " + verbpartsp[rand] + arraySodEsp;
                        eng4 = "they might not have " + verbsparteng[rand] + arraySodEng;
                        eng42 = "they mightn't have " + verbsparteng[rand] + arraySodEng;

                        sp5 = "nosotros quizá no hayamos " + verbpartsp[rand] + arraySodEsp;
                        eng5 = "we might not have " + verbsparteng[rand] + arraySodEng;
                        eng52 = "we mightn't have " + verbsparteng[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenMightPerfCont2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo quizá haya estado " + verbconti[rand] + arraySodEsp;
                        eng1 = "I might have been " + verbscont[rand] + arraySodEng;

                        sp2 = "tú quizá hayas estado " + verbconti[rand] + arraySodEsp;
                        eng2 = "you might have been " + verbscont[rand] + arraySodEng;

                        sp3 = "él quizá haya estado " + verbconti[rand] + arraySodEsp;
                        eng3 = "he might have been " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella quizá haya estado " + verbconti[rand] + arraySodEsp;
                        eng3she = "she might have been " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso quizá haya estado " + verbconti[rand] + arraySodEsp;
                        sp3it = "it might have been " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos quizá hayan estado " + verbconti[rand] + arraySodEsp;
                        eng4 = "they might have been " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros quizá hayamos estado " + verbconti[rand] + arraySodEsp;
                        eng5 = "we might have been " + verbscont[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo quizá no haya estado " + verbconti[rand] + arraySodEsp;
                        eng1 = "I might not have been " + verbscont[rand] + arraySodEng;

                        sp2 = "tú quizá no hayas estado " + verbconti[rand] + arraySodEsp;
                        eng2 = "you might not have been " + verbscont[rand] + arraySodEng;

                        sp3 = "él quizá no haya estado " + verbconti[rand] + arraySodEsp;
                        eng3 = "he might not have been " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella quizá no haya estado " + verbconti[rand] + arraySodEsp;
                        eng3she = "she might not have been " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso quizá no haya estado " + verbconti[rand] + arraySodEsp;
                        sp3it = "it might not have been " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos quizá no hayan estado " + verbconti[rand] + arraySodEsp;
                        eng4 = "they might not have been " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros quizá no hayamos estado " + verbconti[rand] + arraySodEsp;
                        eng5 = "we might not have been " + verbscont[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023

    //SHOULD
    public void GenShouldSimp2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo debería " + vsbc[rand] + arraySodEsp;
                        eng1 = "I should " + verbs[rand] + arraySodEng;

                        sp2 = "tú deberías " + vsbc[rand] + arraySodEsp;
                        eng2 = "you should " + verbs[rand] + arraySodEng;

                        sp3 = "él debería " + vsbc[rand] + arraySodEsp;
                        eng3 = "he should " + verbs[rand] + arraySodEng;

                        sp3ella = "ella debería " + vsbc[rand] + arraySodEsp;
                        eng3she = "she should " + verbs[rand] + arraySodEng;

                        sp3eso = "eso debería " + vsbc[rand] + arraySodEsp;
                        sp3it = "it should " + verbs[rand] + arraySodEng;

                        sp4 = "ellos deberían " + vsbc[rand] + arraySodEsp;
                        eng4 = "they should " + verbs[rand] + arraySodEng;

                        sp5 = "nosotros deberíamos " + vsbc[rand] + arraySodEsp;
                        eng5 = "we should " + verbs[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo " + "no debería " + vsbc[rand] + arraySodEsp;
                        eng1 = "I " + "shouldn't " + verbs[rand] + arraySodEng;

                        sp2 = "tú " + "no deberías " + vsbc[rand] + arraySodEsp;
                        eng2 = "you " + "shouldn't " + verbs[rand] + arraySodEng;

                        sp3 = "él " + "no debería " + vsbc[rand] + arraySodEsp;
                        eng3 = "he " + "shouldn't " + verbs[rand] + arraySodEng;

                        sp3ella = "ella " + "no debería " + vsbc[rand] + arraySodEsp;
                        eng3she = "she " + "shouldn't " + verbs[rand] + arraySodEng;

                        sp3eso = "eso " + "no debería " + vsbc[rand] + arraySodEsp;
                        sp3it = "it " + "shouldn't " + verbs[rand] + arraySodEng;

                        sp4 = "ellos " + "no deberían " + vsbc[rand] + arraySodEsp;
                        eng4 = "they " + "shouldn't " + verbs[rand] + arraySodEng;

                        sp5 = "nosotros " + "no deberíamos " + vsbc[rand] + arraySodEsp;
                        eng5 = "we " + "shouldn't " + verbs[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenShouldCont2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo debería estar " + verbconti[rand] + arraySodEsp;
                        eng1 = "I should be " + verbscont[rand] + arraySodEng;
                        eng12 = "I'd be " + verbscont[rand] + arraySodEng;

                        sp2 = "tú deberías estar " + verbconti[rand] + arraySodEsp;
                        eng2 = "you should be " + verbscont[rand] + arraySodEng;
                        eng22 = "you'd be " + verbscont[rand] + arraySodEng;

                        sp3 = "él debería estar " + verbconti[rand] + arraySodEsp;
                        eng3 = "he should be " + verbscont[rand] + arraySodEng;
                        eng32 = "he'd be " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella debería estar " + verbconti[rand] + arraySodEsp;
                        eng3she = "she should be " + verbscont[rand] + arraySodEng;
                        eng3she2 = "she'd be " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso debería estar " + verbconti[rand] + arraySodEsp;
                        sp3it = "it should be " + verbscont[rand] + arraySodEng;
                        sp3it2 = "it'd be " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos deberían estar " + verbconti[rand] + arraySodEsp;
                        eng4 = "they should be " + verbscont[rand] + arraySodEng;
                        eng42 = "they'd be " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros deberíamos estar " + verbconti[rand] + arraySodEsp;
                        eng5 = "we should be " + verbscont[rand] + arraySodEng;
                        eng52 = "we'd be " + verbscont[rand] + arraySodEng;
                        break;
                    case 1:
                        sp1 = "yo " + "no debería estar " + verbconti[rand] + arraySodEsp;
                        eng1 = "I " + "should not be " + verbscont[rand] + arraySodEng;
                        eng12 = "I " + "shouldn't be " + verbscont[rand] + arraySodEng;

                        sp2 = "tú " + "no deberías estar " + verbconti[rand] + arraySodEsp;
                        eng2 = "you " + "should not be " + verbscont[rand] + arraySodEng;
                        eng22 = "you " + "shouldn't be " + verbscont[rand] + arraySodEng;

                        sp3 = "él " + "no debería estar " + verbconti[rand] + arraySodEsp;
                        eng3 = "he " + "should not be " + verbscont[rand] + arraySodEng;
                        eng32 = "he " + "shouldn't be " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella " + "no debería estar " + verbconti[rand] + arraySodEsp;
                        eng3she = "she " + "should not be " + verbscont[rand] + arraySodEng;
                        eng3she2 = "she " + "shouldn't be " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso " + "no debería estar " + verbconti[rand] + arraySodEsp;
                        sp3it = "it " + "should not be " + verbscont[rand] + arraySodEng;
                        sp3it2 = "it " + "shouldn't be " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos " + "no deberían estar " + verbconti[rand] + arraySodEsp;
                        eng4 = "they " + "should not be " + verbscont[rand] + arraySodEng;
                        eng42 = "they " + "shouldn't be " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros " + "no deberíamos estar " + verbconti[rand] + arraySodEsp;
                        eng5 = "we " + "should not be " + verbscont[rand] + arraySodEng;
                        eng52 = "we " + "shouldn't be " + verbscont[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenShouldPerf2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo debería haber " + verbpartsp[rand] + arraySodEsp;
                        eng1 = "I should have " + verbsparteng[rand] + arraySodEng;
                        eng12 = "I'd have " + verbsparteng[rand] + arraySodEng;

                        sp2 = "tú deberías haber " + verbpartsp[rand] + arraySodEsp;
                        eng2 = "you should have " + verbsparteng[rand] + arraySodEng;
                        eng22 = "you'd have " + verbsparteng[rand] + arraySodEng;

                        sp3 = "él debería haber " + verbpartsp[rand] + arraySodEsp;
                        eng3 = "he should have " + verbsparteng[rand] + arraySodEng;
                        eng32 = "he'd have " + verbsparteng[rand] + arraySodEng;

                        sp3ella = "ella debería haber " + verbpartsp[rand] + arraySodEsp;
                        eng3she = "she should have " + verbsparteng[rand] + arraySodEng;
                        eng3she = "she'd have " + verbsparteng[rand] + arraySodEng;

                        sp3eso = "eso debería haber " + verbpartsp[rand] + arraySodEsp;
                        sp3it = "it should have " + verbsparteng[rand] + arraySodEng;
                        sp3it2 = "it'd have " + verbsparteng[rand] + arraySodEng;

                        sp4 = "ellos deberían haber " + verbpartsp[rand] + arraySodEsp;
                        eng4 = "they should have " + verbsparteng[rand] + arraySodEng;
                        eng42 = "they'd have " + verbsparteng[rand] + arraySodEng;

                        sp5 = "nosotros deberíamos haber " + verbpartsp[rand] + arraySodEsp;
                        eng5 = "we should have " + verbsparteng[rand] + arraySodEng;
                        eng52 = "we'd have " + verbsparteng[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo " + "no debería haber " + verbpartsp[rand] + arraySodEsp;
                        eng1 = "I " + "should not have " + verbsparteng[rand] + arraySodEng;
                        eng12 = "I " + "shouldn't have " + verbsparteng[rand] + arraySodEng;

                        sp2 = "tú " + "no deberías haber " + verbpartsp[rand] + arraySodEsp;
                        eng2 = "you " + "should not have " + verbsparteng[rand] + arraySodEng;
                        eng22 = "you " + "shouldn't have " + verbsparteng[rand] + arraySodEng;

                        sp3 = "él " + "no debería haber " + verbpartsp[rand] + arraySodEsp;
                        eng3 = "he " + "should not have " + verbsparteng[rand] + arraySodEng;
                        eng32 = "he " + "shouldn't have " + verbsparteng[rand] + arraySodEng;

                        sp3ella = "ella " + "no debería haber " + verbpartsp[rand] + arraySodEsp;
                        eng3she = "she " + "should not have " + verbsparteng[rand] + arraySodEng;
                        eng3she2 = "she " + "shouldn't have " + verbsparteng[rand] + arraySodEng;

                        sp3eso = "eso " + "no debería haber " + verbpartsp[rand] + arraySodEsp;
                        sp3it = "it " + "should not have " + verbsparteng[rand] + arraySodEng;
                        sp3it2 = "it " + "shouldn't have " + verbsparteng[rand] + arraySodEng;

                        sp4 = "ellos " + "no deberían haber " + verbpartsp[rand] + arraySodEsp;
                        eng4 = "they " + "should not have " + verbsparteng[rand] + arraySodEng;
                        eng42 = "they " + "shouldn't have " + verbsparteng[rand] + arraySodEng;

                        sp5 = "nosotros " + "no deberíamos haber " + verbpartsp[rand] + arraySodEsp;
                        eng5 = "we " + "should not have " + verbsparteng[rand] + arraySodEng;
                        eng52 = "we " + "shouldn't have " + verbsparteng[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenShouldPerfCont2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo debería haber estado " + verbconti[rand] + arraySodEsp;
                        eng1 = "I should have been " + verbscont[rand] + arraySodEng;

                        sp2 = "tú deberías haber estado " + verbconti[rand] + arraySodEsp;
                        eng2 = "you should have been " + verbscont[rand] + arraySodEng;

                        sp3 = "él debería haber estado " + verbconti[rand] + arraySodEsp;
                        eng3 = "he should have been " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella debería haber estado " + verbconti[rand] + arraySodEsp;
                        eng3she = "she should have been " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso debería haber estado " + verbconti[rand] + arraySodEsp;
                        sp3it = "it should have been " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos deberían haber estado " + verbconti[rand] + arraySodEsp;
                        eng4 = "they should have been " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros deberíamos haber estado " + verbconti[rand] + arraySodEsp;
                        eng5 = "we should have been " + verbscont[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo " + "no debería haber estado " + verbconti[rand] + arraySodEsp;
                        eng1 = "I " + "shouldn't have been " + verbscont[rand] + arraySodEng;

                        sp2 = "tú " + "no deberías haber estado " + verbconti[rand] + arraySodEsp;
                        eng2 = "you " + "shouldn't have been " + verbscont[rand] + arraySodEng;

                        sp3 = "él " + "no debería haber estado " + verbconti[rand] + arraySodEsp;
                        eng3 = "he " + "shouldn't have been " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella " + "no debería haber estado " + verbconti[rand] + arraySodEsp;
                        eng3she = "she " + "shouldn't have been " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso " + "no debería haber estado " + verbconti[rand] + arraySodEsp;
                        sp3it = "it " + "shouldn't have been " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos " + "no deberían haber estado " + verbconti[rand] + arraySodEsp;
                        eng4 = "they " + "shouldn't have been " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros " + "no deberíamos haber estado " + verbconti[rand] + arraySodEsp;
                        eng5 = "we " + "shouldn't have been " + verbscont[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023

    //Can
    public void GenCanSimp2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo puedo " + vsbc[rand] + arraySodEsp;
                        eng1 = "I can " + verbs[rand] + arraySodEng;

                        sp2 = "tú puedes " + vsbc[rand] + arraySodEsp;
                        eng2 = "you can " + verbs[rand] + arraySodEng;

                        sp3 = "él puede " + vsbc[rand] + arraySodEsp;
                        eng3 = "he can " + verbs[rand] + arraySodEng;

                        sp3ella = "ella puede " + vsbc[rand] + arraySodEsp;
                        eng3she = "she can " + verbs[rand] + arraySodEng;

                        sp3eso = "eso puede " + vsbc[rand] + arraySodEsp;
                        sp3it = "it can " + verbs[rand] + arraySodEng;

                        sp4 = "ellos pueden " + vsbc[rand] + arraySodEsp;
                        eng4 = "they can " + verbs[rand] + arraySodEng;

                        sp5 = "nosotros podemos " + vsbc[rand] + arraySodEsp;
                        eng5 = "we can " + verbs[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo " + "no puedo " + vsbc[rand] + arraySodEsp;
                        eng1 = "I " + "can't " + verbs[rand] + arraySodEng;

                        sp2 = "tú " + "no puedes " + vsbc[rand] + arraySodEsp;
                        eng2 = "you " + "can't " + verbs[rand] + arraySodEng;

                        sp3 = "él " + "no puede " + vsbc[rand] + arraySodEsp;
                        eng3 = "he " + "can't " + verbs[rand] + arraySodEng;

                        sp3ella = "ella " + "no puede " + vsbc[rand] + arraySodEsp;
                        eng3she = "she " + "can't " + verbs[rand] + arraySodEng;

                        sp3eso = "eso " + "no puede " + vsbc[rand] + arraySodEsp;
                        sp3it = "it " + "can't " + verbs[rand] + arraySodEng;

                        sp4 = "ellos " + "no pueden " + vsbc[rand] + arraySodEsp;
                        eng4 = "they " + "can't " + verbs[rand] + arraySodEng;

                        sp5 = "nosotros " + "no podemos " + vsbc[rand] + arraySodEsp;
                        eng5 = "we " + "can't " + verbs[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenCanCont2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo puedo estar " + verbconti[rand] + arraySodEsp;
                        eng1 = "I can be " + verbscont[rand] + arraySodEng;
                        eng12 = "I can be " + verbscont[rand] + arraySodEng;

                        sp2 = "tú puedes estar " + verbconti[rand] + arraySodEsp;
                        eng2 = "you can be " + verbscont[rand] + arraySodEng;
                        eng22 = "you can be " + verbscont[rand] + arraySodEng;

                        sp3 = "él puede estar " + verbconti[rand] + arraySodEsp;
                        eng3 = "he can be " + verbscont[rand] + arraySodEng;
                        eng32 = "he can be " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella puede " + verbconti[rand] + arraySodEsp;
                        eng3she = "she can be " + verbscont[rand] + arraySodEng;
                        eng3she2 = "she can be " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso puede " + verbconti[rand] + arraySodEsp;
                        sp3it = "it can be " + verbscont[rand] + arraySodEng;
                        sp3it2 = "it can be " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos pueden estar " + verbconti[rand] + arraySodEsp;
                        eng4 = "they can be " + verbscont[rand] + arraySodEng;
                        eng42 = "they can be " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros podemos " + verbconti[rand] + arraySodEsp;
                        eng5 = "we can be " + verbscont[rand] + arraySodEng;
                        eng52 = "we can be " + verbscont[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo " + "no puedo estar " + verbconti[rand] + arraySodEsp;
                        eng1 = "I " + "cannot be " + verbscont[rand] + arraySodEng;
                        eng12 = "I " + "can't be " + verbscont[rand] + arraySodEng;

                        sp2 = "tú " + "no puedes estar " + verbconti[rand] + arraySodEsp;
                        eng2 = "you " + "cannot be " + verbscont[rand] + arraySodEng;
                        eng22 = "you " + "can't be " + verbscont[rand] + arraySodEng;

                        sp3 = "él " + "no puede estar " + verbconti[rand] + arraySodEsp;
                        eng3 = "he " + "cannot be " + verbscont[rand] + arraySodEng;
                        eng32 = "he " + "can't be " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella " + "no puede estar " + verbconti[rand] + arraySodEsp;
                        eng3she = "she " + "cannot be " + verbscont[rand] + arraySodEng;
                        eng3she2 = "she " + "can't be " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso " + "no puede estar " + verbconti[rand] + arraySodEsp;
                        sp3it = "it " + "cannot be " + verbscont[rand] + arraySodEng;
                        sp3it2 = "it " + "can't be " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos " + "no pueden estar " + verbconti[rand] + arraySodEsp;
                        eng4 = "they " + "cannot be " + verbscont[rand] + arraySodEng;
                        eng42 = "they " + "can't be " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros " + "no podemos estar " + verbconti[rand] + arraySodEsp;
                        eng5 = "we " + "cannot be " + verbscont[rand] + arraySodEng;
                        eng52 = "we " + "can't be " + verbscont[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023

    //Must
    public void GenMustSimp2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo debo " + vsbc[rand] + arraySodEsp;
                        eng1 = "I must " + verbs[rand] + arraySodEng;

                        sp2 = "tú debés " + vsbc[rand] + arraySodEsp;
                        eng2 = "you must " + verbs[rand] + arraySodEng;

                        sp3 = "él debe " + vsbc[rand] + arraySodEsp;
                        eng3 = "he must " + verbs[rand] + arraySodEng;

                        sp3ella = "ella debe " + vsbc[rand] + arraySodEsp;
                        eng3she = "she must " + verbs[rand] + arraySodEng;

                        sp3eso = "eso debe " + vsbc[rand] + arraySodEsp;
                        sp3it = "it must " + verbs[rand] + arraySodEng;

                        sp4 = "ellos deben " + vsbc[rand] + arraySodEsp;
                        eng4 = "they must " + verbs[rand] + arraySodEng;

                        sp5 = "nosotros debemos " + vsbc[rand] + arraySodEsp;
                        eng5 = "we must " + verbs[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo " + "no debo " + vsbc[rand] + arraySodEsp;
                        eng1 = "I " + "mustn't " + verbs[rand] + arraySodEng;

                        sp2 = "tú " + "no debés " + vsbc[rand] + arraySodEsp;
                        eng2 = "you " + "mustn't " + verbs[rand] + arraySodEng;

                        sp3 = "él " + "no debe " + vsbc[rand] + arraySodEsp;
                        eng3 = "he " + "mustn't " + verbs[rand] + arraySodEng;

                        sp3ella = "ella " + "no debe " + vsbc[rand] + arraySodEsp;
                        eng3she = "she " + "mustn't " + verbs[rand] + arraySodEng;

                        sp3eso = "eso " + "no debe " + vsbc[rand] + arraySodEsp;
                        sp3it = "it " + "mustn't " + verbs[rand] + arraySodEng;

                        sp4 = "ellos " + "no deben " + vsbc[rand] + arraySodEsp;
                        eng4 = "they " + "mustn't " + verbs[rand] + arraySodEng;

                        sp5 = "nosotros " + "no debemos " + vsbc[rand] + arraySodEsp;
                        eng5 = "we " + "mustn't " + verbs[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenMustCont2() {
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo debo estar " + verbconti[rand] + arraySodEsp;
                        eng1 = "I must be " + verbscont[rand] + arraySodEng;
                        eng12 = "I must be " + verbscont[rand] + arraySodEng;

                        sp2 = "tú debés estar " + verbconti[rand] + arraySodEsp;
                        eng2 = "you must be " + verbscont[rand] + arraySodEng;
                        eng22 = "you must be " + verbscont[rand] + arraySodEng;

                        sp3 = "él debe estar " + verbconti[rand] + arraySodEsp;
                        eng3 = "he must be " + verbscont[rand] + arraySodEng;
                        eng32 = "he must be " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella debe estar " + verbconti[rand] + arraySodEsp;
                        eng3she = "she must be " + verbscont[rand] + arraySodEng;
                        eng3she2 = "she must be " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso debe estar " + verbconti[rand] + arraySodEsp;
                        sp3it = "it must be " + verbscont[rand] + arraySodEng;
                        sp3it2 = "it must be " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos deben estar " + verbconti[rand] + arraySodEsp;
                        eng4 = "they must be " + verbscont[rand] + arraySodEng;
                        eng42 = "they must be " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros debemos estar " + verbconti[rand] + arraySodEsp;
                        eng5 = "we must be " + verbscont[rand] + arraySodEng;
                        eng52 = "we must be " + verbscont[rand] + arraySodEng;

                        break;
                    case 1:
                        sp1 = "yo " + "no debo estar " + verbconti[rand] + arraySodEsp;
                        eng1 = "I " + "must not be " + verbscont[rand] + arraySodEng;
                        eng12 = "I " + "mustn't be " + verbscont[rand] + arraySodEng;

                        sp2 = "tú " + "no debés estar " + verbconti[rand] + arraySodEsp;
                        eng2 = "you " + "must not be " + verbscont[rand] + arraySodEng;
                        eng22 = "you " + "mustn't be " + verbscont[rand] + arraySodEng;

                        sp3 = "él " + "no debe estar " + verbconti[rand] + arraySodEsp;
                        eng3 = "he " + "must not be " + verbscont[rand] + arraySodEng;
                        eng32 = "he " + "mustn't be " + verbscont[rand] + arraySodEng;

                        sp3ella = "ella " + "no debe estar " + verbconti[rand] + arraySodEsp;
                        eng3she = "she " + "must not be " + verbscont[rand] + arraySodEng;
                        eng3she2 = "she " + "mustn't be " + verbscont[rand] + arraySodEng;

                        sp3eso = "eso " + "no debe estar " + verbconti[rand] + arraySodEsp;
                        sp3it = "it " + "must not be " + verbscont[rand] + arraySodEng;
                        sp3it2 = "it " + "mustn't be " + verbscont[rand] + arraySodEng;

                        sp4 = "ellos " + "no deben estar " + verbconti[rand] + arraySodEsp;
                        eng4 = "they " + "must not be " + verbscont[rand] + arraySodEng;
                        eng42 = "they " + "mustn't be " + verbscont[rand] + arraySodEng;

                        sp5 = "nosotros " + "no debemos estar " + verbconti[rand] + arraySodEsp;
                        eng5 = "we " + "must not be " + verbscont[rand] + arraySodEng;
                        eng52 = "we " + "mustn't be " + verbscont[rand] + arraySodEng;
                        break;
                }
            }
        }
    }//LR FEB 2023

    public void GenAbleTo2(){
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo " + "soy capaz de " + vsbc[rand] + arraySodEsp;
                        eng1 = "I am " + "able to " + verbs[rand] + arraySodEng;
                        eng12 = "I'm " + "able to " + verbs[rand] + arraySodEng;

                        sp2 = "tú " + "eres capaz de " + vsbc[rand] + arraySodEsp;
                        eng2 = "you are " + "able to " + verbs[rand] + arraySodEng;
                        eng22 = "you're " + "able to " + verbs[rand] + arraySodEng;

                        sp3 = "él " + "es capaz de " + vsbc[rand] + arraySodEsp;
                        eng3 = "he is " + "able to " + verbs[rand] + arraySodEng;
                        eng32 = "he's " + "able to " + verbs[rand] + arraySodEng;

                        sp3ella = "ella " + "es capaz de " + vsbc[rand] + arraySodEsp;
                        eng3she = "she is " + "able to " + verbs[rand] + arraySodEng;
                        eng3she2 = "she's " + "able to " + verbs[rand] + arraySodEng;

                        sp3eso = "eso " + "es capaz de " + vsbc[rand] + arraySodEsp;
                        sp3it = "it is " + "able to " + verbs[rand] + arraySodEng;
                        sp3it2 = "it's " + "able to " + verbs[rand] + arraySodEng;

                        sp4 = "ellos " + "son capaces de " + vsbc[rand] + arraySodEsp;
                        eng4 = "they are " + "able to " + verbs[rand] + arraySodEng;
                        eng42 = "they're " + "able to " + verbs[rand] + arraySodEng;

                        sp5 = "nosotros " + "somos capaces de " + vsbc[rand] + arraySodEsp;
                        eng5 = "we are " + "able to " + verbs[rand] + arraySodEng;
                        eng52 = "we're " + "able to " + verbs[rand] + arraySodEng;
                        break;
                    case 1:
                        sp1 = "yo no " + "soy capaz de " + vsbc[rand] + arraySodEsp;
                        eng1 = "I am not " + "able to " + verbs[rand] + arraySodEng;
                        eng12 = "I'm not " + "able to " + verbs[rand] + arraySodEng;

                        sp2 = "tú no " + "eres capaz de " + vsbc[rand] + arraySodEsp;
                        eng2 = "you are not " + "able to " + verbs[rand] + arraySodEng;
                        eng22 = "you're not " + "able to " + verbs[rand] + arraySodEng;

                        sp3 = "él no " + "es capaz de " + vsbc[rand] + arraySodEsp;
                        eng3 = "he is not " + "able to " + verbs[rand] + arraySodEng;
                        eng32 = "he's not " + "able to " + verbs[rand] + arraySodEng;

                        sp3ella = "ella no " + "es capaz de " + vsbc[rand] + arraySodEsp;
                        eng3she = "she is not " + "able to " + verbs[rand] + arraySodEng;
                        eng3she2 = "she's not " + "able to " + verbs[rand] + arraySodEng;

                        sp3eso = "eso no " + "es capaz de " + vsbc[rand] + arraySodEsp;
                        sp3it = "it is not " + "able to " + verbs[rand] + arraySodEng;
                        sp3it2 = "it's not " + "able to " + verbs[rand] + arraySodEng;

                        sp4 = "ellos no " + "son capaces de " + vsbc[rand] + arraySodEsp;
                        eng4 = "they are not " + "able to " + verbs[rand] + arraySodEng;
                        eng42 = "they're not " + "able to " + verbs[rand] + arraySodEng;

                        sp5 = "nosotros no " + "somos capaces de " + vsbc[rand] + arraySodEsp;
                        eng5 = "we are not " + "able to " + verbs[rand] + arraySodEng;
                        eng52 = "we're not " + "able to " + verbs[rand] + arraySodEng;
                        break;

                }
            }
        }
    }//PD FEB 2023
    
    //for to dificultad 2 SOlO SPECIAL
    public void forSubTo2() {
        int rand = (int) (Math.random() * verbs.length);
        Pasts pas = new Pasts();
        String temp = verbs[rand];
        int rn1 = (int) (Math.random() * 6);
        int rn2 = (int) (Math.random() * 5);
        int neg = (int) (Math.random() * 2);

        //subject in eng
        String ftsj[] = {
                "for me to ", "for you to ", "for him to ", "for her to ", "for it to ",
                "for them to ", "for us to "
        };

        //subject in spanish
        String ftsjs[] = {
                "para que yo ", "para que tú ", "para que él ", "para que ella ",
                "para que eso ", "para que ellos ", "para que nosotros "
        };

        //subject in eng negative
        String ftsjn[] = {
                "for me not to ", "for you not to ", "for him not to ", "for her not to ",
                "for it not to ", "for them not to ", "for us not to "
        };

        //subject in spanish negative
        String ftsjsn[] = {
                "para que yo no ", "para que tú no ", "para que él no ", "para que ella no ",
                "para que eso no ", "para que ellos no ", "para que nosotros no "
        };

        switch (temp) {
            case "report ":
                int rand1 = (int) (Math.random() * sorepe.length);
                //aqui van a ir todas las convinaciones de pronombre en presente simple, después en drive solo se agarra el string que se ocupe
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + sorepe[rand1];
                        eng1 = ftsj[0] + verbs[rand] + sorep[rand1];

                        sp2 = ftsjs[1] + v2s[rand] + sorepe[rand1];
                        eng2 = ftsj[1] + verbs[rand] + sorep[rand1];

                        sp3 = ftsjs[2] + v3s[rand] + sorepe[rand1];
                        eng3 = ftsj[2] + verbs[rand] + sorep[rand1];

                        sp3ella = ftsjs[3] + v3s[rand] + sorepe[rand1];
                        eng3she = ftsj[3] + verbs[rand] + sorep[rand1];

                        sp3eso = ftsjs[4] + v3s[rand] + sorepe[rand1];
                        sp3it = ftsj[4] + verbs[rand] + sorep[rand1];

                        sp4 = ftsjs[5] + v4s[rand] + sorepe[rand1];
                        eng4 = ftsj[5] + verbs[rand] + sorep[rand1];

                        sp5 = ftsjs[6] + v5s[rand] + sorepe[rand1];
                        eng5 = ftsj[6] + verbs[rand] + sorep[rand1];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + sorepe[rand1];
                        eng1 = ftsjn[0] + verbs[rand] + sorep[rand1];

                        sp2 = ftsjsn[1] + v2s[rand] + sorepe[rand1];
                        eng2 = ftsjn[1] + verbs[rand] + sorep[rand1];

                        sp3 = ftsjsn[2] + v3s[rand] + sorepe[rand1];
                        eng3 = ftsjn[2] + verbs[rand] + sorep[rand1];

                        sp3ella = ftsjsn[3] + v3s[rand] + sorepe[rand1];
                        eng3she = ftsjn[3] + verbs[rand] + sorep[rand1];

                        sp3eso = ftsjsn[4] + v3s[rand] + sorepe[rand1];
                        sp3it = ftsjn[4] + verbs[rand] + sorep[rand1];

                        sp4 = ftsjsn[5] + v4s[rand] + sorepe[rand1];
                        eng4 = ftsjn[5] + verbs[rand] + sorep[rand1];

                        sp5 = ftsjsn[6] + v5s[rand] + sorepe[rand1];
                        eng5 = ftsjn[6] + verbs[rand] + sorep[rand1];
                        break;
                }
                break;

            case "release ":
                int rand2 = (int) (Math.random() * sorelease.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + sosoltar[rand2];
                        eng1 = ftsj[0] + verbs[rand] + sorelease[rand2];

                        sp2 = ftsjs[1] + v2s[rand] + sosoltar[rand2];
                        eng2 = ftsj[1] + verbs[rand] + sorelease[rand2];

                        sp3 = ftsjs[2] + v3s[rand] + sosoltar[rand2];
                        eng3 = ftsj[2] + verbs[rand] + sorelease[rand2];

                        sp3ella = ftsjs[3] + v3s[rand] + sosoltar[rand2];
                        eng3she = ftsj[3] + verbs[rand] + sorelease[rand2];

                        sp3eso = ftsjs[4] + v3s[rand] + sosoltar[rand2];
                        sp3it = ftsj[4] + verbs[rand] + sorelease[rand2];

                        sp4 = ftsjs[5] + v4s[rand] + sosoltar[rand2];
                        eng4 = ftsj[5] + verbs[rand] + sorelease[rand2];

                        sp5 = ftsjs[6] + v5s[rand] + sosoltar[rand2];
                        eng5 = ftsj[6] + verbs[rand] + sorelease[rand2];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + sosoltar[rand2];
                        eng1 = ftsjn[0] + verbs[rand] + sorelease[rand2];

                        sp2 = ftsjsn[1] + v2s[rand] + sosoltar[rand2];
                        eng2 = ftsjn[1] + verbs[rand] + sorelease[rand2];

                        sp3 = ftsjsn[2] + v3s[rand] + sosoltar[rand2];
                        eng3 = ftsjn[2] + verbs[rand] + sorelease[rand2];

                        sp3ella = ftsjsn[3] + v3s[rand] + sosoltar[rand2];
                        eng3she = ftsjn[3] + verbs[rand] + sorelease[rand2];

                        sp3eso = ftsjsn[4] + v3s[rand] + sosoltar[rand2];
                        sp3it = ftsjn[4] + verbs[rand] + sorelease[rand2];

                        sp4 = ftsjsn[5] + v4s[rand] + sosoltar[rand2];
                        eng4 = ftsjn[5] + verbs[rand] + sorelease[rand2];

                        sp5 = ftsjsn[6] + v5s[rand] + sosoltar[rand2];
                        eng5 = ftsjn[6] + verbs[rand] + sorelease[rand2];
                        break;
                }
                break;

            case "mix ":
                int rand3 = (int) (Math.random() * somix.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + somesclar[rand3];
                        eng1 = ftsj[0] + verbs[rand] + somix[rand3];

                        sp2 = ftsjs[1] + v2s[rand] + somesclar[rand3];
                        eng2 = ftsj[1] + verbs[rand] + somix[rand3];

                        sp3 = ftsjs[2] + v3s[rand] + somesclar[rand3];
                        eng3 = ftsj[2] + verbs[rand] + somix[rand3];

                        sp3ella = ftsjs[3] + v3s[rand] + somesclar[rand3];
                        eng3she = ftsj[3] + verbs[rand] + somix[rand3];

                        sp3eso = ftsjs[4] + v3s[rand] + somesclar[rand3];
                        sp3it = ftsj[4] + verbs[rand] + somix[rand3];

                        sp4 = ftsjs[5] + v4s[rand] + somesclar[rand3];
                        eng4 = ftsj[5] + verbs[rand] + somix[rand3];

                        sp5 = ftsjs[6] + v5s[rand] + somesclar[rand3];
                        eng5 = ftsj[6] + verbs[rand] + somix[rand3];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + somesclar[rand3];
                        eng1 = ftsjn[0] + verbs[rand] + somix[rand3];

                        sp2 = ftsjsn[1] + v2s[rand] + somesclar[rand3];
                        eng2 = ftsjn[1] + verbs[rand] + somix[rand3];

                        sp3 = ftsjsn[2] + v3s[rand] + somesclar[rand3];
                        eng3 = ftsjn[2] + verbs[rand] + somix[rand3];

                        sp3ella = ftsjsn[3] + v3s[rand] + somesclar[rand3];
                        eng3she = ftsjn[3] + verbs[rand] + somix[rand3];

                        sp3eso = ftsjsn[4] + v3s[rand] + somesclar[rand3];
                        sp3it = ftsjn[4] + verbs[rand] + somix[rand3];

                        sp4 = ftsjsn[5] + v4s[rand] + somesclar[rand3];
                        eng4 = ftsjn[5] + verbs[rand] + somix[rand3];

                        sp5 = ftsjsn[6] + v5s[rand] + somesclar[rand3];
                        eng5 = ftsjn[6] + verbs[rand] + somix[rand3];
                        break;
                }
                break;

            case "press ":
                int rand4 = (int) (Math.random() * sopress.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + sopresionar[rand4];
                        eng1 = ftsj[0] + verbs[rand] + sopress[rand4];

                        sp2 = ftsjs[1] + v2s[rand] + sopresionar[rand4];
                        eng2 = ftsj[1] + verbs[rand] + sopress[rand4];

                        sp3 = ftsjs[2] + v3s[rand] + sopresionar[rand4];
                        eng3 = ftsj[2] + verbs[rand] + sopress[rand4];

                        sp3ella = ftsjs[3] + v3s[rand] + sopresionar[rand4];
                        eng3she = ftsj[3] + verbs[rand] + sopress[rand4];

                        sp3eso = ftsjs[4] + v3s[rand] + sopresionar[rand4];
                        sp3it = ftsj[4] + verbs[rand] + sopress[rand4];

                        sp4 = ftsjs[5] + v4s[rand] + sopresionar[rand4];
                        eng4 = ftsj[5] + verbs[rand] + sopress[rand4];

                        sp5 = ftsjs[6] + v5s[rand] + sopresionar[rand4];
                        eng5 = ftsj[6] + verbs[rand] + sopress[rand4];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + sopresionar[rand4];
                        eng1 = ftsjn[0] + verbs[rand] + sopress[rand4];

                        sp2 = ftsjsn[1] + v2s[rand] + sopresionar[rand4];
                        eng2 = ftsjn[1] + verbs[rand] + sopress[rand4];

                        sp3 = ftsjsn[2] + v3s[rand] + sopresionar[rand4];
                        eng3 = ftsjn[2] + verbs[rand] + sopress[rand4];

                        sp3ella = ftsjsn[3] + v3s[rand] + sopresionar[rand4];
                        eng3she = ftsjn[3] + verbs[rand] + sopress[rand4];

                        sp3eso = ftsjsn[4] + v3s[rand] + sopresionar[rand4];
                        sp3it = ftsjn[4] + verbs[rand] + sopress[rand4];

                        sp4 = ftsjsn[5] + v4s[rand] + sopresionar[rand4];
                        eng4 = ftsjn[5] + verbs[rand] + sopress[rand4];

                        sp5 = ftsjsn[6] + v5s[rand] + sopresionar[rand4];
                        eng5 = ftsjn[6] + verbs[rand] + sopress[rand4];
                        break;
                }
                break;

            case "finish ":
                int rand5 = (int) (Math.random() * sofinish.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + sofinalizar[rand5];
                        eng1 = ftsj[0] + verbs[rand] + sofinish[rand5];

                        sp2 = ftsjs[1] + v2s[rand] + sofinalizar[rand5];
                        eng2 = ftsj[1] + verbs[rand] + sofinish[rand5];

                        sp3 = ftsjs[2] + v3s[rand] + sofinalizar[rand5];
                        eng3 = ftsj[2] + verbs[rand] + sofinish[rand5];

                        sp3ella = ftsjs[3] + v3s[rand] + sofinalizar[rand5];
                        eng3she = ftsj[3] + verbs[rand] + sofinish[rand5];

                        sp3eso = ftsjs[4] + v3s[rand] + sofinalizar[rand5];
                        sp3it = ftsj[4] + verbs[rand] + sofinish[rand5];

                        sp4 = ftsjs[5] + v4s[rand] + sofinalizar[rand5];
                        eng4 = ftsj[5] + verbs[rand] + sofinish[rand5];

                        sp5 = ftsjs[6] + v5s[rand] + sofinalizar[rand5];
                        eng5 = ftsj[6] + verbs[rand] + sofinish[rand5];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + sofinalizar[rand5];
                        eng1 = ftsjn[0] + verbs[rand] + sofinish[rand5];

                        sp2 = ftsjsn[1] + v2s[rand] + sofinalizar[rand5];
                        eng2 = ftsjn[1] + verbs[rand] + sofinish[rand5];

                        sp3 = ftsjsn[2] + v3s[rand] + sofinalizar[rand5];
                        eng3 = ftsjn[2] + verbs[rand] + sofinish[rand5];

                        sp3ella = ftsjsn[3] + v3s[rand] + sofinalizar[rand5];
                        eng3she = ftsjn[3] + verbs[rand] + sofinish[rand5];

                        sp3eso = ftsjsn[4] + v3s[rand] + sofinalizar[rand5];
                        sp3it = ftsjn[4] + verbs[rand] + sofinish[rand5];

                        sp4 = ftsjsn[5] + v4s[rand] + sofinalizar[rand5];
                        eng4 = ftsjn[5] + verbs[rand] + sofinish[rand5];

                        sp5 = ftsjsn[6] + v5s[rand] + sofinalizar[rand5];
                        eng5 = ftsjn[6] + verbs[rand] + sofinish[rand5];
                        break;
                }
                break;

            case "read ":
                int rand6 = (int) (Math.random() * soleer.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + soleer[rand6];
                        eng1 = ftsj[0] + verbs[rand] + soread[rand6];

                        sp2 = ftsjs[1] + v2s[rand] + soleer[rand6];
                        eng2 = ftsj[1] + verbs[rand] + soread[rand6];

                        sp3 = ftsjs[2] + v3s[rand] + soleer[rand6];
                        eng3 = ftsj[2] + verbs[rand] + soread[rand6];

                        sp3ella = ftsjs[3] + v3s[rand] + soleer[rand6];
                        eng3she = ftsj[3] + verbs[rand] + soread[rand6];

                        sp3eso = ftsjs[4] + v3s[rand] + soleer[rand6];
                        sp3it = ftsj[4] + verbs[rand] + soread[rand6];

                        sp4 = ftsjs[5] + v4s[rand] + soleer[rand6];
                        eng4 = ftsj[5] + verbs[rand] + soread[rand6];

                        sp5 = ftsjs[6] + v5s[rand] + soleer[rand6];
                        eng5 = ftsj[6] + verbs[rand] + soread[rand6];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + soleer[rand6];
                        eng1 = ftsjn[0] + verbs[rand] + soread[rand6];

                        sp2 = ftsjsn[1] + v2s[rand] + soleer[rand6];
                        eng2 = ftsjn[1] + verbs[rand] + soread[rand6];

                        sp3 = ftsjsn[2] + v3s[rand] + soleer[rand6];
                        eng3 = ftsjn[2] + verbs[rand] + soread[rand6];

                        sp3ella = ftsjsn[3] + v3s[rand] + soleer[rand6];
                        eng3she = ftsjn[3] + verbs[rand] + soread[rand6];

                        sp3eso = ftsjsn[4] + v3s[rand] + soleer[rand6];
                        sp3it = ftsjn[4] + verbs[rand] + soread[rand6];

                        sp4 = ftsjsn[5] + v4s[rand] + soleer[rand6];
                        eng4 = ftsjn[5] + verbs[rand] + soread[rand6];

                        sp5 = ftsjsn[6] + v5s[rand] + soleer[rand6];
                        eng5 = ftsjn[6] + verbs[rand] + soread[rand6];
                        break;
                }
                break;

            case "increase ":
                int rand7 = (int) (Math.random() * soincrease.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + soincrem[rand7];
                        eng1 = ftsj[0] + verbs[rand] + soincrease[rand7];

                        sp2 = ftsjs[1] + v2s[rand] + soincrem[rand7];
                        eng2 = ftsj[1] + verbs[rand] + soincrease[rand7];

                        sp3 = ftsjs[2] + v3s[rand] + soincrem[rand7];
                        eng3 = ftsj[2] + verbs[rand] + soincrease[rand7];

                        sp3ella = ftsjs[3] + v3s[rand] + soincrem[rand7];
                        eng3she = ftsj[3] + verbs[rand] + soincrease[rand7];

                        sp3eso = ftsjs[4] + v3s[rand] + soincrem[rand7];
                        sp3it = ftsj[4] + verbs[rand] + soincrease[rand7];

                        sp4 = ftsjs[5] + v4s[rand] + soincrem[rand7];
                        eng4 = ftsj[5] + verbs[rand] + soincrease[rand7];

                        sp5 = ftsjs[6] + v5s[rand] + soincrem[rand7];
                        eng5 = ftsj[6] + verbs[rand] + soincrease[rand7];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + soincrem[rand7];
                        eng1 = ftsjn[0] + verbs[rand] + soincrease[rand7];

                        sp2 = ftsjsn[1] + v2s[rand] + soincrem[rand7];
                        eng2 = ftsjn[1] + verbs[rand] + soincrease[rand7];

                        sp3 = ftsjsn[2] + v3s[rand] + soincrem[rand7];
                        eng3 = ftsjn[2] + verbs[rand] + soincrease[rand7];

                        sp3ella = ftsjsn[3] + v3s[rand] + soincrem[rand7];
                        eng3she = ftsjn[3] + verbs[rand] + soincrease[rand7];

                        sp3eso = ftsjsn[4] + v3s[rand] + soincrem[rand7];
                        sp3it = ftsjn[4] + verbs[rand] + soincrease[rand7];

                        sp4 = ftsjsn[5] + v4s[rand] + soincrem[rand7];
                        eng4 = ftsjn[5] + verbs[rand] + soincrease[rand7];

                        sp5 = ftsjsn[6] + v5s[rand] + soincrem[rand7];
                        eng5 = ftsjn[6] + verbs[rand] + soincrease[rand7];
                        break;
                }
                break;

            case "play ":
                int rand8 = (int) (Math.random() * soplay.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + sotocar[rand8];
                        eng1 = ftsj[0] + verbs[rand] + soplay[rand8];

                        sp2 = ftsjs[1] + v2s[rand] + sotocar[rand8];
                        eng2 = ftsj[1] + verbs[rand] + soplay[rand8];

                        sp3 = ftsjs[2] + v3s[rand] + sotocar[rand8];
                        eng3 = ftsj[2] + verbs[rand] + soplay[rand8];

                        sp3ella = ftsjs[3] + v3s[rand] + sotocar[rand8];
                        eng3she = ftsj[3] + verbs[rand] + soplay[rand8];

                        sp3eso = ftsjs[4] + v3s[rand] + sotocar[rand8];
                        sp3it = ftsj[4] + verbs[rand] + soplay[rand8];

                        sp4 = ftsjs[5] + v4s[rand] + sotocar[rand8];
                        eng4 = ftsj[5] + verbs[rand] + soplay[rand8];

                        sp5 = ftsjs[6] + v5s[rand] + sotocar[rand8];
                        eng5 = ftsj[6] + verbs[rand] + soplay[rand8];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + sotocar[rand8];
                        eng1 = ftsjn[0] + verbs[rand] + soplay[rand8];

                        sp2 = ftsjsn[1] + v2s[rand] + sotocar[rand8];
                        eng2 = ftsjn[1] + verbs[rand] + soplay[rand8];

                        sp3 = ftsjsn[2] + v3s[rand] + sotocar[rand8];
                        eng3 = ftsjn[2] + verbs[rand] + soplay[rand8];

                        sp3ella = ftsjsn[3] + v3s[rand] + sotocar[rand8];
                        eng3she = ftsjn[3] + verbs[rand] + soplay[rand8];

                        sp3eso = ftsjsn[4] + v3s[rand] + sotocar[rand8];
                        sp3it = ftsjn[4] + verbs[rand] + soplay[rand8];

                        sp4 = ftsjsn[5] + v4s[rand] + sotocar[rand8];
                        eng4 = ftsjn[5] + verbs[rand] + soplay[rand8];

                        sp5 = ftsjsn[6] + v5s[rand] + sotocar[rand8];
                        eng5 = ftsjn[6] + verbs[rand] + soplay[rand8];
                        break;
                }
                break;

            case "feel ":
                int rand9 = (int) (Math.random() * sofeel.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + sosentir[rand9];
                        eng1 = ftsj[0] + verbs[rand] + sofeel[rand9];

                        sp2 = ftsjs[1] + v2s[rand] + sosentir[rand9];
                        eng2 = ftsj[1] + verbs[rand] + sofeel[rand9];

                        sp3 = ftsjs[2] + v3s[rand] + sosentir[rand9];
                        eng3 = ftsj[2] + verbs[rand] + sofeel[rand9];

                        sp3ella = ftsjs[3] + v3s[rand] + sosentir[rand9];
                        eng3she = ftsj[3] + verbs[rand] + sofeel[rand9];

                        sp3eso = ftsjs[4] + v3s[rand] + sosentir[rand9];
                        sp3it = ftsj[4] + verbs[rand] + sofeel[rand9];

                        sp4 = ftsjs[5] + v4s[rand] + sosentir[rand9];
                        eng4 = ftsj[5] + verbs[rand] + sofeel[rand9];

                        sp5 = ftsjs[6] + v5s[rand] + sosentir[rand9];
                        eng5 = ftsj[6] + verbs[rand] + sofeel[rand9];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + sosentir[rand9];
                        eng1 = ftsjn[0] + verbs[rand] + sofeel[rand9];

                        sp2 = ftsjsn[1] + v2s[rand] + sosentir[rand9];
                        eng2 = ftsjn[1] + verbs[rand] + sofeel[rand9];

                        sp3 = ftsjsn[2] + v3s[rand] + sosentir[rand9];
                        eng3 = ftsjn[2] + verbs[rand] + sofeel[rand9];

                        sp3ella = ftsjsn[3] + v3s[rand] + sosentir[rand9];
                        eng3she = ftsjn[3] + verbs[rand] + sofeel[rand9];

                        sp3eso = ftsjsn[4] + v3s[rand] + sosentir[rand9];
                        sp3it = ftsjn[4] + verbs[rand] + sofeel[rand9];

                        sp4 = ftsjsn[5] + v4s[rand] + sosentir[rand9];
                        eng4 = ftsjn[5] + verbs[rand] + sofeel[rand9];

                        sp5 = ftsjsn[6] + v5s[rand] + sosentir[rand9];
                        eng5 = ftsjn[6] + verbs[rand] + sofeel[rand9];
                        break;
                }
                break;

            case "turn ":
                int rand10 = (int) (Math.random() * soturn.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + sovoltear[rand10];
                        eng1 = ftsj[0] + verbs[rand] + soturn[rand10];

                        sp2 = ftsjs[1] + v2s[rand] + sovoltear[rand10];
                        eng2 = ftsj[1] + verbs[rand] + soturn[rand10];

                        sp3 = ftsjs[2] + v3s[rand] + sovoltear[rand10];
                        eng3 = ftsj[2] + verbs[rand] + soturn[rand10];

                        sp3ella = ftsjs[3] + v3s[rand] + sovoltear[rand10];
                        eng3she = ftsj[3] + verbs[rand] + soturn[rand10];

                        sp3eso = ftsjs[4] + v3s[rand] + sovoltear[rand10];
                        sp3it = ftsj[4] + verbs[rand] + soturn[rand10];

                        sp4 = ftsjs[5] + v4s[rand] + sovoltear[rand10];
                        eng4 = ftsj[5] + verbs[rand] + soturn[rand10];

                        sp5 = ftsjs[6] + v5s[rand] + sovoltear[rand10];
                        eng5 = ftsj[6] + verbs[rand] + soturn[rand10];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + sovoltear[rand10];
                        eng1 = ftsjn[0] + verbs[rand] + soturn[rand10];

                        sp2 = ftsjsn[1] + v2s[rand] + sovoltear[rand10];
                        eng2 = ftsjn[1] + verbs[rand] + soturn[rand10];

                        sp3 = ftsjsn[2] + v3s[rand] + sovoltear[rand10];
                        eng3 = ftsjn[2] + verbs[rand] + soturn[rand10];

                        sp3ella = ftsjsn[3] + v3s[rand] + sovoltear[rand10];
                        eng3she = ftsjn[3] + verbs[rand] + soturn[rand10];

                        sp3eso = ftsjsn[4] + v3s[rand] + sovoltear[rand10];
                        sp3it = ftsjn[4] + verbs[rand] + soturn[rand10];

                        sp4 = ftsjsn[5] + v4s[rand] + sovoltear[rand10];
                        eng4 = ftsjn[5] + verbs[rand] + soturn[rand10];

                        sp5 = ftsjsn[6] + v5s[rand] + sovoltear[rand10];
                        eng5 = ftsjn[6] + verbs[rand] + soturn[rand10];
                        break;
                }
                break;

            case "say ":
                int rand11 = (int) (Math.random() * sosay.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + sodecir[rand11];
                        eng1 = ftsj[0] + verbs[rand] + sosay[rand11];

                        sp2 = ftsjs[1] + v2s[rand] + sodecir[rand11];
                        eng2 = ftsj[1] + verbs[rand] + sosay[rand11];

                        sp3 = ftsjs[2] + v3s[rand] + sodecir[rand11];
                        eng3 = ftsj[2] + verbs[rand] + sosay[rand11];

                        sp3ella = ftsjs[3] + v3s[rand] + sodecir[rand11];
                        eng3she = ftsj[3] + verbs[rand] + sosay[rand11];

                        sp3eso = ftsjs[4] + v3s[rand] + sodecir[rand11];
                        sp3it = ftsj[4] + verbs[rand] + sosay[rand11];

                        sp4 = ftsjs[5] + v4s[rand] + sodecir[rand11];
                        eng4 = ftsj[5] + verbs[rand] + sosay[rand11];

                        sp5 = ftsjs[6] + v5s[rand] + sodecir[rand11];
                        eng5 = ftsj[6] + verbs[rand] + sosay[rand11];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + sodecir[rand11];
                        eng1 = ftsjn[0] + verbs[rand] + sosay[rand11];

                        sp2 = ftsjsn[1] + v2s[rand] + sodecir[rand11];
                        eng2 = ftsjn[1] + verbs[rand] + sosay[rand11];

                        sp3 = ftsjsn[2] + v3s[rand] + sodecir[rand11];
                        eng3 = ftsjn[2] + verbs[rand] + sosay[rand11];

                        sp3ella = ftsjsn[3] + v3s[rand] + sodecir[rand11];
                        eng3she = ftsjn[3] + verbs[rand] + sosay[rand11];

                        sp3eso = ftsjsn[4] + v3s[rand] + sodecir[rand11];
                        sp3it = ftsjn[4] + verbs[rand] + sosay[rand11];

                        sp4 = ftsjsn[5] + v4s[rand] + sodecir[rand11];
                        eng4 = ftsjn[5] + verbs[rand] + sosay[rand11];

                        sp5 = ftsjsn[6] + v5s[rand] + sodecir[rand11];
                        eng5 = ftsjn[6] + verbs[rand] + sosay[rand11];
                        break;
                }
                break;

            case "spend ":
                int rand12 = (int) (Math.random() * sospend.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + sogastar[rand12];
                        eng1 = ftsj[0] + verbs[rand] + sospend[rand12];

                        sp2 = ftsjs[1] + v2s[rand] + sogastar[rand12];
                        eng2 = ftsj[1] + verbs[rand] + sospend[rand12];

                        sp3 = ftsjs[2] + v3s[rand] + sogastar[rand12];
                        eng3 = ftsj[2] + verbs[rand] + sospend[rand12];

                        sp3ella = ftsjs[3] + v3s[rand] + sogastar[rand12];
                        eng3she = ftsj[3] + verbs[rand] + sospend[rand12];

                        sp3eso = ftsjs[4] + v3s[rand] + sogastar[rand12];
                        sp3it = ftsj[4] + verbs[rand] + sospend[rand12];

                        sp4 = ftsjs[5] + v4s[rand] + sogastar[rand12];
                        eng4 = ftsj[5] + verbs[rand] + sospend[rand12];

                        sp5 = ftsjs[6] + v5s[rand] + sogastar[rand12];
                        eng5 = ftsj[6] + verbs[rand] + sospend[rand12];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + sogastar[rand12];
                        eng1 = ftsjn[0] + verbs[rand] + sospend[rand12];

                        sp2 = ftsjsn[1] + v2s[rand] + sogastar[rand12];
                        eng2 = ftsjn[1] + verbs[rand] + sospend[rand12];

                        sp3 = ftsjsn[2] + v3s[rand] + sogastar[rand12];
                        eng3 = ftsjn[2] + verbs[rand] + sospend[rand12];

                        sp3ella = ftsjsn[3] + v3s[rand] + sogastar[rand12];
                        eng3she = ftsjn[3] + verbs[rand] + sospend[rand12];

                        sp3eso = ftsjsn[4] + v3s[rand] + sogastar[rand12];
                        sp3it = ftsjn[4] + verbs[rand] + sospend[rand12];

                        sp4 = ftsjsn[5] + v4s[rand] + sogastar[rand12];
                        eng4 = ftsjn[5] + verbs[rand] + sospend[rand12];

                        sp5 = ftsjsn[6] + v5s[rand] + sogastar[rand12];
                        eng5 = ftsjn[6] + verbs[rand] + sospend[rand12];
                        break;
                }
                break;

            case "pay ":
                int rand13 = (int) (Math.random() * sopay.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + sopagar[rand13];
                        eng1 = ftsj[0] + verbs[rand] + sopay[rand13];

                        sp2 = ftsjs[1] + v2s[rand] + sopagar[rand13];
                        eng2 = ftsj[1] + verbs[rand] + sopay[rand13];

                        sp3 = ftsjs[2] + v3s[rand] + sopagar[rand13];
                        eng3 = ftsj[2] + verbs[rand] + sopay[rand13];

                        sp3ella = ftsjs[3] + v3s[rand] + sopagar[rand13];
                        eng3she = ftsj[3] + verbs[rand] + sopay[rand13];

                        sp3eso = ftsjs[4] + v3s[rand] + sopagar[rand13];
                        sp3it = ftsj[4] + verbs[rand] + sopay[rand13];

                        sp4 = ftsjs[5] + v4s[rand] + sopagar[rand13];
                        eng4 = ftsj[5] + verbs[rand] + sopay[rand13];

                        sp5 = ftsjs[6] + v5s[rand] + sopagar[rand13];
                        eng5 = ftsj[6] + verbs[rand] + sopay[rand13];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + sopagar[rand13];
                        eng1 = ftsjn[0] + verbs[rand] + sopay[rand13];

                        sp2 = ftsjsn[1] + v2s[rand] + sopagar[rand13];
                        eng2 = ftsjn[1] + verbs[rand] + sopay[rand13];

                        sp3 = ftsjsn[2] + v3s[rand] + sopagar[rand13];
                        eng3 = ftsjn[2] + verbs[rand] + sopay[rand13];

                        sp3ella = ftsjsn[3] + v3s[rand] + sopagar[rand13];
                        eng3she = ftsjn[3] + verbs[rand] + sopay[rand13];

                        sp3eso = ftsjsn[4] + v3s[rand] + sopagar[rand13];
                        sp3it = ftsjn[4] + verbs[rand] + sopay[rand13];

                        sp4 = ftsjsn[5] + v4s[rand] + sopagar[rand13];
                        eng4 = ftsjn[5] + verbs[rand] + sopay[rand13];

                        sp5 = ftsjsn[6] + v5s[rand] + sopagar[rand13];
                        eng5 = ftsjn[6] + verbs[rand] + sopay[rand13];
                        break;
                }
                break;

            case "try ":
                int rand14 = (int) (Math.random() * sotry.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + sointentar[rand14];
                        eng1 = ftsj[0] + verbs[rand] + sotry[rand14];

                        sp2 = ftsjs[1] + v2s[rand] + sointentar[rand14];
                        eng2 = ftsj[1] + verbs[rand] + sotry[rand14];

                        sp3 = ftsjs[2] + v3s[rand] + sointentar[rand14];
                        eng3 = ftsj[2] + verbs[rand] + sotry[rand14];

                        sp3ella = ftsjs[3] + v3s[rand] + sointentar[rand14];
                        eng3she = ftsj[3] + verbs[rand] + sotry[rand14];

                        sp3eso = ftsjs[4] + v3s[rand] + sointentar[rand14];
                        sp3it = ftsj[4] + verbs[rand] + sotry[rand14];

                        sp4 = ftsjs[5] + v4s[rand] + sointentar[rand14];
                        eng4 = ftsj[5] + verbs[rand] + sotry[rand14];

                        sp5 = ftsjs[6] + v5s[rand] + sointentar[rand14];
                        eng5 = ftsj[6] + verbs[rand] + sotry[rand14];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + sointentar[rand14];
                        eng1 = ftsjn[0] + verbs[rand] + sotry[rand14];

                        sp2 = ftsjsn[1] + v2s[rand] + sointentar[rand14];
                        eng2 = ftsjn[1] + verbs[rand] + sotry[rand14];

                        sp3 = ftsjsn[2] + v3s[rand] + sointentar[rand14];
                        eng3 = ftsjn[2] + verbs[rand] + sotry[rand14];

                        sp3ella = ftsjsn[3] + v3s[rand] + sointentar[rand14];
                        eng3she = ftsjn[3] + verbs[rand] + sotry[rand14];

                        sp3eso = ftsjsn[4] + v3s[rand] + sointentar[rand14];
                        sp3it = ftsjn[4] + verbs[rand] + sotry[rand14];

                        sp4 = ftsjsn[5] + v4s[rand] + sointentar[rand14];
                        eng4 = ftsjn[5] + verbs[rand] + sotry[rand14];

                        sp5 = ftsjsn[6] + v5s[rand] + sointentar[rand14];
                        eng5 = ftsjn[6] + verbs[rand] + sotry[rand14];
                        break;
                }
                break;

            case "cook ":
                int rand15 = (int) (Math.random() * socook.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + sococinar[rand15];
                        eng1 = ftsj[0] + verbs[rand] + socook[rand15];

                        sp2 = ftsjs[1] + v2s[rand] + sococinar[rand15];
                        eng2 = ftsj[1] + verbs[rand] + socook[rand15];

                        sp3 = ftsjs[2] + v3s[rand] + sococinar[rand15];
                        eng3 = ftsj[2] + verbs[rand] + socook[rand15];

                        sp3ella = ftsjs[3] + v3s[rand] + sococinar[rand15];
                        eng3she = ftsj[3] + verbs[rand] + socook[rand15];

                        sp3eso = ftsjs[4] + v3s[rand] + sococinar[rand15];
                        sp3it = ftsj[4] + verbs[rand] + socook[rand15];

                        sp4 = ftsjs[5] + v4s[rand] + sococinar[rand15];
                        eng4 = ftsj[5] + verbs[rand] + socook[rand15];

                        sp5 = ftsjs[6] + v5s[rand] + sococinar[rand15];
                        eng5 = ftsj[6] + verbs[rand] + socook[rand15];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + sococinar[rand15];
                        eng1 = ftsjn[0] + verbs[rand] + socook[rand15];

                        sp2 = ftsjsn[1] + v2s[rand] + sococinar[rand15];
                        eng2 = ftsjn[1] + verbs[rand] + socook[rand15];

                        sp3 = ftsjsn[2] + v3s[rand] + sococinar[rand15];
                        eng3 = ftsjn[2] + verbs[rand] + socook[rand15];

                        sp3ella = ftsjsn[3] + v3s[rand] + sococinar[rand15];
                        eng3she = ftsjn[3] + verbs[rand] + socook[rand15];

                        sp3eso = ftsjsn[4] + v3s[rand] + sococinar[rand15];
                        sp3it = ftsjn[4] + verbs[rand] + socook[rand15];

                        sp4 = ftsjsn[5] + v4s[rand] + sococinar[rand15];
                        eng4 = ftsjn[5] + verbs[rand] + socook[rand15];

                        sp5 = ftsjsn[6] + v5s[rand] + sococinar[rand15];
                        eng5 = ftsjn[6] + verbs[rand] + socook[rand15];
                        break;
                }
                break;

            case "drive ":
                int rand16 = (int) (Math.random() * sodrive.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + soconducir[rand16];
                        eng1 = ftsj[0] + verbs[rand] + sodrive[rand16];

                        sp2 = ftsjs[1] + v2s[rand] + soconducir[rand16];
                        eng2 = ftsj[1] + verbs[rand] + sodrive[rand16];

                        sp3 = ftsjs[2] + v3s[rand] + soconducir[rand16];
                        eng3 = ftsj[2] + verbs[rand] + sodrive[rand16];

                        sp3ella = ftsjs[3] + v3s[rand] + soconducir[rand16];
                        eng3she = ftsj[3] + verbs[rand] + sodrive[rand16];

                        sp3eso = ftsjs[4] + v3s[rand] + soconducir[rand16];
                        sp3it = ftsj[4] + verbs[rand] + sodrive[rand16];

                        sp4 = ftsjs[5] + v4s[rand] + soconducir[rand16];
                        eng4 = ftsj[5] + verbs[rand] + sodrive[rand16];

                        sp5 = ftsjs[6] + v5s[rand] + soconducir[rand16];
                        eng5 = ftsj[6] + verbs[rand] + sodrive[rand16];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + soconducir[rand16];
                        eng1 = ftsjn[0] + verbs[rand] + sodrive[rand16];

                        sp2 = ftsjsn[1] + v2s[rand] + soconducir[rand16];
                        eng2 = ftsjn[1] + verbs[rand] + sodrive[rand16];

                        sp3 = ftsjsn[2] + v3s[rand] + soconducir[rand16];
                        eng3 = ftsjn[2] + verbs[rand] + sodrive[rand16];

                        sp3ella = ftsjsn[3] + v3s[rand] + soconducir[rand16];
                        eng3she = ftsjn[3] + verbs[rand] + sodrive[rand16];

                        sp3eso = ftsjsn[4] + v3s[rand] + soconducir[rand16];
                        sp3it = ftsjn[4] + verbs[rand] + sodrive[rand16];

                        sp4 = ftsjsn[5] + v4s[rand] + soconducir[rand16];
                        eng4 = ftsjn[5] + verbs[rand] + sodrive[rand16];

                        sp5 = ftsjsn[6] + v5s[rand] + soconducir[rand16];
                        eng5 = ftsjn[6] + verbs[rand] + sodrive[rand16];
                        break;
                }
                break;

            case "gain ":
                int rand17 = (int) (Math.random() * sogain.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + sogain1[rand17];
                        eng1 = ftsj[0] + verbs[rand] + sogain[rand17];

                        sp2 = ftsjs[1] + v2s[rand] + sogain1[rand17];
                        eng2 = ftsj[1] + verbs[rand] + sogain[rand17];

                        sp3 = ftsjs[2] + v3s[rand] + sogain1[rand17];
                        eng3 = ftsj[2] + verbs[rand] + sogain[rand17];

                        sp3ella = ftsjs[3] + v3s[rand] + sogain1[rand17];
                        eng3she = ftsj[3] + verbs[rand] + sogain[rand17];

                        sp3eso = ftsjs[4] + v3s[rand] + sogain1[rand17];
                        sp3it = ftsj[4] + verbs[rand] + sogain[rand17];

                        sp4 = ftsjs[5] + v4s[rand] + sogain1[rand17];
                        eng4 = ftsj[5] + verbs[rand] + sogain[rand17];

                        sp5 = ftsjs[6] + v5s[rand] + sogain1[rand17];
                        eng5 = ftsj[6] + verbs[rand] + sogain[rand17];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + sogain1[rand17];
                        eng1 = ftsjn[0] + verbs[rand] + sogain[rand17];

                        sp2 = ftsjsn[1] + v2s[rand] + sogain1[rand17];
                        eng2 = ftsjn[1] + verbs[rand] + sogain[rand17];

                        sp3 = ftsjsn[2] + v3s[rand] + sogain1[rand17];
                        eng3 = ftsjn[2] + verbs[rand] + sogain[rand17];

                        sp3ella = ftsjsn[3] + v3s[rand] + sogain1[rand17];
                        eng3she = ftsjn[3] + verbs[rand] + sogain[rand17];

                        sp3eso = ftsjsn[4] + v3s[rand] + sogain1[rand17];
                        sp3it = ftsjn[4] + verbs[rand] + sogain[rand17];

                        sp4 = ftsjsn[5] + v4s[rand] + sogain1[rand17];
                        eng4 = ftsjn[5] + verbs[rand] + sogain[rand17];

                        sp5 = ftsjsn[6] + v5s[rand] + sogain1[rand17];
                        eng5 = ftsjn[6] + verbs[rand] + sogain[rand17];
                        break;
                }
                break;

            case "call ":
                int rand18 = (int) (Math.random() * socall.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + sollamar[rand18];
                        eng1 = ftsj[0] + verbs[rand] + socall[rand18];

                        sp2 = ftsjs[1] + v2s[rand] + sollamar[rand18];
                        eng2 = ftsj[1] + verbs[rand] + socall[rand18];

                        sp3 = ftsjs[2] + v3s[rand] + sollamar[rand18];
                        eng3 = ftsj[2] + verbs[rand] + socall[rand18];

                        sp3ella = ftsjs[3] + v3s[rand] + sollamar[rand18];
                        eng3she = ftsj[3] + verbs[rand] + socall[rand18];

                        sp3eso = ftsjs[4] + v3s[rand] + sollamar[rand18];
                        sp3it = ftsj[4] + verbs[rand] + socall[rand18];

                        sp4 = ftsjs[5] + v4s[rand] + sollamar[rand18];
                        eng4 = ftsj[5] + verbs[rand] + socall[rand18];

                        sp5 = ftsjs[6] + v5s[rand] + sollamar[rand18];
                        eng5 = ftsj[6] + verbs[rand] + socall[rand18];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + sollamar[rand18];
                        eng1 = ftsjn[0] + verbs[rand] + socall[rand18];

                        sp2 = ftsjsn[1] + v2s[rand] + sollamar[rand18];
                        eng2 = ftsjn[1] + verbs[rand] + socall[rand18];

                        sp3 = ftsjsn[2] + v3s[rand] + sollamar[rand18];
                        eng3 = ftsjn[2] + verbs[rand] + socall[rand18];

                        sp3ella = ftsjsn[3] + v3s[rand] + sollamar[rand18];
                        eng3she = ftsjn[3] + verbs[rand] + socall[rand18];

                        sp3eso = ftsjsn[4] + v3s[rand] + sollamar[rand18];
                        sp3it = ftsjn[4] + verbs[rand] + socall[rand18];

                        sp4 = ftsjsn[5] + v4s[rand] + sollamar[rand18];
                        eng4 = ftsjn[5] + verbs[rand] + socall[rand18];

                        sp5 = ftsjsn[6] + v5s[rand] + sollamar[rand18];
                        eng5 = ftsjn[6] + verbs[rand] + socall[rand18];
                        break;
                }
                break;

            case "deal ":
                int rand19 = (int) (Math.random() * sodeal.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + sorepartir[rand19];
                        eng1 = ftsj[0] + verbs[rand] + sodeal[rand19];

                        sp2 = ftsjs[1] + v2s[rand] + sorepartir[rand19];
                        eng2 = ftsj[1] + verbs[rand] + sodeal[rand19];

                        sp3 = ftsjs[2] + v3s[rand] + sorepartir[rand19];
                        eng3 = ftsj[2] + verbs[rand] + sodeal[rand19];

                        sp3ella = ftsjs[3] + v3s[rand] + sorepartir[rand19];
                        eng3she = ftsj[3] + verbs[rand] + sodeal[rand19];

                        sp3eso = ftsjs[4] + v3s[rand] + sorepartir[rand19];
                        sp3it = ftsj[4] + verbs[rand] + sodeal[rand19];

                        sp4 = ftsjs[5] + v4s[rand] + sorepartir[rand19];
                        eng4 = ftsj[5] + verbs[rand] + sodeal[rand19];

                        sp5 = ftsjs[6] + v5s[rand] + sorepartir[rand19];
                        eng5 = ftsj[6] + verbs[rand] + sodeal[rand19];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + sorepartir[rand19];
                        eng1 = ftsjn[0] + verbs[rand] + sodeal[rand19];

                        sp2 = ftsjsn[1] + v2s[rand] + sorepartir[rand19];
                        eng2 = ftsjn[1] + verbs[rand] + sodeal[rand19];

                        sp3 = ftsjsn[2] + v3s[rand] + sorepartir[rand19];
                        eng3 = ftsjn[2] + verbs[rand] + sodeal[rand19];

                        sp3ella = ftsjsn[3] + v3s[rand] + sorepartir[rand19];
                        eng3she = ftsjn[3] + verbs[rand] + sodeal[rand19];

                        sp3eso = ftsjsn[4] + v3s[rand] + sorepartir[rand19];
                        sp3it = ftsjn[4] + verbs[rand] + sodeal[rand19];

                        sp4 = ftsjsn[5] + v4s[rand] + sorepartir[rand19];
                        eng4 = ftsjn[5] + verbs[rand] + sodeal[rand19];

                        sp5 = ftsjsn[6] + v5s[rand] + sorepartir[rand19];
                        eng5 = ftsjn[6] + verbs[rand] + sodeal[rand19];
                        break;
                }
                break;

            case "upset ":
                int rand20 = (int) (Math.random() * soupset.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + soenojar[rand20];
                        eng1 = ftsj[0] + verbs[rand] + soupset[rand20];

                        sp2 = ftsjs[1] + v2s[rand] + soenojar[rand20];
                        eng2 = ftsj[1] + verbs[rand] + soupset[rand20];

                        sp3 = ftsjs[2] + v3s[rand] + soenojar[rand20];
                        eng3 = ftsj[2] + verbs[rand] + soupset[rand20];

                        sp3ella = ftsjs[3] + v3s[rand] + soenojar[rand20];
                        eng3she = ftsj[3] + verbs[rand] + soupset[rand20];

                        sp3eso = ftsjs[4] + v3s[rand] + soenojar[rand20];
                        sp3it = ftsj[4] + verbs[rand] + soupset[rand20];

                        sp4 = ftsjs[5] + v4s[rand] + soenojar[rand20];
                        eng4 = ftsj[5] + verbs[rand] + soupset[rand20];

                        sp5 = ftsjs[6] + v5s[rand] + soenojar[rand20];
                        eng5 = ftsj[6] + verbs[rand] + soupset[rand20];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + soenojar[rand20];
                        eng1 = ftsjn[0] + verbs[rand] + soupset[rand20];

                        sp2 = ftsjsn[1] + v2s[rand] + soenojar[rand20];
                        eng2 = ftsjn[1] + verbs[rand] + soupset[rand20];

                        sp3 = ftsjsn[2] + v3s[rand] + soenojar[rand20];
                        eng3 = ftsjn[2] + verbs[rand] + soupset[rand20];

                        sp3ella = ftsjsn[3] + v3s[rand] + soenojar[rand20];
                        eng3she = ftsjn[3] + verbs[rand] + soupset[rand20];

                        sp3eso = ftsjsn[4] + v3s[rand] + soenojar[rand20];
                        sp3it = ftsjn[4] + verbs[rand] + soupset[rand20];

                        sp4 = ftsjsn[5] + v4s[rand] + soenojar[rand20];
                        eng4 = ftsjn[5] + verbs[rand] + soupset[rand20];

                        sp5 = ftsjsn[6] + v5s[rand] + soenojar[rand20];
                        eng5 = ftsjn[6] + verbs[rand] + soupset[rand20];
                        break;
                }
                break;

            case "produce ":
                int rand21 = (int) (Math.random() * soproduce.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + soproducir[rand21];
                        eng1 = ftsj[0] + verbs[rand] + soproduce[rand21];

                        sp2 = ftsjs[1] + v2s[rand] + soproducir[rand21];
                        eng2 = ftsj[1] + verbs[rand] + soproduce[rand21];

                        sp3 = ftsjs[2] + v3s[rand] + soproducir[rand21];
                        eng3 = ftsj[2] + verbs[rand] + soproduce[rand21];

                        sp3ella = ftsjs[3] + v3s[rand] + soproducir[rand21];
                        eng3she = ftsj[3] + verbs[rand] + soproduce[rand21];

                        sp3eso = ftsjs[4] + v3s[rand] + soproducir[rand21];
                        sp3it = ftsj[4] + verbs[rand] + soproduce[rand21];

                        sp4 = ftsjs[5] + v4s[rand] + soproducir[rand21];
                        eng4 = ftsj[5] + verbs[rand] + soproduce[rand21];

                        sp5 = ftsjs[6] + v5s[rand] + soproducir[rand21];
                        eng5 = ftsj[6] + verbs[rand] + soproduce[rand21];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + soproducir[rand21];
                        eng1 = ftsjn[0] + verbs[rand] + soproduce[rand21];

                        sp2 = ftsjsn[1] + v2s[rand] + soproducir[rand21];
                        eng2 = ftsjn[1] + verbs[rand] + soproduce[rand21];

                        sp3 = ftsjsn[2] + v3s[rand] + soproducir[rand21];
                        eng3 = ftsjn[2] + verbs[rand] + soproduce[rand21];

                        sp3ella = ftsjsn[3] + v3s[rand] + soproducir[rand21];
                        eng3she = ftsjn[3] + verbs[rand] + soproduce[rand21];

                        sp3eso = ftsjsn[4] + v3s[rand] + soproducir[rand21];
                        sp3it = ftsjn[4] + verbs[rand] + soproduce[rand21];

                        sp4 = ftsjsn[5] + v4s[rand] + soproducir[rand21];
                        eng4 = ftsjn[5] + verbs[rand] + soproduce[rand21];

                        sp5 = ftsjsn[6] + v5s[rand] + soproducir[rand21];
                        eng5 = ftsjn[6] + verbs[rand] + soproduce[rand21];
                        break;
                }
                break;

            case "appropiate ":
                int rand22 = (int) (Math.random() * soappropiate.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + soappropiar[rand22];
                        eng1 = ftsj[0] + verbs[rand] + soappropiate[rand22];

                        sp2 = ftsjs[1] + v2s[rand] + soappropiar[rand22];
                        eng2 = ftsj[1] + verbs[rand] + soappropiate[rand22];

                        sp3 = ftsjs[2] + v3s[rand] + soappropiar[rand22];
                        eng3 = ftsj[2] + verbs[rand] + soappropiate[rand22];

                        sp3ella = ftsjs[3] + v3s[rand] + soappropiar[rand22];
                        eng3she = ftsj[3] + verbs[rand] + soappropiate[rand22];

                        sp3eso = ftsjs[4] + v3s[rand] + soappropiar[rand22];
                        sp3it = ftsj[4] + verbs[rand] + soappropiate[rand22];

                        sp4 = ftsjs[5] + v4s[rand] + soappropiar[rand22];
                        eng4 = ftsj[5] + verbs[rand] + soappropiate[rand22];

                        sp5 = ftsjs[6] + v5s[rand] + soappropiar[rand22];
                        eng5 = ftsj[6] + verbs[rand] + soappropiate[rand22];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + soappropiar[rand22];
                        eng1 = ftsjn[0] + verbs[rand] + soappropiate[rand22];

                        sp2 = ftsjsn[1] + v2s[rand] + soappropiar[rand22];
                        eng2 = ftsjn[1] + verbs[rand] + soappropiate[rand22];

                        sp3 = ftsjsn[2] + v3s[rand] + soappropiar[rand22];
                        eng3 = ftsjn[2] + verbs[rand] + soappropiate[rand22];

                        sp3ella = ftsjsn[3] + v3s[rand] + soappropiar[rand22];
                        eng3she = ftsjn[3] + verbs[rand] + soappropiate[rand22];

                        sp3eso = ftsjsn[4] + v3s[rand] + soappropiar[rand22];
                        sp3it = ftsjn[4] + verbs[rand] + soappropiate[rand22];

                        sp4 = ftsjsn[5] + v4s[rand] + soappropiar[rand22];
                        eng4 = ftsjn[5] + verbs[rand] + soappropiate[rand22];

                        sp5 = ftsjsn[6] + v5s[rand] + soappropiar[rand22];
                        eng5 = ftsjn[6] + verbs[rand] + soappropiate[rand22];
                        break;
                }
                break;


            case "leave ":
                int rand23 = (int) (Math.random() * soleave.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + sodejar[rand23];
                        eng1 = ftsj[0] + verbs[rand] + soleave[rand23];

                        sp2 = ftsjs[1] + v2s[rand] + sodejar[rand23];
                        eng2 = ftsj[1] + verbs[rand] + soleave[rand23];

                        sp3 = ftsjs[2] + v3s[rand] + sodejar[rand23];
                        eng3 = ftsj[2] + verbs[rand] + soleave[rand23];

                        sp3ella = ftsjs[3] + v3s[rand] + sodejar[rand23];
                        eng3she = ftsj[3] + verbs[rand] + soleave[rand23];

                        sp3eso = ftsjs[4] + v3s[rand] + sodejar[rand23];
                        sp3it = ftsj[4] + verbs[rand] + soleave[rand23];

                        sp4 = ftsjs[5] + v4s[rand] + sodejar[rand23];
                        eng4 = ftsj[5] + verbs[rand] + soleave[rand23];

                        sp5 = ftsjs[6] + v5s[rand] + sodejar[rand23];
                        eng5 = ftsj[6] + verbs[rand] + soleave[rand23];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + sodejar[rand23];
                        eng1 = ftsjn[0] + verbs[rand] + soleave[rand23];

                        sp2 = ftsjsn[1] + v2s[rand] + sodejar[rand23];
                        eng2 = ftsjn[1] + verbs[rand] + soleave[rand23];

                        sp3 = ftsjsn[2] + v3s[rand] + sodejar[rand23];
                        eng3 = ftsjn[2] + verbs[rand] + soleave[rand23];

                        sp3ella = ftsjsn[3] + v3s[rand] + sodejar[rand23];
                        eng3she = ftsjn[3] + verbs[rand] + soleave[rand23];

                        sp3eso = ftsjsn[4] + v3s[rand] + sodejar[rand23];
                        sp3it = ftsjn[4] + verbs[rand] + soleave[rand23];

                        sp4 = ftsjsn[5] + v4s[rand] + sodejar[rand23];
                        eng4 = ftsjn[5] + verbs[rand] + soleave[rand23];

                        sp5 = ftsjsn[6] + v5s[rand] + sodejar[rand23];
                        eng5 = ftsjn[6] + verbs[rand] + soleave[rand23];
                        break;
                }
                break;

            case "reach ":
                int rand24 = (int) (Math.random() * soreach.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + soalcanzar[rand24];
                        eng1 = ftsj[0] + verbs[rand] + soreach[rand24];

                        sp2 = ftsjs[1] + v2s[rand] + soalcanzar[rand24];
                        eng2 = ftsj[1] + verbs[rand] + soreach[rand24];

                        sp3 = ftsjs[2] + v3s[rand] + soalcanzar[rand24];
                        eng3 = ftsj[2] + verbs[rand] + soreach[rand24];

                        sp3ella = ftsjs[3] + v3s[rand] + soalcanzar[rand24];
                        eng3she = ftsj[3] + verbs[rand] + soreach[rand24];

                        sp3eso = ftsjs[4] + v3s[rand] + soalcanzar[rand24];
                        sp3it = ftsj[4] + verbs[rand] + soreach[rand24];

                        sp4 = ftsjs[5] + v4s[rand] + soalcanzar[rand24];
                        eng4 = ftsj[5] + verbs[rand] + soreach[rand24];

                        sp5 = ftsjs[6] + v5s[rand] + soalcanzar[rand24];
                        eng5 = ftsj[6] + verbs[rand] + soreach[rand24];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + soalcanzar[rand24];
                        eng1 = ftsjn[0] + verbs[rand] + soreach[rand24];

                        sp2 = ftsjsn[1] + v2s[rand] + soalcanzar[rand24];
                        eng2 = ftsjn[1] + verbs[rand] + soreach[rand24];

                        sp3 = ftsjsn[2] + v3s[rand] + soalcanzar[rand24];
                        eng3 = ftsjn[2] + verbs[rand] + soreach[rand24];

                        sp3ella = ftsjsn[3] + v3s[rand] + soalcanzar[rand24];
                        eng3she = ftsjn[3] + verbs[rand] + soreach[rand24];

                        sp3eso = ftsjsn[4] + v3s[rand] + soalcanzar[rand24];
                        sp3it = ftsjn[4] + verbs[rand] + soreach[rand24];

                        sp4 = ftsjsn[5] + v4s[rand] + soalcanzar[rand24];
                        eng4 = ftsjn[5] + verbs[rand] + soreach[rand24];

                        sp5 = ftsjsn[6] + v5s[rand] + soalcanzar[rand24];
                        eng5 = ftsjn[6] + verbs[rand] + soreach[rand24];
                        break;
                }
                break;

            case "express ":
                int rand25 = (int) (Math.random() * soexpress.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + soexpresar[rand25];
                        eng1 = ftsj[0] + verbs[rand] + soexpress[rand25];

                        sp2 = ftsjs[1] + v2s[rand] + soexpresar[rand25];
                        eng2 = ftsj[1] + verbs[rand] + soexpress[rand25];

                        sp3 = ftsjs[2] + v3s[rand] + soexpresar[rand25];
                        eng3 = ftsj[2] + verbs[rand] + soexpress[rand25];

                        sp3ella = ftsjs[3] + v3s[rand] + soexpresar[rand25];
                        eng3she = ftsj[3] + verbs[rand] + soexpress[rand25];

                        sp3eso = ftsjs[4] + v3s[rand] + soexpresar[rand25];
                        sp3it = ftsj[4] + verbs[rand] + soexpress[rand25];

                        sp4 = ftsjs[5] + v4s[rand] + soexpresar[rand25];
                        eng4 = ftsj[5] + verbs[rand] + soexpress[rand25];

                        sp5 = ftsjs[6] + v5s[rand] + soexpresar[rand25];
                        eng5 = ftsj[6] + verbs[rand] + soexpress[rand25];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + soexpresar[rand25];
                        eng1 = ftsjn[0] + verbs[rand] + soexpress[rand25];

                        sp2 = ftsjsn[1] + v2s[rand] + soexpresar[rand25];
                        eng2 = ftsjn[1] + verbs[rand] + soexpress[rand25];

                        sp3 = ftsjsn[2] + v3s[rand] + soexpresar[rand25];
                        eng3 = ftsjn[2] + verbs[rand] + soexpress[rand25];

                        sp3ella = ftsjsn[3] + v3s[rand] + soexpresar[rand25];
                        eng3she = ftsjn[3] + verbs[rand] + soexpress[rand25];

                        sp3eso = ftsjsn[4] + v3s[rand] + soexpresar[rand25];
                        sp3it = ftsjn[4] + verbs[rand] + soexpress[rand25];

                        sp4 = ftsjsn[5] + v4s[rand] + soexpresar[rand25];
                        eng4 = ftsjn[5] + verbs[rand] + soexpress[rand25];

                        sp5 = ftsjsn[6] + v5s[rand] + soexpresar[rand25];
                        eng5 = ftsjn[6] + verbs[rand] + soexpress[rand25];
                        break;
                }
                break;

            case "save ":
                int rand26 = (int) (Math.random() * sosave.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + sosalvar[rand26];
                        eng1 = ftsj[0] + verbs[rand] + sosave[rand26];

                        sp2 = ftsjs[1] + v2s[rand] + sosalvar[rand26];
                        eng2 = ftsj[1] + verbs[rand] + sosave[rand26];

                        sp3 = ftsjs[2] + v3s[rand] + sosalvar[rand26];
                        eng3 = ftsj[2] + verbs[rand] + sosave[rand26];

                        sp3ella = ftsjs[3] + v3s[rand] + sosalvar[rand26];
                        eng3she = ftsj[3] + verbs[rand] + sosave[rand26];

                        sp3eso = ftsjs[4] + v3s[rand] + sosalvar[rand26];
                        sp3it = ftsj[4] + verbs[rand] + sosave[rand26];

                        sp4 = ftsjs[5] + v4s[rand] + sosalvar[rand26];
                        eng4 = ftsj[5] + verbs[rand] + sosave[rand26];

                        sp5 = ftsjs[6] + v5s[rand] + sosalvar[rand26];
                        eng5 = ftsj[6] + verbs[rand] + sosave[rand26];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + sosalvar[rand26];
                        eng1 = ftsjn[0] + verbs[rand] + sosave[rand26];

                        sp2 = ftsjsn[1] + v2s[rand] + sosalvar[rand26];
                        eng2 = ftsjn[1] + verbs[rand] + sosave[rand26];

                        sp3 = ftsjsn[2] + v3s[rand] + sosalvar[rand26];
                        eng3 = ftsjn[2] + verbs[rand] + sosave[rand26];

                        sp3ella = ftsjsn[3] + v3s[rand] + sosalvar[rand26];
                        eng3she = ftsjn[3] + verbs[rand] + sosave[rand26];

                        sp3eso = ftsjsn[4] + v3s[rand] + sosalvar[rand26];
                        sp3it = ftsjn[4] + verbs[rand] + sosave[rand26];

                        sp4 = ftsjsn[5] + v4s[rand] + sosalvar[rand26];
                        eng4 = ftsjn[5] + verbs[rand] + sosave[rand26];

                        sp5 = ftsjsn[6] + v5s[rand] + sosalvar[rand26];
                        eng5 = ftsjn[6] + verbs[rand] + sosave[rand26];
                        break;
                }
                break;

            case "handle ":  //comment
                int rand27 = (int) (Math.random() * sohandle.length);
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + somanejar[rand27];
                        eng1 = ftsj[0] + verbs[rand] + sohandle[rand27];

                        sp2 = ftsjs[1] + v2s[rand] + somanejar[rand27];
                        eng2 = ftsj[1] + verbs[rand] + sohandle[rand27];

                        sp3 = ftsjs[2] + v3s[rand] + somanejar[rand27];
                        eng3 = ftsj[2] + verbs[rand] + sohandle[rand27];

                        sp3ella = ftsjs[3] + v3s[rand] + somanejar[rand27];
                        eng3she = ftsj[3] + verbs[rand] + sohandle[rand27];

                        sp3eso = ftsjs[4] + v3s[rand] + somanejar[rand27];
                        sp3it = ftsj[4] + verbs[rand] + sohandle[rand27];

                        sp4 = ftsjs[5] + v4s[rand] + somanejar[rand27];
                        eng4 = ftsj[5] + verbs[rand] + sohandle[rand27];

                        sp5 = ftsjs[6] + v5s[rand] + somanejar[rand27];
                        eng5 = ftsj[6] + verbs[rand] + sohandle[rand27];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + somanejar[rand27];
                        eng1 = ftsjn[0] + verbs[rand] + sohandle[rand27];

                        sp2 = ftsjsn[1] + v2s[rand] + somanejar[rand27];
                        eng2 = ftsjn[1] + verbs[rand] + sohandle[rand27];

                        sp3 = ftsjsn[2] + v3s[rand] + somanejar[rand27];
                        eng3 = ftsjn[2] + verbs[rand] + sohandle[rand27];

                        sp3ella = ftsjsn[3] + v3s[rand] + somanejar[rand27];
                        eng3she = ftsjn[3] + verbs[rand] + sohandle[rand27];

                        sp3eso = ftsjsn[4] + v3s[rand] + somanejar[rand27];
                        sp3it = ftsjn[4] + verbs[rand] + sohandle[rand27];

                        sp4 = ftsjsn[5] + v4s[rand] + somanejar[rand27];
                        eng4 = ftsjn[5] + verbs[rand] + sohandle[rand27];

                        sp5 = ftsjsn[6] + v5s[rand] + somanejar[rand27];
                        eng5 = ftsjn[6] + verbs[rand] + sohandle[rand27];
                        break;
                }
                break;



        }
    }//PD 18/03/2022

    //want to dificultad 2 SOLO SPECIAL
    public void wantyouto2() {
        int rand = (int) (Math.random() * verbs.length);
        Pasts pas = new Pasts();
        String temp = verbs[rand];
        int rn1 = (int) (Math.random() * 6);
        int rn2 = (int) (Math.random() * 5);
        int neg = (int) (Math.random() * 2);

        //want to subject
        String wtsj[] = {"I want ", "you want ", "he wants ", "she wants ", "it wants ", "we want ", "they want "};
        //want to subject negative
        String wtsjn[] = {"I don't want ", "you don't want ", "he doesn't want ", "she doesn't want ", "it doesn't want "
                , "we don't want ", "they don't want "};
        //sujetos want to en sp
        String wtsjs[] = {"yo quiero ", "tú quieres ", "él quiere ", "ella quiere ", "eso quiere ", "nosotros queremos ", "ellos quieren "};
        //sujetos want to en sp negativo
        String wtsjsn[] = {"yo no quiero ", "tú no quieres ", "él no quiere ", "eso no quiere ", "ella no quiere ", "nosotros no queremos ", "ellos no quieren "};

        String wtobj1[] = {"you to " + verbs[rand], "him to " + verbs[rand], "her to " + verbs[rand],
                "it to " + verbs[rand], "us to " + verbs[rand], "them to " + verbs[rand]};
        String wtobj2[] = {"me to " + verbs[rand], "him to " + verbs[rand], "her to " + verbs[rand],
                "it to " + verbs[rand], "us to " + verbs[rand], "them to " + verbs[rand]};
        String wtobj3[] = {"you to " + verbs[rand], "me to " + verbs[rand], "her to " + verbs[rand],
                "it to " + verbs[rand], "us to " + verbs[rand], "them to " + verbs[rand]};
        String wtobj4[] = {"you to " + verbs[rand], "him to " + verbs[rand], "me to " + verbs[rand],
                "it to " + verbs[rand], "us to " + verbs[rand], "them to " + verbs[rand]};
        String wtobj5[] = {"you to " + verbs[rand], "him to " + verbs[rand], "her to " + verbs[rand],
                "me to " + verbs[rand], "us to " + verbs[rand], "them to " + verbs[rand]};
        String wtobj6[] = {"you to " + verbs[rand], "him to " + verbs[rand], "her to " + verbs[rand],
                "it to " + verbs[rand], "them to " + verbs[rand]};
        String wtobj7[] = {"you to " + verbs[rand], "him to " + verbs[rand], "her to " + verbs[rand],
                "it to " + verbs[rand], "us to " + verbs[rand], "me to " + verbs[rand]};

        // objetos wt en sp
        String wtobj1s[] = {"que tú " + v2s[rand], "que él " + v3s[rand], "que ella " + v3s[rand],
                "que eso " + v3s[rand], "que nosotros " + v5s[rand], "que ellos " + v4s[rand]};
        String wtobj2s[] = {"que yo " + v1s[rand], "que él " + v3s[rand], "que ella " + v3s[rand],
                "que eso " + v3s[rand], "que nosotros " + v3s[rand], "que ellos " + v3s[rand]};
        String wtobj3s[] = {"que tú " + v2s[rand], "que yo " + v1s[rand], "que ella " + v3s[rand],
                "que eso " + v3s[rand], "que nosotros " + v5s[rand], "que ellos " + v4s[rand]};
        String wtobj4s[] = {"que tú " + v2s[rand], "que él " + v3s[rand], "que yo " + v1s[rand],
                "que eso " + v3s[rand], "que nosotros " + v5s[rand], "que ellos " + v4s[rand]};
        String wtobj5s[] = {"que tú " + v2s[rand], "que él " + v3s[rand], "que ella " + v3s[rand],
                "que yo " + v1s[rand], "que nosotros " + v5s[rand], "que ellos " + v4s[rand]};
        String wtobj6s[] = {"que tú " + v2s[rand], "que él " + v3s[rand], "que ella " + v3s[rand],
                "que eso " + v3s[rand], "que ellos " + v4s[rand]};
        String wtobj7s[] = {"que tú " + v2s[rand], "que él " + v3s[rand], "que ella " + v3s[rand],
                "que eso " + v3s[rand], "que nosotros " + v5s[rand], "que yo " + v1s[rand]};

        switch (temp) {
            case "report ":
                int rand1 = (int) (Math.random() * sorepe.length);
                //aqui van a ir todas las combinaciones de pronombre en presente simple, después en drive solo se agarra el string que se ocupe
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sorepe[rand1];
                        eng1 = wtsj[0] + wtobj1[rn1] + sorep[rand1];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sorepe[rand1];
                        eng2 = wtsj[1] + wtobj2[rn1] + sorep[rand1];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sorepe[rand1];
                        eng3 = wtsj[2] + wtobj3[rn1] + sorep[rand1];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sorepe[rand1];
                        eng3she = wtsj[3] + wtobj4[rn1] + sorep[rand1];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sorepe[rand1];
                        sp3it = wtsj[4] + wtobj5[rn1] + sorep[rand1];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sorepe[rand1];
                        eng4 = wtsj[5] + wtobj6[rn2] + sorep[rand1];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sorepe[rand1];
                        eng5 = wtsj[6] + wtobj7[rn1] + sorep[rand1];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sorepe[rand1];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sorep[rand1];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sorepe[rand1];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sorep[rand1];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sorepe[rand1];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sorep[rand1];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sorepe[rand1];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sorep[rand1];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sorepe[rand1];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sorep[rand1];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sorepe[rand1];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sorep[rand1];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sorepe[rand1];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sorep[rand1];
                        break;
                }
                break;

            case "release ":
                int rand2 = (int) (Math.random() * sorelease.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sosoltar[rand2];
                        eng1 = wtsj[0] + wtobj1[rn1] + sorelease[rand2];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sosoltar[rand2];
                        eng2 = wtsj[1] + wtobj2[rn1] + sorelease[rand2];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sosoltar[rand2];
                        eng3 = wtsj[2] + wtobj3[rn1] + sorelease[rand2];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sosoltar[rand2];
                        eng3she = wtsj[3] + wtobj4[rn1] + sorelease[rand2];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sosoltar[rand2];
                        sp3it = wtsj[4] + wtobj5[rn1] + sorelease[rand2];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sosoltar[rand2];
                        eng4 = wtsj[5] + wtobj6[rn2] + sorelease[rand2];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sosoltar[rand2];
                        eng5 = wtsj[6] + wtobj7[rn1] + sorelease[rand2];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sosoltar[rand2];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sorelease[rand2];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sosoltar[rand2];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sorelease[rand2];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sosoltar[rand2];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sorelease[rand2];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sosoltar[rand2];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sorelease[rand2];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sosoltar[rand2];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sorelease[rand2];

                        sp4 = wtsjsn[5] + wtobj1s[rn1] + sosoltar[rand2];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sorelease[rand2];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sosoltar[rand2];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sorelease[rand2];
                        break;
                }
                break;

            case "mix ":
                int rand3 = (int) (Math.random() * somix.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + somesclar[rand3];
                        eng1 = wtsj[0] + wtobj1[rn1] + somix[rand3];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + somesclar[rand3];
                        eng2 = wtsj[1] + wtobj2[rn1] + somix[rand3];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + somesclar[rand3];
                        eng3 = wtsj[2] + wtobj3[rn1] + somix[rand3];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + somesclar[rand3];
                        eng3she = wtsj[3] + wtobj4[rn1] + somix[rand3];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + somesclar[rand3];
                        sp3it = wtsj[4] + wtobj5[rn1] + somix[rand3];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + somesclar[rand3];
                        eng4 = wtsj[5] + wtobj6[rn2] + somix[rand3];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + somesclar[rand3];
                        eng5 = wtsj[6] + wtobj7[rn1] + somix[rand3];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + somesclar[rand3];
                        eng1 = wtsjn[0] + wtobj1[rn1] + somix[rand3];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + somesclar[rand3];
                        eng2 = wtsjn[1] + wtobj2[rn1] + somix[rand3];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + somesclar[rand3];
                        eng3 = wtsjn[2] + wtobj3[rn1] + somix[rand3];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + somesclar[rand3];
                        eng3she = wtsjn[3] + wtobj4[rn1] + somix[rand3];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + somesclar[rand3];
                        sp3it = wtsjn[4] + wtobj5[rn1] + somix[rand3];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + somesclar[rand3];
                        eng4 = wtsjn[5] + wtobj6[rn2] + somix[rand3];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + somesclar[rand3];
                        eng5 = wtsjn[6] + wtobj7[rn1] + somix[rand3];
                        break;
                }
                break;

            case "press ":
                int rand4 = (int) (Math.random() * sopress.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sopresionar[rand4];
                        eng1 = wtsj[0] + wtobj1[rn1] + sopress[rand4];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sopresionar[rand4];
                        eng2 = wtsj[1] + wtobj2[rn1] + sopress[rand4];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sopresionar[rand4];
                        eng3 = wtsj[2] + wtobj3[rn1] + sopress[rand4];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sopresionar[rand4];
                        eng3she = wtsj[3] + wtobj4[rn1] + sopress[rand4];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sopresionar[rand4];
                        sp3it = wtsj[4] + wtobj5[rn1] + sopress[rand4];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sopresionar[rand4];
                        eng4 = wtsj[5] + wtobj6[rn2] + sopress[rand4];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sopresionar[rand4];
                        eng5 = wtsj[6] + wtobj7[rn1] + sopress[rand4];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sopresionar[rand4];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sopress[rand4];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sopresionar[rand4];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sopress[rand4];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sopresionar[rand4];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sopress[rand4];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sopresionar[rand4];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sopress[rand4];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sopresionar[rand4];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sopress[rand4];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sopresionar[rand4];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sopress[rand4];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sopresionar[rand4];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sopress[rand4];
                        break;
                }
                break;

            case "finish ":
                int rand5 = (int) (Math.random() * sofinish.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sofinalizar[rand5];
                        eng1 = wtsj[0] + wtobj1[rn1] + sofinish[rand5];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sofinalizar[rand5];
                        eng2 = wtsj[1] + wtobj2[rn1] + sofinish[rand5];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sofinalizar[rand5];
                        eng3 = wtsj[2] + wtobj3[rn1] + sofinish[rand5];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sofinalizar[rand5];
                        eng3she = wtsj[3] + wtobj4[rn1] + sofinish[rand5];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sofinalizar[rand5];
                        sp3it = wtsj[4] + wtobj5[rn1] + sofinish[rand5];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sofinalizar[rand5];
                        eng4 = wtsj[5] + wtobj6[rn2] + sofinish[rand5];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sofinalizar[rand5];
                        eng5 = wtsj[6] + wtobj7[rn1] + sofinish[rand5];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sofinalizar[rand5];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sofinish[rand5];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sofinalizar[rand5];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sofinish[rand5];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sofinalizar[rand5];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sofinish[rand5];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sofinalizar[rand5];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sofinish[rand5];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sofinalizar[rand5];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sofinish[rand5];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sofinalizar[rand5];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sofinish[rand5];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sofinalizar[rand5];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sofinish[rand5];
                        break;
                }
                break;

            case "read ":
                int rand6 = (int) (Math.random() * soleer.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soleer[rand6];
                        eng1 = wtsj[0] + wtobj1[rn1] + soread[rand6];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soleer[rand6];
                        eng2 = wtsj[1] + wtobj2[rn1] + soread[rand6];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soleer[rand6];
                        eng3 = wtsj[2] + wtobj3[rn1] + soread[rand6];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soleer[rand6];
                        eng3she = wtsj[3] + wtobj4[rn1] + soread[rand6];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soleer[rand6];
                        sp3it = wtsj[4] + wtobj5[rn1] + soread[rand6];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soleer[rand6];
                        eng4 = wtsj[5] + wtobj6[rn2] + soread[rand6];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soleer[rand6];
                        eng5 = wtsj[6] + wtobj7[rn1] + soread[rand6];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soleer[rand6];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soread[rand6];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soleer[rand6];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soread[rand6];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soleer[rand6];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soread[rand6];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soleer[rand6];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soread[rand6];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soleer[rand6];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soread[rand6];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soleer[rand6];
                        eng4 = wtsjn[5] + wtobj6[rn2] + soread[rand6];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soleer[rand6];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soread[rand6];
                        break;
                }
                break;

            case "increase ":
                int rand7 = (int) (Math.random() * soincrease.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soincrem[rand7];
                        eng1 = wtsj[0] + wtobj1[rn1] + soincrease[rand7];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soincrem[rand7];
                        eng2 = wtsj[1] + wtobj2[rn1] + soincrease[rand7];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soincrem[rand7];
                        eng3 = wtsj[2] + wtobj3[rn1] + soincrease[rand7];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soincrem[rand7];
                        eng3she = wtsj[3] + wtobj4[rn1] + soincrease[rand7];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soincrem[rand7];
                        sp3it = wtsj[4] + wtobj5[rn1] + soincrease[rand7];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soincrem[rand7];
                        eng4 = wtsj[5] + wtobj6[rn2] + soincrease[rand7];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soincrem[rand7];
                        eng5 = wtsj[6] + wtobj7[rn1] + soincrease[rand7];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soincrem[rand7];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soincrease[rand7];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soincrem[rand7];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soincrease[rand7];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soincrem[rand7];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soincrease[rand7];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soincrem[rand7];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soincrease[rand7];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soincrem[rand7];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soincrease[rand7];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soincrem[rand7];
                        eng4 = wtsjn[5] + wtobj6[rn2] + soincrease[rand7];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soincrem[rand7];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soincrease[rand7];
                        break;
                }
                break;

            case "play ":
                int rand8 = (int) (Math.random() * soplay.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sotocar[rand8];
                        eng1 = wtsj[0] + wtobj1[rn1] + soplay[rand8];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sotocar[rand8];
                        eng2 = wtsj[1] + wtobj2[rn1] + soplay[rand8];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sotocar[rand8];
                        eng3 = wtsj[2] + wtobj3[rn1] + soplay[rand8];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sotocar[rand8];
                        eng3she = wtsj[3] + wtobj4[rn1] + soplay[rand8];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sotocar[rand8];
                        sp3it = wtsj[4] + wtobj5[rn1] + soplay[rand8];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sotocar[rand8];
                        eng4 = wtsj[5] + wtobj6[rn2] + soplay[rand8];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sotocar[rand8];
                        eng5 = wtsj[6] + wtobj7[rn1] + soplay[rand8];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sotocar[rand8];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soplay[rand8];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sotocar[rand8];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soplay[rand8];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sotocar[rand8];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soplay[rand8];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sotocar[rand8];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soplay[rand8];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sotocar[rand8];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soplay[rand8];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sotocar[rand8];
                        eng4 = wtsjn[5] + wtobj6[rn2] + soplay[rand8];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sotocar[rand8];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soplay[rand8];
                        break;
                }
                break;

            case "feel ":
                int rand9 = (int) (Math.random() * sofeel.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sosentir[rand9];
                        eng1 = wtsj[0] + wtobj1[rn1] + sofeel[rand9];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sosentir[rand9];
                        eng2 = wtsj[1] + wtobj2[rn1] + sofeel[rand9];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sosentir[rand9];
                        eng3 = wtsj[2] + wtobj3[rn1] + sofeel[rand9];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sosentir[rand9];
                        eng3she = wtsj[3] + wtobj4[rn1] + sofeel[rand9];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sosentir[rand9];
                        sp3it = wtsj[4] + wtobj5[rn1] + sofeel[rand9];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sosentir[rand9];
                        eng4 = wtsj[5] + wtobj6[rn2] + sofeel[rand9];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sosentir[rand9];
                        eng5 = wtsj[6] + wtobj7[rn1] + sofeel[rand9];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sosentir[rand9];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sofeel[rand9];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sosentir[rand9];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sofeel[rand9];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sosentir[rand9];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sofeel[rand9];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sosentir[rand9];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sofeel[rand9];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sosentir[rand9];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sofeel[rand9];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sosentir[rand9];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sofeel[rand9];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sosentir[rand9];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sofeel[rand9];
                        break;
                }
                break;

            case "turn ":
                int rand10 = (int) (Math.random() * soturn.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sovoltear[rand10];
                        eng1 = wtsj[0] + wtobj1[rn1] + soturn[rand10];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sovoltear[rand10];
                        eng2 = wtsj[1] + wtobj2[rn1] + soturn[rand10];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sovoltear[rand10];
                        eng3 = wtsj[2] + wtobj3[rn1] + soturn[rand10];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sovoltear[rand10];
                        eng3she = wtsj[3] + wtobj4[rn1] + soturn[rand10];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sovoltear[rand10];
                        sp3it = wtsj[4] + wtobj5[rn1] + soturn[rand10];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sovoltear[rand10];
                        eng4 = wtsj[5] + wtobj6[rn2] + soturn[rand10];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sovoltear[rand10];
                        eng5 = wtsj[6] + wtobj7[rn1] + soturn[rand10];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sovoltear[rand10];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soturn[rand10];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sovoltear[rand10];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soturn[rand10];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sovoltear[rand10];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soturn[rand10];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sovoltear[rand10];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soturn[rand10];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sovoltear[rand10];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soturn[rand10];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sovoltear[rand10];
                        eng4 = wtsjn[5] + wtobj6[rn2] + soturn[rand10];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sovoltear[rand10];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soturn[rand10];
                        break;
                }
                break;

            case "say ":
                int rand11 = (int) (Math.random() * sosay.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sodecir[rand11];
                        eng1 = wtsj[0] + wtobj1[rn1] + sosay[rand11];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sodecir[rand11];
                        eng2 = wtsj[1] + wtobj2[rn1] + sosay[rand11];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sodecir[rand11];
                        eng3 = wtsj[2] + wtobj3[rn1] + sosay[rand11];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sodecir[rand11];
                        eng3she = wtsj[3] + wtobj4[rn1] + sosay[rand11];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sodecir[rand11];
                        sp3it = wtsj[4] + wtobj5[rn1] + sosay[rand11];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sodecir[rand11];
                        eng4 = wtsj[5] + wtobj6[rn2] + sosay[rand11];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sodecir[rand11];
                        eng5 = wtsj[6] + wtobj7[rn1] + sosay[rand11];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sodecir[rand11];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sosay[rand11];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sodecir[rand11];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sosay[rand11];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sodecir[rand11];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sosay[rand11];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sodecir[rand11];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sosay[rand11];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sodecir[rand11];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sosay[rand11];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sodecir[rand11];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sosay[rand11];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sodecir[rand11];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sosay[rand11];
                        break;
                }
                break;

            case "spend ":
                int rand12 = (int) (Math.random() * sospend.length);

                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sogastar[rand12];
                        eng1 = wtsj[0] + wtobj1[rn1] + sospend[rand12];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sogastar[rand12];
                        eng2 = wtsj[1] + wtobj2[rn1] + sospend[rand12];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sogastar[rand12];
                        eng3 = wtsj[2] + wtobj3[rn1] + sospend[rand12];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sogastar[rand12];
                        eng3she = wtsj[3] + wtobj4[rn1] + sospend[rand12];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sogastar[rand12];
                        sp3it = wtsj[4] + wtobj5[rn1] + sospend[rand12];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sogastar[rand12];
                        eng4 = wtsj[5] + wtobj6[rn2] + sospend[rand12];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sogastar[rand12];
                        eng5 = wtsj[6] + wtobj7[rn1] + sospend[rand12];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sogastar[rand12];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sospend[rand12];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sogastar[rand12];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sospend[rand12];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sogastar[rand12];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sospend[rand12];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sogastar[rand12];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sospend[rand12];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sogastar[rand12];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sospend[rand12];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sogastar[rand12];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sospend[rand12];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sogastar[rand12];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sospend[rand12];
                        break;
                }
                break;

            case "pay ":
                int rand13 = (int) (Math.random() * sopay.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sopagar[rand13];
                        eng1 = wtsj[0] + wtobj1[rn1] + sopay[rand13];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sopagar[rand13];
                        eng2 = wtsj[1] + wtobj2[rn1] + sopay[rand13];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sopagar[rand13];
                        eng3 = wtsj[2] + wtobj3[rn1] + sopay[rand13];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sopagar[rand13];
                        eng3she = wtsj[3] + wtobj4[rn1] + sopay[rand13];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sopagar[rand13];
                        sp3it = wtsj[4] + wtobj5[rn1] + sopay[rand13];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sopagar[rand13];
                        eng4 = wtsj[5] + wtobj6[rn2] + sopay[rand13];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sopagar[rand13];
                        eng5 = wtsj[6] + wtobj7[rn1] + sopay[rand13];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sopagar[rand13];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sopay[rand13];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sopagar[rand13];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sopay[rand13];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sopagar[rand13];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sopay[rand13];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sopagar[rand13];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sopay[rand13];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sopagar[rand13];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sopay[rand13];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sopagar[rand13];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sopay[rand13];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sopagar[rand13];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sopay[rand13];
                        break;
                }
                break;

            case "try ":
                int rand14 = (int) (Math.random() * sotry.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sointentar[rand14];
                        eng1 = wtsj[0] + wtobj1[rn1] + sotry[rand14];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sointentar[rand14];
                        eng2 = wtsj[1] + wtobj2[rn1] + sotry[rand14];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sointentar[rand14];
                        eng3 = wtsj[2] + wtobj3[rn1] + sotry[rand14];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sointentar[rand14];
                        eng3she = wtsj[3] + wtobj4[rn1] + sotry[rand14];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sointentar[rand14];
                        sp3it = wtsj[4] + wtobj5[rn1] + sotry[rand14];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sointentar[rand14];
                        eng4 = wtsj[5] + wtobj6[rn2] + sotry[rand14];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sointentar[rand14];
                        eng5 = wtsj[6] + wtobj7[rn1] + sotry[rand14];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sointentar[rand14];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sotry[rand14];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sointentar[rand14];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sotry[rand14];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sointentar[rand14];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sotry[rand14];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sointentar[rand14];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sotry[rand14];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sointentar[rand14];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sotry[rand14];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sointentar[rand14];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sotry[rand14];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sointentar[rand14];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sotry[rand14];
                        break;
                }
                break;

            case "cook ":
                int rand15 = (int) (Math.random() * socook.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sococinar[rand15];
                        eng1 = wtsj[0] + wtobj1[rn1] + socook[rand15];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sococinar[rand15];
                        eng2 = wtsj[1] + wtobj2[rn1] + socook[rand15];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sococinar[rand15];
                        eng3 = wtsj[2] + wtobj3[rn1] + socook[rand15];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sococinar[rand15];
                        eng3she = wtsj[3] + wtobj4[rn1] + socook[rand15];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sococinar[rand15];
                        sp3it = wtsj[4] + wtobj5[rn1] + socook[rand15];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sococinar[rand15];
                        eng4 = wtsj[5] + wtobj6[rn2] + socook[rand15];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sococinar[rand15];
                        eng5 = wtsj[6] + wtobj7[rn1] + socook[rand15];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sococinar[rand15];
                        eng1 = wtsjn[0] + wtobj1[rn1] + socook[rand15];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sococinar[rand15];
                        eng2 = wtsjn[1] + wtobj2[rn1] + socook[rand15];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sococinar[rand15];
                        eng3 = wtsjn[2] + wtobj3[rn1] + socook[rand15];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sococinar[rand15];
                        eng3she = wtsjn[3] + wtobj4[rn1] + socook[rand15];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sococinar[rand15];
                        sp3it = wtsjn[4] + wtobj5[rn1] + socook[rand15];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sococinar[rand15];
                        eng4 = wtsjn[5] + wtobj6[rn2] + socook[rand15];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sococinar[rand15];
                        eng5 = wtsjn[6] + wtobj7[rn1] + socook[rand15];
                        break;
                }
                break;

            case "drive ":
                int rand16 = (int) (Math.random() * sodrive.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soconducir[rand16];
                        eng1 = wtsj[0] + wtobj1[rn1] + sodrive[rand16];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soconducir[rand16];
                        eng2 = wtsj[1] + wtobj2[rn1] + sodrive[rand16];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soconducir[rand16];
                        eng3 = wtsj[2] + wtobj3[rn1] + sodrive[rand16];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soconducir[rand16];
                        eng3she = wtsj[3] + wtobj4[rn1] + sodrive[rand16];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soconducir[rand16];
                        sp3it = wtsj[4] + wtobj5[rn1] + sodrive[rand16];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soconducir[rand16];
                        eng4 = wtsj[5] + wtobj6[rn2] + sodrive[rand16];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soconducir[rand16];
                        eng5 = wtsj[6] + wtobj7[rn1] + sodrive[rand16];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soconducir[rand16];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sodrive[rand16];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soconducir[rand16];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sodrive[rand16];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soconducir[rand16];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sodrive[rand16];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soconducir[rand16];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sodrive[rand16];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soconducir[rand16];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sodrive[rand16];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soconducir[rand16];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sodrive[rand16];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soconducir[rand16];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sodrive[rand16];
                        break;
                }
                break;

            case "gain ":
                int rand17 = (int) (Math.random() * sogain.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sogain1[rand17];
                        eng1 = wtsj[0] + wtobj1[rn1] + sogain[rand17];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sogain1[rand17];
                        eng2 = wtsj[1] + wtobj2[rn1] + sogain[rand17];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sogain1[rand17];
                        eng3 = wtsj[2] + wtobj3[rn1] + sogain[rand17];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sogain1[rand17];
                        eng3she = wtsj[3] + wtobj4[rn1] + sogain[rand17];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sogain1[rand17];
                        sp3it = wtsj[4] + wtobj5[rn1] + sogain[rand17];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sogain1[rand17];
                        eng4 = wtsj[5] + wtobj6[rn2] + sogain[rand17];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sogain1[rand17];
                        eng5 = wtsj[6] + wtobj7[rn1] + sogain[rand17];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sogain1[rand17];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sogain[rand17];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sogain1[rand17];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sogain[rand17];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sogain1[rand17];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sogain[rand17];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sogain1[rand17];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sogain[rand17];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sogain1[rand17];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sogain[rand17];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sogain1[rand17];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sogain[rand17];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sogain1[rand17];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sogain[rand17];
                        break;
                }
                break;

            case "call ":
                int rand18 = (int) (Math.random() * socall.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sollamar[rand18];
                        eng1 = wtsj[0] + wtobj1[rn1] + socall[rand18];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sollamar[rand18];
                        eng2 = wtsj[1] + wtobj2[rn1] + socall[rand18];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sollamar[rand18];
                        eng3 = wtsj[2] + wtobj3[rn1] + socall[rand18];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sollamar[rand18];
                        eng3she = wtsj[3] + wtobj4[rn1] + socall[rand18];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sollamar[rand18];
                        sp3it = wtsj[4] + wtobj5[rn1] + socall[rand18];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sollamar[rand18];
                        eng4 = wtsj[5] + wtobj6[rn2] + socall[rand18];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sollamar[rand18];
                        eng5 = wtsj[6] + wtobj7[rn1] + socall[rand18];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sollamar[rand18];
                        eng1 = wtsjn[0] + wtobj1[rn1] + socall[rand18];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sollamar[rand18];
                        eng2 = wtsjn[1] + wtobj2[rn1] + socall[rand18];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sollamar[rand18];
                        eng3 = wtsjn[2] + wtobj3[rn1] + socall[rand18];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sollamar[rand18];
                        eng3she = wtsjn[3] + wtobj4[rn1] + socall[rand18];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sollamar[rand18];
                        sp3it = wtsjn[4] + wtobj5[rn1] + socall[rand18];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sollamar[rand18];
                        eng4 = wtsjn[5] + wtobj6[rn2] + socall[rand18];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sollamar[rand18];
                        eng5 = wtsjn[6] + wtobj7[rn1] + socall[rand18];
                        break;
                }
                break;

            case "deal ":
                int rand19 = (int) (Math.random() * sodeal.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sorepartir[rand19];
                        eng1 = wtsj[0] + wtobj1[rn1] + sodeal[rand19];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sorepartir[rand19];
                        eng2 = wtsj[1] + wtobj2[rn1] + sodeal[rand19];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sorepartir[rand19];
                        eng3 = wtsj[2] + wtobj3[rn1] + sodeal[rand19];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sorepartir[rand19];
                        eng3she = wtsj[3] + wtobj4[rn1] + sodeal[rand19];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sorepartir[rand19];
                        sp3it = wtsj[4] + wtobj5[rn1] + sodeal[rand19];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sorepartir[rand19];
                        eng4 = wtsj[5] + wtobj6[rn2] + sodeal[rand19];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sorepartir[rand19];
                        eng5 = wtsj[6] + wtobj7[rn1] + sodeal[rand19];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sorepartir[rand19];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sodeal[rand19];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sorepartir[rand19];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sodeal[rand19];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sorepartir[rand19];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sodeal[rand19];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sorepartir[rand19];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sodeal[rand19];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sorepartir[rand19];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sodeal[rand19];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sorepartir[rand19];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sodeal[rand19];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sorepartir[rand19];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sodeal[rand19];
                        break;
                }
                break;

            case "upset ":
                int rand20 = (int) (Math.random() * soupset.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soenojar[rand20];
                        eng1 = wtsj[0] + wtobj1[rn1] + soupset[rand20];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soenojar[rand20];
                        eng2 = wtsj[1] + wtobj2[rn1] + soupset[rand20];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soenojar[rand20];
                        eng3 = wtsj[2] + wtobj3[rn1] + soupset[rand20];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soenojar[rand20];
                        eng3she = wtsj[3] + wtobj4[rn1] + soupset[rand20];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soenojar[rand20];
                        sp3it = wtsj[4] + wtobj5[rn1] + soupset[rand20];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soenojar[rand20];
                        eng4 = wtsj[5] + wtobj6[rn2] + soupset[rand20];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soenojar[rand20];
                        eng5 = wtsj[6] + wtobj7[rn1] + soupset[rand20];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soenojar[rand20];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soupset[rand20];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soenojar[rand20];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soupset[rand20];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soenojar[rand20];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soupset[rand20];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soenojar[rand20];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soupset[rand20];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soenojar[rand20];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soupset[rand20];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soenojar[rand20];
                        eng4 = wtsjn[5] + wtobj6[rn2] + soupset[rand20];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soenojar[rand20];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soupset[rand20];
                        break;
                }
                break;

            case "produce ":
                int rand21 = (int) (Math.random() * soproduce.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soproducir[rand21];
                        eng1 = wtsj[0] + wtobj1[rn1] + soproduce[rand21];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soproducir[rand21];
                        eng2 = wtsj[1] + wtobj2[rn1] + soproduce[rand21];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soproducir[rand21];
                        eng3 = wtsj[2] + wtobj3[rn1] + soproduce[rand21];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soproducir[rand21];
                        eng3she = wtsj[3] + wtobj4[rn1] + soproduce[rand21];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soproducir[rand21];
                        sp3it = wtsj[4] + wtobj5[rn1] + soproduce[rand21];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soproducir[rand21];
                        eng4 = wtsj[5] + wtobj6[rn2] + soproduce[rand21];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soproducir[rand21];
                        eng5 = wtsj[6] + wtobj7[rn1] + soproduce[rand21];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soproducir[rand21];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soproduce[rand21];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soproducir[rand21];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soproduce[rand21];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soproducir[rand21];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soproduce[rand21];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soproducir[rand21];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soproduce[rand21];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soproducir[rand21];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soproduce[rand21];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soproducir[rand21];
                        eng4 = wtsjn[5] + wtobj6[rn2] + soproduce[rand21];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soproducir[rand21];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soproduce[rand21];
                        break;
                }
                break;

            case "appropiate ":
                int rand22 = (int) (Math.random() * soappropiate.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soappropiar[rand22];
                        eng1 = wtsj[0] + wtobj1[rn1] + soappropiate[rand22];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soappropiar[rand22];
                        eng2 = wtsj[1] + wtobj2[rn1] + soappropiate[rand22];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soappropiar[rand22];
                        eng3 = wtsj[2] + wtobj3[rn1] + soappropiate[rand22];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soappropiar[rand22];
                        eng3she = wtsj[3] + wtobj4[rn1] + soappropiate[rand22];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soappropiar[rand22];
                        sp3it = wtsj[4] + wtobj5[rn1] + soappropiate[rand22];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soappropiar[rand22];
                        eng4 = wtsj[5] + wtobj6[rn2] + soappropiate[rand22];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soappropiar[rand22];
                        eng5 = wtsj[6] + wtobj7[rn1] + soappropiate[rand22];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soappropiar[rand22];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soappropiate[rand22];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soappropiar[rand22];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soappropiate[rand22];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soappropiar[rand22];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soappropiate[rand22];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soappropiar[rand22];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soappropiate[rand22];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soappropiar[rand22];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soappropiate[rand22];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soappropiar[rand22];
                        eng4 = wtsjn[5] + wtobj6[rn2] + soappropiate[rand22];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soappropiar[rand22];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soappropiate[rand22];
                        break;
                }
                break;


            case "leave ":
                int rand23 = (int) (Math.random() * soleave.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sodejar[rand23];
                        eng1 = wtsj[0] + wtobj1[rn1] + soleave[rand23];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sodejar[rand23];
                        eng2 = wtsj[1] + wtobj2[rn1] + soleave[rand23];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sodejar[rand23];
                        eng3 = wtsj[2] + wtobj3[rn1] + soleave[rand23];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sodejar[rand23];
                        eng3she = wtsj[3] + wtobj4[rn1] + soleave[rand23];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sodejar[rand23];
                        sp3it = wtsj[4] + wtobj5[rn1] + soleave[rand23];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sodejar[rand23];
                        eng4 = wtsj[5] + wtobj6[rn2] + soleave[rand23];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sodejar[rand23];
                        eng5 = wtsj[6] + wtobj7[rn1] + soleave[rand23];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sodejar[rand23];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soleave[rand23];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sodejar[rand23];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soleave[rand23];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sodejar[rand23];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soleave[rand23];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sodejar[rand23];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soleave[rand23];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sodejar[rand23];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soleave[rand23];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sodejar[rand23];
                        eng4 = wtsjn[5] + wtobj6[rn2] + soleave[rand23];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sodejar[rand23];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soleave[rand23];
                        break;
                }
                break;

            case "reach ":
                int rand24 = (int) (Math.random() * soreach.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soalcanzar[rand24];
                        eng1 = wtsj[0] + wtobj1[rn1] + soreach[rand24];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soalcanzar[rand24];
                        eng2 = wtsj[1] + wtobj2[rn1] + soreach[rand24];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soalcanzar[rand24];
                        eng3 = wtsj[2] + wtobj3[rn1] + soreach[rand24];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soalcanzar[rand24];
                        eng3she = wtsj[3] + wtobj4[rn1] + soreach[rand24];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soalcanzar[rand24];
                        sp3it = wtsj[4] + wtobj5[rn1] + soreach[rand24];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soalcanzar[rand24];
                        eng4 = wtsj[5] + wtobj6[rn2] + soreach[rand24];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soalcanzar[rand24];
                        eng5 = wtsj[6] + wtobj7[rn1] + soreach[rand24];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soalcanzar[rand24];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soreach[rand24];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soalcanzar[rand24];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soreach[rand24];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soalcanzar[rand24];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soreach[rand24];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soalcanzar[rand24];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soreach[rand24];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soalcanzar[rand24];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soreach[rand24];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soalcanzar[rand24];
                        eng4 = wtsjn[5] + wtobj6[rn2] + soreach[rand24];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soalcanzar[rand24];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soreach[rand24];
                        break;
                }
                break;

            case "express ":
                int rand25 = (int) (Math.random() * soexpress.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soexpresar[rand25];
                        eng1 = wtsj[0] + wtobj1[rn1] + soexpress[rand25];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soexpresar[rand25];
                        eng2 = wtsj[1] + wtobj2[rn1] + soexpress[rand25];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soexpresar[rand25];
                        eng3 = wtsj[2] + wtobj3[rn1] + soexpress[rand25];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soexpresar[rand25];
                        eng3she = wtsj[3] + wtobj4[rn1] + soexpress[rand25];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soexpresar[rand25];
                        sp3it = wtsj[4] + wtobj5[rn1] + soexpress[rand25];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soexpresar[rand25];
                        eng4 = wtsj[5] + wtobj6[rn2] + soexpress[rand25];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soexpresar[rand25];
                        eng5 = wtsj[6] + wtobj7[rn1] + soexpress[rand25];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soexpresar[rand25];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soexpress[rand25];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soexpresar[rand25];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soexpress[rand25];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soexpresar[rand25];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soexpress[rand25];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soexpresar[rand25];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soexpress[rand25];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soexpresar[rand25];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soexpress[rand25];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soexpresar[rand25];
                        eng4 = wtsjn[5] + wtobj6[rn2] + soexpress[rand25];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soexpresar[rand25];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soexpress[rand25];
                        break;
                }
                break;

            case "save ":
                int rand26 = (int) (Math.random() * sosave.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sosalvar[rand26];
                        eng1 = wtsj[0] + wtobj1[rn1] + sosave[rand26];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sosalvar[rand26];
                        eng2 = wtsj[1] + wtobj2[rn1] + sosave[rand26];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sosalvar[rand26];
                        eng3 = wtsj[2] + wtobj3[rn1] + sosave[rand26];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sosalvar[rand26];
                        eng3she = wtsj[3] + wtobj4[rn1] + sosave[rand26];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sosalvar[rand26];
                        sp3it = wtsj[4] + wtobj5[rn1] + sosave[rand26];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sosalvar[rand26];
                        eng4 = wtsj[5] + wtobj6[rn2] + sosave[rand26];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sosalvar[rand26];
                        eng5 = wtsj[6] + wtobj7[rn1] + sosave[rand26];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sosalvar[rand26];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sosave[rand26];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sosalvar[rand26];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sosave[rand26];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sosalvar[rand26];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sosave[rand26];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sosalvar[rand26];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sosave[rand26];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sosalvar[rand26];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sosave[rand26];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sosalvar[rand26];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sosave[rand26];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sosalvar[rand26];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sosave[rand26];
                        break;
                }
                break;

            case "handle ":  //comment
                int rand27 = (int) (Math.random() * sohandle.length);
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + somanejar[rand27];
                        eng1 = wtsj[0] + wtobj1[rn1] + sohandle[rand27];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + somanejar[rand27];
                        eng2 = wtsj[1] + wtobj2[rn1] + sohandle[rand27];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + somanejar[rand27];
                        eng3 = wtsj[2] + wtobj3[rn1] + sohandle[rand27];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + somanejar[rand27];
                        eng3she = wtsj[3] + wtobj4[rn1] + sohandle[rand27];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + somanejar[rand27];
                        sp3it = wtsj[4] + wtobj5[rn1] + sohandle[rand27];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + somanejar[rand27];
                        eng4 = wtsj[5] + wtobj6[rn2] + sohandle[rand27];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + somanejar[rand27];
                        eng5 = wtsj[6] + wtobj7[rn1] + sohandle[rand27];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + somanejar[rand27];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sohandle[rand27];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + somanejar[rand27];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sohandle[rand27];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + somanejar[rand27];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sohandle[rand27];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + somanejar[rand27];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sohandle[rand27];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + somanejar[rand27];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sohandle[rand27];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + somanejar[rand27];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sohandle[rand27];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + somanejar[rand27];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sohandle[rand27];
                        break;
                }
                break;


        }


    }//PD 18/03/2022



    //DIFICULTAD 3

    //Presentes
    public void GenPresSimp3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo " + v1[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + v2[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + v3[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he " + verbs3[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + v3[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she " + verbs3[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + v3[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it " + verbs3[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + v4[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + v5nos[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we " + verbs[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no " + v1[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I " + "don't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + "no " + v2[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you " + "don't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + "no " + v3[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he " + "doesn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + "no " + v3[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she " + "doesn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + "no " + v3[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it " + "doesn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + "no " + v4[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they " + "don't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + "no " + v5nos[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we " + "don't " + verbs[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenPresCont3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo estoy " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I am " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I'm " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú estás " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you are " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you're " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él está " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he is " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he's " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella está " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she is " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she's " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso está " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it is " + verbscont[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it's " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos están " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they are " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they're " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros estamos " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we are " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we're " + verbscont[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no estoy " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I " + "am not " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I'm not " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + "no estás " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you're not " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you " + "aren't " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + "no está " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he's not " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he " + "isn't " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + "no está " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she's not " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she " + "isn't " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + "no está " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it's not " + verbscont[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it " + "isn't " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + "no están " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they're not " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they " + "aren't " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + "no están " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we're not " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we " + "aren't " + verbscont[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenPresPerf3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo he " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I've " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú has " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you've " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él ha " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he has " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he's " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella ha " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she has " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she's " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso ha " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it has " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it's " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos han " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they've " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros hemos " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we've " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        break;
                    case 1:
                        sp1 = "yo no he " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I have not " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I haven't " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú no has " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you have not " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you haven't " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él no ha " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he has not " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he hasn't " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella no ha " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she has not " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she hasn't " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso no ha " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it has not " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it hasn't " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos no han " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they have not " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they haven't " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros no hemos " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we have not " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we haven't " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenPresPerfCont3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo he estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú has estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él ha estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he has been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella ha estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she has been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso ha estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it has been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos han estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros hemos estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo no he estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I haven't been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú no has estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you haven't been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él no ha estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he hasn't been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella no ha estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she hasn't been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso no ha estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it hasn't been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos no han estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they haven't been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros no hemos estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we haven't been " + verbscont[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023

    //Pasados
    public void GenPastSimp3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 4);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo " + vsp1[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I " + vsp[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + vsp2[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you " + vsp[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + vsp3[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he " + vsp[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + vsp3[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she " + vsp[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + vsp3[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it " + vsp[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + vsp4[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they " + vsp[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + vsp5[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we " + vsp[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no " + vsp1[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I " + "didn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + "no " + vsp2[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you " + "didn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + "no " + vsp3[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he " + "didn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + "no " + vsp3[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she " + "didn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + "no " + vsp3[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it " + "didn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + "no " + vsp4[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they " + "didn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + "no " + vsp5[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we " + "didn't " + verbs[rand] + arraySodEng + frequadv[radv];
                        break;
                    case 2:
                        sp1 = "yo " + vsp1i[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I " + vsp[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + vsp2i[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you " + vsp[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + vsp3i[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he " + vsp[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + vsp3i[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she " + vsp[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + vsp3i[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it " + vsp[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + vsp4i[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they " + vsp[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + vsp5i[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we " + vsp[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 3:
                        sp1 = "yo " + "no " + vsp1i[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I " + "didn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + "no " + vsp2i[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you " + "didn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + "no " + vsp3i[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he " + "didn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + "no " + vsp3i[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she " + "didn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + "no " + vsp3i[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it " + "didn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + "no " + vsp4i[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they " + "didn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + "no " + vsp5i[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we " + "didn't " + verbs[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenPastCont3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo estaba " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I was " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I was " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú estabas " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you were " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you were " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él estaba " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he was " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he was " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella estaba " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she was " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she was " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso estaba " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it was " + verbscont[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it was " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos estaban " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they were " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they were " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros estabamos " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we were " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we were " + verbscont[rand] + arraySodEng + frequadv[radv];
                        break;
                    case 1:
                        sp1 = "yo " + "no estaba " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I " + "was not " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I " + "wasn't " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + "no estabas " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you " + "were not " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you " + "weren't " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + "no estaba " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he " + "was not " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he " + "wasn't " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + "no estaba " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she " + "was not " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she " + "wasn't " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + "no estaba " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it " + "was not " + verbscont[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it " + "wasn't " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + "no estaban " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they " + "were not " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they " + "weren't " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + "no estabamos " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we " + "were not " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we " + "weren't " + verbscont[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenPastPerf3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo había " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I had " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I'd " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú habías " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you had " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you'd " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él había " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he had " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he'd " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella había " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she had " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she'd " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso había " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it had " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it'd " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos habían " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they had " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they'd " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros habíamos " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we had " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we'd " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo no había " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I had not " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I hadn't " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú no habías " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you had not " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you hadn't " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él no había " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he had not " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he hadn't " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella no había " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she had not " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she hadn't " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso no había " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it had not " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it hadn't " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos no habían " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they had not " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they hadn't " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros no habíamos " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we had not " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we hadn't " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenPastPerfCont3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo había estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I had been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú habías estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you had been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él había estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he had been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella había estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she had been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso había estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it had been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos habían estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they had been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros habíamos estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we had been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo no había estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I hadn't been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú no habías estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you hadn't been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él no había estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he hadn't been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella no había estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she hadn't been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso no había estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it hadn't been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos no habían estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they hadn't been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros no habíamos estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we hadn't been " + verbscont[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023

    //Futuros
    public void GenFutSimp3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo " + vsf1[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I will " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + vsf2[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you will " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + vsf3[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he will " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + vsf3[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she will " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + vsf3[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it will " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + vsf5[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they will " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + vsf4[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we will " + verbs[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no " + vsf1[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I " + "won't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + "no " + vsf2[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you " + "won't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + "no " + vsf3[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he " + "won't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + "no " + vsf3[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she " + "won't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + "no " + vsf3[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it " + "won't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + "no " + vsf5[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they " + "won't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + "no " + vsf4[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we " + "won't " + verbs[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenFutCont3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo estaré " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I will be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I'll be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú estarás " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you will be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you'll be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él estará " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he will be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he'll be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella estará " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she will be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she'll be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso estará " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it will be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it'll be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos estarán " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they will be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they'll be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros estaremos " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we will be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we'll be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no estaré " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I " + "will not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I " + "won't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + "no estarás " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you " + "will not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you " + "won't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + "no estará " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he " + "will not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he " + "won't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + "no estará " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she " + "will not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she " + "won't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + "no estará " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it " + "will not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it " + "won't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + "no estarán " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they " + "will not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they " + "won't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + "no estaremos " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we " + "will not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we " + "won't be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenFutPerf3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo habré " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I will have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I'll have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú habrás " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you will have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you'll have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él habrá " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he will have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he'll have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella habrá " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she will have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she'll have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso habrá " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it will have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it'll have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos habrán " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they will have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they'll have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros habremos " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we will have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we'll have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        break;
                    case 1:
                        sp1 = "yo no habré " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I will not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I won't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú no habrás " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you will not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you won't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él no habrá " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he will not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he won't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella no habrá " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she will not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she won't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso no habrá " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it will not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it won't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos no habrán " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they will not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they won't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros no habremos " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we will not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we won't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenFutPerfCont3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo habré estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I will have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú habrás estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you will have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él habrá estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he will have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella habrá estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she will have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso habrá estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it will have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos habrán estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they will have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros habremos estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we will have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo no habré estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I won't have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú no habrás estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you won't have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él no habrá estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he won't have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella no habrá estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she won't have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso no habrá estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it won't have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos no habrán estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they won't have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros no habremos estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we won't have been " + verbscont[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023

    // WOULD
    public void GenWouldSimp3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo " + vsb1w[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I would " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + vsb2w[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you would " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + vsb3w[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he would " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + vsb3w[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she would " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + vsb3w[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it would " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + vsb4w[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they would " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + vsb5w[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we would " + verbs[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no " + vsb1w[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I " + "wouldn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + "no " + vsb2w[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you " + "wouldn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + "no " + vsb3w[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he " + "wouldn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + "no " + vsb3w[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she " + "wouldn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + "no " + vsb3w[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it " + "wouldn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + "no " + vsb4w[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they " + "wouldn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + "no " + vsb5w[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we " + "wouldn't " + verbs[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenWouldCont3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo estaría " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I would be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I'd be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú estarías " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you would be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you'd be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él estaría " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he would be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he'd be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella estaría " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she would be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she'd be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso estaría " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it would be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it'd be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos estarían " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they would be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they'd be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros estaríamos " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we would be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we'd be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no estaría " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I " + "would not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I " + "wouldn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + "no estarías " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you " + "would not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you " + "wouldn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + "no estaría " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he " + "would not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he " + "wouldn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + "no estaría " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she " + "would not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she " + "wouldn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + "no estaría " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it " + "would not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it " + "wouldn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + "no estarían " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they " + "would not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they " + "wouldn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + "no estaríamos " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we " + "would not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we " + "wouldn't be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenWouldPerf3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo habría " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I would have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I'd have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú habrías " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you would have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you'd have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él habría " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he would have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he'd have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella habría " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she would have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she'd have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso habría " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it would have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it'd have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos habrían " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they would have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they'd have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros habríamos " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we would have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we'd have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        break;
                    case 1:
                        sp1 = "yo no habría " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I would not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I wouldn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú no habrías " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you would not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you wouldn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él no habría " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he would not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he wouldn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella no habría " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she would not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she wouldn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso no habría " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it would not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it wouldn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos no habrían " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they would not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they wouldn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros no habríamos " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we would not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we wouldn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenWouldPerfCont3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo habría estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I would have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú habrías estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you would have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él habría estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he would have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella habría estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she would have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso habría estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it would have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos habrían estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they would have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros habríamos estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we would have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo no habría estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I wouldn't have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú no habrías estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you wouldn't have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él no habría estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he wouldn't have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella no habría estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she wouldn't have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso no habría estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it wouldn't have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos no habrían estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they wouldn't have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros no habríamos estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we wouldn't have been " + verbscont[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023

    //COULD
    public void GenCouldSimp3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo podría " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I could " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú podrías " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you could " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él podría " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he could " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella podría " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she could " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso podría " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it could " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos podrían " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they could " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros podríamos " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we could " + verbs[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no podría " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I " + "couldn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + "no podrías " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you " + "couldn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + "no podría " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he " + "couldn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + "no podría " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she " + "couldn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + "no podría " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it " + "couldn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + "no podrían " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they " + "couldn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + "no podríamos " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we " + "couldn't " + verbs[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenCouldCont3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo podría estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I could be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I could be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú podrías estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you could be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you could be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él podría estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he could be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he could be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella podría estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she could be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she could be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso podría estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it could be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it could be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos podrían estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they could be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they could be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros podríamos estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we could be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we could be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no podría estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I " + "could not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I " + "couldn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + "no podrías estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you " + "could not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you " + "couldn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + "no podría estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he " + "could not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he " + "couldn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + "no podría estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she " + "could not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she " + "couldn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + "no podría estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it " + "could not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it " + "couldn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + "no podrían estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they " + "could not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they " + "couldn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + "no podríamos estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we " + "could not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng52= "we " + "couldn't be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenCouldPerf3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo pude haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I could have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I could have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú pudiste haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you could have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you could have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él pudo haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he could have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he could have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella pudiese haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she could have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she could have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso pudiese haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it could have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it could have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos pudiesen haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they could have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they could have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros pudiesemos haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we could have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we could have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no pude haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I " + "could not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I " + "couldn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + "no pudiste haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you " + "could not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you " + "couldn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + "no pudo haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he " + "could not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he " + "couldn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + "no pudiese haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she " + "could not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she " + "couldn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + "no pudiese haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it " + "could not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it " + "couldn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + "no pudiesen haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they " + "could not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they " + "couldn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + "no pudiesemos haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we " + "could not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we " + "couldn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenCouldPerfCont3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo podría haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I could have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú podrías haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you could have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él podría haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he could have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella podría haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she could have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso podría haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it could have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos podrían haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they could have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros podríamos haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we could have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no podría haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I " + "couldn't have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + "no podrías haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you " + "couldn't have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + "no podría haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he " + "couldn't have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + "no podría haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she " + "couldn't have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + "no podría haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it " + "couldn't have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + "no podrían haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they " + "couldn't have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + "no podríamos haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we " + "couldn't have been " + verbscont[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023

    // MIGHT
    public void GenMightSimp3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo quizá " + v1s[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I might " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú quizá " + v2s[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you might " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él quizá " + v3s[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he might " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella quizá " + v3s[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she might " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso quizá" + v3s[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it might " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos quizá " + v4s[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they might " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros quizá " + v5s[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we might " + verbs[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo quizá no " + v1s[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I might not " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú quizá no " + v2s[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you might not " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él quizá no " + v3s[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he might not " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella quizá no " + v3s[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she might not " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso quizá no " + v3s[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it might not " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos quizá no " + v4s[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they might not " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros quizá no " + v5s[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we might not " + verbs[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenMightCont3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo quizá esté " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I might be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I might be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú quizá estés " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you might be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you might be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él quizá esté " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he might be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he might be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella quizá esté " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she might be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she might be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso quizá esté " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it might be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it might be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos quizá estén " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they might be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they might be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros quizá estemos " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we might be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we might be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "quizá no esté " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I " + "might not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I " + "mightn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + "quizá no estés " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you " + "might not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you " + "mightn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + "quizá no esté  " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he " + "might not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he " + "mightn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + "quizá no esté " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she " + "might not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she " + "mightn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + "quizá no esté " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it " + "might not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it " + "mightn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + "quizá no estén " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they " + "might not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they " + "mightn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + "quizá no estémos " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we " + "might not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we " + "mightn't be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenMightPerf3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo quizá haya " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I might have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I might have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú quizá hayas " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you might have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you might have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él quizá haya " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he might have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he might have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella quizá haya " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she might have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she might have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso quizá haya " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it might have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it might have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos quizá hayan " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they might have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they might have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros quizá hayamos " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we might have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we might have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo quizá no haya " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I might not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I mightn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú quizá no hayas " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you might not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you mightn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él quizá no haya " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he might not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he mightn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella quizá no haya " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she might not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she mightn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso quizá no haya " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it might not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it might not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos quizá no hayan " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they might not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they mightn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros quizá no hayamos " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we might not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we mightn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenMightPerfCont3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo quizá haya estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I might have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú quizá hayas estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you might have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él quizá haya estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he might have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella quizá haya estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she might have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso quizá haya estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it might have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos quizá hayan estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they might have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros quizá hayamos estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we might have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo quizá no haya estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I might not have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú quizá no hayas estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you might not have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él quizá no haya estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he might not have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella quizá no haya estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she might not have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso quizá no haya estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it might not have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos quizá no hayan estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they might not have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros quizá no hayamos estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we might not have been " + verbscont[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023

    //SHOULD
    public void GenShouldSimp3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo debería " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I should " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú deberías " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you should " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él debería " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he should " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella debería " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she should " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso debería " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it should " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos deberían " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they should " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros deberíamos " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we should " + verbs[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no debería " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I " + "shouldn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + "no deberías " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you " + "shouldn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + "no debería " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he " + "shouldn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + "no debería " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she " + "shouldn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + "no debería " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it " + "shouldn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + "no deberían " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they " + "shouldn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + "no deberíamos " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we " + "shouldn't " + verbs[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenShouldCont3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo debería estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I should be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I'd be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú deberías estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you should be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you'd be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él debería estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he should be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he'd be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella debería estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she should be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she'd be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso debería estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it should be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it'd be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos deberían estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they should be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they'd be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros deberíamos estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we should be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we'd be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        break;
                    case 1:
                        sp1 = "yo " + "no debería estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I " + "should not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I " + "shouldn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + "no deberías estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you " + "should not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you " + "shouldn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + "no debería estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he " + "should not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he " + "shouldn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + "no debería estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she " + "should not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she " + "shouldn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + "no debería estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it " + "should not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it " + "shouldn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + "no deberían estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they " + "should not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they " + "shouldn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + "no deberíamos estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we " + "should not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we " + "shouldn't be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenShouldPerf3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo debería haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I should have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I'd have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú deberías haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you should have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you'd have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él debería haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he should have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he'd have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella debería haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she should have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng3she = "she'd have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso debería haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it should have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it'd have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos deberían haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they should have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they'd have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros deberíamos haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we should have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we'd have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no debería haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I " + "should not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I " + "shouldn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + "no deberías haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you " + "should not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you " + "shouldn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + "no debería haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he " + "should not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he " + "shouldn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + "no debería haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she " + "should not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she " + "shouldn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + "no debería haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it " + "should not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it " + "shouldn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + "no deberían haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they " + "should not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they " + "shouldn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + "no deberíamos haber " + verbpartsp[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we " + "should not have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we " + "shouldn't have " + verbsparteng[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenShouldPerfCont3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo debería haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I should have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú deberías haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you should have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él debería haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he should have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella debería haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she should have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso debería haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it should have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos deberían haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they should have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros deberíamos haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we should have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no debería haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I " + "shouldn't have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + "no deberías haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you " + "shouldn't have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + "no debería haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he " + "shouldn't have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + "no debería haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she " + "shouldn't have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + "no debería haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it " + "shouldn't have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + "no deberían haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they " + "shouldn't have been " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + "no deberíamos haber estado " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we " + "shouldn't have been " + verbscont[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023

    //Can
    public void GenCanSimp3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo puedo " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I can " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú puedes " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you can " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él puede " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he can " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella puede " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she can " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso puede " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it can " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos pueden " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they can " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros podemos " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we can " + verbs[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no puedo " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I " + "can't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + "no puedes " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you " + "can't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + "no puede " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he " + "can't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + "no puede " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she " + "can't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + "no puede " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it " + "can't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + "no pueden " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they " + "can't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + "no podemos " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we " + "can't " + verbs[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenCanCont3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo puedo estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I can be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I can be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú puedes estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you can be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you can be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él puede estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he can be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he can be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella puede " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she can be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she can be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso puede " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it can be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it can be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos pueden estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they can be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they can be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros podemos " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we can be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we can be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no puedo estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I " + "cannot be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I " + "can't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + "no puedes estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you " + "cannot be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you " + "can't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + "no puede estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he " + "cannot be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he " + "can't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + "no puede estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she " + "cannot be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she " + "can't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + "no puede estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it " + "cannot be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it " + "can't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + "no pueden estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they " + "cannot be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they " + "can't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + "no podemos estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we " + "cannot be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we " + "can't be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023

    //Must
    public void GenMustSimp3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo debo " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I must " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú debés " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you must " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él debe " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he must " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella debe " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she must " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso debe " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it must " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos deben " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they must " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros debemos " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we must " + verbs[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no debo " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I " + "mustn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + "no debés " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you " + "mustn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + "no debe " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he " + "mustn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + "no debe " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she " + "mustn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + "no debe " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it " + "mustn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + "no deben " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they " + "mustn't " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + "no debemos " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we " + "mustn't " + verbs[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenMustCont3() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo debo estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I must be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I must be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú debés estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you must be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you must be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él debe estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he must be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he must be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella debe estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she must be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she must be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso debe estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it must be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it must be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos deben estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they must be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they must be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros debemos estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we must be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we must be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no debo estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I " + "must not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I " + "mustn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + "no debés estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you " + "must not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you " + "mustn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + "no debe estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he " + "must not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he " + "mustn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + "no debe estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she " + "must not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she " + "mustn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + "no debe estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it " + "must not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it " + "mustn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + "no deben estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they " + "must not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they " + "mustn't be " + verbscont[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + "no debemos estar " + verbconti[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we " + "must not be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we " + "mustn't be " + verbscont[rand] + arraySodEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023

    public void GenAbleTo3(){
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo " + "soy capaz de " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I am " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I'm " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú " + "eres capaz de " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you are " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you're " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él " + "es capaz de " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he is " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he's " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella " + "es capaz de " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she is " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she's " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso " + "es capaz de " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it is " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it's " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos " + "son capaces de " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they are " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they're " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros " + "somos capaces de " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we are " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we're " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];
                        break;
                    case 1:
                        sp1 = "yo no " + "soy capaz de " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng1 = "I am not " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];
                        eng12 = "I'm not " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp2 = "tú no " + "eres capaz de " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng2 = "you are not " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];
                        eng22 = "you're not " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3 = "él no " + "es capaz de " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng3 = "he is not " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];
                        eng32 = "he's not " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3ella = "ella no " + "es capaz de " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng3she = "she is not " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];
                        eng3she2 = "she's not " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp3eso = "eso no " + "es capaz de " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        sp3it = "it is not " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];
                        sp3it2 = "it's not " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp4 = "ellos no " + "son capaces de " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng4 = "they are not " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];
                        eng42 = "they're not " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];

                        sp5 = "nosotros no " + "somos capaces de " + vsbc[rand] + arraySodEsp + advfrequ[radv];
                        eng5 = "we are not " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];
                        eng52 = "we're not " + "able to " + verbs[rand] + arraySodEng + frequadv[radv];
                        break;

                }
            }
        }
    }//PD FEB 2023

    //for to dificultad 3 SOlO SPECIAL
    public void forSubTo3() {
        int rand = (int) (Math.random() * verbs.length);
        Pasts pas = new Pasts();
        String temp = verbs[rand];
        int rn1 = (int) (Math.random() * 6);
        int rn2 = (int) (Math.random() * 5);
        int neg = (int) (Math.random() * 2);
        randstarter();
        int radv = (int) (Math.random() * frequadv.length);

        //subject in eng
        String ftsj[] = {
                "for me to ", "for you to ", "for him to ", "for her to ", "for it to ",
                "for them to ", "for us to "
        };

        //subject in spanish
        String ftsjs[] = {
                "para que yo ", "para que tú ", "para que él ", "para que ella ",
                "para que eso ", "para que ellos ", "para que nosotros "
        };

        //subject in eng negative
        String ftsjn[] = {
                "for me not to ", "for you not to ", "for him not to ", "for her not to ",
                "for it not to ", "for them not to ", "for us not to "
        };

        //subject in spanish negative
        String ftsjsn[] = {
                "para que yo no ", "para que tú no ", "para que él no ", "para que ella no ",
                "para que eso no ", "para que ellos no ", "para que nosotros no "
        };

        switch (temp) {
            case "report ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + sorepe[rand1] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + sorep[rand1] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + sorepe[rand1] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + sorep[rand1] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + sorepe[rand1] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + sorep[rand1] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + sorepe[rand1] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + sorep[rand1] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + sorepe[rand1] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + sorep[rand1] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + sorepe[rand1] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + sorep[rand1] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + sorepe[rand1] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + sorep[rand1] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + sorepe[rand1] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + sorep[rand1] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + sorepe[rand1] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + sorep[rand1] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + sorepe[rand1] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + sorep[rand1] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + sorepe[rand1] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + sorep[rand1] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + sorepe[rand1] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + sorep[rand1] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + sorepe[rand1] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + sorep[rand1] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + sorepe[rand1] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + sorep[rand1] + frequadv[radv];
                        break;
                }
                break;

            case "release ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + sosoltar[rand2] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + sorelease[rand2] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + sosoltar[rand2] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + sorelease[rand2] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + sosoltar[rand2] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + sorelease[rand2] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + sosoltar[rand2] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + sorelease[rand2] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + sosoltar[rand2] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + sorelease[rand2] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + sosoltar[rand2] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + sorelease[rand2] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + sosoltar[rand2] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + sorelease[rand2] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjs[0] + v1[rand] + sosoltar[rand2] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + sorelease[rand2] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + sosoltar[rand2] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + sorelease[rand2] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + sosoltar[rand2] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + sorelease[rand2] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + sosoltar[rand2] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + sorelease[rand2] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + sosoltar[rand2] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + sorelease[rand2] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + sosoltar[rand2] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + sorelease[rand2] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + sosoltar[rand2] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + sorelease[rand2] + frequadv[radv];
                        break;
                }
                break;

            case "mix ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + somesclar[rand3] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + somix[rand3] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + somesclar[rand3] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + somix[rand3] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + somesclar[rand3] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + somix[rand3] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + somesclar[rand3] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + somix[rand3] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + somesclar[rand3] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + somix[rand3] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + somesclar[rand3] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + somix[rand3] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + somesclar[rand3] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + somix[rand3] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjs[0] + v1[rand] + somesclar[rand3] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + somix[rand3] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + somesclar[rand3] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + somix[rand3] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + somesclar[rand3] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + somix[rand3] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + somesclar[rand3] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + somix[rand3] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + somesclar[rand3] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + somix[rand3] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + somesclar[rand3] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + somix[rand3] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + somesclar[rand3] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + somix[rand3] + frequadv[radv];
                        break;
                }
                break;

            case "press ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + sopresionar[rand4] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + sopress[rand4] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + sopresionar[rand4] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + sopress[rand4] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + sopresionar[rand4] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + sopress[rand4] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + sopresionar[rand4] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + sopress[rand4] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + sopresionar[rand4] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + sopress[rand4] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + sopresionar[rand4] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + sopress[rand4] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + sopresionar[rand4] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + sopress[rand4] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjs[0] + v1[rand] + sopresionar[rand4] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + sopress[rand4] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + sopresionar[rand4] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + sopress[rand4] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + sopresionar[rand4] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + sopress[rand4] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + sopresionar[rand4] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + sopress[rand4] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + sopresionar[rand4] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + sopress[rand4] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + sopresionar[rand4] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + sopress[rand4] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + sopresionar[rand4] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + sopress[rand4] + frequadv[radv];
                        break;
                }
                break;

            case "finish ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + sofinalizar[rand5] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + sofinish[rand5] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + sofinalizar[rand5] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + sofinish[rand5] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + sofinalizar[rand5] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + sofinish[rand5] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + sofinalizar[rand5] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + sofinish[rand5] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + sofinalizar[rand5] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + sofinish[rand5] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + sofinalizar[rand5] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + sofinish[rand5] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + sofinalizar[rand5] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + sofinish[rand5] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjs[0] + v1[rand] + sofinalizar[rand5] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + sofinish[rand5] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + sofinalizar[rand5] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + sofinish[rand5] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + sofinalizar[rand5] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + sofinish[rand5] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + sofinalizar[rand5] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + sofinish[rand5] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + sofinalizar[rand5] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + sofinish[rand5] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + sofinalizar[rand5] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + sofinish[rand5] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + sofinalizar[rand5] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + sofinish[rand5] + frequadv[radv];
                        break;
                }
                break;

            case "read ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + soleer[rand6] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + soread[rand6] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + soleer[rand6] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + soread[rand6] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + soleer[rand6] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + soread[rand6] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + soleer[rand6] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + soread[rand6] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + soleer[rand6] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + soread[rand6] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + soleer[rand6] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + soread[rand6] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + soleer[rand6] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + soread[rand6] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjs[0] + v1[rand] + soleer[rand6] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + soread[rand6] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + soleer[rand6] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + soread[rand6] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + soleer[rand6] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + soread[rand6] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + soleer[rand6] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + soread[rand6] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + soleer[rand6] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + soread[rand6] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + soleer[rand6] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + soread[rand6] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + soleer[rand6] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + soread[rand6] + frequadv[radv];
                        break;
                }
                break;

            case "increase ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + soincrem[rand7] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + soincrease[rand7] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + soincrem[rand7] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + soincrease[rand7] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + soincrem[rand7] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + soincrease[rand7] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + soincrem[rand7] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + soincrease[rand7] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + soincrem[rand7] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + soincrease[rand7] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + soincrem[rand7] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + soincrease[rand7] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + soincrem[rand7] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + soincrease[rand7] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjs[0] + v1[rand] + soincrem[rand7] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + soincrease[rand7] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + soincrem[rand7] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + soincrease[rand7] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + soincrem[rand7] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + soincrease[rand7] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + soincrem[rand7] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + soincrease[rand7] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + soincrem[rand7] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + soincrease[rand7] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + soincrem[rand7] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + soincrease[rand7] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + soincrem[rand7] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + soincrease[rand7] + frequadv[radv];
                        break;
                }
                break;

            case "play ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + sotocar[rand8] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + soplay[rand8] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + sotocar[rand8] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + soplay[rand8] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + sotocar[rand8] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + soplay[rand8] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + sotocar[rand8] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + soplay[rand8] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + sotocar[rand8] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + soplay[rand8] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + sotocar[rand8] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + soplay[rand8] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + sotocar[rand8] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + soplay[rand8] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjs[0] + v1[rand] + sotocar[rand8] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + soplay[rand8] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + sotocar[rand8] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + soplay[rand8] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + sotocar[rand8] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + soplay[rand8] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + sotocar[rand8] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + soplay[rand8] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + sotocar[rand8] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + soplay[rand8] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + sotocar[rand8] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + soplay[rand8] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + sotocar[rand8] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + soplay[rand8] + frequadv[radv];
                        break;
                }
                break;

            case "feel ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + sosentir[rand9] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + sofeel[rand9] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + sosentir[rand9] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + sofeel[rand9] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + sosentir[rand9] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + sofeel[rand9] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + sosentir[rand9] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + sofeel[rand9] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + sosentir[rand9] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + sofeel[rand9] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + sosentir[rand9] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + sofeel[rand9] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + sosentir[rand9] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + sofeel[rand9] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjs[0] + v1[rand] + sosentir[rand9] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + sofeel[rand9] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + sosentir[rand9] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + sofeel[rand9] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + sosentir[rand9] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + sofeel[rand9] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + sosentir[rand9] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + sofeel[rand9] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + sosentir[rand9] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + sofeel[rand9] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + sosentir[rand9] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + sofeel[rand9] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + sosentir[rand9] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + sofeel[rand9] + frequadv[radv];
                        break;
                }
                break;

            case "turn ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + sovoltear[rand10] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + soturn[rand10] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + sovoltear[rand10] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + soturn[rand10] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + sovoltear[rand10] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + soturn[rand10] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + sovoltear[rand10] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + soturn[rand10] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + sovoltear[rand10] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + soturn[rand10] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + sovoltear[rand10] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + soturn[rand10] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + sovoltear[rand10] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + soturn[rand10] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjs[0] + v1[rand] + sovoltear[rand10] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + soturn[rand10] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + sovoltear[rand10] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + soturn[rand10] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + sovoltear[rand10] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + soturn[rand10] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + sovoltear[rand10] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + soturn[rand10] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + sovoltear[rand10] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + soturn[rand10] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + sovoltear[rand10] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + soturn[rand10] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + sovoltear[rand10] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + soturn[rand10] + frequadv[radv];
                        break;
                }
                break;

            case "say ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + sodecir[rand11] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + sosay[rand11] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + sodecir[rand11] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + sosay[rand11] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + sodecir[rand11] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + sosay[rand11] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + sodecir[rand11] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + sosay[rand11] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + sodecir[rand11] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + sosay[rand11] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + sodecir[rand11] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + sosay[rand11] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + sodecir[rand11] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + sosay[rand11] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjs[0] + v1[rand] + sodecir[rand11] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + sosay[rand11] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + sodecir[rand11] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + sosay[rand11] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + sodecir[rand11] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + sosay[rand11] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + sodecir[rand11] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + sosay[rand11] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + sodecir[rand11] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + sosay[rand11] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + sodecir[rand11] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + sosay[rand11] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + sodecir[rand11] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + sosay[rand11] + frequadv[radv];
                        break;
                }
                break;

            case "spend ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + sogastar[rand12] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + sospend[rand12] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + sogastar[rand12] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + sospend[rand12] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + sogastar[rand12] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + sospend[rand12] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + sogastar[rand12] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + sospend[rand12] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + sogastar[rand12] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + sospend[rand12] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + sogastar[rand12] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + sospend[rand12] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + sogastar[rand12] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + sospend[rand12] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjs[0] + v1[rand] + sogastar[rand12] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + sospend[rand12] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + sogastar[rand12] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + sospend[rand12] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + sogastar[rand12] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + sospend[rand12] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + sogastar[rand12] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + sospend[rand12] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + sogastar[rand12] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + sospend[rand12] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + sogastar[rand12] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + sospend[rand12] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + sogastar[rand12] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + sospend[rand12] + frequadv[radv];
                        break;
                }
                break;

            case "pay ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + sopagar[rand13] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + sopay[rand13] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + sopagar[rand13] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + sopay[rand13] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + sopagar[rand13] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + sopay[rand13] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + sopagar[rand13] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + sopay[rand13] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + sopagar[rand13] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + sopay[rand13] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + sopagar[rand13] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + sopay[rand13] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + sopagar[rand13] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + sopay[rand13] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjs[0] + v1[rand] + sopagar[rand13] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + sopay[rand13] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + sopagar[rand13] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + sopay[rand13] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + sopagar[rand13] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + sopay[rand13] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + sopagar[rand13] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + sopay[rand13] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + sopagar[rand13] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + sopay[rand13] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + sopagar[rand13] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + sopay[rand13] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + sopagar[rand13] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + sopay[rand13] + frequadv[radv];
                        break;
                }

                break;

            case "try ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + sointentar[rand14] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + sotry[rand14] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + sointentar[rand14] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + sotry[rand14] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + sointentar[rand14] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + sotry[rand14] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + sointentar[rand14] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + sotry[rand14] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + sointentar[rand14] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + sotry[rand14] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + sointentar[rand14] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + sotry[rand14] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + sointentar[rand14] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + sotry[rand14] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjs[0] + v1[rand] + sointentar[rand14] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + sotry[rand14] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + sointentar[rand14] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + sotry[rand14] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + sointentar[rand14] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + sotry[rand14] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + sointentar[rand14] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + sotry[rand14] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + sointentar[rand14] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + sotry[rand14] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + sointentar[rand14] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + sotry[rand14] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + sointentar[rand14] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + sotry[rand14] + frequadv[radv];
                        break;
                }
                break;

            case "cook ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + sococinar[rand15] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + socook[rand15] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + sococinar[rand15] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + socook[rand15] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + sococinar[rand15] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + socook[rand15] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + sococinar[rand15] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + socook[rand15] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + sococinar[rand15] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + socook[rand15] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + sococinar[rand15] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + socook[rand15] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + sococinar[rand15] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + socook[rand15] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjs[0] + v1[rand] + sococinar[rand15] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + socook[rand15] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + sococinar[rand15] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + socook[rand15] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + sococinar[rand15] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + socook[rand15] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + sococinar[rand15] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + socook[rand15] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + sococinar[rand15] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + socook[rand15] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + sococinar[rand15] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + socook[rand15] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + sococinar[rand15] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + socook[rand15] + frequadv[radv];
                        break;
                }
                break;

            case "drive ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + soconducir[rand16] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + sodrive[rand16] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + soconducir[rand16] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + sodrive[rand16] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + soconducir[rand16] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + sodrive[rand16] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + soconducir[rand16] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + sodrive[rand16] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + soconducir[rand16] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + sodrive[rand16] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + soconducir[rand16] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + sodrive[rand16] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + soconducir[rand16] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + sodrive[rand16] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjs[0] + v1[rand] + soconducir[rand16] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + sodrive[rand16] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + soconducir[rand16] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + sodrive[rand16] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + soconducir[rand16] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + sodrive[rand16] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + soconducir[rand16] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + sodrive[rand16] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + soconducir[rand16] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + sodrive[rand16] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + soconducir[rand16] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + sodrive[rand16] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + soconducir[rand16] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + sodrive[rand16] + frequadv[radv];
                        break;
                }
                break;

            case "gain ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + sogain1[rand17] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + sogain[rand17] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + sogain1[rand17] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + sogain[rand17] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + sogain1[rand17] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + sogain[rand17] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + sogain1[rand17] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + sogain[rand17] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + sogain1[rand17] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + sogain[rand17] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + sogain1[rand17] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + sogain[rand17] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + sogain1[rand17] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + sogain[rand17] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjs[0] + v1[rand] + sogain1[rand17] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + sogain[rand17] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + sogain1[rand17] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + sogain[rand17] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + sogain1[rand17] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + sogain[rand17] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + sogain1[rand17] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + sogain[rand17] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + sogain1[rand17] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + sogain[rand17] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + sogain1[rand17] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + sogain[rand17] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + sogain1[rand17] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + sogain[rand17] + frequadv[radv];
                        break;
                }
                break;

            case "call ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + sollamar[rand18] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + socall[rand18] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + sollamar[rand18] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + socall[rand18] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + sollamar[rand18] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + socall[rand18] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + sollamar[rand18] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + socall[rand18] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + sollamar[rand18] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + socall[rand18] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + sollamar[rand18] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + socall[rand18] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + sollamar[rand18] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + socall[rand18] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjs[0] + v1[rand] + sollamar[rand18] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + socall[rand18] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + sollamar[rand18] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + socall[rand18] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + sollamar[rand18] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + socall[rand18] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + sollamar[rand18] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + socall[rand18] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + sollamar[rand18] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + socall[rand18] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + sollamar[rand18] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + socall[rand18] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + sollamar[rand18] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + socall[rand18] + frequadv[radv];
                        break;
                }
                break;

            case "deal ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + sorepartir[rand19] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + sodeal[rand19] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + sorepartir[rand19] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + sodeal[rand19] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + sorepartir[rand19] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + sodeal[rand19] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + sorepartir[rand19] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + sodeal[rand19] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + sorepartir[rand19] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + sodeal[rand19] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + sorepartir[rand19] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + sodeal[rand19] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + sorepartir[rand19] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + sodeal[rand19] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjs[0] + v1[rand] + sorepartir[rand19] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + sodeal[rand19] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + sorepartir[rand19] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + sodeal[rand19] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + sorepartir[rand19] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + sodeal[rand19] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + sorepartir[rand19] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + sodeal[rand19] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + sorepartir[rand19] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + sodeal[rand19] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + sorepartir[rand19] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + sodeal[rand19] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + sorepartir[rand19] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + sodeal[rand19] + frequadv[radv];
                        break;
                }
                break;

            case "upset ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + soenojar[rand20] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + soupset[rand20] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + soenojar[rand20] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + soupset[rand20] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + soenojar[rand20] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + soupset[rand20] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + soenojar[rand20] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + soupset[rand20] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + soenojar[rand20] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + soupset[rand20] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + soenojar[rand20] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + soupset[rand20] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + soenojar[rand20] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + soupset[rand20] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjs[0] + v1[rand] + soenojar[rand20] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + soupset[rand20] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + soenojar[rand20] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + soupset[rand20] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + soenojar[rand20] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + soupset[rand20] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + soenojar[rand20] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + soupset[rand20] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + soenojar[rand20] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + soupset[rand20] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + soenojar[rand20] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + soupset[rand20] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + soenojar[rand20] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + soupset[rand20] + frequadv[radv];
                        break;
                }
                break;

            case "produce ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + soproducir[rand21] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + soproduce[rand21] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + soproducir[rand21] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + soproduce[rand21] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + soproducir[rand21] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + soproduce[rand21] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + soproducir[rand21] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + soproduce[rand21] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + soproducir[rand21] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + soproduce[rand21] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + soproducir[rand21] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + soproduce[rand21] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + soproducir[rand21] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + soproduce[rand21] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjs[0] + v1[rand] + soproducir[rand21] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + soproduce[rand21] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + soproducir[rand21] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + soproduce[rand21] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + soproducir[rand21] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + soproduce[rand21] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + soproducir[rand21] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + soproduce[rand21] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + soproducir[rand21] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + soproduce[rand21] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + soproducir[rand21] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + soproduce[rand21] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + soproducir[rand21] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + soproduce[rand21] + frequadv[radv];
                        break;
                }
                break;

            case "appropiate ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + soappropiar[rand22] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + soappropiate[rand22] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + soappropiar[rand22] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + soappropiate[rand22] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + soappropiar[rand22] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + soappropiate[rand22] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + soappropiar[rand22] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + soappropiate[rand22] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + soappropiar[rand22] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + soappropiate[rand22] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + soappropiar[rand22] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + soappropiate[rand22] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + soappropiar[rand22] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + soappropiate[rand22] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjs[0] + v1[rand] + soappropiar[rand22] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + soappropiate[rand22] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + soappropiar[rand22] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + soappropiate[rand22] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + soappropiar[rand22] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + soappropiate[rand22] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + soappropiar[rand22] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + soappropiate[rand22] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + soappropiar[rand22] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + soappropiate[rand22] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + soappropiar[rand22] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + soappropiate[rand22] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + soappropiar[rand22] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + soappropiate[rand22] + frequadv[radv];
                        break;
                }
                break;

            case "leave ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + sodejar[rand23] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + soleave[rand23] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + sodejar[rand23] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + soleave[rand23] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + sodejar[rand23] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + soleave[rand23] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + sodejar[rand23] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + soleave[rand23] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + sodejar[rand23] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + soleave[rand23] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + sodejar[rand23] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + soleave[rand23] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + sodejar[rand23] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + soleave[rand23] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjs[0] + v1[rand] + sodejar[rand23] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + soleave[rand23] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + sodejar[rand23] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + soleave[rand23] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + sodejar[rand23] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + soleave[rand23] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + sodejar[rand23] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + soleave[rand23] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + sodejar[rand23] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + soleave[rand23] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + sodejar[rand23] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + soleave[rand23] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + sodejar[rand23] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + soleave[rand23] + frequadv[radv];
                        break;
                }
                break;

            case "reach ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + soalcanzar[rand24] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + soreach[rand24] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + soalcanzar[rand24] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + soreach[rand24] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + soalcanzar[rand24] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + soreach[rand24] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + soalcanzar[rand24] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + soreach[rand24] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + soalcanzar[rand24] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + soreach[rand24] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + soalcanzar[rand24] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + soreach[rand24] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + soalcanzar[rand24] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + soreach[rand24] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjs[0] + v1[rand] + soalcanzar[rand24] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + soreach[rand24] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + soalcanzar[rand24] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + soreach[rand24] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + soalcanzar[rand24] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + soreach[rand24] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + soalcanzar[rand24] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + soreach[rand24] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + soalcanzar[rand24] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + soreach[rand24] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + soalcanzar[rand24] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + soreach[rand24] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + soalcanzar[rand24] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + soreach[rand24] + frequadv[radv];
                        break;
                }
                break;

            case "express ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + soexpresar[rand25] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + soexpress[rand25] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + soexpresar[rand25] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + soexpress[rand25] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + soexpresar[rand25] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + soexpress[rand25] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + soexpresar[rand25] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + soexpress[rand25] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + soexpresar[rand25] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + soexpress[rand25] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + soexpresar[rand25] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + soexpress[rand25] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + soexpresar[rand25] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + soexpress[rand25] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjs[0] + v1[rand] + soexpresar[rand25] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + soexpress[rand25] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + soexpresar[rand25] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + soexpress[rand25] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + soexpresar[rand25] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + soexpress[rand25] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + soexpresar[rand25] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + soexpress[rand25] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + soexpresar[rand25] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + soexpress[rand25] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + soexpresar[rand25] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + soexpress[rand25] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + soexpresar[rand25] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + soexpress[rand25] + frequadv[radv];
                        break;
                }
                break;

            case "save ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + sosalvar[rand26] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + sosave[rand26] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + sosalvar[rand26] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + sosave[rand26] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + sosalvar[rand26] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + sosave[rand26] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + sosalvar[rand26] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + sosave[rand26] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + sosalvar[rand26] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + sosave[rand26] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + sosalvar[rand26] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + sosave[rand26] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + sosalvar[rand26] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + sosave[rand26] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjs[0] + v1[rand] + sosalvar[rand26] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + sosave[rand26] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + sosalvar[rand26] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + sosave[rand26] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + sosalvar[rand26] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + sosave[rand26] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + sosalvar[rand26] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + sosave[rand26] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + sosalvar[rand26] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + sosave[rand26] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + sosalvar[rand26] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + sosave[rand26] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + sosalvar[rand26] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + sosave[rand26] + frequadv[radv];
                        break;
                }
                break;

            case "handle ":  //comment
                switch (neg) {
                    case 0:  // coment2
                        sp1 = ftsjs[0] + v1s[rand] + somanejar[rand27] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + sohandle[rand27] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + somanejar[rand27] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + sohandle[rand27] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + somanejar[rand27] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + sohandle[rand27] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + somanejar[rand27] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + sohandle[rand27] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + somanejar[rand27] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + sohandle[rand27] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + somanejar[rand27] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + sohandle[rand27] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + somanejar[rand27] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + sohandle[rand27] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjs[0] + v1[rand] + somanejar[rand27] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + sohandle[rand27] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + somanejar[rand27] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + sohandle[rand27] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + somanejar[rand27] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + sohandle[rand27] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + somanejar[rand27] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + sohandle[rand27] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + somanejar[rand27] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + sohandle[rand27] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + somanejar[rand27] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + sohandle[rand27] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + somanejar[rand27] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + sohandle[rand27] + frequadv[radv];
                        break;
                }
                break;

            case "spread ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + somanejar[rand27] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + sohandle[rand27] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + somanejar[rand27] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + sohandle[rand27] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + somanejar[rand27] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + sohandle[rand27] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + somanejar[rand27] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + sohandle[rand27] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + somanejar[rand27] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + sohandle[rand27] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + somanejar[rand27] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + sohandle[rand27] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + somanejar[rand27] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + sohandle[rand27] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjs[0] + v1[rand] + somanejar[rand27] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + sohandle[rand27] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + somanejar[rand27] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + sohandle[rand27] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + somanejar[rand27] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + sohandle[rand27] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + somanejar[rand27] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + sohandle[rand27] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + somanejar[rand27] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + sohandle[rand27] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + somanejar[rand27] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + sohandle[rand27] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + somanejar[rand27] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + sohandle[rand27] + frequadv[radv];
                        break;
                }
                break;
        }
    }//PD 19/04/2022

    //want to dificultad 3 SOLO SPECIAL
    public void wantyouto3() {
        int rand = (int) (Math.random() * verbs.length);
        Pasts pas = new Pasts();
        String temp = verbs[rand];
        int rn1 = (int) (Math.random() * 6);
        int rn2 = (int) (Math.random() * 5);
        int neg = (int) (Math.random() * 2);
        randstarter();
        int radv = (int) (Math.random() * frequadv.length);

        //want to subject
        String wtsj[] = {"I want ", "you want ", "he wants ", "she wants ", "it wants ", "we want ", "they want "};
        //want to subject negative
        String wtsjn[] = {"I don't want ", "you don't want ", "he doesn't want ", "she doesn't want ", "it doesn't want "
                , "we don't want ", "they don't want "};
        //sujetos want to en sp
        String wtsjs[] = {"yo quiero ", "tú quieres ", "él quiere ", "ella quiere ", "eso quiere ", "nosotros queremos ", "ellos quieren "};
        //sujetos want to en sp negativo
        String wtsjsn[] = {"yo no quiero ", "tú no quieres ", "él no quiere ", "ella no quiere ", "eso no quiere ", "nosotros no queremos ", "ellos no quieren "};

        String wtobj1[] = {"you to " + verbs[rand], "him to " + verbs[rand], "her to " + verbs[rand],
                "it to " + verbs[rand], "us to " + verbs[rand], "them to " + verbs[rand]};
        String wtobj2[] = {"me to " + verbs[rand], "him to " + verbs[rand], "her to " + verbs[rand],
                "it to " + verbs[rand], "us to " + verbs[rand], "them to " + verbs[rand]};
        String wtobj3[] = {"you to " + verbs[rand], "me to " + verbs[rand], "her to " + verbs[rand],
                "it to " + verbs[rand], "us to " + verbs[rand], "them to " + verbs[rand]};
        String wtobj4[] = {"you to " + verbs[rand], "him to " + verbs[rand], "me to " + verbs[rand],
                "it to " + verbs[rand], "us to " + verbs[rand], "them to " + verbs[rand]};
        String wtobj5[] = {"you to " + verbs[rand], "him to " + verbs[rand], "her to " + verbs[rand],
                "me to " + verbs[rand], "us to " + verbs[rand], "them to " + verbs[rand]};
        String wtobj6[] = {"you to " + verbs[rand], "him to " + verbs[rand], "her to " + verbs[rand],
                "it to " + verbs[rand], "them to " + verbs[rand]};
        String wtobj7[] = {"you to " + verbs[rand], "him to " + verbs[rand], "her to " + verbs[rand],
                "it to " + verbs[rand], "us to " + verbs[rand], "me to " + verbs[rand]};

        // objetos wt en sp
        String wtobj1s[] = {"que tú " + v2s[rand], "que él " + v3s[rand], "que ella " + v3s[rand],
                "que eso " + v3s[rand], "que nosotros " + v5s[rand], "que ellos " + v4s[rand]};
        String wtobj2s[] = {"que yo " + v1s[rand], "que él " + v3s[rand], "que ella " + v3s[rand],
                "que eso " + v3s[rand], "que nosotros " + v3s[rand], "que ellos " + v3s[rand]};
        String wtobj3s[] = {"que tú " + v2s[rand], "que yo " + v1s[rand], "que ella " + v3s[rand],
                "que eso " + v3s[rand], "que nosotros " + v5s[rand], "que ellos " + v4s[rand]};
        String wtobj4s[] = {"que tú " + v2s[rand], "que él " + v3s[rand], "que yo " + v1s[rand],
                "que eso " + v3s[rand], "que nosotros " + v5s[rand], "que ellos " + v4s[rand]};
        String wtobj5s[] = {"que tú " + v2s[rand], "que él " + v3s[rand], "que ella " + v3s[rand],
                "que yo " + v1s[rand], "que nosotros " + v5s[rand], "que ellos " + v4s[rand]};
        String wtobj6s[] = {"que tú " + v2s[rand], "que él " + v3s[rand], "que ella " + v3s[rand],
                "que eso " + v3s[rand], "que ellos " + v4s[rand]};
        String wtobj7s[] = {"que tú " + v2s[rand], "que él " + v3s[rand], "que ella " + v3s[rand],
                "que eso " + v3s[rand], "que nosotros " + v5s[rand], "que yo " + v1s[rand]};

        switch (temp) {
            case "report ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sorepe[rand1] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + sorep[rand1] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sorepe[rand1] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + sorep[rand1] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sorepe[rand1] + advfrequ[radv];
                        eng3 = wtsj[2] + wtobj3[rn1] + sorep[rand1] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sorepe[rand1] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + sorep[rand1] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sorepe[rand1] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + sorep[rand1] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sorepe[rand1] + advfrequ[radv];
                        eng4 = wtsj[5] + wtobj6[rn2] + sorep[rand1] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sorepe[rand1] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + sorep[rand1] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sorepe[rand1] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sorep[rand1] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sorepe[rand1] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sorep[rand1] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sorepe[rand1] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sorep[rand1] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sorepe[rand1] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sorep[rand1] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sorepe[rand1] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sorep[rand1] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sorepe[rand1] + advfrequ[radv];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sorep[rand1] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sorepe[rand1] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sorep[rand1] + frequadv[radv];
                        break;
                }
                break;

            case "release ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sosoltar[rand2] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + sorelease[rand2] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sosoltar[rand2] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + sorelease[rand2] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sosoltar[rand2] + advfrequ[radv];
                        eng3 = wtsj[2] + wtobj3[rn1] + sorelease[rand2] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sosoltar[rand2] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + sorelease[rand2] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sosoltar[rand2] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + sorelease[rand2] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sosoltar[rand2] + advfrequ[radv];
                        eng4 = wtsj[5] + wtobj6[rn2] + sorelease[rand2] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sosoltar[rand2] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + sorelease[rand2] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjs[0] + v1[rand] + sosoltar[rand2] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sorelease[rand2] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sosoltar[rand2] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sorelease[rand2] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sosoltar[rand2] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sorelease[rand2] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sosoltar[rand2] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sorelease[rand2] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sosoltar[rand2] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sorelease[rand2] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sosoltar[rand2] + advfrequ[radv];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sorelease[rand2] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sosoltar[rand2] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sorelease[rand2] + frequadv[radv];
                        break;
                }
                break;

            case "mix ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + somesclar[rand3] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + somix[rand3] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + somesclar[rand3] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + somix[rand3] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + somesclar[rand3] + advfrequ[radv];
                        eng3 = wtsj[2] + wtobj3[rn1] + somix[rand3] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + somesclar[rand3] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + somix[rand3] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + somesclar[rand3] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + somix[rand3] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + somesclar[rand3] + advfrequ[radv];
                        eng4 = wtsj[5] + wtobj6[rn2] + somix[rand3] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + somesclar[rand3] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + somix[rand3] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjs[0] + v1[rand] + somesclar[rand3] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + somix[rand3] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + somesclar[rand3] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + somix[rand3] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + somesclar[rand3] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + somix[rand3] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + somesclar[rand3] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + somix[rand3] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + somesclar[rand3] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + somix[rand3] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + somesclar[rand3] + advfrequ[radv];
                        eng4 = wtsjn[5] + wtobj6[rn2] + somix[rand3] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + somesclar[rand3] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + somix[rand3] + frequadv[radv];
                        break;
                }
                break;

            case "press ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sopresionar[rand4] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + sopress[rand4] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sopresionar[rand4] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + sopress[rand4] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sopresionar[rand4] + advfrequ[radv];
                        eng3 = wtsj[2] + wtobj3[rn1] + sopress[rand4] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sopresionar[rand4] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + sopress[rand4] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sopresionar[rand4] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + sopress[rand4] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sopresionar[rand4] + advfrequ[radv];
                        eng4 = wtsj[5] + wtobj6[rn2] + sopress[rand4] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sopresionar[rand4] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + sopress[rand4] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjs[0] + v1[rand] + sopresionar[rand4] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sopress[rand4] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sopresionar[rand4] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sopress[rand4] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sopresionar[rand4] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sopress[rand4] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sopresionar[rand4] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sopress[rand4] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sopresionar[rand4] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sopress[rand4] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sopresionar[rand4] + advfrequ[radv];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sopress[rand4] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sopresionar[rand4] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sopress[rand4] + frequadv[radv];
                        break;
                }
                break;

            case "finish ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sofinalizar[rand5] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + sofinish[rand5] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sofinalizar[rand5] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + sofinish[rand5] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sofinalizar[rand5] + advfrequ[radv];
                        eng3 = wtsj[2] + wtobj3[rn1] + sofinish[rand5] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sofinalizar[rand5] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + sofinish[rand5] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sofinalizar[rand5] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + sofinish[rand5] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sofinalizar[rand5] + advfrequ[radv];
                        eng4 = wtsj[5] + wtobj6[rn2] + sofinish[rand5] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sofinalizar[rand5] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + sofinish[rand5] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjs[0] + v1[rand] + sofinalizar[rand5] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sofinish[rand5] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sofinalizar[rand5] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sofinish[rand5] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sofinalizar[rand5] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sofinish[rand5] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sofinalizar[rand5] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sofinish[rand5] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sofinalizar[rand5] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sofinish[rand5] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sofinalizar[rand5] + advfrequ[radv];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sofinish[rand5] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sofinalizar[rand5] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sofinish[rand5] + frequadv[radv];
                        break;
                }
                break;

            case "read ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soleer[rand6] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + soread[rand6] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soleer[rand6] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + soread[rand6] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soleer[rand6] + advfrequ[radv];
                        eng3 = wtsj[2] + wtobj3[rn1] + soread[rand6] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soleer[rand6] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + soread[rand6] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soleer[rand6] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + soread[rand6] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soleer[rand6] + advfrequ[radv];
                        eng4 = wtsj[5] + wtobj6[rn2] + soread[rand6] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soleer[rand6] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + soread[rand6] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjs[0] + v1[rand] + soleer[rand6] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soread[rand6] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soleer[rand6] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soread[rand6] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soleer[rand6] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soread[rand6] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soleer[rand6] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soread[rand6] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soleer[rand6] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soread[rand6] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soleer[rand6] + advfrequ[radv];
                        eng4 = wtsjn[5] + wtobj6[rn2] + soread[rand6] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soleer[rand6] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soread[rand6] + frequadv[radv];
                        break;
                }
                break;

            case "increase ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soincrem[rand7] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + soincrease[rand7] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soincrem[rand7] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + soincrease[rand7] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soincrem[rand7] + advfrequ[radv];
                        eng3 = wtsj[2] + wtobj3[rn1] + soincrease[rand7] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soincrem[rand7] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + soincrease[rand7] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soincrem[rand7] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + soincrease[rand7] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soincrem[rand7] + advfrequ[radv];
                        eng4 = wtsj[5] + wtobj6[rn2] + soincrease[rand7] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soincrem[rand7] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + soincrease[rand7] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjs[0] + v1[rand] + soincrem[rand7] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soincrease[rand7] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soincrem[rand7] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soincrease[rand7] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soincrem[rand7] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soincrease[rand7] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soincrem[rand7] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soincrease[rand7] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soincrem[rand7] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soincrease[rand7] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soincrem[rand7] + advfrequ[radv];
                        eng4 = wtsjn[5] + wtobj6[rn2] + soincrease[rand7] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soincrem[rand7] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soincrease[rand7] + frequadv[radv];
                        break;
                }
                break;

            case "play ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sotocar[rand8] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + soplay[rand8] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sotocar[rand8] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + soplay[rand8] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sotocar[rand8] + advfrequ[radv];
                        eng3 = wtsj[2] + wtobj3[rn1] + soplay[rand8] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sotocar[rand8] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + soplay[rand8] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sotocar[rand8] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + soplay[rand8] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sotocar[rand8] + advfrequ[radv];
                        eng4 = wtsj[5] + wtobj6[rn2] + soplay[rand8] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sotocar[rand8] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + soplay[rand8] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjs[0] + v1[rand] + sotocar[rand8] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soplay[rand8] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sotocar[rand8] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soplay[rand8] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sotocar[rand8] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soplay[rand8] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sotocar[rand8] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soplay[rand8] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sotocar[rand8] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soplay[rand8] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sotocar[rand8] + advfrequ[radv];
                        eng4 = wtsjn[5] + wtobj6[rn2] + soplay[rand8] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sotocar[rand8] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soplay[rand8] + frequadv[radv];
                        break;
                }
                break;

            case "feel ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sosentir[rand9] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + sofeel[rand9] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sosentir[rand9] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + sofeel[rand9] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sosentir[rand9] + advfrequ[radv];
                        eng3 = wtsj[2] + wtobj3[rn1] + sofeel[rand9] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sosentir[rand9] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + sofeel[rand9] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sosentir[rand9] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + sofeel[rand9] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sosentir[rand9] + advfrequ[radv];
                        eng4 = wtsj[5] + wtobj6[rn2] + sofeel[rand9] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sosentir[rand9] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + sofeel[rand9] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjs[0] + v1[rand] + sosentir[rand9] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sofeel[rand9] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sosentir[rand9] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sofeel[rand9] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sosentir[rand9] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sofeel[rand9] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sosentir[rand9] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sofeel[rand9] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sosentir[rand9] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sofeel[rand9] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sosentir[rand9] + advfrequ[radv];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sofeel[rand9] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sosentir[rand9] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sofeel[rand9] + frequadv[radv];
                        break;
                }
                break;

            case "turn ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sovoltear[rand10] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + soturn[rand10] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sovoltear[rand10] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + soturn[rand10] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sovoltear[rand10] + advfrequ[radv];
                        eng3 = wtsj[2] + wtobj3[rn1] + soturn[rand10] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sovoltear[rand10] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + soturn[rand10] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sovoltear[rand10] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + soturn[rand10] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sovoltear[rand10] + advfrequ[radv];
                        eng4 = wtsj[5] + wtobj6[rn2] + soturn[rand10] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sovoltear[rand10] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + soturn[rand10] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjs[0] + v1[rand] + sovoltear[rand10] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soturn[rand10] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sovoltear[rand10] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soturn[rand10] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sovoltear[rand10] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soturn[rand10] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sovoltear[rand10] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soturn[rand10] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sovoltear[rand10] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soturn[rand10] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sovoltear[rand10] + advfrequ[radv];
                        eng4 = wtsjn[5] + wtobj6[rn2] + soturn[rand10] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sovoltear[rand10] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soturn[rand10] + frequadv[radv];
                        break;
                }
                break;

            case "say ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sodecir[rand11] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + sosay[rand11] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sodecir[rand11] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + sosay[rand11] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sodecir[rand11] + advfrequ[radv];
                        eng3 = wtsj[2] + wtobj3[rn1] + sosay[rand11] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sodecir[rand11] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + sosay[rand11] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sodecir[rand11] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + sosay[rand11] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sodecir[rand11] + advfrequ[radv];
                        eng4 = wtsj[5] + wtobj6[rn2] + sosay[rand11] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sodecir[rand11] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + sosay[rand11] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjs[0] + v1[rand] + sodecir[rand11] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sosay[rand11] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sodecir[rand11] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sosay[rand11] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sodecir[rand11] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sosay[rand11] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sodecir[rand11] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sosay[rand11] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sodecir[rand11] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sosay[rand11] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sodecir[rand11] + advfrequ[radv];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sosay[rand11] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sodecir[rand11] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sosay[rand11] + frequadv[radv];
                        break;
                }
                break;

            case "spend ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sogastar[rand12] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + sospend[rand12] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sogastar[rand12] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + sospend[rand12] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sogastar[rand12] + advfrequ[radv];
                        eng3 = wtsj[2] + wtobj3[rn1] + sospend[rand12] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sogastar[rand12] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + sospend[rand12] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sogastar[rand12] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + sospend[rand12] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sogastar[rand12] + advfrequ[radv];
                        eng4 = wtsj[5] + wtobj6[rn2] + sospend[rand12] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sogastar[rand12] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + sospend[rand12] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjs[0] + v1[rand] + sogastar[rand12] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sospend[rand12] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sogastar[rand12] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sospend[rand12] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sogastar[rand12] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sospend[rand12] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sogastar[rand12] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sospend[rand12] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sogastar[rand12] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sospend[rand12] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sogastar[rand12] + advfrequ[radv];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sospend[rand12] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sogastar[rand12] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sospend[rand12] + frequadv[radv];
                        break;
                }
                break;

            case "pay ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sopagar[rand13] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + sopay[rand13] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sopagar[rand13] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + sopay[rand13] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sopagar[rand13] + advfrequ[radv];
                        eng3 = wtsj[2] + wtobj3[rn1] + sopay[rand13] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sopagar[rand13] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + sopay[rand13] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sopagar[rand13] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + sopay[rand13] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sopagar[rand13] + advfrequ[radv];
                        eng4 = wtsj[5] + wtobj6[rn2] + sopay[rand13] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sopagar[rand13] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + sopay[rand13] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjs[0] + v1[rand] + sopagar[rand13] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sopay[rand13] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sopagar[rand13] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sopay[rand13] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sopagar[rand13] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sopay[rand13] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sopagar[rand13] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sopay[rand13] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sopagar[rand13] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sopay[rand13] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sopagar[rand13] + advfrequ[radv];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sopay[rand13] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sopagar[rand13] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sopay[rand13] + frequadv[radv];
                        break;
                }

                break;

            case "try ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sointentar[rand14] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + sotry[rand14] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sointentar[rand14] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + sotry[rand14] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sointentar[rand14] + advfrequ[radv];
                        eng3 = wtsj[2] + wtobj3[rn1] + sotry[rand14] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sointentar[rand14] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + sotry[rand14] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sointentar[rand14] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + sotry[rand14] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sointentar[rand14] + advfrequ[radv];
                        eng4 = wtsj[5] + wtobj6[rn2] + sotry[rand14] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sointentar[rand14] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + sotry[rand14] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjs[0] + v1[rand] + sointentar[rand14] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sotry[rand14] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sointentar[rand14] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sotry[rand14] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sointentar[rand14] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sotry[rand14] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sointentar[rand14] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sotry[rand14] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sointentar[rand14] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sotry[rand14] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sointentar[rand14] + advfrequ[radv];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sotry[rand14] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sointentar[rand14] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sotry[rand14] + frequadv[radv];
                        break;
                }
                break;

            case "cook ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sococinar[rand15] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + socook[rand15] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sococinar[rand15] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + socook[rand15] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sococinar[rand15] + advfrequ[radv];
                        eng3 = wtsj[2] + wtobj3[rn1] + socook[rand15] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sococinar[rand15] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + socook[rand15] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sococinar[rand15] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + socook[rand15] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sococinar[rand15] + advfrequ[radv];
                        eng4 = wtsj[5] + wtobj6[rn2] + socook[rand15] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sococinar[rand15] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + socook[rand15] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjs[0] + v1[rand] + sococinar[rand15] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + socook[rand15] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sococinar[rand15] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + socook[rand15] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sococinar[rand15] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + socook[rand15] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sococinar[rand15] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + socook[rand15] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sococinar[rand15] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + socook[rand15] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sococinar[rand15] + advfrequ[radv];
                        eng4 = wtsjn[5] + wtobj6[rn2] + socook[rand15] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sococinar[rand15] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + socook[rand15] + frequadv[radv];
                        break;
                }
                break;

            case "drive ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soconducir[rand16] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + sodrive[rand16] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soconducir[rand16] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + sodrive[rand16] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soconducir[rand16] + advfrequ[radv];
                        eng3 = wtsj[2] + wtobj3[rn1] + sodrive[rand16] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soconducir[rand16] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + sodrive[rand16] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soconducir[rand16] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + sodrive[rand16] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soconducir[rand16] + advfrequ[radv];
                        eng4 = wtsj[5] + wtobj6[rn2] + sodrive[rand16] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soconducir[rand16] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + sodrive[rand16] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjs[0] + v1[rand] + soconducir[rand16] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sodrive[rand16] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soconducir[rand16] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sodrive[rand16] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soconducir[rand16] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sodrive[rand16] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soconducir[rand16] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sodrive[rand16] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soconducir[rand16] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sodrive[rand16] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soconducir[rand16] + advfrequ[radv];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sodrive[rand16] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soconducir[rand16] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sodrive[rand16] + frequadv[radv];
                        break;
                }
                break;

            case "gain ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sogain1[rand17] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + sogain[rand17] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sogain1[rand17] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + sogain[rand17] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sogain1[rand17] + advfrequ[radv];
                        eng3 = wtsj[2] + wtobj3[rn1] + sogain[rand17] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sogain1[rand17] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + sogain[rand17] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sogain1[rand17] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + sogain[rand17] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sogain1[rand17] + advfrequ[radv];
                        eng4 = wtsj[5] + wtobj6[rn2] + sogain[rand17] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sogain1[rand17] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + sogain[rand17] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjs[0] + v1[rand] + sogain1[rand17] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sogain[rand17] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sogain1[rand17] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sogain[rand17] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sogain1[rand17] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sogain[rand17] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sogain1[rand17] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sogain[rand17] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sogain1[rand17] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sogain[rand17] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sogain1[rand17] + advfrequ[radv];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sogain[rand17] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sogain1[rand17] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sogain[rand17] + frequadv[radv];
                        break;
                }
                break;

            case "call ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sollamar[rand18] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + socall[rand18] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sollamar[rand18] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + socall[rand18] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sollamar[rand18] + advfrequ[radv];
                        eng3 = wtsj[2] + wtobj3[rn1] + socall[rand18] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sollamar[rand18] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + socall[rand18] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sollamar[rand18] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + socall[rand18] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sollamar[rand18] + advfrequ[radv];
                        eng4 = wtsj[5] + wtobj6[rn2] + socall[rand18] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sollamar[rand18] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + socall[rand18] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjs[0] + v1[rand] + sollamar[rand18] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + socall[rand18] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sollamar[rand18] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + socall[rand18] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sollamar[rand18] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + socall[rand18] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sollamar[rand18] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + socall[rand18] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sollamar[rand18] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + socall[rand18] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sollamar[rand18] + advfrequ[radv];
                        eng4 = wtsjn[5] + wtobj6[rn2] + socall[rand18] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sollamar[rand18] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + socall[rand18] + frequadv[radv];
                        break;
                }
                break;

            case "deal ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sorepartir[rand19] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + sodeal[rand19] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sorepartir[rand19] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + sodeal[rand19] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sorepartir[rand19] + advfrequ[radv];
                        eng3 = wtsj[2] + wtobj3[rn1] + sodeal[rand19] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sorepartir[rand19] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + sodeal[rand19] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sorepartir[rand19] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + sodeal[rand19] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sorepartir[rand19] + advfrequ[radv];
                        eng4 = wtsj[5] + wtobj6[rn2] + sodeal[rand19] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sorepartir[rand19] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + sodeal[rand19] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjs[0] + v1[rand] + sorepartir[rand19] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sodeal[rand19] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sorepartir[rand19] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sodeal[rand19] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sorepartir[rand19] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sodeal[rand19] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sorepartir[rand19] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sodeal[rand19] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sorepartir[rand19] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sodeal[rand19] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sorepartir[rand19] + advfrequ[radv];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sodeal[rand19] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sorepartir[rand19] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sodeal[rand19] + frequadv[radv];
                        break;
                }
                break;

            case "upset ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soenojar[rand20] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + soupset[rand20] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soenojar[rand20] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + soupset[rand20] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soenojar[rand20] + advfrequ[radv];
                        eng3 = wtsj[2] + wtobj3[rn1] + soupset[rand20] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soenojar[rand20] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + soupset[rand20] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soenojar[rand20] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + soupset[rand20] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soenojar[rand20] + advfrequ[radv];
                        eng4 = wtsj[5] + wtobj6[rn2] + soupset[rand20] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soenojar[rand20] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + soupset[rand20] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjs[0] + v1[rand] + soenojar[rand20] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soupset[rand20] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soenojar[rand20] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soupset[rand20] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soenojar[rand20] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soupset[rand20] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soenojar[rand20] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soupset[rand20] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soenojar[rand20] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soupset[rand20] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soenojar[rand20] + advfrequ[radv];
                        eng4 = wtsjn[5] + wtobj6[rn2] + soupset[rand20] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soenojar[rand20] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soupset[rand20] + frequadv[radv];
                        break;
                }
                break;

            case "produce ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soproducir[rand21] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + soproduce[rand21] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soproducir[rand21] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + soproduce[rand21] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soproducir[rand21] + advfrequ[radv];
                        eng3 = wtsj[2] + wtobj3[rn1] + soproduce[rand21] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soproducir[rand21] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + soproduce[rand21] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soproducir[rand21] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + soproduce[rand21] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soproducir[rand21] + advfrequ[radv];
                        eng4 = wtsj[5] + wtobj6[rn2] + soproduce[rand21] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soproducir[rand21] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + soproduce[rand21] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjs[0] + v1[rand] + soproducir[rand21] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soproduce[rand21] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soproducir[rand21] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soproduce[rand21] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soproducir[rand21] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soproduce[rand21] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soproducir[rand21] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soproduce[rand21] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soproducir[rand21] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soproduce[rand21] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soproducir[rand21] + advfrequ[radv];
                        eng4 = wtsjn[5] + wtobj6[rn2] + soproduce[rand21] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soproducir[rand21] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soproduce[rand21] + frequadv[radv];
                        break;
                }
                break;

            case "appropiate ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soappropiar[rand22] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + soappropiate[rand22] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soappropiar[rand22] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + soappropiate[rand22] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soappropiar[rand22] + advfrequ[radv];
                        eng3 = wtsj[2] + wtobj3[rn1] + soappropiate[rand22] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soappropiar[rand22] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + soappropiate[rand22] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soappropiar[rand22] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + soappropiate[rand22] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soappropiar[rand22] + advfrequ[radv];
                        eng4 = wtsj[5] + wtobj6[rn2] + soappropiate[rand22] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soappropiar[rand22] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + soappropiate[rand22] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjs[0] + v1[rand] + soappropiar[rand22] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soappropiate[rand22] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soappropiar[rand22] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soappropiate[rand22] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soappropiar[rand22] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soappropiate[rand22] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soappropiar[rand22] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soappropiate[rand22] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soappropiar[rand22] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soappropiate[rand22] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soappropiar[rand22] + advfrequ[radv];
                        eng4 = wtsjn[5] + wtobj6[rn2] + soappropiate[rand22] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soappropiar[rand22] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soappropiate[rand22] + frequadv[radv];
                        break;
                }
                break;

            case "leave ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sodejar[rand23] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + soleave[rand23] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sodejar[rand23] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + soleave[rand23] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sodejar[rand23] + advfrequ[radv];
                        eng3 = wtsj[2] + wtobj3[rn1] + soleave[rand23] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sodejar[rand23] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + soleave[rand23] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sodejar[rand23] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + soleave[rand23] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sodejar[rand23] + advfrequ[radv];
                        eng4 = wtsj[5] + wtobj6[rn2] + soleave[rand23] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sodejar[rand23] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + soleave[rand23] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjs[0] + v1[rand] + sodejar[rand23] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soleave[rand23] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sodejar[rand23] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soleave[rand23] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sodejar[rand23] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soleave[rand23] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sodejar[rand23] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soleave[rand23] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sodejar[rand23] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soleave[rand23] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sodejar[rand23] + advfrequ[radv];
                        eng4 = wtsjn[5] + wtobj6[rn2] + soleave[rand23] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sodejar[rand23] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soleave[rand23] + frequadv[radv];
                        break;
                }
                break;

            case "reach ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soalcanzar[rand24] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + soreach[rand24] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soalcanzar[rand24] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + soreach[rand24] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soalcanzar[rand24] + advfrequ[radv];
                        eng3 = wtsj[2] + wtobj3[rn1] + soreach[rand24] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soalcanzar[rand24] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + soreach[rand24] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soalcanzar[rand24] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + soreach[rand24] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soalcanzar[rand24] + advfrequ[radv];
                        eng4 = wtsj[5] + wtobj6[rn2] + soreach[rand24] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soalcanzar[rand24] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + soreach[rand24] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjs[0] + v1[rand] + soalcanzar[rand24] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soreach[rand24] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soalcanzar[rand24] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soreach[rand24] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soalcanzar[rand24] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soreach[rand24] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soalcanzar[rand24] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soreach[rand24] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soalcanzar[rand24] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soreach[rand24] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soalcanzar[rand24] + advfrequ[radv];
                        eng4 = wtsjn[5] + wtobj6[rn2] + soreach[rand24] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soalcanzar[rand24] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soreach[rand24] + frequadv[radv];
                        break;
                }
                break;

            case "express ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soexpresar[rand25] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + soexpress[rand25] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soexpresar[rand25] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + soexpress[rand25] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soexpresar[rand25] + advfrequ[radv];
                        eng3 = wtsj[2] + wtobj3[rn1] + soexpress[rand25] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soexpresar[rand25] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + soexpress[rand25] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soexpresar[rand25] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + soexpress[rand25] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soexpresar[rand25] + advfrequ[radv];
                        eng4 = wtsj[5] + wtobj6[rn2] + soexpress[rand25] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soexpresar[rand25] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + soexpress[rand25] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjs[0] + v1[rand] + soexpresar[rand25] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soexpress[rand25] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soexpresar[rand25] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soexpress[rand25] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soexpresar[rand25] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soexpress[rand25] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soexpresar[rand25] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soexpress[rand25] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soexpresar[rand25] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soexpress[rand25] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soexpresar[rand25] + advfrequ[radv];
                        eng4 = wtsjn[5] + wtobj6[rn2] + soexpress[rand25] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soexpresar[rand25] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soexpress[rand25] + frequadv[radv];
                        break;
                }
                break;

            case "save ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sosalvar[rand26] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + sosave[rand26] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sosalvar[rand26] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + sosave[rand26] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sosalvar[rand26] + advfrequ[radv];
                        eng3 = wtsj[2] + wtobj3[rn1] + sosave[rand26] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sosalvar[rand26] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + sosave[rand26] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sosalvar[rand26] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + sosave[rand26] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sosalvar[rand26] + advfrequ[radv];
                        eng4 = wtsj[5] + wtobj6[rn2] + sosave[rand26] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sosalvar[rand26] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + sosave[rand26] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjs[0] + v1[rand] + sosalvar[rand26] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sosave[rand26] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sosalvar[rand26] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sosave[rand26] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sosalvar[rand26] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sosave[rand26] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sosalvar[rand26] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sosave[rand26] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sosalvar[rand26] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sosave[rand26] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sosalvar[rand26] + advfrequ[radv];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sosave[rand26] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sosalvar[rand26] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sosave[rand26] + frequadv[radv];
                        break;
                }
                break;

            case "handle ":  //comment
                switch (neg) {
                    case 0:  // coment2
                        sp1 = wtsjs[0] + wtobj1s[rn1] + somanejar[rand27] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + sohandle[rand27] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + somanejar[rand27] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + sohandle[rand27] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + somanejar[rand27] + advfrequ[radv];
                        eng3 = wtsj[2] + wtobj3[rn1] + sohandle[rand27] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + somanejar[rand27] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + sohandle[rand27] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + somanejar[rand27] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + sohandle[rand27] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + somanejar[rand27] + advfrequ[radv];
                        eng4 = wtsj[5] + wtobj6[rn2] + sohandle[rand27] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + somanejar[rand27] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + sohandle[rand27] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjs[0] + v1[rand] + somanejar[rand27] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sohandle[rand27] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + somanejar[rand27] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sohandle[rand27] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + somanejar[rand27] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sohandle[rand27] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + somanejar[rand27] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sohandle[rand27] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + somanejar[rand27] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sohandle[rand27] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + somanejar[rand27] + advfrequ[radv];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sohandle[rand27] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + somanejar[rand27] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sohandle[rand27] + frequadv[radv];
                        break;
                }
                break;

            case "spread ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + somanejar[rand27] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + sohandle[rand27] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + somanejar[rand27] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + sohandle[rand27] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + somanejar[rand27] + advfrequ[radv];
                        eng3 = wtsj[2] + wtobj3[rn1] + sohandle[rand27] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + somanejar[rand27] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + sohandle[rand27] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + somanejar[rand27] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + sohandle[rand27] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + somanejar[rand27] + advfrequ[radv];
                        eng4 = wtsj[5] + wtobj6[rn2] + sohandle[rand27] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + somanejar[rand27] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + sohandle[rand27] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjs[0] + v1[rand] + somanejar[rand27] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sohandle[rand27] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + somanejar[rand27] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sohandle[rand27] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + somanejar[rand27] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sohandle[rand27] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + somanejar[rand27] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sohandle[rand27] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + somanejar[rand27] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sohandle[rand27] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + somanejar[rand27] + advfrequ[radv];
                        eng4 = wtsjn[5] + wtobj6[rn2] + sohandle[rand27] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + somanejar[rand27] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sohandle[rand27] + frequadv[radv];
                        break;
                }
                break;
        }


    }//PD 19/04/2022



    //Dificultad 4
    public void GenPresSimp4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo " + v1[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + v2[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + v3[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he " + verbs3[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + v3[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she " + verbs3[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + v3[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it " + verbs3[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + v4[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + v5nos[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no " + v1[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I " + "don't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + "no " + v2[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you " + "don't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + "no " + v3[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he " + "doesn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + "no " + v3[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she " + "doesn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + "no " + v3[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it " + "doesn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + "no " + v4[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they " + "don't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + "no " + v5nos[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we " + "don't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenPresCont4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo estoy " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I am " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I'm " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú estás " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you are " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you're " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él está " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he is " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he's " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella está " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she is " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she's " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso está " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it is " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it's " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos están " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they are " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they're " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros estamos " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we are " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we're " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no estoy " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I " + "am not " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I'm not " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + "no estás " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you're not " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you " + "aren't " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + "no está " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he's not " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he " + "isn't " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + "no está " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she's not " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she " + "isn't " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + "no está " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it's not " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it " + "isn't " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + "no están " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they're not " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they " + "aren't " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + "no están " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we're not " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we " + "aren't " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenPresPerf4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo he " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I've " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú has " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you've " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él ha " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he has " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he's " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella ha " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she has " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she's " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso ha " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it has " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it's " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos han " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they've " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros hemos " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we've " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                    case 1:
                        sp1 = "yo no he " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I have not " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I haven't " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú no has " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you have not " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you haven't " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él no ha " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he has not " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he hasn't " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella no ha " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she has not " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she hasn't " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso no ha " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it has not " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it hasn't " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos no han " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they have not " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they haven't " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros no hemos " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we have not " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we haven't " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenPresPerfCont4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo he estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú has estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él ha estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he has been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella ha estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she has been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso ha estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it has been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos han estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros hemos estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo no he estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I haven't been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú no has estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you haven't been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él no ha estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he hasn't been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella no ha estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she hasn't been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso no ha estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it hasn't been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos no han estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they haven't been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros no hemos estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we haven't been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023

    //Pasados
    public void GenPastSimp4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 4);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo " + vsp1[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I " + vsp[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + vsp2[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you " + vsp[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + vsp3[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he " + vsp[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + vsp3[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she " + vsp[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + vsp3[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it " + vsp[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + vsp4[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they " + vsp[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + vsp5[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we " + vsp[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no " + vsp1[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I " + "didn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + "no " + vsp2[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you " + "didn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + "no " + vsp3[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he " + "didn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + "no " + vsp3[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she " + "didn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + "no " + vsp3[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it " + "didn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + "no " + vsp4[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they " + "didn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + "no " + vsp5[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we " + "didn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                    case 2:
                        sp1 = "yo " + vsp1i[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I " + vsp[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + vsp2i[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you " + vsp[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + vsp3i[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he " + vsp[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + vsp3i[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she " + vsp[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + vsp3i[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it " + vsp[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + vsp4i[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they " + vsp[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + vsp5i[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we " + vsp[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 3:
                        sp1 = "yo " + "no " + vsp1i[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I " + "didn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + "no " + vsp2i[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you " + "didn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + "no " + vsp3i[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he " + "didn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + "no " + vsp3i[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she " + "didn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + "no " + vsp3i[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it " + "didn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + "no " + vsp4i[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they " + "didn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + "no " + vsp5i[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we " + "didn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenPastCont4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo estaba " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I was " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I was " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú estabas " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you were " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you were " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él estaba " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he was " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he was " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella estaba " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she was " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she was " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso estaba " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it was " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it was " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos estaban " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they were " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they were " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros estabamos " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we were " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we were " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                    case 1:
                        sp1 = "yo " + "no estaba " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I " + "was not " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I " + "wasn't " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + "no estabas " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you " + "were not " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you " + "weren't " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + "no estaba " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he " + "was not " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he " + "wasn't " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + "no estaba " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she " + "was not " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she " + "wasn't " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + "no estaba " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it " + "was not " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it " + "wasn't " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + "no estaban " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they " + "were not " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they " + "weren't " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + "no estabamos " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we " + "were not " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we " + "weren't " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenPastPerf4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo había " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I had " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I'd " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú habías " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you had " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you'd " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él había " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he had " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he'd " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella había " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she had " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she'd " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso había " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it had " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it'd " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos habían " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they had " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they'd " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros habíamos " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we had " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we'd " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo no había " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I had not " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I hadn't " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú no habías " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you had not " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you hadn't " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él no había " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he had not " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he hadn't " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella no había " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she had not " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she hadn't " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso no había " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it had not " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it hadn't " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos no habían " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they had not " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they hadn't " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros no habíamos " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we had not " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we hadn't " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenPastPerfCont4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo había estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I had been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú habías estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you had been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él había estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he had been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella había estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she had been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso había estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it had been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos habían estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they had been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros habíamos estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we had been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo no había estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I hadn't been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú no habías estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you hadn't been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él no había estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he hadn't been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella no había estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she hadn't been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso no había estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it hadn't been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos no habían estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they hadn't been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros no habíamos estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we hadn't been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023

    //Futuros
    public void GenFutSimp4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo " + vsf1[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I will " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + vsf2[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you will " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + vsf3[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he will " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + vsf3[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she will " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + vsf3[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it will " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + vsf5[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they will " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + vsf4[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we will " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no " + vsf1[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I " + "won't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + "no " + vsf2[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you " + "won't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + "no " + vsf3[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he " + "won't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + "no " + vsf3[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she " + "won't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + "no " + vsf3[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it " + "won't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + "no " + vsf5[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they " + "won't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + "no " + vsf4[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we " + "won't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenFutCont4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo estaré " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I will be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I'll be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú estarás " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you will be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you'll be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él estará " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he will be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he'll be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella estará " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she will be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she'll be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso estará " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it will be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it'll be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos estarán " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they will be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they'll be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros estaremos " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we will be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we'll be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no estaré " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I " + "will not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I " + "won't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + "no estarás " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you " + "will not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you " + "won't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + "no estará " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he " + "will not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he " + "won't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + "no estará " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she " + "will not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she " + "won't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + "no estará " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it " + "will not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it " + "won't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + "no estarán " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they " + "will not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they " + "won't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + "no estaremos " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we " + "will not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we " + "won't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenFutPerf4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo habré " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I will have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I'll have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú habrás " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you will have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you'll have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él habrá " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he will have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he'll have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella habrá " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she will have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she'll have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso habrá " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it will have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it'll have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos habrán " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they will have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they'll have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros habremos " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we will have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we'll have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                    case 1:
                        sp1 = "yo no habré " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I will not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I won't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú no habrás " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you will not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you won't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él no habrá " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he will not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he won't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella no habrá " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she will not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she won't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso no habrá " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it will not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it won't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos no habrán " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they will not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they won't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros no habremos " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we will not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we won't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenFutPerfCont4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo habré estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I will have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú habrás estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you will have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él habrá estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he will have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella habrá estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she will have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso habrá estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it will have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos habrán estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they will have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros habremos estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we will have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo no habré estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I won't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú no habrás estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you won't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él no habrá estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he won't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella no habrá estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she won't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso no habrá estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it won't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos no habrán estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they won't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros no habremos estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we won't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023

    // WOULD
    public void GenWouldSimp4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo " + vsb1w[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I would " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + vsb2w[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you would " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + vsb3w[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he would " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + vsb3w[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she would " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + vsb3w[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it would " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + vsb4w[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they would " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + vsb5w[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we would " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no " + vsb1w[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I " + "wouldn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + "no " + vsb2w[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you " + "wouldn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + "no " + vsb3w[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he " + "wouldn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + "no " + vsb3w[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she " + "wouldn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + "no " + vsb3w[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it " + "wouldn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + "no " + vsb4w[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they " + "wouldn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + "no " + vsb5w[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we " + "wouldn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenWouldCont4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo estaría " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I would be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I'd be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú estarías " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you would be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you'd be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él estaría " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he would be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he'd be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella estaría " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she would be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she'd be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso estaría " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it would be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it'd be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos estarían " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they would be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they'd be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros estaríamos " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we would be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we'd be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no estaría " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I " + "would not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I " + "wouldn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + "no estarías " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you " + "would not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you " + "wouldn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + "no estaría " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he " + "would not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he " + "wouldn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + "no estaría " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she " + "would not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she " + "wouldn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + "no estaría " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it " + "would not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it " + "wouldn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + "no estarían " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they " + "would not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they " + "wouldn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + "no estaríamos " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we " + "would not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we " + "wouldn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenWouldPerf4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo habría " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I would have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I'd have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú habrías " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you would have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you'd have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él habría " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he would have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he'd have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella habría " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she would have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she'd have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso habría " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it would have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it'd have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos habrían " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they would have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they'd have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros habríamos " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we would have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we'd have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                    case 1:
                        sp1 = "yo no habría " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I would not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I wouldn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú no habrías " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you would not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you wouldn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él no habría " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he would not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he wouldn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella no habría " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she would not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she wouldn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso no habría " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it would not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it wouldn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos no habrían " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they would not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they wouldn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros no habríamos " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we would not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we wouldn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenWouldPerfCont4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo habría estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I would have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú habrías estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you would have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él habría estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he would have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella habría estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she would have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso habría estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it would have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos habrían estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they would have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros habríamos estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we would have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo no habría estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I wouldn't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú no habrías estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you wouldn't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él no habría estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he wouldn't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella no habría estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she wouldn't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso no habría estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it wouldn't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos no habrían estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they wouldn't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros no habríamos estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we wouldn't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023

    //COULD
    public void GenCouldSimp4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo podría " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I could " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú podrías " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you could " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él podría " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he could " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella podría " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she could " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso podría " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it could " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos podrían " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they could " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros podríamos " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we could " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no podría " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I " + "couldn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + "no podrías " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you " + "couldn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + "no podría " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he " + "couldn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + "no podría " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she " + "couldn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + "no podría " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it " + "couldn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + "no podrían " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they " + "couldn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + "no podríamos " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we " + "couldn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenCouldCont4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo podría estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I could be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I could be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú podrías estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you could be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you could be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él podría estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he could be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he could be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella podría estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she could be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she could be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso podría estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it could be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it could be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos podrían estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they could be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they could be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros podríamos estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we could be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we could be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no podría estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I " + "could not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I " + "couldn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + "no podrías estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you " + "could not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you " + "couldn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + "no podría estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he " + "could not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he " + "couldn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + "no podría estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she " + "could not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she " + "couldn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + "no podría estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it " + "could not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it " + "couldn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + "no podrían estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they " + "could not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they " + "couldn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + "no podríamos estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we " + "could not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52= "we " + "couldn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenCouldPerf4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo pude haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I could have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I could have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú pudiste haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you could have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you could have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él pudo haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he could have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he could have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella pudiese haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she could have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she could have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso pudiese haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it could have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it could have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos pudiesen haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they could have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they could have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros pudiesemos haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we could have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we could have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no pude haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I " + "could not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I " + "couldn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + "no pudiste haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you " + "could not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you " + "couldn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + "no pudo haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he " + "could not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he " + "couldn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + "no pudiese haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she " + "could not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she " + "couldn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + "no pudiese haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it " + "could not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it " + "couldn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + "no pudiesen haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they " + "could not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they " + "couldn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + "no pudiesemos haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we " + "could not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we " + "couldn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenCouldPerfCont4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo podría haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I could have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú podrías haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you could have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él podría haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he could have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella podría haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she could have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso podría haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it could have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos podrían haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they could have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros podríamos haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we could have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no podría haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I " + "couldn't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + "no podrías haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you " + "couldn't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + "no podría haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he " + "couldn't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + "no podría haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she " + "couldn't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + "no podría haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it " + "couldn't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + "no podrían haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they " + "couldn't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + "no podríamos haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we " + "couldn't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023

    // MIGHT
    public void GenMightSimp4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo quizá " + v1s[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I might " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú quizá " + v2s[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you might " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él quizá " + v3s[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he might " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella quizá " + v3s[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she might " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso quizá" + v3s[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it might " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos quizá " + v4s[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they might " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros quizá " + v5s[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we might " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo quizá no " + v1s[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I might not " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú quizá no " + v2s[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you might not " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él quizá no " + v3s[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he might not " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella quizá no " + v3s[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she might not " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso quizá no " + v3s[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it might not " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos quizá no " + v4s[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they might not " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros quizá no " + v5s[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we might not " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenMightCont4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo quizá esté " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I might be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I might be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú quizá estés " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you might be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you might be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él quizá esté " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he might be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he might be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella quizá esté " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she might be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she might be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso quizá esté " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it might be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it might be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos quizá estén " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they might be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they might be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros quizá estemos " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we might be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we might be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "quizá no esté " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I " + "might not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I " + "mightn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + "quizá no estés " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you " + "might not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you " + "mightn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + "quizá no esté  " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he " + "might not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he " + "mightn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + "quizá no esté " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she " + "might not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she " + "mightn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + "quizá no esté " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it " + "might not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it " + "mightn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + "quizá no estén " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they " + "might not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they " + "mightn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + "quizá no estémos " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we " + "might not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we " + "mightn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenMightPerf4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo quizá haya " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I might have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I might have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú quizá hayas " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you might have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you might have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él quizá haya " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he might have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he might have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella quizá haya " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she might have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she might have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso quizá haya " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it might have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it might have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos quizá hayan " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they might have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they might have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros quizá hayamos " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we might have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we might have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo quizá no haya " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I might not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I mightn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú quizá no hayas " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you might not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you mightn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él quizá no haya " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he might not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he mightn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella quizá no haya " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she might not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she mightn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso quizá no haya " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it might not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it might not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos quizá no hayan " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they might not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they mightn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros quizá no hayamos " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we might not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we mightn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenMightPerfCont4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo quizá haya estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I might have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú quizá hayas estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you might have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él quizá haya estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he might have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella quizá haya estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she might have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso quizá haya estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it might have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos quizá hayan estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they might have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros quizá hayamos estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we might have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo quizá no haya estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I might not have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú quizá no hayas estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you might not have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él quizá no haya estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he might not have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella quizá no haya estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she might not have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso quizá no haya estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it might not have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos quizá no hayan estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they might not have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros quizá no hayamos estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we might not have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023

    //SHOULD
    public void GenShouldSimp4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo debería " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I should " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú deberías " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you should " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él debería " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he should " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella debería " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she should " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso debería " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it should " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos deberían " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they should " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros deberíamos " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we should " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no debería " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I " + "shouldn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + "no deberías " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you " + "shouldn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + "no debería " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he " + "shouldn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + "no debería " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she " + "shouldn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + "no debería " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it " + "shouldn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + "no deberían " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they " + "shouldn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + "no deberíamos " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we " + "shouldn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenShouldCont4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo debería estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I should be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I'd be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú deberías estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you should be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you'd be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él debería estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he should be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he'd be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella debería estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she should be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she'd be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso debería estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it should be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it'd be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos deberían estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they should be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they'd be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros deberíamos estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we should be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we'd be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                    case 1:
                        sp1 = "yo " + "no debería estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I " + "should not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I " + "shouldn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + "no deberías estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you " + "should not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you " + "shouldn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + "no debería estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he " + "should not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he " + "shouldn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + "no debería estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she " + "should not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she " + "shouldn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + "no debería estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it " + "should not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it " + "shouldn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + "no deberían estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they " + "should not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they " + "shouldn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + "no deberíamos estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we " + "should not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we " + "shouldn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenShouldPerf4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo debería haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I should have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I'd have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú deberías haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you should have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you'd have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él debería haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he should have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he'd have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella debería haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she should have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she = "she'd have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso debería haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it should have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it'd have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos deberían haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they should have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they'd have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros deberíamos haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we should have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we'd have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no debería haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I " + "should not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I " + "shouldn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + "no deberías haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you " + "should not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you " + "shouldn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + "no debería haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he " + "should not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he " + "shouldn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + "no debería haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she " + "should not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she " + "shouldn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + "no debería haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it " + "should not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it " + "shouldn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + "no deberían haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they " + "should not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they " + "shouldn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + "no deberíamos haber " + verbpartsp[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we " + "should not have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we " + "shouldn't have " + verbsparteng[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenShouldPerfCont4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo debería haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I should have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú deberías haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you should have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él debería haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he should have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella debería haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she should have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso debería haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it should have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos deberían haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they should have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros deberíamos haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we should have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no debería haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I " + "shouldn't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + "no deberías haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you " + "shouldn't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + "no debería haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he " + "shouldn't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + "no debería haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she " + "shouldn't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + "no debería haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it " + "shouldn't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + "no deberían haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they " + "shouldn't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + "no deberíamos haber estado " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we " + "shouldn't have been " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023

    //Can
    public void GenCanSimp4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo puedo " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I can " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú puedes " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you can " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él puede " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he can " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella puede " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she can " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso puede " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it can " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos pueden " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they can " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros podemos " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we can " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no puedo " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I " + "can't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + "no puedes " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you " + "can't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + "no puede " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he " + "can't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + "no puede " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she " + "can't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + "no puede " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it " + "can't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + "no pueden " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they " + "can't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + "no podemos " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we " + "can't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenCanCont4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo puedo estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I can be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I can be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú puedes estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you can be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you can be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él puede estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he can be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he can be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella puede " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she can be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she can be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso puede " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it can be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it can be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos pueden estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they can be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they can be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros podemos " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we can be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we can be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no puedo estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I " + "cannot be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I " + "can't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + "no puedes estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you " + "cannot be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you " + "can't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + "no puede estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he " + "cannot be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he " + "can't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + "no puede estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she " + "cannot be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she " + "can't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + "no puede estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it " + "cannot be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it " + "can't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + "no pueden estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they " + "cannot be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they " + "can't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + "no podemos estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we " + "cannot be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we " + "can't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023

    //Must
    public void GenMustSimp4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo debo " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I must " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú debés " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you must " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él debe " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he must " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella debe " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she must " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso debe " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it must " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos deben " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they must " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros debemos " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we must " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no debo " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I " + "mustn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + "no debés " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you " + "mustn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + "no debe " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he " + "mustn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + "no debe " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she " + "mustn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + "no debe " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it " + "mustn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + "no deben " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they " + "mustn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + "no debemos " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we " + "mustn't " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023
    public void GenMustCont4() {
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo debo estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I must be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I must be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú debés estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you must be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you must be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él debe estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he must be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he must be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella debe estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she must be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she must be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso debe estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it must be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it must be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos deben estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they must be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they must be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros debemos estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we must be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we must be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        break;
                    case 1:
                        sp1 = "yo " + "no debo estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I " + "must not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I " + "mustn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + "no debés estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you " + "must not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you " + "mustn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + "no debe estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he " + "must not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he " + "mustn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + "no debe estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she " + "must not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she " + "mustn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + "no debe estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it " + "must not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it " + "mustn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + "no deben estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they " + "must not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they " + "mustn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + "no debemos estar " + verbconti[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we " + "must not be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we " + "mustn't be " + verbscont[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                }
            }
        }
    }//LR FEB 2023

    public void GenAbleTo4(){
        int radv = (int) (Math.random() * frequadv.length);
        int neg = (int) (Math.random() * 2);
        randstarter();
        arraySod();
        arraySpe();
        String temp = verbs[rand];

        for (String verb : verbs) {
            if (verb.equals(temp)) {
                switch (neg) {
                    case 0:
                        sp1 = "yo " + "soy capaz de " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I am " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I'm " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú " + "eres capaz de " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you are " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you're " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él " + "es capaz de " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he is " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he's " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella " + "es capaz de " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she is " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she's " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso " + "es capaz de " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it is " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it's " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos " + "son capaces de " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they are " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they're " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros " + "somos capaces de " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we are " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we're " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;
                    case 1:
                        sp1 = "yo no " + "soy capaz de " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng1 = "I am not " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng12 = "I'm not " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp2 = "tú no " + "eres capaz de " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng2 = "you are not " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng22 = "you're not " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3 = "él no " + "es capaz de " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3 = "he is not " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng32 = "he's not " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3ella = "ella no " + "es capaz de " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng3she = "she is not " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng3she2 = "she's not " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp3eso = "eso no " + "es capaz de " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        sp3it = "it is not " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        sp3it2 = "it's not " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp4 = "ellos no " + "son capaces de " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng4 = "they are not " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng42 = "they're not " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];

                        sp5 = "nosotros no " + "somos capaces de " + vsbc[rand] + arraySodEsp + arrayEsp + advfrequ[radv];
                        eng5 = "we are not " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        eng52 = "we're not " + "able to " + verbs[rand] + arraySodEng + arrayEng + frequadv[radv];
                        break;

                }
            }
        }
    }//PD FEB 2023

    //for to dificultad 3 SOlO SPECIAL
    public void forSubTo4() {
        int rand = (int) (Math.random() * verbs.length);
        Pasts pas = new Pasts();
        String temp = verbs[rand];
        int rn1 = (int) (Math.random() * 6);
        int rn2 = (int) (Math.random() * 5);
        int neg = (int) (Math.random() * 2);
        randstarter();
        int radv = (int) (Math.random() * frequadv.length);

        //subject in eng
        String ftsj[] = {
                "for me to ", "for you to ", "for him to ", "for her to ", "for it to ",
                "for them to ", "for us to "
        };

        //subject in spanish
        String ftsjs[] = {
                "para que yo ", "para que tú ", "para que él ", "para que ella ",
                "para que eso ", "para que ellos ", "para que nosotros "
        };

        //subject in eng negative
        String ftsjn[] = {
                "for me not to ", "for you not to ", "for him not to ", "for her not to ",
                "for it not to ", "for them not to ", "for us not to "
        };

        //subject in spanish negative
        String ftsjsn[] = {
                "para que yo no ", "para que tú no ", "para que él no ", "para que ella no ",
                "para que eso no ", "para que ellos no ", "para que nosotros no "
        };

        switch (temp) {
            case "report ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + sorepe[rand1] + reportarespecialp[rd1][rd1s] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + sorep[rand1] + reportspecial[rd1][rd1s] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + sorepe[rand1] + reportarespecialp[rd1][rd1s] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + sorep[rand1] + reportspecial[rd1][rd1s] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + sorepe[rand1] + reportarespecialp[rd1][rd1s] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + sorep[rand1] + reportspecial[rd1][rd1s] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + sorepe[rand1] + reportarespecialp[rd1][rd1s] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + sorep[rand1] + reportspecial[rd1][rd1s] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + sorepe[rand1] + reportarespecialp[rd1][rd1s] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + sorep[rand1] + reportspecial[rd1][rd1s] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + sorepe[rand1] + reportarespecialp[rd1][rd1s] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + sorep[rand1] + reportspecial[rd1][rd1s] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + sorepe[rand1] + reportarespecialp[rd1][rd1s] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + sorep[rand1] + reportspecial[rd1][rd1s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + sorepe[rand1] + reportarespecialp[rd1][rd1s] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + sorep[rand1] + reportspecial[rd1][rd1s] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + sorepe[rand1] + reportarespecialp[rd1][rd1s] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + sorep[rand1] + reportspecial[rd1][rd1s] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + sorepe[rand1] + reportarespecialp[rd1][rd1s] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + sorep[rand1] + reportspecial[rd1][rd1s] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + sorepe[rand1] + reportarespecialp[rd1][rd1s] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + sorep[rand1] + reportspecial[rd1][rd1s] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + sorepe[rand1] + reportarespecialp[rd1][rd1s] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + sorep[rand1] + reportspecial[rd1][rd1s] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + sorepe[rand1] + reportarespecialp[rd1][rd1s] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + sorep[rand1] + reportspecial[rd1][rd1s] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + sorepe[rand1] + reportarespecialp[rd1][rd1s] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + sorep[rand1] + reportspecial[rd1][rd1s] + frequadv[radv];
                        break;
                }
                break;

            case "release ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + sosoltar[rand2] + soltarspecialp[rd2][rd2s] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + sorelease[rand2] + releasespecial[rd2][rd2s] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + sosoltar[rand2] + soltarspecialp[rd2][rd2s] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + sorelease[rand2] + releasespecial[rd2][rd2s] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + sosoltar[rand2] + soltarspecialp[rd2][rd2s] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + sorelease[rand2] + releasespecial[rd2][rd2s] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + sosoltar[rand2] + soltarspecialp[rd2][rd2s] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + sorelease[rand2] + releasespecial[rd2][rd2s] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + sosoltar[rand2] + soltarspecialp[rd2][rd2s] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + sorelease[rand2] + releasespecial[rd2][rd2s] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + sosoltar[rand2] + soltarspecialp[rd2][rd2s] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + sorelease[rand2] + releasespecial[rd2][rd2s] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + sosoltar[rand2] + soltarspecialp[rd2][rd2s] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + sorelease[rand2] + releasespecial[rd2][rd2s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + sosoltar[rand2] + soltarspecialp[rd2][rd2s] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + sorelease[rand2] + releasespecial[rd2][rd2s] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + sosoltar[rand2] + soltarspecialp[rd2][rd2s] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + sorelease[rand2] + releasespecial[rd2][rd2s] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + sosoltar[rand2] + soltarspecialp[rd2][rd2s] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + sorelease[rand2] + releasespecial[rd2][rd2s] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + sosoltar[rand2] + soltarspecialp[rd2][rd2s] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + sorelease[rand2] + releasespecial[rd2][rd2s] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + sosoltar[rand2] + soltarspecialp[rd2][rd2s] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + sorelease[rand2] + releasespecial[rd2][rd2s] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + sosoltar[rand2] + soltarspecialp[rd2][rd2s] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + sorelease[rand2] + releasespecial[rd2][rd2s] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + sosoltar[rand2] + soltarspecialp[rd2][rd2s] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + sorelease[rand2] + releasespecial[rd2][rd2s] + frequadv[radv];
                        break;
                }
                break;

            case "mix ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + somesclar[rand3] + mesclarspecialp[rd3][rd3s] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + somix[rand3] + mixspecial[rd3][rd3s] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + somesclar[rand3] + mesclarspecialp[rd3][rd3s] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + somix[rand3] + mixspecial[rd3][rd3s] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + somesclar[rand3] + mesclarspecialp[rd3][rd3s] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + somix[rand3] + mixspecial[rd3][rd3s] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + somesclar[rand3] + mesclarspecialp[rd3][rd3s] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + somix[rand3] + mixspecial[rd3][rd3s] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + somesclar[rand3] + mesclarspecialp[rd3][rd3s] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + somix[rand3] + mixspecial[rd3][rd3s] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + somesclar[rand3] + mesclarspecialp[rd3][rd3s] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + somix[rand3] + mixspecial[rd3][rd3s] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + somesclar[rand3] + mesclarspecialp[rd3][rd3s] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + somix[rand3] + mixspecial[rd3][rd3s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + somesclar[rand3] + mesclarspecialp[rd3][rd3s] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + somix[rand3] + mixspecial[rd3][rd3s] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + somesclar[rand3] + mesclarspecialp[rd3][rd3s] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + somix[rand3] + mixspecial[rd3][rd3s] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + somesclar[rand3] + mesclarspecialp[rd3][rd3s] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + somix[rand3] + mixspecial[rd3][rd3s] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + somesclar[rand3] + mesclarspecialp[rd3][rd3s] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + somix[rand3] + mixspecial[rd3][rd3s] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + somesclar[rand3] + mesclarspecialp[rd3][rd3s] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + somix[rand3] + mixspecial[rd3][rd3s] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + somesclar[rand3] + mesclarspecialp[rd3][rd3s] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + somix[rand3] + mixspecial[rd3][rd3s] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + somesclar[rand3] + mesclarspecialp[rd3][rd3s] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + somix[rand3] + mixspecial[rd3][rd3s] + frequadv[radv];
                        break;
                }
                break;

            case "press ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + sopresionar[rand4] + presionarespecialp[rd4][rd4s] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + sopress[rand4] + presspecial[rd4][rd4s] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + sopresionar[rand4] + presionarespecialp[rd4][rd4s] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + sopress[rand4] + presspecial[rd4][rd4s] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + sopresionar[rand4] + presionarespecialp[rd4][rd4s] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + sopress[rand4] + presspecial[rd4][rd4s] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + sopresionar[rand4] + presionarespecialp[rd4][rd4s] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + sopress[rand4] + presspecial[rd4][rd4s] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + sopresionar[rand4] + presionarespecialp[rd4][rd4s] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + sopress[rand4] + presspecial[rd4][rd4s] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + sopresionar[rand4] + presionarespecialp[rd4][rd4s] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + sopress[rand4] + presspecial[rd4][rd4s] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + sopresionar[rand4] + presionarespecialp[rd4][rd4s] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + sopress[rand4] + presspecial[rd4][rd4s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + sopresionar[rand4] + presionarespecialp[rd4][rd4s] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + sopress[rand4] + presspecial[rd4][rd4s] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + sopresionar[rand4] + presionarespecialp[rd4][rd4s] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + sopress[rand4] + presspecial[rd4][rd4s] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + sopresionar[rand4] + presionarespecialp[rd4][rd4s] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + sopress[rand4] + presspecial[rd4][rd4s] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + sopresionar[rand4] + presionarespecialp[rd4][rd4s] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + sopress[rand4] + presspecial[rd4][rd4s] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + sopresionar[rand4] + presionarespecialp[rd4][rd4s] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + sopress[rand4] + presspecial[rd4][rd4s] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + sopresionar[rand4] + presionarespecialp[rd4][rd4s] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + sopress[rand4] + presspecial[rd4][rd4s] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + sopresionar[rand4] + presionarespecialp[rd4][rd4s] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + sopress[rand4] + presspecial[rd4][rd4s] + frequadv[radv];
                        break;
                }
                break;

            case "finish ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + sofinalizar[rand5] + terminarspecialp[rd5][rd5s] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + sofinish[rand5] + finishspecial[rd5][rd5s] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + sofinalizar[rand5] + terminarspecialp[rd5][rd5s] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + sofinish[rand5] + finishspecial[rd5][rd5s] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + sofinalizar[rand5] + terminarspecialp[rd5][rd5s] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + sofinish[rand5] + finishspecial[rd5][rd5s] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + sofinalizar[rand5] + terminarspecialp[rd5][rd5s] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + sofinish[rand5] + finishspecial[rd5][rd5s] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + sofinalizar[rand5] + terminarspecialp[rd5][rd5s] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + sofinish[rand5] + finishspecial[rd5][rd5s] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + sofinalizar[rand5] + terminarspecialp[rd5][rd5s] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + sofinish[rand5] + finishspecial[rd5][rd5s] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + sofinalizar[rand5] + terminarspecialp[rd5][rd5s] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + sofinish[rand5] + finishspecial[rd5][rd5s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + sofinalizar[rand5] + terminarspecialp[rd5][rd5s] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + sofinish[rand5] + finishspecial[rd5][rd5s] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + sofinalizar[rand5] + terminarspecialp[rd5][rd5s] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + sofinish[rand5] + finishspecial[rd5][rd5s] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + sofinalizar[rand5] + terminarspecialp[rd5][rd5s] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + sofinish[rand5] + finishspecial[rd5][rd5s] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + sofinalizar[rand5] + terminarspecialp[rd5][rd5s] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + sofinish[rand5] + finishspecial[rd5][rd5s] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + sofinalizar[rand5] + terminarspecialp[rd5][rd5s] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + sofinish[rand5] + finishspecial[rd5][rd5s] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + sofinalizar[rand5] + terminarspecialp[rd5][rd5s] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + sofinish[rand5] + finishspecial[rd5][rd5s] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + sofinalizar[rand5] + terminarspecialp[rd5][rd5s] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + sofinish[rand5] + finishspecial[rd5][rd5s] + frequadv[radv];
                        break;
                }
                break;

            case "read ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + soleer[rand6] + leerspecialp[rd6][rd6s] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + soread[rand6] + readspecial[rd6][rd6s] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + soleer[rand6] + leerspecialp[rd6][rd6s] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + soread[rand6] + readspecial[rd6][rd6s] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + soleer[rand6] + leerspecialp[rd6][rd6s] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + soread[rand6] + readspecial[rd6][rd6s] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + soleer[rand6] + leerspecialp[rd6][rd6s] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + soread[rand6] + readspecial[rd6][rd6s] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + soleer[rand6] + leerspecialp[rd6][rd6s] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + soread[rand6] + readspecial[rd6][rd6s] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + soleer[rand6] + leerspecialp[rd6][rd6s] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + soread[rand6] + readspecial[rd6][rd6s] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + soleer[rand6] + leerspecialp[rd6][rd6s] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + soread[rand6] + readspecial[rd6][rd6s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + soleer[rand6] + leerspecialp[rd6][rd6s] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + soread[rand6] + readspecial[rd6][rd6s] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + soleer[rand6] + leerspecialp[rd6][rd6s] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + soread[rand6] + readspecial[rd6][rd6s] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + soleer[rand6] + leerspecialp[rd6][rd6s] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + soread[rand6] + readspecial[rd6][rd6s] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + soleer[rand6] + leerspecialp[rd6][rd6s] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + soread[rand6] + readspecial[rd6][rd6s] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + soleer[rand6] + leerspecialp[rd6][rd6s] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + soread[rand6] + readspecial[rd6][rd6s] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + soleer[rand6] + leerspecialp[rd6][rd6s] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + soread[rand6] + readspecial[rd6][rd6s] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + soleer[rand6] + leerspecialp[rd6][rd6s] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + soread[rand6] + readspecial[rd6][rd6s] + frequadv[radv];
                        break;
                }
                break;

            case "increase ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + soincrem[rand7] + incrementarspecialp[rd7][rd7s] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + soincrease[rand7] + increasespecial[rd7][rd7s] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + soincrem[rand7] + incrementarspecialp[rd7][rd7s] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + soincrease[rand7] + increasespecial[rd7][rd7s] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + soincrem[rand7] + incrementarspecialp[rd7][rd7s] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + soincrease[rand7] + increasespecial[rd7][rd7s] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + soincrem[rand7] + incrementarspecialp[rd7][rd7s] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + soincrease[rand7] + increasespecial[rd7][rd7s] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + soincrem[rand7] + incrementarspecialp[rd7][rd7s] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + soincrease[rand7] + increasespecial[rd7][rd7s] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + soincrem[rand7] + incrementarspecialp[rd7][rd7s] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + soincrease[rand7] + increasespecial[rd7][rd7s] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + soincrem[rand7] + incrementarspecialp[rd7][rd7s] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + soincrease[rand7] + increasespecial[rd7][rd7s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + soincrem[rand7] + incrementarspecialp[rd7][rd7s] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + soincrease[rand7] + increasespecial[rd7][rd7s] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + soincrem[rand7] + incrementarspecialp[rd7][rd7s] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + soincrease[rand7] + increasespecial[rd7][rd7s] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + soincrem[rand7] + incrementarspecialp[rd7][rd7s] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + soincrease[rand7] + increasespecial[rd7][rd7s] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + soincrem[rand7] + incrementarspecialp[rd7][rd7s] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + soincrease[rand7] + increasespecial[rd7][rd7s] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + soincrem[rand7] + incrementarspecialp[rd7][rd7s] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + soincrease[rand7] + increasespecial[rd7][rd7s] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + soincrem[rand7] + incrementarspecialp[rd7][rd7s] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + soincrease[rand7] + increasespecial[rd7][rd7s] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + soincrem[rand7] + incrementarspecialp[rd7][rd7s] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + soincrease[rand7] + increasespecial[rd7][rd7s] + frequadv[radv];
                        break;
                }
                break;

            case "play ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + sotocar[rand8] + playspecialp[rd8][rd8s] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + soplay[rand8] + playspecial[rd8][rd8s] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + sotocar[rand8] + playspecialp[rd8][rd8s] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + soplay[rand8] + playspecial[rd8][rd8s] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + sotocar[rand8] + playspecialp[rd8][rd8s] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + soplay[rand8] + playspecial[rd8][rd8s] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + sotocar[rand8] + playspecialp[rd8][rd8s] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + soplay[rand8] + playspecial[rd8][rd8s] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + sotocar[rand8] + playspecialp[rd8][rd8s] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + soplay[rand8] + playspecial[rd8][rd8s] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + sotocar[rand8] + playspecialp[rd8][rd8s] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + soplay[rand8] + playspecial[rd8][rd8s] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + sotocar[rand8] + playspecialp[rd8][rd8s] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + soplay[rand8] + playspecial[rd8][rd8s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + sotocar[rand8] + playspecialp[rd8][rd8s] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + soplay[rand8] + playspecial[rd8][rd8s] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + sotocar[rand8] + playspecialp[rd8][rd8s] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + soplay[rand8] + playspecial[rd8][rd8s] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + sotocar[rand8] + playspecialp[rd8][rd8s] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + soplay[rand8] + playspecial[rd8][rd8s] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + sotocar[rand8] + playspecialp[rd8][rd8s] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + soplay[rand8] + playspecial[rd8][rd8s] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + sotocar[rand8] + playspecialp[rd8][rd8s] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + soplay[rand8] + playspecial[rd8][rd8s] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + sotocar[rand8] + playspecialp[rd8][rd8s] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + soplay[rand8] + playspecial[rd8][rd8s] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + sotocar[rand8] + playspecialp[rd8][rd8s] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + soplay[rand8] + playspecial[rd8][rd8s] + frequadv[radv];
                        break;
                }
                break;

            case "feel ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + sosentir[rand9] + sentirspecialp[rd9][rd9s] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + sofeel[rand9] + feelspecial[rd9][rd9s] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + sosentir[rand9] + sentirspecialp[rd9][rd9s] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + sofeel[rand9] + feelspecial[rd9][rd9s] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + sosentir[rand9] + sentirspecialp[rd9][rd9s] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + sofeel[rand9] + feelspecial[rd9][rd9s] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + sosentir[rand9] + sentirspecialp[rd9][rd9s] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + sofeel[rand9] + feelspecial[rd9][rd9s] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + sosentir[rand9] + sentirspecialp[rd9][rd9s] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + sofeel[rand9] + feelspecial[rd9][rd9s] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + sosentir[rand9] + sentirspecialp[rd9][rd9s] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + sofeel[rand9] + feelspecial[rd9][rd9s] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + sosentir[rand9] + sentirspecialp[rd9][rd9s] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + sofeel[rand9] + feelspecial[rd9][rd9s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + sosentir[rand9] + sentirspecialp[rd9][rd9s] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + sofeel[rand9] + feelspecial[rd9][rd9s] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + sosentir[rand9] + sentirspecialp[rd9][rd9s] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + sofeel[rand9] + feelspecial[rd9][rd9s] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + sosentir[rand9] + sentirspecialp[rd9][rd9s] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + sofeel[rand9] + feelspecial[rd9][rd9s] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + sosentir[rand9] + sentirspecialp[rd9][rd9s] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + sofeel[rand9] + feelspecial[rd9][rd9s] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + sosentir[rand9] + sentirspecialp[rd9][rd9s] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + sofeel[rand9] + feelspecial[rd9][rd9s] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + sosentir[rand9] + sentirspecialp[rd9][rd9s] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + sofeel[rand9] + feelspecial[rd9][rd9s] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + sosentir[rand9] + sentirspecialp[rd9][rd9s] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + sofeel[rand9] + feelspecial[rd9][rd9s] + frequadv[radv];
                        break;
                }
                break;

            case "turn ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + sovoltear[rand10] + voltearspecialp[rd10][rd10s] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + soturn[rand10] + turnspecialp[rd10][rd10s] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + sovoltear[rand10] + voltearspecialp[rd10][rd10s] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + soturn[rand10] + turnspecialp[rd10][rd10s] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + sovoltear[rand10] + voltearspecialp[rd10][rd10s] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + soturn[rand10] + turnspecialp[rd10][rd10s] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + sovoltear[rand10] + voltearspecialp[rd10][rd10s] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + soturn[rand10] + turnspecialp[rd10][rd10s] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + sovoltear[rand10] + voltearspecialp[rd10][rd10s] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + soturn[rand10] + turnspecialp[rd10][rd10s] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + sovoltear[rand10] + voltearspecialp[rd10][rd10s] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + soturn[rand10] + turnspecialp[rd10][rd10s] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + sovoltear[rand10] + voltearspecialp[rd10][rd10s] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + soturn[rand10] + turnspecialp[rd10][rd10s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + sovoltear[rand10] + voltearspecialp[rd10][rd10s] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + soturn[rand10] + turnspecialp[rd10][rd10s] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + sovoltear[rand10] + voltearspecialp[rd10][rd10s] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + soturn[rand10] + turnspecialp[rd10][rd10s] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + sovoltear[rand10] + voltearspecialp[rd10][rd10s] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + soturn[rand10] + turnspecialp[rd10][rd10s] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + sovoltear[rand10] + voltearspecialp[rd10][rd10s] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + soturn[rand10] + turnspecialp[rd10][rd10s] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + sovoltear[rand10] + voltearspecialp[rd10][rd10s] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + soturn[rand10] + turnspecialp[rd10][rd10s] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + sovoltear[rand10] + voltearspecialp[rd10][rd10s] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + soturn[rand10] + turnspecialp[rd10][rd10s] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + sovoltear[rand10] + voltearspecialp[rd10][rd10s] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + soturn[rand10] + turnspecialp[rd10][rd10s] + frequadv[radv];
                        break;
                }
                break;

            case "say ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + sodecir[rand11] + decirspecialp[rd11][rd11s] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + sosay[rand11] + sayspecial[rd11][rd11s] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + sodecir[rand11] + decirspecialp[rd11][rd11s] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + sosay[rand11] + sayspecial[rd11][rd11s] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + sodecir[rand11] + decirspecialp[rd11][rd11s] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + sosay[rand11] + sayspecial[rd11][rd11s] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + sodecir[rand11] + decirspecialp[rd11][rd11s] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + sosay[rand11] + sayspecial[rd11][rd11s] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + sodecir[rand11] + decirspecialp[rd11][rd11s] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + sosay[rand11] + sayspecial[rd11][rd11s] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + sodecir[rand11] + decirspecialp[rd11][rd11s] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + sosay[rand11] + sayspecial[rd11][rd11s] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + sodecir[rand11] + decirspecialp[rd11][rd11s] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + sosay[rand11] + sayspecial[rd11][rd11s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + sodecir[rand11] + decirspecialp[rd11][rd11s] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + sosay[rand11] + sayspecial[rd11][rd11s] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + sodecir[rand11] + decirspecialp[rd11][rd11s] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + sosay[rand11] + sayspecial[rd11][rd11s] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + sodecir[rand11] + decirspecialp[rd11][rd11s] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + sosay[rand11] + sayspecial[rd11][rd11s] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + sodecir[rand11] + decirspecialp[rd11][rd11s] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + sosay[rand11] + sayspecial[rd11][rd11s] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + sodecir[rand11] + decirspecialp[rd11][rd11s] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + sosay[rand11] + sayspecial[rd11][rd11s] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + sodecir[rand11] + decirspecialp[rd11][rd11s] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + sosay[rand11] + sayspecial[rd11][rd11s] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + sodecir[rand11] + decirspecialp[rd11][rd11s] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + sosay[rand11] + sayspecial[rd11][rd11s] + frequadv[radv];
                        break;
                }
                break;

            case "spend ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + sogastar[rand12] + gastarspecialp[rd12][rd12s] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + sospend[rand12] + spendspecial[rd12][rd12s] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + sogastar[rand12] + gastarspecialp[rd12][rd12s] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + sospend[rand12] + spendspecial[rd12][rd12s] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + sogastar[rand12] + gastarspecialp[rd12][rd12s] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + sospend[rand12] + spendspecial[rd12][rd12s] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + sogastar[rand12] + gastarspecialp[rd12][rd12s] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + sospend[rand12] + spendspecial[rd12][rd12s] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + sogastar[rand12] + gastarspecialp[rd12][rd12s] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + sospend[rand12] + spendspecial[rd12][rd12s] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + sogastar[rand12] + gastarspecialp[rd12][rd12s] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + sospend[rand12] + spendspecial[rd12][rd12s] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + sogastar[rand12] + gastarspecialp[rd12][rd12s] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + sospend[rand12] + spendspecial[rd12][rd12s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + sogastar[rand12] + gastarspecialp[rd12][rd12s] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + sospend[rand12] + spendspecial[rd12][rd12s] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + sogastar[rand12] + gastarspecialp[rd12][rd12s] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + sospend[rand12] + spendspecial[rd12][rd12s] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + sogastar[rand12] + gastarspecialp[rd12][rd12s] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + sospend[rand12] + spendspecial[rd12][rd12s] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + sogastar[rand12] + gastarspecialp[rd12][rd12s] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + sospend[rand12] + spendspecial[rd12][rd12s] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + sogastar[rand12] + gastarspecialp[rd12][rd12s] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + sospend[rand12] + spendspecial[rd12][rd12s] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + sogastar[rand12] + gastarspecialp[rd12][rd12s] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + sospend[rand12] + spendspecial[rd12][rd12s] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + sogastar[rand12] + gastarspecialp[rd12][rd12s] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + sospend[rand12] + spendspecial[rd12][rd12s] + frequadv[radv];
                        break;
                }
                break;

            case "pay ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + sopagar[rand13] + pagarspecialp[rd13][rd13s] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + sopay[rand13] + payspecial[rd13][rd13s] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + sopagar[rand13] + pagarspecialp[rd13][rd13s] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + sopay[rand13] + payspecial[rd13][rd13s] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + sopagar[rand13] + pagarspecialp[rd13][rd13s] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + sopay[rand13] + payspecial[rd13][rd13s] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + sopagar[rand13] + pagarspecialp[rd13][rd13s] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + sopay[rand13] + payspecial[rd13][rd13s] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + sopagar[rand13] + pagarspecialp[rd13][rd13s] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + sopay[rand13] + payspecial[rd13][rd13s] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + sopagar[rand13] + pagarspecialp[rd13][rd13s] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + sopay[rand13] + payspecial[rd13][rd13s] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + sopagar[rand13] + pagarspecialp[rd13][rd13s] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + sopay[rand13] + payspecial[rd13][rd13s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + sopagar[rand13] + pagarspecialp[rd13][rd13s] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + sopay[rand13] + payspecial[rd13][rd13s] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + sopagar[rand13] + pagarspecialp[rd13][rd13s] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + sopay[rand13] + payspecial[rd13][rd13s] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + sopagar[rand13] + pagarspecialp[rd13][rd13s] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + sopay[rand13] + payspecial[rd13][rd13s] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + sopagar[rand13] + pagarspecialp[rd13][rd13s] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + sopay[rand13] + payspecial[rd13][rd13s] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + sopagar[rand13] + pagarspecialp[rd13][rd13s] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + sopay[rand13] + payspecial[rd13][rd13s] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + sopagar[rand13] + pagarspecialp[rd13][rd13s] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + sopay[rand13] + payspecial[rd13][rd13s] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + sopagar[rand13] + pagarspecialp[rd13][rd13s] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + sopay[rand13] + payspecial[rd13][rd13s] + frequadv[radv];
                        break;
                }
                break;

            case "try ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + sointentar[rand14] + intentarspecialp[rd14][rd14s] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + sotry[rand14] + tryspecial[rd14][rd14s] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + sointentar[rand14] + intentarspecialp[rd14][rd14s] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + sotry[rand14] + tryspecial[rd14][rd14s] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + sointentar[rand14] + intentarspecialp[rd14][rd14s] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + sotry[rand14] + tryspecial[rd14][rd14s] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + sointentar[rand14] + intentarspecialp[rd14][rd14s] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + sotry[rand14] + tryspecial[rd14][rd14s] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + sointentar[rand14] + intentarspecialp[rd14][rd14s] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + sotry[rand14] + tryspecial[rd14][rd14s] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + sointentar[rand14] + intentarspecialp[rd14][rd14s] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + sotry[rand14] + tryspecial[rd14][rd14s] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + sointentar[rand14] + intentarspecialp[rd14][rd14s] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + sotry[rand14] + tryspecial[rd14][rd14s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + sointentar[rand14] + intentarspecialp[rd14][rd14s] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + sotry[rand14] + tryspecial[rd14][rd14s] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + sointentar[rand14] + intentarspecialp[rd14][rd14s] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + sotry[rand14] + tryspecial[rd14][rd14s] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + sointentar[rand14] + intentarspecialp[rd14][rd14s] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + sotry[rand14] + tryspecial[rd14][rd14s] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + sointentar[rand14] + intentarspecialp[rd14][rd14s] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + sotry[rand14] + tryspecial[rd14][rd14s] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + sointentar[rand14] + intentarspecialp[rd14][rd14s] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + sotry[rand14] + tryspecial[rd14][rd14s] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + sointentar[rand14] + intentarspecialp[rd14][rd14s] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + sotry[rand14] + tryspecial[rd14][rd14s] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + sointentar[rand14] + intentarspecialp[rd14][rd14s] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + sotry[rand14] + tryspecial[rd14][rd14s] + frequadv[radv];
                        break;
                }
                break;

            case "cook ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + sococinar[rand15] + cocinarspecialp[rd15][rd15s] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + socook[rand15] + cookspecial[rd15][rd15s] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + sococinar[rand15] + cocinarspecialp[rd15][rd15s] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + socook[rand15] + cookspecial[rd15][rd15s] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + sococinar[rand15] + cocinarspecialp[rd15][rd15s] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + socook[rand15] + cookspecial[rd15][rd15s] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + sococinar[rand15] + cocinarspecialp[rd15][rd15s] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + socook[rand15] + cookspecial[rd15][rd15s] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + sococinar[rand15] + cocinarspecialp[rd15][rd15s] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + socook[rand15] + cookspecial[rd15][rd15s] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + sococinar[rand15] + cocinarspecialp[rd15][rd15s] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + socook[rand15] + cookspecial[rd15][rd15s] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + sococinar[rand15] + cocinarspecialp[rd15][rd15s] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + socook[rand15] + cookspecial[rd15][rd15s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + sococinar[rand15] + cocinarspecialp[rd15][rd15s] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + socook[rand15] + cookspecial[rd15][rd15s] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + sococinar[rand15] + cocinarspecialp[rd15][rd15s] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + socook[rand15] + cookspecial[rd15][rd15s] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + sococinar[rand15] + cocinarspecialp[rd15][rd15s] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + socook[rand15] + cookspecial[rd15][rd15s] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + sococinar[rand15] + cocinarspecialp[rd15][rd15s] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + socook[rand15] + cookspecial[rd15][rd15s] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + sococinar[rand15] + cocinarspecialp[rd15][rd15s] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + socook[rand15] + cookspecial[rd15][rd15s] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + sococinar[rand15] + cocinarspecialp[rd15][rd15s] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + socook[rand15] + cookspecial[rd15][rd15s] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + sococinar[rand15] + cocinarspecialp[rd15][rd15s] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + socook[rand15] + cookspecial[rd15][rd15s] + frequadv[radv];
                        break;
                }
                break;

            case "drive ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + soconducir[rand16] + conducirspp[rd16][rd16s] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + sodrive[rand16] + pdrivespecial[rd16][rd16s] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + soconducir[rand16] + conducirspp[rd16][rd16s] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + sodrive[rand16] + pdrivespecial[rd16][rd16s] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + soconducir[rand16] + conducirspp[rd16][rd16s] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + sodrive[rand16] + pdrivespecial[rd16][rd16s] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + soconducir[rand16] + conducirspp[rd16][rd16s] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + sodrive[rand16] + pdrivespecial[rd16][rd16s] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + soconducir[rand16] + conducirspp[rd16][rd16s] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + sodrive[rand16] + pdrivespecial[rd16][rd16s] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + soconducir[rand16] + conducirspp[rd16][rd16s] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + sodrive[rand16] + pdrivespecial[rd16][rd16s] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + soconducir[rand16] + conducirspp[rd16][rd16s] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + sodrive[rand16] + pdrivespecial[rd16][rd16s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + soconducir[rand16] + conducirspp[rd16][rd16s] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + sodrive[rand16] + pdrivespecial[rd16][rd16s] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + soconducir[rand16] + conducirspp[rd16][rd16s] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + sodrive[rand16] + pdrivespecial[rd16][rd16s] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + soconducir[rand16] + conducirspp[rd16][rd16s] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + sodrive[rand16] + pdrivespecial[rd16][rd16s] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + soconducir[rand16] + conducirspp[rd16][rd16s] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + sodrive[rand16] + pdrivespecial[rd16][rd16s] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + soconducir[rand16] + conducirspp[rd16][rd16s] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + sodrive[rand16] + pdrivespecial[rd16][rd16s] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + soconducir[rand16] + conducirspp[rd16][rd16s] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + sodrive[rand16] + pdrivespecial[rd16][rd16s] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + soconducir[rand16] + conducirspp[rd16][rd16s] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + sodrive[rand16] + pdrivespecial[rd16][rd16s] + frequadv[radv];
                        break;
                }
                break;

            case "gain ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + sogain1[rand17] + gainspecialspp[rd17][rd17s] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + sogain[rand17] +gainspecialp[rd17][rd17s] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + sogain1[rand17] + gainspecialspp[rd17][rd17s] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + sogain[rand17] +gainspecialp[rd17][rd17s] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + sogain1[rand17] + gainspecialspp[rd17][rd17s] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + sogain[rand17] +gainspecialp[rd17][rd17s] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + sogain1[rand17] + gainspecialspp[rd17][rd17s] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + sogain[rand17] +gainspecialp[rd17][rd17s] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + sogain1[rand17] + gainspecialspp[rd17][rd17s] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + sogain[rand17] +gainspecialp[rd17][rd17s] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + sogain1[rand17] + gainspecialspp[rd17][rd17s] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + sogain[rand17] +gainspecialp[rd17][rd17s] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + sogain1[rand17] + gainspecialspp[rd17][rd17s] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + sogain[rand17] +gainspecialp[rd17][rd17s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + sogain1[rand17] + gainspecialspp[rd17][rd17s] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + sogain[rand17] +gainspecialp[rd17][rd17s] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + sogain1[rand17] + gainspecialspp[rd17][rd17s] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + sogain[rand17] +gainspecialp[rd17][rd17s] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + sogain1[rand17] + gainspecialspp[rd17][rd17s] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + sogain[rand17] +gainspecialp[rd17][rd17s] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + sogain1[rand17] + gainspecialspp[rd17][rd17s] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + sogain[rand17] +gainspecialp[rd17][rd17s] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + sogain1[rand17] + gainspecialspp[rd17][rd17s] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + sogain[rand17] +gainspecialp[rd17][rd17s] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + sogain1[rand17] + gainspecialspp[rd17][rd17s] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + sogain[rand17] +gainspecialp[rd17][rd17s] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + sogain1[rand17] + gainspecialspp[rd17][rd17s] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + sogain[rand17] +gainspecialp[rd17][rd17s] + frequadv[radv];
                        break;
                }
                break;

            case "call ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + sollamar[rand18] + llamarspecialp[rd18][rd18s] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + socall[rand18] + callspecial[rd18][rd18s] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + sollamar[rand18] + llamarspecialp[rd18][rd18s] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + socall[rand18] + callspecial[rd18][rd18s] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + sollamar[rand18] + llamarspecialp[rd18][rd18s] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + socall[rand18] + callspecial[rd18][rd18s] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + sollamar[rand18] + llamarspecialp[rd18][rd18s] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + socall[rand18] + callspecial[rd18][rd18s] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + sollamar[rand18] + llamarspecialp[rd18][rd18s] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + socall[rand18] + callspecial[rd18][rd18s] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + sollamar[rand18] + llamarspecialp[rd18][rd18s] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + socall[rand18] + callspecial[rd18][rd18s] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + sollamar[rand18] + llamarspecialp[rd18][rd18s] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + socall[rand18] + callspecial[rd18][rd18s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + sollamar[rand18] + llamarspecialp[rd18][rd18s] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + socall[rand18] + callspecial[rd18][rd18s] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + sollamar[rand18] + llamarspecialp[rd18][rd18s] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + socall[rand18] + callspecial[rd18][rd18s] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + sollamar[rand18] + llamarspecialp[rd18][rd18s] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + socall[rand18] + callspecial[rd18][rd18s] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + sollamar[rand18] + llamarspecialp[rd18][rd18s] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + socall[rand18] + callspecial[rd18][rd18s] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + sollamar[rand18] + llamarspecialp[rd18][rd18s] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + socall[rand18] + callspecial[rd18][rd18s] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + sollamar[rand18] + llamarspecialp[rd18][rd18s] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + socall[rand18] + callspecial[rd18][rd18s] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + sollamar[rand18] + llamarspecialp[rd18][rd18s] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + socall[rand18] + callspecial[rd18][rd18s] + frequadv[radv];
                        break;
                }
                break;

            case "deal ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + sorepartir[rand19] + dealspecialsp[rd19][rd19s] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + sodeal[rand19] + dealspecial[rd19][rd19s] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + sorepartir[rand19] + dealspecialsp[rd19][rd19s] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + sodeal[rand19] + dealspecial[rd19][rd19s] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + sorepartir[rand19] + dealspecialsp[rd19][rd19s] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + sodeal[rand19] + dealspecial[rd19][rd19s] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + sorepartir[rand19] + dealspecialsp[rd19][rd19s] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + sodeal[rand19] + dealspecial[rd19][rd19s] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + sorepartir[rand19] + dealspecialsp[rd19][rd19s] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + sodeal[rand19] + dealspecial[rd19][rd19s] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + sorepartir[rand19] + dealspecialsp[rd19][rd19s] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + sodeal[rand19] + dealspecial[rd19][rd19s] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + sorepartir[rand19] + dealspecialsp[rd19][rd19s] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + sodeal[rand19] + dealspecial[rd19][rd19s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + sorepartir[rand19] + dealspecialsp[rd19][rd19s] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + sodeal[rand19] + dealspecial[rd19][rd19s] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + sorepartir[rand19] + dealspecialsp[rd19][rd19s] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + sodeal[rand19] + dealspecial[rd19][rd19s] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + sorepartir[rand19] + dealspecialsp[rd19][rd19s] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + sodeal[rand19] + dealspecial[rd19][rd19s] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + sorepartir[rand19] + dealspecialsp[rd19][rd19s] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + sodeal[rand19] + dealspecial[rd19][rd19s] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + sorepartir[rand19] + dealspecialsp[rd19][rd19s] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + sodeal[rand19] + dealspecial[rd19][rd19s] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + sorepartir[rand19] + dealspecialsp[rd19][rd19s] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + sodeal[rand19] + dealspecial[rd19][rd19s] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + sorepartir[rand19] + dealspecialsp[rd19][rd19s] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + sodeal[rand19] + dealspecial[rd19][rd19s] + frequadv[radv];
                        break;
                }
                break;

            case "upset ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + soenojar[rand20] + enojarspecialp[rd20][rd20s] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + soupset[rand20] + upsetspecial[rd20][rd20s] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + soenojar[rand20] + enojarspecialp[rd20][rd20s] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + soupset[rand20] + upsetspecial[rd20][rd20s] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + soenojar[rand20] + enojarspecialp[rd20][rd20s] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + soupset[rand20] + upsetspecial[rd20][rd20s] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + soenojar[rand20] + enojarspecialp[rd20][rd20s] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + soupset[rand20] + upsetspecial[rd20][rd20s] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + soenojar[rand20] + enojarspecialp[rd20][rd20s] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + soupset[rand20] + upsetspecial[rd20][rd20s] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + soenojar[rand20] + enojarspecialp[rd20][rd20s] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + soupset[rand20] + upsetspecial[rd20][rd20s] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + soenojar[rand20] + enojarspecialp[rd20][rd20s] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + soupset[rand20] + upsetspecial[rd20][rd20s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + soenojar[rand20] + enojarspecialp[rd20][rd20s] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + soupset[rand20] + upsetspecial[rd20][rd20s] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + soenojar[rand20] + enojarspecialp[rd20][rd20s] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + soupset[rand20] + upsetspecial[rd20][rd20s] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + soenojar[rand20] + enojarspecialp[rd20][rd20s] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + soupset[rand20] + upsetspecial[rd20][rd20s] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + soenojar[rand20] + enojarspecialp[rd20][rd20s] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + soupset[rand20] + upsetspecial[rd20][rd20s] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + soenojar[rand20] + enojarspecialp[rd20][rd20s] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + soupset[rand20] + upsetspecial[rd20][rd20s] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + soenojar[rand20] + enojarspecialp[rd20][rd20s] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + soupset[rand20] + upsetspecial[rd20][rd20s] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + soenojar[rand20] + enojarspecialp[rd20][rd20s] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + soupset[rand20] + upsetspecial[rd20][rd20s] + frequadv[radv];
                        break;
                }
                break;

            case "produce ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + soproducir[rand21] + producespecialsp[rd21][rd21s] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + soproduce[rand21] + producespecial[rd21][rd21s] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + soproducir[rand21] + producespecialsp[rd21][rd21s] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + soproduce[rand21] + producespecial[rd21][rd21s] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + soproducir[rand21] + producespecialsp[rd21][rd21s] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + soproduce[rand21] + producespecial[rd21][rd21s] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + soproducir[rand21] + producespecialsp[rd21][rd21s] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + soproduce[rand21] + producespecial[rd21][rd21s] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + soproducir[rand21] + producespecialsp[rd21][rd21s] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + soproduce[rand21] + producespecial[rd21][rd21s] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + soproducir[rand21] + producespecialsp[rd21][rd21s] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + soproduce[rand21] + producespecial[rd21][rd21s] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + soproducir[rand21] + producespecialsp[rd21][rd21s] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + soproduce[rand21] + producespecial[rd21][rd21s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + soproducir[rand21] + producespecialsp[rd21][rd21s] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + soproduce[rand21] + producespecial[rd21][rd21s] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + soproducir[rand21] + producespecialsp[rd21][rd21s] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + soproduce[rand21] + producespecial[rd21][rd21s] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + soproducir[rand21] + producespecialsp[rd21][rd21s] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + soproduce[rand21] + producespecial[rd21][rd21s] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + soproducir[rand21] + producespecialsp[rd21][rd21s] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + soproduce[rand21] + producespecial[rd21][rd21s] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + soproducir[rand21] + producespecialsp[rd21][rd21s] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + soproduce[rand21] + producespecial[rd21][rd21s] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + soproducir[rand21] + producespecialsp[rd21][rd21s] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + soproduce[rand21] + producespecial[rd21][rd21s] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + soproducir[rand21] + producespecialsp[rd21][rd21s] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + soproduce[rand21] + producespecial[rd21][rd21s] + frequadv[radv];
                        break;
                }
                break;

            case "appropiate ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + soappropiar[rand22] + apropiarspp[rd22][rd22s] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + soappropiate[rand22] + appropiatespecial[rd22][rd22s] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + soappropiar[rand22] + apropiarspp[rd22][rd22s] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + soappropiate[rand22] + appropiatespecial[rd22][rd22s] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + soappropiar[rand22] + apropiarspp[rd22][rd22s] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + soappropiate[rand22] + appropiatespecial[rd22][rd22s] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + soappropiar[rand22] + apropiarspp[rd22][rd22s] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + soappropiate[rand22] + appropiatespecial[rd22][rd22s] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + soappropiar[rand22] + apropiarspp[rd22][rd22s] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + soappropiate[rand22] + appropiatespecial[rd22][rd22s] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + soappropiar[rand22] + apropiarspp[rd22][rd22s] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + soappropiate[rand22] + appropiatespecial[rd22][rd22s] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + soappropiar[rand22] + apropiarspp[rd22][rd22s] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + soappropiate[rand22] + appropiatespecial[rd22][rd22s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + soappropiar[rand22] + apropiarspp[rd22][rd22s] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + soappropiate[rand22] + appropiatespecial[rd22][rd22s] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + soappropiar[rand22] + apropiarspp[rd22][rd22s] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + soappropiate[rand22] + appropiatespecial[rd22][rd22s] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + soappropiar[rand22] + apropiarspp[rd22][rd22s] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + soappropiate[rand22] + appropiatespecial[rd22][rd22s] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + soappropiar[rand22] + apropiarspp[rd22][rd22s] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + soappropiate[rand22] + appropiatespecial[rd22][rd22s] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + soappropiar[rand22] + apropiarspp[rd22][rd22s] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + soappropiate[rand22] + appropiatespecial[rd22][rd22s] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + soappropiar[rand22] + apropiarspp[rd22][rd22s] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + soappropiate[rand22] + appropiatespecial[rd22][rd22s] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + soappropiar[rand22] + apropiarspp[rd22][rd22s] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + soappropiate[rand22] + appropiatespecial[rd22][rd22s] + frequadv[radv];
                        break;
                }
                break;

            case "leave ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + sodejar[rand23] + dejaratrasspp[rd23][rd23s] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + soleave[rand23] + leavespecial[rd23][rd23s] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + sodejar[rand23] + dejaratrasspp[rd23][rd23s] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + soleave[rand23] + leavespecial[rd23][rd23s] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + sodejar[rand23] + dejaratrasspp[rd23][rd23s] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + soleave[rand23] + leavespecial[rd23][rd23s] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + sodejar[rand23] + dejaratrasspp[rd23][rd23s] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + soleave[rand23] + leavespecial[rd23][rd23s] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + sodejar[rand23] + dejaratrasspp[rd23][rd23s] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + soleave[rand23] + leavespecial[rd23][rd23s] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + sodejar[rand23] + dejaratrasspp[rd23][rd23s] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + soleave[rand23] + leavespecial[rd23][rd23s] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + sodejar[rand23] + dejaratrasspp[rd23][rd23s] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + soleave[rand23] + leavespecial[rd23][rd23s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + sodejar[rand23] + dejaratrasspp[rd23][rd23s] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + soleave[rand23] + leavespecial[rd23][rd23s] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + sodejar[rand23] + dejaratrasspp[rd23][rd23s] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + soleave[rand23] + leavespecial[rd23][rd23s] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + sodejar[rand23] + dejaratrasspp[rd23][rd23s] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + soleave[rand23] + leavespecial[rd23][rd23s] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + sodejar[rand23] + dejaratrasspp[rd23][rd23s] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + soleave[rand23] + leavespecial[rd23][rd23s] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + sodejar[rand23] + dejaratrasspp[rd23][rd23s] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + soleave[rand23] + leavespecial[rd23][rd23s] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + sodejar[rand23] + dejaratrasspp[rd23][rd23s] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + soleave[rand23] + leavespecial[rd23][rd23s] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + sodejar[rand23] + dejaratrasspp[rd23][rd23s] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + soleave[rand23] + leavespecial[rd23][rd23s] + frequadv[radv];
                        break;
                }
                break;

            case "reach ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + soalcanzar[rand24] + alcanzarspp[rd24][rd24s] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + soreach[rand24] + reachspecial[rd24][rd24s] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + soalcanzar[rand24] + alcanzarspp[rd24][rd24s] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + soreach[rand24] + reachspecial[rd24][rd24s] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + soalcanzar[rand24] + alcanzarspp[rd24][rd24s] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + soreach[rand24] + reachspecial[rd24][rd24s] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + soalcanzar[rand24] + alcanzarspp[rd24][rd24s] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + soreach[rand24] + reachspecial[rd24][rd24s] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + soalcanzar[rand24] + alcanzarspp[rd24][rd24s] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + soreach[rand24] + reachspecial[rd24][rd24s] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + soalcanzar[rand24] + alcanzarspp[rd24][rd24s] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + soreach[rand24] + reachspecial[rd24][rd24s] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + soalcanzar[rand24] + alcanzarspp[rd24][rd24s] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + soreach[rand24] + reachspecial[rd24][rd24s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + soalcanzar[rand24] + alcanzarspp[rd24][rd24s] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + soreach[rand24] + reachspecial[rd24][rd24s] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + soalcanzar[rand24] + alcanzarspp[rd24][rd24s] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + soreach[rand24] + reachspecial[rd24][rd24s] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + soalcanzar[rand24] + alcanzarspp[rd24][rd24s] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + soreach[rand24] + reachspecial[rd24][rd24s] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + soalcanzar[rand24] + alcanzarspp[rd24][rd24s] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + soreach[rand24] + reachspecial[rd24][rd24s] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + soalcanzar[rand24] + alcanzarspp[rd24][rd24s] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + soreach[rand24] + reachspecial[rd24][rd24s] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + soalcanzar[rand24] + alcanzarspp[rd24][rd24s] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + soreach[rand24] + reachspecial[rd24][rd24s] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + soalcanzar[rand24] + alcanzarspp[rd24][rd24s] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + soreach[rand24] + reachspecial[rd24][rd24s] + frequadv[radv];
                        break;
                }
                break;

            case "express ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + soexpresar[rand25] + expresarspp[rd25][rd25s] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + soexpress[rand25] + expressspecial[rd25][rd25s] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + soexpresar[rand25] + expresarspp[rd25][rd25s] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + soexpress[rand25] + expressspecial[rd25][rd25s] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + soexpresar[rand25] + expresarspp[rd25][rd25s] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + soexpress[rand25] + expressspecial[rd25][rd25s] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + soexpresar[rand25] + expresarspp[rd25][rd25s] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + soexpress[rand25] + expressspecial[rd25][rd25s] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + soexpresar[rand25] + expresarspp[rd25][rd25s] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + soexpress[rand25] + expressspecial[rd25][rd25s] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + soexpresar[rand25] + expresarspp[rd25][rd25s] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + soexpress[rand25] + expressspecial[rd25][rd25s] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + soexpresar[rand25] + expresarspp[rd25][rd25s] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + soexpress[rand25] + expressspecial[rd25][rd25s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + soexpresar[rand25] + expresarspp[rd25][rd25s] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + soexpress[rand25] + expressspecial[rd25][rd25s] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + soexpresar[rand25] + expresarspp[rd25][rd25s] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + soexpress[rand25] + expressspecial[rd25][rd25s] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + soexpresar[rand25] + expresarspp[rd25][rd25s] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + soexpress[rand25] + expressspecial[rd25][rd25s] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + soexpresar[rand25] + expresarspp[rd25][rd25s] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + soexpress[rand25] + expressspecial[rd25][rd25s] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + soexpresar[rand25] + expresarspp[rd25][rd25s] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + soexpress[rand25] + expressspecial[rd25][rd25s] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + soexpresar[rand25] + expresarspp[rd25][rd25s] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + soexpress[rand25] + expressspecial[rd25][rd25s] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + soexpresar[rand25] + expresarspp[rd25][rd25s] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + soexpress[rand25] + expressspecial[rd25][rd25s] + frequadv[radv];
                        break;
                }
                break;

            case "save ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + sosalvar[rand26] + salvarspp[rd26][rd26s] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + sosave[rand26] + savespecial[rd26][rd26s] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + sosalvar[rand26] + salvarspp[rd26][rd26s] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + sosave[rand26] + savespecial[rd26][rd26s] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + sosalvar[rand26] + salvarspp[rd26][rd26s] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + sosave[rand26] + savespecial[rd26][rd26s] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + sosalvar[rand26] + salvarspp[rd26][rd26s] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + sosave[rand26] + savespecial[rd26][rd26s] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + sosalvar[rand26] + salvarspp[rd26][rd26s] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + sosave[rand26] + savespecial[rd26][rd26s] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + sosalvar[rand26] + salvarspp[rd26][rd26s] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + sosave[rand26] + savespecial[rd26][rd26s] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + sosalvar[rand26] + salvarspp[rd26][rd26s] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + sosave[rand26] + savespecial[rd26][rd26s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + sosalvar[rand26] + salvarspp[rd26][rd26s] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + sosave[rand26] + savespecial[rd26][rd26s] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + sosalvar[rand26] + salvarspp[rd26][rd26s] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + sosave[rand26] + savespecial[rd26][rd26s] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + sosalvar[rand26] + salvarspp[rd26][rd26s] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + sosave[rand26] + savespecial[rd26][rd26s] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + sosalvar[rand26] + salvarspp[rd26][rd26s] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + sosave[rand26] + savespecial[rd26][rd26s] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + sosalvar[rand26] + salvarspp[rd26][rd26s] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + sosave[rand26] + savespecial[rd26][rd26s] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + sosalvar[rand26] + salvarspp[rd26][rd26s] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + sosave[rand26] + savespecial[rd26][rd26s] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + sosalvar[rand26] + salvarspp[rd26][rd26s] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + sosave[rand26] + savespecial[rd26][rd26s] + frequadv[radv];
                        break;
                }
                break;

            case "handle ":  //comment
                switch (neg) {
                    case 0:  // coment2
                        sp1 = ftsjs[0] + v1s[rand] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];
                        break;
                }
                break;

            case "spread ":
                switch (neg) {
                    case 0:
                        sp1 = ftsjs[0] + v1s[rand] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        eng1 = ftsj[0] + verbs[rand] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        sp2 = ftsjs[1] + v2s[rand] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        eng2 = ftsj[1] + verbs[rand] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        sp3 = ftsjs[2] + v3s[rand] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        eng3 = ftsj[2] + verbs[rand] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        sp3ella = ftsjs[3] + v3s[rand] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        eng3she = ftsj[3] + verbs[rand] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        sp3eso = ftsjs[4] + v3s[rand] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        sp3it = ftsj[4] + verbs[rand] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        sp4 = ftsjs[5] + v4s[rand] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        eng4 = ftsj[5] + verbs[rand] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        sp5 = ftsjs[6] + v5s[rand] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        eng5 = ftsj[6] + verbs[rand] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = ftsjsn[0] + v1s[rand] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        eng1 = ftsjn[0] + verbs[rand] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        sp2 = ftsjsn[1] + v2s[rand] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        eng2 = ftsjn[1] + verbs[rand] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        sp3 = ftsjsn[2] + v3s[rand] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        eng3 = ftsjn[2] + verbs[rand] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        sp3ella = ftsjsn[3] + v3s[rand] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        eng3she = ftsjn[3] + verbs[rand] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        sp3eso = ftsjsn[4] + v3s[rand] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        sp3it = ftsjn[4] + verbs[rand] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        sp4 = ftsjsn[5] + v4s[rand] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        eng4 = ftsjn[5] + verbs[rand] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        sp5 = ftsjsn[6] + v5s[rand] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        eng5 = ftsjn[6] + verbs[rand] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];
                        break;
                }
                break;
        }
    }//PD 12/05/2022

    //want to dificultad 3 SOLO SPECIAL
    public void wantyouto4() {
        int rand = (int) (Math.random() * verbs.length);
        Pasts pas = new Pasts();
        String temp = verbs[rand];
        int rn1 = (int) (Math.random() * 6);
        int rn2 = (int) (Math.random() * 5);
        int neg = (int) (Math.random() * 2);
        randstarter();
        int radv = (int) (Math.random() * frequadv.length);

        //want to subject
        String wtsj[] = {"I want ", "you want ", "he wants ", "she wants ", "it wants ", "we want ", "they want "};
        //want to subject negative
        String wtsjn[] = {"I don't want ", "you don't want ", "he doesn't want ", "it doesn't want ", "she doesn't want "
                , "we don't want ", "they don't want "};
        //sujetos want to en sp
        String wtsjs[] = {"yo quiero ", "tú quieres ", "él quiere ", "ella quiere ", "eso quiere ", "nosotros queremos ", "ellos quieren "};
        //sujetos want to en sp negativo
        String wtsjsn[] = {"yo no quiero ", "tú no quieres ", "él no quiere ", "eso no quiere ", "ella no quiere ", "nosotros no queremos ", "ellos no quieren "};

        String wtobj1[] = {"you to " + verbs[rand], "him to " + verbs[rand], "her to " + verbs[rand],
                "it to " + verbs[rand], "us to " + verbs[rand], "them to " + verbs[rand]};
        String wtobj2[] = {"me to " + verbs[rand], "him to " + verbs[rand], "her to " + verbs[rand],
                "it to " + verbs[rand], "us to " + verbs[rand], "them to " + verbs[rand]};

        String wtobj3[] = {"you to " + verbs[rand], "me to " + verbs[rand], "her to " + verbs[rand],
                "it to " + verbs[rand], "us to " + verbs[rand], "them to " + verbs[rand]};


        String wtobj4[] = {"you to " + verbs[rand], "him to " + verbs[rand], "me to " + verbs[rand],
                "it to " + verbs[rand], "us to " + verbs[rand], "them to " + verbs[rand]};
        String wtobj5[] = {"you to " + verbs[rand], "him to " + verbs[rand], "her to " + verbs[rand],
                "me to " + verbs[rand], "us to " + verbs[rand], "them to " + verbs[rand]};
        String wtobj6[] = {"you to " + verbs[rand], "him to " + verbs[rand], "her to " + verbs[rand],
                "it to " + verbs[rand], "them to " + verbs[rand]};
        String wtobj7[] = {"you to " + verbs[rand], "him to " + verbs[rand], "her to " + verbs[rand],
                "it to " + verbs[rand], "us to " + verbs[rand], "me to " + verbs[rand]};

        // objetos wt en sp
        String wtobj1s[] = {"que tú " + v2s[rand], "que él " + v3s[rand], "que ella " + v3s[rand],
                "que eso " + v3s[rand], "que nosotros " + v5s[rand], "que ellos " + v4s[rand]};
        String wtobj2s[] = {"que yo " + v1s[rand], "que él " + v3s[rand], "que ella " + v3s[rand],
                "que eso " + v3s[rand], "que nosotros " + v3s[rand], "que ellos " + v4s[rand]};
        String wtobj3s[] = {"que tú " + v2s[rand], "que yo " + v1s[rand], "que ella " + v3s[rand],
                "que eso " + v3s[rand], "que nosotros " + v5s[rand], "que ellos " + v4s[rand]};
        String wtobj4s[] = {"que tú " + v2s[rand], "que él " + v3s[rand], "que yo " + v1s[rand],
                "que eso " + v3s[rand], "que nosotros " + v5s[rand], "que ellos " + v4s[rand]};
        String wtobj5s[] = {"que tú " + v2s[rand], "que él " + v3s[rand], "que ella " + v3s[rand],
                "que yo " + v1s[rand], "que nosotros " + v5s[rand], "que ellos " + v4s[rand]};
        String wtobj6s[] = {"que tú " + v2s[rand], "que él " + v3s[rand], "que ella " + v3s[rand],
                "que eso " + v3s[rand], "que ellos " + v4s[rand]};
        String wtobj7s[] = {"que tú " + v2s[rand], "que él " + v3s[rand], "que ella " + v3s[rand],
                "que eso " + v3s[rand], "que nosotros " + v5s[rand], "que yo " + v1s[rand]};

        switch (temp) {
            case "report ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sorepe[rand1] + reportarespecialp[rd1][rd1s] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + sorep[rand1] + reportspecial[rd1][rd1s] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sorepe[rand1] + reportarespecialp[rd1][rd1s] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + sorep[rand1] + reportspecial[rd1][rd1s] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sorepe[rand1] + reportarespecialp[rd1][rd1s] + advfrequ[radv];
                        eng3 = wtsj[2] +wtobj3[rn1] + sorep[rand1] + reportspecial[rd1][rd1s] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sorepe[rand1] + reportarespecialp[rd1][rd1s] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + sorep[rand1] + reportspecial[rd1][rd1s] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sorepe[rand1] + reportarespecialp[rd1][rd1s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + sorep[rand1] + reportspecial[rd1][rd1s] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sorepe[rand1] + reportarespecialp[rd1][rd1s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj6[rn2] + sorep[rand1] + reportspecial[rd1][rd1s] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sorepe[rand1] + reportarespecialp[rd1][rd1s] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + sorep[rand1] + reportspecial[rd1][rd1s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sorepe[rand1] + reportarespecialp[rd1][rd1s] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sorep[rand1] + reportspecial[rd1][rd1s] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sorepe[rand1] + reportarespecialp[rd1][rd1s] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sorep[rand1] + reportspecial[rd1][rd1s] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sorepe[rand1] + reportarespecialp[rd1][rd1s] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sorep[rand1] + reportspecial[rd1][rd1s] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sorepe[rand1] + reportarespecialp[rd1][rd1s] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sorep[rand1] + reportspecial[rd1][rd1s] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sorepe[rand1] + reportarespecialp[rd1][rd1s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sorep[rand1] + reportspecial[rd1][rd1s] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sorepe[rand1] + reportarespecialp[rd1][rd1s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj6[rn2] + sorep[rand1] + reportspecial[rd1][rd1s] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sorepe[rand1] + reportarespecialp[rd1][rd1s] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sorep[rand1] + reportspecial[rd1][rd1s] + frequadv[radv];
                        break;
                }
                break;

            case "release ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sosoltar[rand2] + soltarspecialp[rd2][rd2s] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + sorelease[rand2] + releasespecial[rd2][rd2s] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sosoltar[rand2] + soltarspecialp[rd2][rd2s] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + sorelease[rand2] + releasespecial[rd2][rd2s] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sosoltar[rand2] + soltarspecialp[rd2][rd2s] + advfrequ[radv];
                        eng3 = wtsj[2] +wtobj3[rn1] + sorelease[rand2] + releasespecial[rd2][rd2s] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sosoltar[rand2] + soltarspecialp[rd2][rd2s] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + sorelease[rand2] + releasespecial[rd2][rd2s] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sosoltar[rand2] + soltarspecialp[rd2][rd2s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + sorelease[rand2] + releasespecial[rd2][rd2s] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sosoltar[rand2] + soltarspecialp[rd2][rd2s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj6[rn2] + sorelease[rand2] + releasespecial[rd2][rd2s] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sosoltar[rand2] + soltarspecialp[rd2][rd2s] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + sorelease[rand2] + releasespecial[rd2][rd2s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sosoltar[rand2] + soltarspecialp[rd2][rd2s] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sorelease[rand2] + releasespecial[rd2][rd2s] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sosoltar[rand2] + soltarspecialp[rd2][rd2s] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sorelease[rand2] + releasespecial[rd2][rd2s] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sosoltar[rand2] + soltarspecialp[rd2][rd2s] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sorelease[rand2] + releasespecial[rd2][rd2s] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sosoltar[rand2] + soltarspecialp[rd2][rd2s] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sorelease[rand2] + releasespecial[rd2][rd2s] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sosoltar[rand2] + soltarspecialp[rd2][rd2s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sorelease[rand2] + releasespecial[rd2][rd2s] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sosoltar[rand2] + soltarspecialp[rd2][rd2s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj6[rn2] + sorelease[rand2] + releasespecial[rd2][rd2s] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sosoltar[rand2] + soltarspecialp[rd2][rd2s] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sorelease[rand2] + releasespecial[rd2][rd2s] + frequadv[radv];
                        break;
                }
                break;

            case "mix ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + somesclar[rand3] + mesclarspecialp[rd3][rd3s] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + somix[rand3] + mixspecial[rd3][rd3s] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + somesclar[rand3] + mesclarspecialp[rd3][rd3s] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + somix[rand3] + mixspecial[rd3][rd3s] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + somesclar[rand3] + mesclarspecialp[rd3][rd3s] + advfrequ[radv];
                        eng3 = wtsj[2] +wtobj3[rn1] + somix[rand3] + mixspecial[rd3][rd3s] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + somesclar[rand3] + mesclarspecialp[rd3][rd3s] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + somix[rand3] + mixspecial[rd3][rd3s] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + somesclar[rand3] + mesclarspecialp[rd3][rd3s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + somix[rand3] + mixspecial[rd3][rd3s] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + somesclar[rand3] + mesclarspecialp[rd3][rd3s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj6[rn2] + somix[rand3] + mixspecial[rd3][rd3s] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + somesclar[rand3] + mesclarspecialp[rd3][rd3s] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + somix[rand3] + mixspecial[rd3][rd3s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + somesclar[rand3] + mesclarspecialp[rd3][rd3s] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + somix[rand3] + mixspecial[rd3][rd3s] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + somesclar[rand3] + mesclarspecialp[rd3][rd3s] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + somix[rand3] + mixspecial[rd3][rd3s] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + somesclar[rand3] + mesclarspecialp[rd3][rd3s] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + somix[rand3] + mixspecial[rd3][rd3s] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + somesclar[rand3] + mesclarspecialp[rd3][rd3s] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + somix[rand3] + mixspecial[rd3][rd3s] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + somesclar[rand3] + mesclarspecialp[rd3][rd3s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + somix[rand3] + mixspecial[rd3][rd3s] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + somesclar[rand3] + mesclarspecialp[rd3][rd3s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj6[rn2] + somix[rand3] + mixspecial[rd3][rd3s] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + somesclar[rand3] + mesclarspecialp[rd3][rd3s] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + somix[rand3] + mixspecial[rd3][rd3s] + frequadv[radv];
                        break;
                }
                break;

            case "press ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sopresionar[rand4] + presionarespecialp[rd4][rd4s] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + sopress[rand4] + presspecial[rd4][rd4s] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sopresionar[rand4] + presionarespecialp[rd4][rd4s] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + sopress[rand4] + presspecial[rd4][rd4s] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sopresionar[rand4] + presionarespecialp[rd4][rd4s] + advfrequ[radv];
                        eng3 = wtsj[2] +wtobj3[rn1] + sopress[rand4] + presspecial[rd4][rd4s] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sopresionar[rand4] + presionarespecialp[rd4][rd4s] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + sopress[rand4] + presspecial[rd4][rd4s] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sopresionar[rand4] + presionarespecialp[rd4][rd4s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + sopress[rand4] + presspecial[rd4][rd4s] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sopresionar[rand4] + presionarespecialp[rd4][rd4s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj6[rn2] + sopress[rand4] + presspecial[rd4][rd4s] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sopresionar[rand4] + presionarespecialp[rd4][rd4s] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + sopress[rand4] + presspecial[rd4][rd4s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sopresionar[rand4] + presionarespecialp[rd4][rd4s] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sopress[rand4] + presspecial[rd4][rd4s] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sopresionar[rand4] + presionarespecialp[rd4][rd4s] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sopress[rand4] + presspecial[rd4][rd4s] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sopresionar[rand4] + presionarespecialp[rd4][rd4s] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sopress[rand4] + presspecial[rd4][rd4s] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sopresionar[rand4] + presionarespecialp[rd4][rd4s] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sopress[rand4] + presspecial[rd4][rd4s] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sopresionar[rand4] + presionarespecialp[rd4][rd4s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sopress[rand4] + presspecial[rd4][rd4s] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sopresionar[rand4] + presionarespecialp[rd4][rd4s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj6[rn2] + sopress[rand4] + presspecial[rd4][rd4s] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sopresionar[rand4] + presionarespecialp[rd4][rd4s] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sopress[rand4] + presspecial[rd4][rd4s] + frequadv[radv];
                        break;
                }
                break;

            case "finish ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sofinalizar[rand5] + terminarspecialp[rd5][rd5s] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + sofinish[rand5] + finishspecial[rd5][rd5s] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sofinalizar[rand5] + terminarspecialp[rd5][rd5s] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + sofinish[rand5] + finishspecial[rd5][rd5s] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sofinalizar[rand5] + terminarspecialp[rd5][rd5s] + advfrequ[radv];
                        eng3 = wtsj[2] +wtobj3[rn1] + sofinish[rand5] + finishspecial[rd5][rd5s] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sofinalizar[rand5] + terminarspecialp[rd5][rd5s] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + sofinish[rand5] + finishspecial[rd5][rd5s] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sofinalizar[rand5] + terminarspecialp[rd5][rd5s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + sofinish[rand5] + finishspecial[rd5][rd5s] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sofinalizar[rand5] + terminarspecialp[rd5][rd5s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj6[rn2] + sofinish[rand5] + finishspecial[rd5][rd5s] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sofinalizar[rand5] + terminarspecialp[rd5][rd5s] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + sofinish[rand5] + finishspecial[rd5][rd5s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sofinalizar[rand5] + terminarspecialp[rd5][rd5s] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sofinish[rand5] + finishspecial[rd5][rd5s] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sofinalizar[rand5] + terminarspecialp[rd5][rd5s] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sofinish[rand5] + finishspecial[rd5][rd5s] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sofinalizar[rand5] + terminarspecialp[rd5][rd5s] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sofinish[rand5] + finishspecial[rd5][rd5s] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sofinalizar[rand5] + terminarspecialp[rd5][rd5s] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sofinish[rand5] + finishspecial[rd5][rd5s] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sofinalizar[rand5] + terminarspecialp[rd5][rd5s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sofinish[rand5] + finishspecial[rd5][rd5s] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sofinalizar[rand5] + terminarspecialp[rd5][rd5s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj6[rn2] + sofinish[rand5] + finishspecial[rd5][rd5s] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sofinalizar[rand5] + terminarspecialp[rd5][rd5s] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sofinish[rand5] + finishspecial[rd5][rd5s] + frequadv[radv];
                        break;
                }
                break;

            case "read ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soleer[rand6] + leerspecialp[rd6][rd6s] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + soread[rand6] + readspecial[rd6][rd6s] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soleer[rand6] + leerspecialp[rd6][rd6s] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + soread[rand6] + readspecial[rd6][rd6s] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soleer[rand6] + leerspecialp[rd6][rd6s] + advfrequ[radv];
                        eng3 = wtsj[2] +wtobj3[rn1] + soread[rand6] + readspecial[rd6][rd6s] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soleer[rand6] + leerspecialp[rd6][rd6s] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + soread[rand6] + readspecial[rd6][rd6s] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soleer[rand6] + leerspecialp[rd6][rd6s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + soread[rand6] + readspecial[rd6][rd6s] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soleer[rand6] + leerspecialp[rd6][rd6s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj6[rn2] + soread[rand6] + readspecial[rd6][rd6s] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soleer[rand6] + leerspecialp[rd6][rd6s] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + soread[rand6] + readspecial[rd6][rd6s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soleer[rand6] + leerspecialp[rd6][rd6s] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soread[rand6] + readspecial[rd6][rd6s] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soleer[rand6] + leerspecialp[rd6][rd6s] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soread[rand6] + readspecial[rd6][rd6s] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soleer[rand6] + leerspecialp[rd6][rd6s] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soread[rand6] + readspecial[rd6][rd6s] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soleer[rand6] + leerspecialp[rd6][rd6s] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soread[rand6] + readspecial[rd6][rd6s] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soleer[rand6] + leerspecialp[rd6][rd6s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soread[rand6] + readspecial[rd6][rd6s] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soleer[rand6] + leerspecialp[rd6][rd6s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj6[rn2] + soread[rand6] + readspecial[rd6][rd6s] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soleer[rand6] + leerspecialp[rd6][rd6s] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soread[rand6] + readspecial[rd6][rd6s] + frequadv[radv];
                        break;
                }
                break;

            case "increase ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soincrem[rand7] + incrementarspecialp[rd7][rd7s] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + soincrease[rand7] + increasespecial[rd7][rd7s] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soincrem[rand7] + incrementarspecialp[rd7][rd7s] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + soincrease[rand7] + increasespecial[rd7][rd7s] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soincrem[rand7] + incrementarspecialp[rd7][rd7s] + advfrequ[radv];
                        eng3 = wtsj[2] +wtobj3[rn1] + soincrease[rand7] + increasespecial[rd7][rd7s] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soincrem[rand7] + incrementarspecialp[rd7][rd7s] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + soincrease[rand7] + increasespecial[rd7][rd7s] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soincrem[rand7] + incrementarspecialp[rd7][rd7s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + soincrease[rand7] + increasespecial[rd7][rd7s] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soincrem[rand7] + incrementarspecialp[rd7][rd7s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj6[rn2] + soincrease[rand7] + increasespecial[rd7][rd7s] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soincrem[rand7] + incrementarspecialp[rd7][rd7s] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + soincrease[rand7] + increasespecial[rd7][rd7s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soincrem[rand7] + incrementarspecialp[rd7][rd7s] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soincrease[rand7] + increasespecial[rd7][rd7s] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soincrem[rand7] + incrementarspecialp[rd7][rd7s] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soincrease[rand7] + increasespecial[rd7][rd7s] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soincrem[rand7] + incrementarspecialp[rd7][rd7s] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soincrease[rand7] + increasespecial[rd7][rd7s] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soincrem[rand7] + incrementarspecialp[rd7][rd7s] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soincrease[rand7] + increasespecial[rd7][rd7s] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soincrem[rand7] + incrementarspecialp[rd7][rd7s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soincrease[rand7] + increasespecial[rd7][rd7s] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soincrem[rand7] + incrementarspecialp[rd7][rd7s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj6[rn2] + soincrease[rand7] + increasespecial[rd7][rd7s] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soincrem[rand7] + incrementarspecialp[rd7][rd7s] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soincrease[rand7] + increasespecial[rd7][rd7s] + frequadv[radv];
                        break;
                }
                break;

            case "play ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sotocar[rand8] + playspecialp[rd8][rd8s] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + soplay[rand8] + playspecial[rd8][rd8s] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sotocar[rand8] + playspecialp[rd8][rd8s] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + soplay[rand8] + playspecial[rd8][rd8s] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sotocar[rand8] + playspecialp[rd8][rd8s] + advfrequ[radv];
                        eng3 = wtsj[2] +wtobj3[rn1] + soplay[rand8] + playspecial[rd8][rd8s] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sotocar[rand8] + playspecialp[rd8][rd8s] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + soplay[rand8] + playspecial[rd8][rd8s] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sotocar[rand8] + playspecialp[rd8][rd8s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + soplay[rand8] + playspecial[rd8][rd8s] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sotocar[rand8] + playspecialp[rd8][rd8s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj6[rn2] + soplay[rand8] + playspecial[rd8][rd8s] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sotocar[rand8] + playspecialp[rd8][rd8s] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + soplay[rand8] + playspecial[rd8][rd8s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sotocar[rand8] + playspecialp[rd8][rd8s] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soplay[rand8] + playspecial[rd8][rd8s] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sotocar[rand8] + playspecialp[rd8][rd8s] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soplay[rand8] + playspecial[rd8][rd8s] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sotocar[rand8] + playspecialp[rd8][rd8s] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soplay[rand8] + playspecial[rd8][rd8s] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sotocar[rand8] + playspecialp[rd8][rd8s] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soplay[rand8] + playspecial[rd8][rd8s] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sotocar[rand8] + playspecialp[rd8][rd8s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soplay[rand8] + playspecial[rd8][rd8s] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sotocar[rand8] + playspecialp[rd8][rd8s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj6[rn2] + soplay[rand8] + playspecial[rd8][rd8s] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sotocar[rand8] + playspecialp[rd8][rd8s] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soplay[rand8] + playspecial[rd8][rd8s] + frequadv[radv];
                        break;
                }
                break;

            case "feel ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sosentir[rand9] + sentirspecialp[rd9][rd9s] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + sofeel[rand9] + feelspecial[rd9][rd9s] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sosentir[rand9] + sentirspecialp[rd9][rd9s] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + sofeel[rand9] + feelspecial[rd9][rd9s] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sosentir[rand9] + sentirspecialp[rd9][rd9s] + advfrequ[radv];
                        eng3 = wtsj[2] +wtobj3[rn1] + sofeel[rand9] + feelspecial[rd9][rd9s] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sosentir[rand9] + sentirspecialp[rd9][rd9s] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + sofeel[rand9] + feelspecial[rd9][rd9s] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sosentir[rand9] + sentirspecialp[rd9][rd9s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + sofeel[rand9] + feelspecial[rd9][rd9s] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sosentir[rand9] + sentirspecialp[rd9][rd9s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj6[rn2] + sofeel[rand9] + feelspecial[rd9][rd9s] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sosentir[rand9] + sentirspecialp[rd9][rd9s] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + sofeel[rand9] + feelspecial[rd9][rd9s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sosentir[rand9] + sentirspecialp[rd9][rd9s] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sofeel[rand9] + feelspecial[rd9][rd9s] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sosentir[rand9] + sentirspecialp[rd9][rd9s] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sofeel[rand9] + feelspecial[rd9][rd9s] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sosentir[rand9] + sentirspecialp[rd9][rd9s] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sofeel[rand9] + feelspecial[rd9][rd9s] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sosentir[rand9] + sentirspecialp[rd9][rd9s] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sofeel[rand9] + feelspecial[rd9][rd9s] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sosentir[rand9] + sentirspecialp[rd9][rd9s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sofeel[rand9] + feelspecial[rd9][rd9s] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sosentir[rand9] + sentirspecialp[rd9][rd9s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj6[rn2] + sofeel[rand9] + feelspecial[rd9][rd9s] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sosentir[rand9] + sentirspecialp[rd9][rd9s] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sofeel[rand9] + feelspecial[rd9][rd9s] + frequadv[radv];
                        break;
                }
                break;

            case "turn ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sovoltear[rand10] + voltearspecialp[rd10][rd10s] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + soturn[rand10] + turnspecialp[rd10][rd10s] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sovoltear[rand10] + voltearspecialp[rd10][rd10s] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + soturn[rand10] + turnspecialp[rd10][rd10s] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sovoltear[rand10] + voltearspecialp[rd10][rd10s] + advfrequ[radv];
                        eng3 = wtsj[2] +wtobj3[rn1] + soturn[rand10] + turnspecialp[rd10][rd10s] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sovoltear[rand10] + voltearspecialp[rd10][rd10s] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + soturn[rand10] + turnspecialp[rd10][rd10s] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sovoltear[rand10] + voltearspecialp[rd10][rd10s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + soturn[rand10] + turnspecialp[rd10][rd10s] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sovoltear[rand10] + voltearspecialp[rd10][rd10s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj6[rn2] + soturn[rand10] + turnspecialp[rd10][rd10s] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sovoltear[rand10] + voltearspecialp[rd10][rd10s] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + soturn[rand10] + turnspecialp[rd10][rd10s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sovoltear[rand10] + voltearspecialp[rd10][rd10s] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soturn[rand10] + turnspecialp[rd10][rd10s] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sovoltear[rand10] + voltearspecialp[rd10][rd10s] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soturn[rand10] + turnspecialp[rd10][rd10s] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sovoltear[rand10] + voltearspecialp[rd10][rd10s] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soturn[rand10] + turnspecialp[rd10][rd10s] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sovoltear[rand10] + voltearspecialp[rd10][rd10s] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soturn[rand10] + turnspecialp[rd10][rd10s] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sovoltear[rand10] + voltearspecialp[rd10][rd10s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soturn[rand10] + turnspecialp[rd10][rd10s] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sovoltear[rand10] + voltearspecialp[rd10][rd10s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj6[rn2] + soturn[rand10] + turnspecialp[rd10][rd10s] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sovoltear[rand10] + voltearspecialp[rd10][rd10s] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soturn[rand10] + turnspecialp[rd10][rd10s] + frequadv[radv];
                        break;
                }
                break;

            case "say ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sodecir[rand11] + decirspecialp[rd11][rd11s] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + sosay[rand11] + sayspecial[rd11][rd11s] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sodecir[rand11] + decirspecialp[rd11][rd11s] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + sosay[rand11] + sayspecial[rd11][rd11s] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sodecir[rand11] + decirspecialp[rd11][rd11s] + advfrequ[radv];
                        eng3 = wtsj[2] +wtobj3[rn1] + sosay[rand11] + sayspecial[rd11][rd11s] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sodecir[rand11] + decirspecialp[rd11][rd11s] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + sosay[rand11] + sayspecial[rd11][rd11s] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sodecir[rand11] + decirspecialp[rd11][rd11s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + sosay[rand11] + sayspecial[rd11][rd11s] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sodecir[rand11] + decirspecialp[rd11][rd11s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj6[rn2] + sosay[rand11] + sayspecial[rd11][rd11s] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sodecir[rand11] + decirspecialp[rd11][rd11s] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + sosay[rand11] + sayspecial[rd11][rd11s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sodecir[rand11] + decirspecialp[rd11][rd11s] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sosay[rand11] + sayspecial[rd11][rd11s] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sodecir[rand11] + decirspecialp[rd11][rd11s] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sosay[rand11] + sayspecial[rd11][rd11s] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sodecir[rand11] + decirspecialp[rd11][rd11s] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sosay[rand11] + sayspecial[rd11][rd11s] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sodecir[rand11] + decirspecialp[rd11][rd11s] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sosay[rand11] + sayspecial[rd11][rd11s] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sodecir[rand11] + decirspecialp[rd11][rd11s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sosay[rand11] + sayspecial[rd11][rd11s] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sodecir[rand11] + decirspecialp[rd11][rd11s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj6[rn2] + sosay[rand11] + sayspecial[rd11][rd11s] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sodecir[rand11] + decirspecialp[rd11][rd11s] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sosay[rand11] + sayspecial[rd11][rd11s] + frequadv[radv];
                        break;
                }
                break;

            case "spend ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sogastar[rand12] + gastarspecialp[rd12][rd12s] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + sospend[rand12] + spendspecial[rd12][rd12s] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sogastar[rand12] + gastarspecialp[rd12][rd12s] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + sospend[rand12] + spendspecial[rd12][rd12s] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sogastar[rand12] + gastarspecialp[rd12][rd12s] + advfrequ[radv];
                        eng3 = wtsj[2] +wtobj3[rn1] + sospend[rand12] + spendspecial[rd12][rd12s] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sogastar[rand12] + gastarspecialp[rd12][rd12s] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + sospend[rand12] + spendspecial[rd12][rd12s] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sogastar[rand12] + gastarspecialp[rd12][rd12s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + sospend[rand12] + spendspecial[rd12][rd12s] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sogastar[rand12] + gastarspecialp[rd12][rd12s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj6[rn2] + sospend[rand12] + spendspecial[rd12][rd12s] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sogastar[rand12] + gastarspecialp[rd12][rd12s] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + sospend[rand12] + spendspecial[rd12][rd12s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sogastar[rand12] + gastarspecialp[rd12][rd12s] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sospend[rand12] + spendspecial[rd12][rd12s] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sogastar[rand12] + gastarspecialp[rd12][rd12s] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sospend[rand12] + spendspecial[rd12][rd12s] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sogastar[rand12] + gastarspecialp[rd12][rd12s] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sospend[rand12] + spendspecial[rd12][rd12s] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sogastar[rand12] + gastarspecialp[rd12][rd12s] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sospend[rand12] + spendspecial[rd12][rd12s] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sogastar[rand12] + gastarspecialp[rd12][rd12s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sospend[rand12] + spendspecial[rd12][rd12s] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sogastar[rand12] + gastarspecialp[rd12][rd12s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj6[rn2] + sospend[rand12] + spendspecial[rd12][rd12s] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sogastar[rand12] + gastarspecialp[rd12][rd12s] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sospend[rand12] + spendspecial[rd12][rd12s] + frequadv[radv];
                        break;
                }
                break;

            case "pay ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sopagar[rand13] + pagarspecialp[rd13][rd13s] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + sopay[rand13] + payspecial[rd13][rd13s] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sopagar[rand13] + pagarspecialp[rd13][rd13s] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + sopay[rand13] + payspecial[rd13][rd13s] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sopagar[rand13] + pagarspecialp[rd13][rd13s] + advfrequ[radv];
                        eng3 = wtsj[2] +wtobj3[rn1] + sopay[rand13] + payspecial[rd13][rd13s] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sopagar[rand13] + pagarspecialp[rd13][rd13s] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + sopay[rand13] + payspecial[rd13][rd13s] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sopagar[rand13] + pagarspecialp[rd13][rd13s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + sopay[rand13] + payspecial[rd13][rd13s] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sopagar[rand13] + pagarspecialp[rd13][rd13s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj6[rn2] + sopay[rand13] + payspecial[rd13][rd13s] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sopagar[rand13] + pagarspecialp[rd13][rd13s] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + sopay[rand13] + payspecial[rd13][rd13s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sopagar[rand13] + pagarspecialp[rd13][rd13s] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sopay[rand13] + payspecial[rd13][rd13s] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sopagar[rand13] + pagarspecialp[rd13][rd13s] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sopay[rand13] + payspecial[rd13][rd13s] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sopagar[rand13] + pagarspecialp[rd13][rd13s] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sopay[rand13] + payspecial[rd13][rd13s] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sopagar[rand13] + pagarspecialp[rd13][rd13s] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sopay[rand13] + payspecial[rd13][rd13s] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sopagar[rand13] + pagarspecialp[rd13][rd13s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sopay[rand13] + payspecial[rd13][rd13s] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sopagar[rand13] + pagarspecialp[rd13][rd13s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj6[rn2] + sopay[rand13] + payspecial[rd13][rd13s] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sopagar[rand13] + pagarspecialp[rd13][rd13s] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sopay[rand13] + payspecial[rd13][rd13s] + frequadv[radv];
                        break;
                }
                break;

            case "try ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sointentar[rand14] + intentarspecialp[rd14][rd14s] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + sotry[rand14] + tryspecial[rd14][rd14s] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sointentar[rand14] + intentarspecialp[rd14][rd14s] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + sotry[rand14] + tryspecial[rd14][rd14s] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sointentar[rand14] + intentarspecialp[rd14][rd14s] + advfrequ[radv];
                        eng3 = wtsj[2] +wtobj3[rn1] + sotry[rand14] + tryspecial[rd14][rd14s] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sointentar[rand14] + intentarspecialp[rd14][rd14s] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + sotry[rand14] + tryspecial[rd14][rd14s] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sointentar[rand14] + intentarspecialp[rd14][rd14s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + sotry[rand14] + tryspecial[rd14][rd14s] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sointentar[rand14] + intentarspecialp[rd14][rd14s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj6[rn2] + sotry[rand14] + tryspecial[rd14][rd14s] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sointentar[rand14] + intentarspecialp[rd14][rd14s] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + sotry[rand14] + tryspecial[rd14][rd14s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sointentar[rand14] + intentarspecialp[rd14][rd14s] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sotry[rand14] + tryspecial[rd14][rd14s] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sointentar[rand14] + intentarspecialp[rd14][rd14s] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sotry[rand14] + tryspecial[rd14][rd14s] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sointentar[rand14] + intentarspecialp[rd14][rd14s] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sotry[rand14] + tryspecial[rd14][rd14s] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sointentar[rand14] + intentarspecialp[rd14][rd14s] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sotry[rand14] + tryspecial[rd14][rd14s] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sointentar[rand14] + intentarspecialp[rd14][rd14s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sotry[rand14] + tryspecial[rd14][rd14s] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sointentar[rand14] + intentarspecialp[rd14][rd14s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj6[rn2] + sotry[rand14] + tryspecial[rd14][rd14s] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sointentar[rand14] + intentarspecialp[rd14][rd14s] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sotry[rand14] + tryspecial[rd14][rd14s] + frequadv[radv];
                        break;
                }
                break;

            case "cook ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sococinar[rand15] + cocinarspecialp[rd15][rd15s] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + socook[rand15] + cookspecial[rd15][rd15s] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sococinar[rand15] + cocinarspecialp[rd15][rd15s] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + socook[rand15] + cookspecial[rd15][rd15s] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sococinar[rand15] + cocinarspecialp[rd15][rd15s] + advfrequ[radv];
                        eng3 = wtsj[2] +wtobj3[rn1] + socook[rand15] + cookspecial[rd15][rd15s] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sococinar[rand15] + cocinarspecialp[rd15][rd15s] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + socook[rand15] + cookspecial[rd15][rd15s] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sococinar[rand15] + cocinarspecialp[rd15][rd15s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + socook[rand15] + cookspecial[rd15][rd15s] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sococinar[rand15] + cocinarspecialp[rd15][rd15s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj6[rn2] + socook[rand15] + cookspecial[rd15][rd15s] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sococinar[rand15] + cocinarspecialp[rd15][rd15s] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + socook[rand15] + cookspecial[rd15][rd15s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sococinar[rand15] + cocinarspecialp[rd15][rd15s] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + socook[rand15] + cookspecial[rd15][rd15s] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sococinar[rand15] + cocinarspecialp[rd15][rd15s] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + socook[rand15] + cookspecial[rd15][rd15s] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sococinar[rand15] + cocinarspecialp[rd15][rd15s] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + socook[rand15] + cookspecial[rd15][rd15s] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sococinar[rand15] + cocinarspecialp[rd15][rd15s] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + socook[rand15] + cookspecial[rd15][rd15s] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sococinar[rand15] + cocinarspecialp[rd15][rd15s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + socook[rand15] + cookspecial[rd15][rd15s] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sococinar[rand15] + cocinarspecialp[rd15][rd15s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj6[rn2] + socook[rand15] + cookspecial[rd15][rd15s] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sococinar[rand15] + cocinarspecialp[rd15][rd15s] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + socook[rand15] + cookspecial[rd15][rd15s] + frequadv[radv];
                        break;
                }
                break;

            case "drive ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soconducir[rand16] + conducirspp[rd16][rd16s] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + sodrive[rand16] + pdrivespecial[rd16][rd16s] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soconducir[rand16] + conducirspp[rd16][rd16s] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + sodrive[rand16] + pdrivespecial[rd16][rd16s] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soconducir[rand16] + conducirspp[rd16][rd16s] + advfrequ[radv];
                        eng3 = wtsj[2] +wtobj3[rn1] + sodrive[rand16] + pdrivespecial[rd16][rd16s] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soconducir[rand16] + conducirspp[rd16][rd16s] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + sodrive[rand16] + pdrivespecial[rd16][rd16s] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soconducir[rand16] + conducirspp[rd16][rd16s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + sodrive[rand16] + pdrivespecial[rd16][rd16s] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soconducir[rand16] + conducirspp[rd16][rd16s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj6[rn2] + sodrive[rand16] + pdrivespecial[rd16][rd16s] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soconducir[rand16] + conducirspp[rd16][rd16s] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + sodrive[rand16] + pdrivespecial[rd16][rd16s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soconducir[rand16] + conducirspp[rd16][rd16s] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sodrive[rand16] + pdrivespecial[rd16][rd16s] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soconducir[rand16] + conducirspp[rd16][rd16s] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sodrive[rand16] + pdrivespecial[rd16][rd16s] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soconducir[rand16] + conducirspp[rd16][rd16s] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sodrive[rand16] + pdrivespecial[rd16][rd16s] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soconducir[rand16] + conducirspp[rd16][rd16s] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sodrive[rand16] + pdrivespecial[rd16][rd16s] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soconducir[rand16] + conducirspp[rd16][rd16s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sodrive[rand16] + pdrivespecial[rd16][rd16s] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soconducir[rand16] + conducirspp[rd16][rd16s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj6[rn2] + sodrive[rand16] + pdrivespecial[rd16][rd16s] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soconducir[rand16] + conducirspp[rd16][rd16s] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sodrive[rand16] + pdrivespecial[rd16][rd16s] + frequadv[radv];
                        break;
                }
                break;

            case "gain ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sogain1[rand17] + gainspecialspp[rd17][rd17s] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + sogain[rand17] +gainspecialp[rd17][rd17s] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sogain1[rand17] + gainspecialspp[rd17][rd17s] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + sogain[rand17] +gainspecialp[rd17][rd17s] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sogain1[rand17] + gainspecialspp[rd17][rd17s] + advfrequ[radv];
                        eng3 = wtsj[2] +wtobj3[rn1] + sogain[rand17] +gainspecialp[rd17][rd17s] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sogain1[rand17] + gainspecialspp[rd17][rd17s] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + sogain[rand17] +gainspecialp[rd17][rd17s] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sogain1[rand17] + gainspecialspp[rd17][rd17s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + sogain[rand17] +gainspecialp[rd17][rd17s] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sogain1[rand17] + gainspecialspp[rd17][rd17s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj6[rn2] + sogain[rand17] +gainspecialp[rd17][rd17s] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sogain1[rand17] + gainspecialspp[rd17][rd17s] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + sogain[rand17] +gainspecialp[rd17][rd17s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sogain1[rand17] + gainspecialspp[rd17][rd17s] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sogain[rand17] +gainspecialp[rd17][rd17s] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sogain1[rand17] + gainspecialspp[rd17][rd17s] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sogain[rand17] +gainspecialp[rd17][rd17s] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sogain1[rand17] + gainspecialspp[rd17][rd17s] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sogain[rand17] +gainspecialp[rd17][rd17s] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sogain1[rand17] + gainspecialspp[rd17][rd17s] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sogain[rand17] +gainspecialp[rd17][rd17s] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sogain1[rand17] + gainspecialspp[rd17][rd17s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sogain[rand17] +gainspecialp[rd17][rd17s] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sogain1[rand17] + gainspecialspp[rd17][rd17s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj6[rn2] + sogain[rand17] +gainspecialp[rd17][rd17s] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sogain1[rand17] + gainspecialspp[rd17][rd17s] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sogain[rand17] +gainspecialp[rd17][rd17s] + frequadv[radv];
                        break;
                }
                break;

            case "call ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sollamar[rand18] + llamarspecialp[rd18][rd18s] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + socall[rand18] + callspecial[rd18][rd18s] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sollamar[rand18] + llamarspecialp[rd18][rd18s] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + socall[rand18] + callspecial[rd18][rd18s] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sollamar[rand18] + llamarspecialp[rd18][rd18s] + advfrequ[radv];
                        eng3 = wtsj[2] +wtobj3[rn1] + socall[rand18] + callspecial[rd18][rd18s] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sollamar[rand18] + llamarspecialp[rd18][rd18s] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + socall[rand18] + callspecial[rd18][rd18s] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sollamar[rand18] + llamarspecialp[rd18][rd18s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + socall[rand18] + callspecial[rd18][rd18s] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sollamar[rand18] + llamarspecialp[rd18][rd18s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj6[rn2] + socall[rand18] + callspecial[rd18][rd18s] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sollamar[rand18] + llamarspecialp[rd18][rd18s] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + socall[rand18] + callspecial[rd18][rd18s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sollamar[rand18] + llamarspecialp[rd18][rd18s] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + socall[rand18] + callspecial[rd18][rd18s] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sollamar[rand18] + llamarspecialp[rd18][rd18s] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + socall[rand18] + callspecial[rd18][rd18s] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sollamar[rand18] + llamarspecialp[rd18][rd18s] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + socall[rand18] + callspecial[rd18][rd18s] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sollamar[rand18] + llamarspecialp[rd18][rd18s] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + socall[rand18] + callspecial[rd18][rd18s] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sollamar[rand18] + llamarspecialp[rd18][rd18s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + socall[rand18] + callspecial[rd18][rd18s] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sollamar[rand18] + llamarspecialp[rd18][rd18s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj6[rn2] + socall[rand18] + callspecial[rd18][rd18s] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sollamar[rand18] + llamarspecialp[rd18][rd18s] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + socall[rand18] + callspecial[rd18][rd18s] + frequadv[radv];
                        break;
                }
                break;

            case "deal ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sorepartir[rand19] + dealspecialsp[rd19][rd19s] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + sodeal[rand19] + dealspecial[rd19][rd19s] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sorepartir[rand19] + dealspecialsp[rd19][rd19s] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + sodeal[rand19] + dealspecial[rd19][rd19s] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sorepartir[rand19] + dealspecialsp[rd19][rd19s] + advfrequ[radv];
                        eng3 = wtsj[2] +wtobj3[rn1] + sodeal[rand19] + dealspecial[rd19][rd19s] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sorepartir[rand19] + dealspecialsp[rd19][rd19s] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + sodeal[rand19] + dealspecial[rd19][rd19s] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sorepartir[rand19] + dealspecialsp[rd19][rd19s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + sodeal[rand19] + dealspecial[rd19][rd19s] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sorepartir[rand19] + dealspecialsp[rd19][rd19s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj6[rn2] + sodeal[rand19] + dealspecial[rd19][rd19s] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sorepartir[rand19] + dealspecialsp[rd19][rd19s] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + sodeal[rand19] + dealspecial[rd19][rd19s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sorepartir[rand19] + dealspecialsp[rd19][rd19s] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sodeal[rand19] + dealspecial[rd19][rd19s] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sorepartir[rand19] + dealspecialsp[rd19][rd19s] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sodeal[rand19] + dealspecial[rd19][rd19s] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sorepartir[rand19] + dealspecialsp[rd19][rd19s] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sodeal[rand19] + dealspecial[rd19][rd19s] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sorepartir[rand19] + dealspecialsp[rd19][rd19s] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sodeal[rand19] + dealspecial[rd19][rd19s] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sorepartir[rand19] + dealspecialsp[rd19][rd19s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sodeal[rand19] + dealspecial[rd19][rd19s] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sorepartir[rand19] + dealspecialsp[rd19][rd19s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj6[rn2] + sodeal[rand19] + dealspecial[rd19][rd19s] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sorepartir[rand19] + dealspecialsp[rd19][rd19s] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sodeal[rand19] + dealspecial[rd19][rd19s] + frequadv[radv];
                        break;
                }
                break;

            case "upset ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soenojar[rand20] + enojarspecialp[rd20][rd20s] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + soupset[rand20] + upsetspecial[rd20][rd20s] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soenojar[rand20] + enojarspecialp[rd20][rd20s] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + soupset[rand20] + upsetspecial[rd20][rd20s] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soenojar[rand20] + enojarspecialp[rd20][rd20s] + advfrequ[radv];
                        eng3 = wtsj[2] +wtobj3[rn1] + soupset[rand20] + upsetspecial[rd20][rd20s] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soenojar[rand20] + enojarspecialp[rd20][rd20s] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + soupset[rand20] + upsetspecial[rd20][rd20s] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soenojar[rand20] + enojarspecialp[rd20][rd20s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + soupset[rand20] + upsetspecial[rd20][rd20s] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soenojar[rand20] + enojarspecialp[rd20][rd20s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj6[rn2] + soupset[rand20] + upsetspecial[rd20][rd20s] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soenojar[rand20] + enojarspecialp[rd20][rd20s] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + soupset[rand20] + upsetspecial[rd20][rd20s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soenojar[rand20] + enojarspecialp[rd20][rd20s] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soupset[rand20] + upsetspecial[rd20][rd20s] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soenojar[rand20] + enojarspecialp[rd20][rd20s] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soupset[rand20] + upsetspecial[rd20][rd20s] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soenojar[rand20] + enojarspecialp[rd20][rd20s] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soupset[rand20] + upsetspecial[rd20][rd20s] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soenojar[rand20] + enojarspecialp[rd20][rd20s] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soupset[rand20] + upsetspecial[rd20][rd20s] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soenojar[rand20] + enojarspecialp[rd20][rd20s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soupset[rand20] + upsetspecial[rd20][rd20s] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soenojar[rand20] + enojarspecialp[rd20][rd20s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj6[rn2] + soupset[rand20] + upsetspecial[rd20][rd20s] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soenojar[rand20] + enojarspecialp[rd20][rd20s] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soupset[rand20] + upsetspecial[rd20][rd20s] + frequadv[radv];
                        break;
                }
                break;

            case "produce ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soproducir[rand21] + producespecialsp[rd21][rd21s] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + soproduce[rand21] + producespecial[rd21][rd21s] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soproducir[rand21] + producespecialsp[rd21][rd21s] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + soproduce[rand21] + producespecial[rd21][rd21s] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soproducir[rand21] + producespecialsp[rd21][rd21s] + advfrequ[radv];
                        eng3 = wtsj[2] +wtobj3[rn1] + soproduce[rand21] + producespecial[rd21][rd21s] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soproducir[rand21] + producespecialsp[rd21][rd21s] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + soproduce[rand21] + producespecial[rd21][rd21s] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soproducir[rand21] + producespecialsp[rd21][rd21s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + soproduce[rand21] + producespecial[rd21][rd21s] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soproducir[rand21] + producespecialsp[rd21][rd21s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj6[rn2] + soproduce[rand21] + producespecial[rd21][rd21s] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soproducir[rand21] + producespecialsp[rd21][rd21s] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + soproduce[rand21] + producespecial[rd21][rd21s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soproducir[rand21] + producespecialsp[rd21][rd21s] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soproduce[rand21] + producespecial[rd21][rd21s] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soproducir[rand21] + producespecialsp[rd21][rd21s] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soproduce[rand21] + producespecial[rd21][rd21s] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soproducir[rand21] + producespecialsp[rd21][rd21s] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soproduce[rand21] + producespecial[rd21][rd21s] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soproducir[rand21] + producespecialsp[rd21][rd21s] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soproduce[rand21] + producespecial[rd21][rd21s] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soproducir[rand21] + producespecialsp[rd21][rd21s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soproduce[rand21] + producespecial[rd21][rd21s] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soproducir[rand21] + producespecialsp[rd21][rd21s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj6[rn2] + soproduce[rand21] + producespecial[rd21][rd21s] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soproducir[rand21] + producespecialsp[rd21][rd21s] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soproduce[rand21] + producespecial[rd21][rd21s] + frequadv[radv];
                        break;
                }
                break;

            case "appropiate ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soappropiar[rand22] + apropiarspp[rd22][rd22s] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + soappropiate[rand22] + appropiatespecial[rd22][rd22s] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soappropiar[rand22] + apropiarspp[rd22][rd22s] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + soappropiate[rand22] + appropiatespecial[rd22][rd22s] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soappropiar[rand22] + apropiarspp[rd22][rd22s] + advfrequ[radv];
                        eng3 = wtsj[2] +wtobj3[rn1] + soappropiate[rand22] + appropiatespecial[rd22][rd22s] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soappropiar[rand22] + apropiarspp[rd22][rd22s] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + soappropiate[rand22] + appropiatespecial[rd22][rd22s] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soappropiar[rand22] + apropiarspp[rd22][rd22s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + soappropiate[rand22] + appropiatespecial[rd22][rd22s] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soappropiar[rand22] + apropiarspp[rd22][rd22s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj6[rn2] + soappropiate[rand22] + appropiatespecial[rd22][rd22s] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soappropiar[rand22] + apropiarspp[rd22][rd22s] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + soappropiate[rand22] + appropiatespecial[rd22][rd22s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soappropiar[rand22] + apropiarspp[rd22][rd22s] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soappropiate[rand22] + appropiatespecial[rd22][rd22s] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soappropiar[rand22] + apropiarspp[rd22][rd22s] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soappropiate[rand22] + appropiatespecial[rd22][rd22s] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soappropiar[rand22] + apropiarspp[rd22][rd22s] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soappropiate[rand22] + appropiatespecial[rd22][rd22s] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soappropiar[rand22] + apropiarspp[rd22][rd22s] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soappropiate[rand22] + appropiatespecial[rd22][rd22s] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soappropiar[rand22] + apropiarspp[rd22][rd22s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soappropiate[rand22] + appropiatespecial[rd22][rd22s] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soappropiar[rand22] + apropiarspp[rd22][rd22s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj6[rn2] + soappropiate[rand22] + appropiatespecial[rd22][rd22s] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soappropiar[rand22] + apropiarspp[rd22][rd22s] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soappropiate[rand22] + appropiatespecial[rd22][rd22s] + frequadv[radv];
                        break;
                }
                break;

            case "leave ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sodejar[rand23] + dejaratrasspp[rd23][rd23s] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + soleave[rand23] + leavespecial[rd23][rd23s] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sodejar[rand23] + dejaratrasspp[rd23][rd23s] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + soleave[rand23] + leavespecial[rd23][rd23s] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sodejar[rand23] + dejaratrasspp[rd23][rd23s] + advfrequ[radv];
                        eng3 = wtsj[2] +wtobj3[rn1] + soleave[rand23] + leavespecial[rd23][rd23s] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sodejar[rand23] + dejaratrasspp[rd23][rd23s] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + soleave[rand23] + leavespecial[rd23][rd23s] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sodejar[rand23] + dejaratrasspp[rd23][rd23s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + soleave[rand23] + leavespecial[rd23][rd23s] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sodejar[rand23] + dejaratrasspp[rd23][rd23s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj6[rn2] + soleave[rand23] + leavespecial[rd23][rd23s] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sodejar[rand23] + dejaratrasspp[rd23][rd23s] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + soleave[rand23] + leavespecial[rd23][rd23s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sodejar[rand23] + dejaratrasspp[rd23][rd23s] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soleave[rand23] + leavespecial[rd23][rd23s] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sodejar[rand23] + dejaratrasspp[rd23][rd23s] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soleave[rand23] + leavespecial[rd23][rd23s] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sodejar[rand23] + dejaratrasspp[rd23][rd23s] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soleave[rand23] + leavespecial[rd23][rd23s] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sodejar[rand23] + dejaratrasspp[rd23][rd23s] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soleave[rand23] + leavespecial[rd23][rd23s] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sodejar[rand23] + dejaratrasspp[rd23][rd23s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soleave[rand23] + leavespecial[rd23][rd23s] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sodejar[rand23] + dejaratrasspp[rd23][rd23s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj6[rn2] + soleave[rand23] + leavespecial[rd23][rd23s] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sodejar[rand23] + dejaratrasspp[rd23][rd23s] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soleave[rand23] + leavespecial[rd23][rd23s] + frequadv[radv];
                        break;
                }
                break;

            case "reach ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soalcanzar[rand24] + alcanzarspp[rd24][rd24s] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + soreach[rand24] + reachspecial[rd24][rd24s] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soalcanzar[rand24] + alcanzarspp[rd24][rd24s] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + soreach[rand24] + reachspecial[rd24][rd24s] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soalcanzar[rand24] + alcanzarspp[rd24][rd24s] + advfrequ[radv];
                        eng3 = wtsj[2] +wtobj3[rn1] + soreach[rand24] + reachspecial[rd24][rd24s] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soalcanzar[rand24] + alcanzarspp[rd24][rd24s] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + soreach[rand24] + reachspecial[rd24][rd24s] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soalcanzar[rand24] + alcanzarspp[rd24][rd24s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + soreach[rand24] + reachspecial[rd24][rd24s] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soalcanzar[rand24] + alcanzarspp[rd24][rd24s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj6[rn2] + soreach[rand24] + reachspecial[rd24][rd24s] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soalcanzar[rand24] + alcanzarspp[rd24][rd24s] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + soreach[rand24] + reachspecial[rd24][rd24s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soalcanzar[rand24] + alcanzarspp[rd24][rd24s] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soreach[rand24] + reachspecial[rd24][rd24s] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soalcanzar[rand24] + alcanzarspp[rd24][rd24s] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soreach[rand24] + reachspecial[rd24][rd24s] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soalcanzar[rand24] + alcanzarspp[rd24][rd24s] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soreach[rand24] + reachspecial[rd24][rd24s] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soalcanzar[rand24] + alcanzarspp[rd24][rd24s] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soreach[rand24] + reachspecial[rd24][rd24s] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soalcanzar[rand24] + alcanzarspp[rd24][rd24s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soreach[rand24] + reachspecial[rd24][rd24s] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soalcanzar[rand24] + alcanzarspp[rd24][rd24s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj6[rn2] + soreach[rand24] + reachspecial[rd24][rd24s] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soalcanzar[rand24] + alcanzarspp[rd24][rd24s] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soreach[rand24] + reachspecial[rd24][rd24s] + frequadv[radv];
                        break;
                }
                break;

            case "express ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + soexpresar[rand25] + expresarspp[rd25][rd25s] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + soexpress[rand25] + expressspecial[rd25][rd25s] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + soexpresar[rand25] + expresarspp[rd25][rd25s] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + soexpress[rand25] + expressspecial[rd25][rd25s] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + soexpresar[rand25] + expresarspp[rd25][rd25s] + advfrequ[radv];
                        eng3 = wtsj[2] +wtobj3[rn1] + soexpress[rand25] + expressspecial[rd25][rd25s] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + soexpresar[rand25] + expresarspp[rd25][rd25s] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + soexpress[rand25] + expressspecial[rd25][rd25s] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + soexpresar[rand25] + expresarspp[rd25][rd25s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + soexpress[rand25] + expressspecial[rd25][rd25s] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + soexpresar[rand25] + expresarspp[rd25][rd25s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj6[rn2] + soexpress[rand25] + expressspecial[rd25][rd25s] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + soexpresar[rand25] + expresarspp[rd25][rd25s] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + soexpress[rand25] + expressspecial[rd25][rd25s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + soexpresar[rand25] + expresarspp[rd25][rd25s] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + soexpress[rand25] + expressspecial[rd25][rd25s] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + soexpresar[rand25] + expresarspp[rd25][rd25s] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + soexpress[rand25] + expressspecial[rd25][rd25s] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + soexpresar[rand25] + expresarspp[rd25][rd25s] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + soexpress[rand25] + expressspecial[rd25][rd25s] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + soexpresar[rand25] + expresarspp[rd25][rd25s] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + soexpress[rand25] + expressspecial[rd25][rd25s] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + soexpresar[rand25] + expresarspp[rd25][rd25s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + soexpress[rand25] + expressspecial[rd25][rd25s] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + soexpresar[rand25] + expresarspp[rd25][rd25s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj6[rn2] + soexpress[rand25] + expressspecial[rd25][rd25s] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + soexpresar[rand25] + expresarspp[rd25][rd25s] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + soexpress[rand25] + expressspecial[rd25][rd25s] + frequadv[radv];
                        break;
                }
                break;

            case "save ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + sosalvar[rand26] + salvarspp[rd26][rd26s] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + sosave[rand26] + savespecial[rd26][rd26s] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + sosalvar[rand26] + salvarspp[rd26][rd26s] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + sosave[rand26] + savespecial[rd26][rd26s] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + sosalvar[rand26] + salvarspp[rd26][rd26s] + advfrequ[radv];
                        eng3 = wtsj[2] +wtobj3[rn1] + sosave[rand26] + savespecial[rd26][rd26s] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + sosalvar[rand26] + salvarspp[rd26][rd26s] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + sosave[rand26] + savespecial[rd26][rd26s] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + sosalvar[rand26] + salvarspp[rd26][rd26s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + sosave[rand26] + savespecial[rd26][rd26s] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + sosalvar[rand26] + salvarspp[rd26][rd26s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj6[rn2] + sosave[rand26] + savespecial[rd26][rd26s] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + sosalvar[rand26] + salvarspp[rd26][rd26s] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + sosave[rand26] + savespecial[rd26][rd26s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + sosalvar[rand26] + salvarspp[rd26][rd26s] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sosave[rand26] + savespecial[rd26][rd26s] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + sosalvar[rand26] + salvarspp[rd26][rd26s] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sosave[rand26] + savespecial[rd26][rd26s] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + sosalvar[rand26] + salvarspp[rd26][rd26s] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sosave[rand26] + savespecial[rd26][rd26s] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + sosalvar[rand26] + salvarspp[rd26][rd26s] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sosave[rand26] + savespecial[rd26][rd26s] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + sosalvar[rand26] + salvarspp[rd26][rd26s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sosave[rand26] + savespecial[rd26][rd26s] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + sosalvar[rand26] + salvarspp[rd26][rd26s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj6[rn2] + sosave[rand26] + savespecial[rd26][rd26s] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + sosalvar[rand26] + salvarspp[rd26][rd26s] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sosave[rand26] + savespecial[rd26][rd26s] + frequadv[radv];
                        break;
                }
                break;

            case "handle ":  //comment
                switch (neg) {
                    case 0:  // coment2
                        sp1 = wtsjs[0] + wtobj1s[rn1] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        eng3 = wtsj[2] +wtobj3[rn1] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj6[rn2] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj6[rn2] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];
                        break;
                }
                break;

            case "spread ":
                switch (neg) {
                    case 0:
                        sp1 = wtsjs[0] + wtobj1s[rn1] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        eng1 = wtsj[0] + wtobj1[rn1] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        sp2 = wtsjs[1] + wtobj2s[rn1] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        eng2 = wtsj[1] + wtobj2[rn1] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        sp3 = wtsjs[2] + wtobj3s[rn1] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        eng3 = wtsj[2] +wtobj3[rn1] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        sp3ella = wtsjs[3] + wtobj4s[rn1] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        eng3she = wtsj[3] + wtobj4[rn1] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        sp3eso = wtsjs[4] + wtobj5s[rn1] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        sp3it = wtsj[4] + wtobj5[rn1] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        sp4 = wtsjs[5] + wtobj6s[rn2] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        eng4 = wtsj[4] + wtobj6[rn2] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        sp5 = wtsjs[6] + wtobj7s[rn1] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        eng5 = wtsj[6] + wtobj7[rn1] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        break;
                    case 1:
                        sp1 = wtsjsn[0] + wtobj1s[rn1] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        eng1 = wtsjn[0] + wtobj1[rn1] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        sp2 = wtsjsn[1] + wtobj2s[rn1] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        eng2 = wtsjn[1] + wtobj2[rn1] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        sp3 = wtsjsn[2] + wtobj3s[rn1] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        eng3 = wtsjn[2] + wtobj3[rn1] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        sp3ella = wtsjsn[3] + wtobj4s[rn1] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        eng3she = wtsjn[3] + wtobj4[rn1] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        sp3eso = wtsjsn[4] + wtobj5s[rn1] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj5[rn1] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        sp4 = wtsjsn[5] + wtobj6s[rn2] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        sp3it = wtsjn[4] + wtobj6[rn2] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];

                        sp5 = wtsjsn[6] + wtobj7s[rn1] + somanejar[rand27] + manejarspecialp[rd27][rd27s] + advfrequ[radv];
                        eng5 = wtsjn[6] + wtobj7[rn1] + sohandle[rand27] + handlespecial[rd27][rd27s] + frequadv[radv];
                        break;
                }
                break;
        }


    }//PD 12/05/2022
}

